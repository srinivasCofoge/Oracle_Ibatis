user_role ur on ur.ROLE_NAME = rf.ROLE_CODE
		  where rsf.ENABLE_YN = 'Y' and ur.USER_ID = #userId# and rf.FUNCTION_CODE = 'IMP_71' and rsf.SUB_FUNCTION_CODE = 'IMP_71_003'
	</select>
	<select id="querycheckforcirprocuser"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.String">
		SELECT  CIR_PROC_USER as cirProcUser
		FROM IMP_CAR_SHP 
		WHERE 
			AWB_NO = UPPER(#awbNo#) 
			AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
			AND FLT_KEY = #fltKey#
			AND FLT_DATE = to_date(#fltDate#, 'DDMONYY') 
	</select>	
	
	<!--  Changed for QR -->
	<select id="getHeaderCreateAWBStorage"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_ORIGIN as awbOrigin,  
		   carawb.AWB_DEST as awbDest, 
		   carawb.SPL_CODE1 as splCode1, 
		   carawb.SPL_CODE2 as splCode2,          
		   carawb.SPL_CODE3 as splCode3,          
		   carawb.SPL_CODE4 as splCode4,          
		   carawb.SPL_CODE5 as splCode5,          
		   carawb.SPL_CODE6 as splCode6,          
		   carawb.SPL_CODE7 as splCode7,          
		   carawb.SPL_CODE8 as splCode8,
		   carawb.SPL_CODE9 as splCode9,
		   pkg_common.get_awb_splcodes(carawb.AWB_NO, carshp.AWB_DATE, awb.AWB_TYPE, ', ') as splCodeConcatinated,	
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   carshp.DAM_PCS as damPcs, 
		   carshp.DAM_WT as damWt, 
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   carshp.SAFE_HAND as safeHand,
		   carshp.ACCEPT_FROM as acceptFrom,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,		   
		   carshp.CAR_CREATED as carCreatedYn,
		   carshp.MINI_SHP as miniShipment,
		   carawb.HOUSE_FLG as houseFlg,
	       TO_CHAR(carshp.FLT_DATE, 'DDMONYY') AS fltDate, 	 
	       carshp.FLT_KEY AS fltKey,	      
	       uld.ULD_KEY                        						AS uldKey      ,			   
		   uld.WH_RMK 											   	AS uldInstruction,
		   carawb.WH_RMK											AS awbInstruction,
		   uld.HANDLING_MODE									 	AS dlvMode,	
       	   ''									            		AS dlvRmk,
		   ddt.TRF_TYPE 										   	AS transferType,		
		  (select TARE_WEIGHT from ULD_TYPE_CARR_TARE_WT where ULD_CARR = uldInv.ULD_CARR and ULD_TYPE = uldInv.ULD_TYPE and 
					uldInv.ULD_NO between ULD_NO_FROM and ULD_NO_TO and rownum=1) tareWt
		FROM IMP_CAR_AWB carawb
		JOIN AWB awb ON awb.AWB_NO = carawb.AWB_NO AND awb.awb_date = carawb.awb_date	  
	    JOIN IMP_CAR_SHP carshp ON  carshp.AWB_NO = carawb.AWB_NO AND carshp.awb_date = carawb.awb_date	  
	    LEFT JOIN IMP_RAMP_CHK_DTL dtl ON carshp.FLT_KEY=dtl.FLT_KEY AND carshp.FLT_DATE = dtl.FLT_DATE AND dtl.ULD_KEY =#uldKey#
      	LEFT JOIN IMP_ULD_LIST uld ON uld.FLT_KEY=carshp.FLT_KEY AND uld.FLT_DATE = carshp.FLT_DATE AND uld.ULD_KEY =#uldKey#
	    LEFT JOIN DDT_MSG msg ON msg.FLT_KEY = dtl.FLT_KEY and msg.FLT_DATE = dtl.FLT_DATE and msg.ddt_status='P' 	  
	    LEFT JOIN DDT_ULD ddt ON ddt.TR_NO = msg.TR_NO AND ddt.uld_key = dtl.ULD_KEY
	    LEFT JOIN uld_inventory uldInv on dtl.uld_key = uldInv.ULD_KEY
		WHERE    	   
      	  carshp.FLT_KEY = #fltKey# AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND 		 
          carshp.AWB_NO = #awbNo# AND
		  carshp.AWB_DATE = TO_DATE(#awbDate# , 'DDMONYY')		
	</select>	
	
	<select id="getHeaderAWBStorageWithoutShp"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
			   carawb.AWB_NO as awbNo,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
			   carawb.AWB_PRFX as awbPrefix,
			   carawb.AWB_ORIGIN as awbOrigin,  
			   carawb.AWB_DEST as awbDest, 
			   carawb.SPL_CODE1 as splCode1, 
			   carawb.SPL_CODE2 as splCode2,          
			   carawb.SPL_CODE3 as splCode3,          
			   carawb.SPL_CODE4 as splCode4,          
			   carawb.SPL_CODE5 as splCode5,          
			   carawb.SPL_CODE6 as splCode6,          
			   carawb.SPL_CODE7 as splCode7,          
			   carawb.SPL_CODE8 as splCode8,
			   carawb.SPL_CODE8 as splCode9,
			   pkg_common.get_awb_splcodes(carawb.AWB_NO, carawb.AWB_DATE, 'I', ', ') as splCodeConcatinated,	
			   carawb.AWB_PCS as awbPcs,
			   carawb.AWB_WT as awbWt,
			   carawb.CONTENT as content,
			   carawb.CATALOG as catalog,
			   carawb.AWB_CLOSED as awbClosed,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
			   carawb.PPK_TYPE as ppkType,
			   carawb.HOUSE_FLG as houseFlg		
		FROM IMP_CAR_AWB carawb	
		WHERE carawb.AWB_NO = UPPER(#awbNo#) AND
		AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
	</select>	
	
	<select id="getAWBNOlistInFFM"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO"  
		resultClass="cargo.cms.imprt.bo.ProcessedFFMBO">
			SELECT AWB_NO as awbNo,  
					 SHP_PCS as shpPcs,
					SHP_WT as shpWt,
					 CONTENT as content,
					NVL(SPL_CODE1,'') as splCode1,
					NVL(SPL_CODE2,'') as splCode2,
					NVL(SPL_CODE3,'') as splCode3,
					NVL(SPL_CODE4,'') as splCode4,
					NVL(SPL_CODE5,'') as splCode5,
					NVL(SPL_CODE6,'') as splCode6,
					NVL(SPL_CODE7,'') as splCode7,
					NVL(SPL_CODE8,'') as splCode8,
					TO_CHAR(AWB_DATE,'DDMONYY') as awbDate
			 FROM IMP_PROCESSED_FFM 
			 WHERE  
				CARR_CODE = UPPER(#carrCode#) AND
				FLT_NO = UPPER(#fltNo#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				ULD_KEY = UPPER(#uldKey#)
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlgetacttimeandtrno"  parameterClass="cargo.cms.uld.bo.ULDEICBO"  
		resultClass="cargo.cms.uld.bo.ULDEICBO">
		SELECT PKG_COMMON.get_flt_ata(FLT_KEY, SCH_DATE, 'A') AS actTime,
			TR_NO as trNo,
			TO_CHAR(ACT_DATE,'DDMONYY') as actDate,
			PKG_COMMON.get_flt_eta(FLT_KEY, SCH_DATE, 'A') as estTime				
		FROM FLT_OPR
		WHERE ((CARR_CODE = #carrCode# 
				AND FLT_NO    = #fltNo#) OR FLT_KEY = #fltKey#) 
				AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		  		AND FLT_TYPE = #fltType#	
   	</select>
   	
   	<!--  Changed for QR -->
	<select id="validateuldkeyinffm" parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" 
	resultClass="java.lang.String">
		select count(1) 
			FROM EDI_FFM_ULD U
			JOIN EDI_FFM_MSG M ON M.TR_NO = U.TR_NO  and M.ffm_status = 'P'
			WHERE 
			M.CARR_CODE = #carrCode# AND
			M.FLT_NO = #fltNo# AND
			M.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			U.ULD_KEY = #uldKey#
	</select>	
	
	
	<select id="validateuldkeyincpm" parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" 
	resultClass="java.lang.String">
		      select count(1) 
			FROM EDI_CPM cpm
			JOIN EDI_CPM_DTL dtl ON cpm.VER_NO = dtl.VER_NO and cpm.FLT_KEY = dtl.FLT_KEY and cpm.FLT_DATE = dtl.FLT_DATE  
			WHERE 			
			dtl.FLT_KEY = #fltKey# AND
			dtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			dtl.ULD_KEY = #uldKey#
	</select>	
	
	<select id="awb_closed_check_yn"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB 
		WHERE AWB_CLOSED_YN = 'Y' AND  AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND AWB_TYPE = #awbType#
	</select>
	<select id="checkawbexistsinimpcarshp"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="java.lang.String">
		SELECT count(1)	
		FROM IMP_CAR_SHP 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		  FLT_KEY = UPPER(#fltKey#) AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>	
	
	<select id="getFwbInfoForAWB"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		 SELECT 
		   	FWB.AWB_NO AS awbNo, 
 			TO_CHAR(FWB.AWB_DATE,'DDMONYY') AS awbDate, 	    
     		UPPER(FWB.FLT_KEY1) AS fltKey,     		
			FWB.SHPR_NAME AS shprName, 
 			FWB.AGENT_NAME AS appntdAgent, 	    
     		FWB.SPH_SPL_CODE1 AS splCode1,
      		FWB.SPH_SPL_CODE2 AS splCode2,
      		FWB.SPH_SPL_CODE3 AS splCode3,
      		FWB.SPH_SPL_CODE4 AS splCode4,
      		FWB.SPH_SPL_CODE5 AS splCode5,
      		FWB.SPH_SPL_CODE6 AS splCode6,
      		FWB.SPH_SPL_CODE7 AS splCode7,
      		FWB.SPH_SPL_CODE8 AS splCode8,
      		FWB.SPH_SPL_CODE9 AS splCode9,
      		AWB.SPL_CODE1 AS shc1,
      		AWB.SPL_CODE2 AS shc2,
      		AWB.SPL_CODE3 AS shc3,
      		AWB.SPL_CODE4 AS shc4,
      		AWB.SPL_CODE5 AS shc5,
      		AWB.SPL_CODE6 AS shc6,
      		AWB.SPL_CODE7 AS shc7,
      		AWB.SPL_CODE8 AS shc8,
      		AWB.SPL_CODE9 AS shc9, 
      		FWB.ORG AS awbOrigin, 
		  	FWB.DES AS awbDest, 
      		FWB.CSGNE_NAME as consignee,
      		FWB.CSGNE_ADDR AS consigneAddr,
      		FWB.CSGNE_STATE_PROVINCE AS consigneAddr1,
      		decode(FWB.CSGNE_PLACE,'','Hong Kong',FWB.CSGNE_PLACE) as consCity,
	    	decode(FWB.CSGNE_CTRY_CODE,'','HK',FWB.CSGNE_CTRY_CODE) as consCountry,
      		FWB.SHPR_NAME AS shipperName,
      		FWB.SHPR_ADDR AS shipperAddr,
      		decode(FWB.SHPR_PLACE,'','Hong Kong',FWB.SHPR_PLACE) AS shipperAddr1,
			FWB.SHPR_STATE_PROVINCE AS shipperAddr3,
      		decode(FWB.SHPR_CTRY_CODE,'','HK',FWB.SHPR_CTRY_CODE) as shprCountry,
	    	FWB.AGENT_NAME AS appiontedAgent,
      		FWB.AGENT_PLACE AS agentAddr,
            (SELECT RATE_GOODS_NATR FROM
                 (select EFCR.TR_NO, EFCR.RATE_GOODS_NATR from EDI_FWB_CHR_RATE efcr where (RATE_GOODS_DATA_I = 'C' OR RATE_GOODS_DATA_I='G') ORDER BY TR_NO, DOC_LINE_NO) ee WHERE EE.TR_NO=FWB.TR_NO AND ROWNUM=1) content,
            FWB.RA_NO AS raNumber,
            FWB.agent_iata_code as iataCode  
     		FROM EDI_FWB FWB
     		LEFT JOIN AWB AWB
     		ON FWB.AWB_NO = AWB.AWB_NO
     		AND FWB.AWB_DATE = AWB.AWB_DATE
     		WHERE 
     		FWB.AWB_NO = UPPER(#awbNo#) AND
		  	FWB.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FWB 
            WHERE AWB_NO = UPPER(#awbNo#) AND
            AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</select>
	
	<update id="updateCarInfoWithFWB" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE IMP_CAR_AWB SET 
 		APPNTD_AGENT = ( FUN_GET_APPT_AGENT(#consignee#,AWB_NO,AWB_DATE) ), 
 		SPL_CODE1 = #splCode1#,
      	SPL_CODE2 = #splCode2#,
      	SPL_CODE3 = #splCode3#,
      	SPL_CODE4 = #splCode4#,
      	SPL_CODE5 = #splCode5#,
      	SPL_CODE6 = #splCode6#,
      	SPL_CODE7 = #splCode7#,
      	SPL_CODE8 = #splCode8#,
      	SPL_CODE9 = #splCode9#,
      	AWB_ORIGIN = #awbOrigin#, 
      	AWB_DEST = #awbDest#, 
		CSGNE_NAME = #consignee#,
      	CSGNE_ADDR1 = #consigneAddr#,
      	CSGNE_ADDR2 =  #consigneAddr1#,     
      	CSGNE_PLACE  =  #consCity#,
      	CSGNE_CTRY_CODE = #consCountry#,
	    SHPR_NAME = #shipperName#,
      	SHPR_ADD1 = #shipperAddr#,
      	SHPR_ADD2 = #shipperAddr1#,
      	SHPR_STATE_PROVINCE = #shipperAddr3#,      
      	SHPR_CTRY_CODE = #shprCountry#,
      	AGENT_PLACE  = #agentAddr#,
      	content = #content#
      	WHERE  AWB_NO = #awbNo#  AND  AWB_DATE =	 TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<select id="checkawbexistsinfwb"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  resultClass="java.lang.String">
		SELECT count(1)	
		FROM EDI_FWB 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="checkawbexistsinimpcarawb"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="java.lang.String">
		SELECT count(1)
		FROM IMP_CAR_AWB 
		WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<update id="updateimpcarshp" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_CAR_SHP
		SET    RECD_PCS	  =	 #recdPcsToUpdate#,
			   RECD_WT	  =  #recdWtToUpdate#,
			   DAM_PCS	  =  #damPcsToUpdate#,
			   DAM_WT 	  =  #damWtToUpdate#,
			   LM_USER_ID =  #userID#, 
				LM_DATE   =  sysdate
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#fltKey#) AND
			   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
	   
	<!--  Changed for QR -->
	<insert id="insertimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	
		   AWB_PFX, 	AWB_NO, 	AWB_DATE, 
		   AWB_DEST, 	ULD_TYPE,	 ULD_NO, 
		   ULD_CARR, 	ULD_KEY, 	
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   LSP_NO, 	DAM_IND, 				
		   TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, 	LM_DATE,FLT_TYPE,CHKIN_ULD_KEY,
		   INSRT_FROM_IND,MINI_SHP,ENDORSED_BY, TARGET,DAM_TYPE,BULK_WT,BUP_WT,TR_TYPE_EVT,DAM_PC_DECL,DAM_WT_DECL,DAM_COND) 
		VALUES (#trNo#, #docLineNo#, #carrCode#,
		    TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 
		    #awbPrefix#, #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')),
		    #awbDest#, #uldType#, #uldNo#,
		    #uldCarr#, #uldKey#, 
		    #locCode#, #strgPcs#, #strgWt#,
		    #lspNo#, #damInd#,			
		    'AS', 'A', #userID#,
		    sysdate, #userID#, sysdate,'I',#checkInULD#, 'D', 
		    #miniShipment#, #userName#, #target#,#damType#,#strgWt#,#strgWt#,nvl(#trEvnt#,'CIASD'),#damDeclPcs#,#damDeclWt#,#damCond#)	
	</insert>	
	
	
	<select id="checklocexistsmhs"	parameterClass="java.lang.String" resultClass="java.lang.String">
	select grp.WH_TYPE
	from
	MAST_WH_LOC loc
	join MAST_WH_GROUP grp on loc.WH_GROUP = grp.WH_GROUP
	where CODE=#locCode#
	</select> 
	

	<update id="updatecreateawbuldlocationDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE ULD_INVENTORY
		SET 		
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		ULD_FLOW = 'I',
		LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE ULD_KEY = #uldKey#				
	</update>
	
	<update id="updatecreateawblsplocationDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE LSP_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE LSP_NO = #lspNo# 	
	</update>
	
	<select id="getCreateAwbInvPCSDesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT seq_no seqNo FROM awb_inventory
               WHERE flt_key = #fltKey#
		        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		        AND awb_no = #awbNo#
		        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
		        AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
			    AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
			    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')			    
			    AND FLT_TYPE  = 'I' 		  
			    AND SRF_NO IS NULL 
			    AND TRM_NO IS NULL 
			    AND CDIF_NO IS NULL	             
    </select>       
    
    <update id="updateCreateAWBDamTypeDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET DAM_TYPE = #damType# WHERE seq_no = #seqNo#
	</update>   
	
	<update id="updateCarShpMinShip" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_CAR_SHP
		SET    
				MINI_SHP = #miniShipment#,
				SAFE_HAND = #safeHand#,
				ACCEPT_FROM = #acceptFrom#,
			    LM_USER_ID =  #userID#, 
				LM_DATE   =  sysdate
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#fltKey#) AND
			   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
	
	<insert id="insertimpcarawb" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		INSERT INTO IMP_CAR_AWB (
		   AWB_NO,    	AWB_DATE,    AWB_PRFX, 
		   AWB_ORIGIN,  AWB_DEST,    PPK_TYPE, 
		   CR_USER_ID,  CR_DATE,    LM_USER_ID, 
		   LM_DATE,TR_STATUS,CONSOLE_IND,AWB_PCS,AWB_WT,BULK_PCS,BULK_WT, CATALOG, CURR_CODE) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,
	       	 #awbOrigin#, #awbDest#, nvl(#ppkType#, 'B'),
	    	 #userID#, SYSDATE, #userID#,SYSDATE,'A',#consolInd#,#recdPcsToUpdate#,#recdWtToUpdate#,#recdPcsToUpdate#,#recdWtToUpdate#, #catalog#, #currencyCode#)
	</insert>			
	
	<!--  Changed for QR -->
	<insert id="insertimpcarshp" parameterClass="cargo.cms.imprt.bo.CarShpBO"> 
		INSERT INTO IMP_CAR_SHP (
		   AWB_NO, AWB_DATE, AWB_PRFX, 
		   PPK_TYPE, CARR_CODE, FLT_DATE, 
		   FLT_KEY, CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE, TR_STATUS,
		    DAM_PCS, DAM_WT,FLT_TYPE,MINI_SHP,SAFE_HAND,TR_TYPE
			) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,
	       	 nvl(#ppkType#, 'B'), #carrCode#, TO_DATE(#fltDate#,'DDMONYY'),
	   		 #fltKey#, #userID#, SYSDATE ,
	    	 #userID#, SYSDATE, 'A',  0, 0,'I',#miniShipment#,#safeHand#,'AWB Storage')		
	</insert>	
	<select id="imp_RestoreAWBStorage_awb_type"  parameterClass="map" resultClass="java.lang.String">		
		select FLT_TYPE from ULD_INVENTORY 
		where ULD_KEY = #ULDKEY# and 
		FLT_TYPE != #AWBTYPE# AND 
		(FLT_TYPE = 'E' OR (FLT_TYPE = 'I' AND EMPTY_FLG = 'N'))
	</select>
	<insert id="save_imp_awb_uld_brk" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
				SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,TR_TYPE) 
			VALUES('I',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
				nvl(#recdPcsToUpdate#,0),nvl(#recdWtToUpdate#,0),#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode8#,
				#userID#,SYSDATE,#userID#,SYSDATE,'B',#carrCode#,'Y',#trtype#)  
		]]>
	</insert>
	
	<!--  Changed for QR -->
	<select id="fetchHouseDetails"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  
		resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select HAWB_NO as hseAwbNo,HAWB_PCS as hseAwbPcs,HAWB_NET_WT as hseAwbWt 
			from edi_fhl_hawb where exists (select null from edi_fhl where awb_no=#awbNo# and edi_fhl_hawb.tr_no = tr_no)
	</select>	
	
	<!--  Changed for QR -->
	<select id="getCreateAWBCntgFlightsForAWB"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  
		resultClass="cargo.cms.imprt.bo.CarShpBO">
		select 
		(dtl.shp_cntg_flt_key || '/' || TO_CHAR(dtl.shp_cntg_flt_date,'DDMONYY')) as cntgFlt,
                pkg_common.get_flt_sta(dtl.shp_cntg_flt_key, dtl.shp_cntg_flt_date,'D') std,
                pkg_common.get_flt_eta(dtl.shp_cntg_flt_key, dtl.shp_cntg_flt_date,'D') etd
	    FROM v_ddt_dtl dtl
	    join flt_opr opr on opr.flt_key = dtl.shp_cntg_flt_key and opr.sch_date = dtl.shp_cntg_flt_date    
	    where		
            dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
            and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY')    and dtl.shp_trf_type = 'QT' 
        AND ROWNUM = 1   	
	</select>	
	
	<!--  Changed for QR
	<select id="getCreateAWBForAWBTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select dtl.shp_trf_type FROM v_ddt_dtl dtl
	    where 
	    dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') AND ROWNUM = 1   		
	</select> -->

	<!--  Changed for QR -->
	<select id="getAWBTrType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select dtl.shp_trf_type FROM v_ddt_dtl dtl
	    where 
	    dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') and dtl.shp_trf_type = 'QT' AND ROWNUM = 1 
	</select>
	
	<select id="getHHTAWBTarmacCount"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">	
			select count(1) FROM v_ddt_dtl dtl where dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')	
				and dtl.flt_key=#flightKey# and dtl.flt_date = TO_DATE(#flightDate#,'DDMONYY') and dtl.shp_trf_type = 'TT'	
	</select>
	<select id="getAWBTarmacCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
			select count(1) FROM v_ddt_dtl dtl where dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')	
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') and dtl.shp_trf_type = 'TT'			
	</select>
	<select id="getCarCountForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
			select count(1) from imp_car_shp where AWB_NO=#awbNo# and awb_date=#awbDate# and CAR_CREATED='Y'		
	</select>	
	<update id="updateCarrCodeOnAWB" parameterClass="map">
		UPDATE AWB SET
		CARR_CODE = substr(#fltKey#,0,2),
		LM_USER_ID = nvl(#userID#,'SYSTEM'),
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = #awbDate#
	</update>
	
	<update id="updateAWBUnknownCarCrt" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE AWB SET
		CAR_YN = 'Y',
		MANIFEST_PCS = '0', 
		MANIFEST_WT = '0',
		LM_DATE = SYSDATE,
		TR_TYPE=#trtype#,
		LM_USER_ID = #userID#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = #awbDate#
	</update>	
	
	
	<update id="updateCarSHPUnknownCarCrt" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CAR_CREATED = 'Y',
			MANIFEST_PCS = '0', 
			MANIFEST_WT = '0',
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE,
			TR_TYPE = 'AWB Strg'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
	<update id="imp_createawbstrg_uldbreak_start_desktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #userID#,
			BRKDN_START_DATE = sysdate,		
			<!-- 	
			BRKDN_LOCN = #locCode#,	 -->			
			LM_USER_ID	 =#userID#,
			LM_DATE	 = sysdate 		
		WHERE 	FLT_KEY    = #fltKey#
			  	AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate#			  	
				AND ULD_KEY = #uldKey#				
	</update>	
	
	<!--  Changed for QR -->
	<select id="getCreateAWBFFMPcs"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	select sum(MAN_PCS) as totalPcs
	from EDI_FFM_SHP S
	JOIN EDI_FFM_MSG M ON M.TR_NO = S.TR_NO and M.ffm_status = 'P'
	where
		S.AWB_NO = UPPER(#awbNo#) AND
		S.FLT_KEY = UPPER(#fltKey#) AND
		S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
		
	<insert id="insert_LSP_NO_in_master" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locCode#, SYSDATE, 'N', #userID#, SYSDATE, #userID#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	
	<select id="chk_shc_exists_Restricted_loc" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_AWB A, SHC_RESTRICT_LOC B 
		WHERE 
			(A.SPL_CODE1=B.SHC OR A.SPL_CODE2=B.SHC OR A.SPL_CODE3=B.SHC OR A.SPL_CODE4=B.SHC OR A.SPL_CODE5=B.SHC OR 
			A.SPL_CODE6=B.SHC OR A.SPL_CODE7=B.SHC OR A.SPL_CODE8=B.SHC OR A.SPL_CODE8=B.SHC) AND B.LOC_CODE=#locCode# 
			AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findRecvdPcsSavedForShpmt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltKey# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND RECD_PCS='0'
	</select>

<select id="findXTShipmentTarget" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">		
			select FLT_MODULE1 from 
			  (select exp_flt_key, exp_flt_date, FLT_MODULE1 from XT_IMP_CAR_SHP_DTL xt ,flt_opr opr
				where imp_flt_key = #fltKey# and imp_flt_date = TO_DATE(#fltDate#, 'DDMONYY') and awb_no = #awbNo#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  
				and flt_type = 'D' AND opr.flt_key = xt.exp_flt_key and opr.sch_date = xt.exp_flt_date 
			) where 1 =1 AND rownum = 1      	
	</select>	
		      
	<select id="findXTShipmentTargetHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">	
			select FLT_MODULE1 from 
			  (select exp_flt_key, exp_flt_date, FLT_MODULE1 from XT_IMP_CAR_SHP_DTL xt ,flt_opr opr
				where imp_flt_key = #flightKey# and imp_flt_date = TO_DATE(#flightDate#, 'DDMONYY') and awb_no = #awbNo#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  
				and flt_type = 'D' AND opr.flt_key = xt.exp_flt_key and opr.sch_date = xt.exp_flt_date 
			) where 1 =1 AND rownum = 1        	
	</select>
	
	<select id="findBkgExistsForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">			
	<![CDATA[
			SELECT 
			hd.DEL_ZONE 
			FROM 
				IMP_BOOKING hd JOIN
		      IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
				WHERE 
					dtl.AWB_NO=#awbNo#  
		      AND dtl.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		      AND dtl.FLT_KEY=#fltKey#
		      AND dtl.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		      and to_date(to_char(hd.BKG_SLOT_DATE, 'DDMONYY') || to_char(hd.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
       	]]> 
	</select>
	
	<!--  Changed for QR -->
	<select id="findTrkDockForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		<![CDATA[
		SELECT custAgtSchCollTD.TRUCK_DOCK  
		FROM IMP_CAR_SHP carShp
			join TRUCK_MANIFEST_DTL trkMnfDtl on trkMnfDtl.awb_no = carShp.awb_no and trkMnfDtl.awb_date = carShp.awb_date and trkMnfDtl.flt_key = carShp.flt_key and trkMnfDtl.flt_date = carShp.flt_date
			join TRUCK_MANIFEST trkMnf on trkMnf.truck_manf_no = trkMnfDtl.truck_manf_no 
			join CUST_AGENT_SCH_COLL_TIME custAgtSchColl on trkMnf.time_slot_tr_no = custAgtSchColl.tr_no
			join CUST_AGENT_SCH_COLL_TRUCK_DOCK custAgtSchCollTD on  custAgtSchCollTD.tr_no = custAgtSchColl.tr_no
		WHERE sysdate < to_date(to_char(SCH_COLL_DATE,'DMONYY')||' '|| TO_CHAR(SCH_COLL_FROM,'0000'),'DDMONYY HH24MI')  and custAgtSchColl.purpose = 'CRG'
				AND carShp.AWB_NO=#awbNo# AND carShp.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
				AND carShp.FLT_KEY=#fltKey# AND carShp.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') and ROWNUM=1
			   	]]> 
	</select>
	<select id="findDefTgtForSHCForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT 
			DEFAULT_TARGET 
		FROM 
			MAST_SPL_HAND_CODE A, IMP_CAR_AWB B 
		WHERE (A.CODE=B.SPL_CODE1 OR A.CODE=B.SPL_CODE2 OR A.CODE=B.SPL_CODE3 OR A.CODE=B.SPL_CODE4 OR A.CODE=B.SPL_CODE5 
		OR A.CODE=B.SPL_CODE6 OR A.CODE=B.SPL_CODE7 OR A.CODE=B.SPL_CODE8 OR A.CODE=B.SPL_CODE9) AND B.AWB_NO=#awbNo# 
		AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND DEFAULT_TARGET IS NOT NULL ORDER BY PRIORITY
	</select>
	<select id="findBkgRecordWithinXHrs" parameterClass="cargo.cms.imprt.bo.CarShpBO"
		resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		SELECT 
			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') as schDate, BKG_SLOT_TO as timeTo, BKG_SLOT_FROM as timeFrom 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltKey# AND B.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') 
			AND TO_DATE(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' ||trim(to_char(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') <= TO_DATE(#timeTo#, 'DDMONYY HH24MI')
			and to_date(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || trim(to_char(A.BKG_SLOT_FROM, '0000')),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
		]]>
	</select>
	<select id="findTrkRecordWithinXHrs" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		SELECT 
			TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as schDate, SCH_COLL_TO as timeTo, SCH_COLL_FROM as timeFrom 
		FROM 
			IMP_CAR_AWB A, TRUCK_MANIFEST B, TRUCK_MANIFEST_DTL C 
		WHERE 
			C.TRUCK_MANF_NO=B.TRUCK_MANF_NO AND C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE AND B.AGENT_CODE=A.AGENT_CUST_NO AND A.AWB_NO=#awbNo# AND 
			A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND TO_DATE(B.SCH_COLL_DATE || ' ' || LPAD(B.SCH_COLL_TO,4,0), 'DD-MON-YY HH24MI') <= 
			TO_DATE(#timeTo#, 'DDMONYY HH24MI') AND C.FLT_KEY=#fltKey# AND C.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		]]>
	</select>
	<select id="checkHouseFlgCarAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			HOUSE_FLG 
		FROM 
			IMP_CAR_AWB 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="checkULDExistsInFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			EDI_FFM_ULD 
		WHERE 
			FLT_KEY=#fltKey# AND ULD_KEY=#uldKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	<select id="checkLSPInCSDMaster" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CSD 
		WHERE 
			CODE=#lspNo#
	</select>
		
	<!--
	==============================================================================================
		END OF CREATE IMPORT AWB STORAGE
	==============================================================================================
	-->
	<!-- flight handling report -->
	<insert id="insert_flight_report_getDiscrepancyIrregularity_table" parameterClass="cargo.cms.imprt.bo.DisIrrBO">
		INSERT INTO IMP_FLT_HAND_DOC_DISC
			(TR_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,DEST,DCP_CODE,ACTION,ACTION_RMK,ACTION_BY)
		VALUES 
			(#trNo#,#docLineNo#,#awbNo#,to_date(#awbDate#,'ddmonyy'),
			#awbDest#,#dcpCode#,#actionCode#,#remarks#,#actionedBy#)
	</insert>	
	<insert id="flight_report_insertimpflthanddoc" parameterClass="cargo.cms.imprt.bo.DocumentFRBO">
	INSERT INTO IMP_FLT_HAND_DOC (
	   TR_NO, DOC_LINE_NO, CARR_CODE, 
	   FLT_DATE, FLT_KEY, ATT_PATH, 
	   DOC_NAME, REP_MODULE) 
	VALUES ( #trNo#, #docLineNo#, #carrCode#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#, '',
	    #fileName#,  #reptType#)
	</insert>	
 	<select id="flight_report_getLoadInformation_gene"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
				 resultClass="cargo.cms.imprt.bo.LoadInfoBO">
		select CARGO_TYPE AS type, CARGO_TYPE_DESC AS typeCode, nvl(NO_OF_SHP, 0) noOfShp, 
		nvl(PCS, 0) pcs, nvl(WT, 0) wt, nvl(BUP_WT, 0) bupWt, nvl(BULK_WT, 0) bulkWt			
		FROM IMP_FLT_HAND_LOAD_INFO 
		WHERE TR_NO =  #reptTrNo#
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getLoadInformation"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.LoadInfoBO">
		<![CDATA[ 
		select *
			from (
			            
			 select 1 ord,'Cargo' AS type, 'Local' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			  from flt_opr f
			  left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			   SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			   FROM imp_car_awb b, imp_car_shp a, awb 
			  WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date
				AND b.catalog in ('IG', 'IS')	
      			AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))                                          
				GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
				where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')	
						
			UNION ALL
			
			select 2 ord, 'Cargo' AS type, 'Express' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			FROM imp_car_awb b, imp_car_shp a, awb 
			WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date
       		AND exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
			GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			
			UNION ALL 	
					
			 select 3 ord,'Cargo' AS type, 'US MAIL' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			  from flt_opr f
			  left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			   SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			   FROM imp_car_awb b, imp_car_shp a
			  WHERE a.awb_no = b.awb_no
			AND a.awb_date = b.awb_date
			AND b.catalog in ('IU')			
			GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			
			UNION ALL
		
			select 4 ord, 'Cargo' AS type,'Transit-QT' AS typeCode, count(a.awb_no) noOfShp,
			nvl(SUM(a.pcs),0) as  pcs,  nvl(SUM(a.bup_wt),0) + nvl(SUM(a.bulk_wt),0) as wt, 
			nvl(SUM(a.bup_wt),0) as bupWt,nvl(SUM(a.bulk_wt),0) as bulkWt 
			from (
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('QT')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date  
			union all 
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, 0 bulk_wt, nvl(SUM(m.shp_trf_wt),0) bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) a, imp_car_awb b, awb 
			WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date  AND b.catalog not IN ('TM') 
       				AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        					where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        					and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
        	and a.flt_key = #fltKey#  and a.flt_date=#fltDate# 
		
			UNION ALL
				
			SELECT 5 ord,'Cargo' AS type,
			'Transit-NT' As typeCode,
			NVL(count(awb_no),0) noOfShp,
			NVL(sum(pcs),0) pcs, 
			nvl(SUM(wt),0) as wt,
			Nvl(Sum(ppkwt),0.0) bupWt, 
			nvl(Sum(bulkwt),0.0) bulkWt 
			from(SELECT  a.awb_no,sum(a.manifest_pcs-NVL(ddt_if.pcs,0)-NVL(ddt_qtifbulk.pcs,0)-NVL(ddt_qtbu.pcs,0))  pcs,
			sum(a.manifest_wt-NVL(ddt_if.wt,0)-NVL(ddt_qtifbulk.wt,0)-NVL(ddt_qtbu.wt,0)) wt,
			sum(a.bulk_wt-NVL(ddt_qtifbulk.wt,0)-NVL(ddt_tt.wt,0)) bulkwt,
			sum(a.bup_wt-NVL(ddt_if.wt,0)-NVL(ddt_qtbu.wt,0)) as ppkwt
			FROM imp_car_shp a 
			join awb b on a.awb_no=b.awb_no and a.awb_date=b.awb_date and b.awb_type ='T'
				AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = b.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,
                        									b.spl_code6,b.spl_code7,b.spl_code8,b.spl_code9))
			join imp_car_awb carAwb on a.awb_no=carAwb.awb_no and a.awb_date=carAwb.awb_date AND carAwb.catalog not IN ('TM')                             									
			left  JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m 
			where  m.TRF_TYPE  =  'IF' group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_if
			ON a.awb_no=ddt_if.awb_no and a.awb_date=ddt_if.awb_date and a.flt_key=ddt_if.flt_key and a.flt_date=ddt_if.flt_date 
			left  JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m 
			where m.shp_TRF_TYPE =  'TT' group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_tt
			ON a.awb_no=ddt_tt.awb_no and a.awb_date=ddt_tt.awb_date and a.flt_key=ddt_tt.flt_key and a.flt_date=ddt_tt.flt_date 
			LEFT OUTER JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('QT','IF')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_qtifbulk
			ON a.awb_no=ddt_qtifbulk.awb_no and a.awb_date=ddt_qtifbulk.awb_date  and a.flt_key=ddt_qtifbulk.flt_key and a.flt_date=ddt_qtifbulk.flt_date 
			LEFT OUTER JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_qtbu   
			ON a.awb_no=ddt_qtbu.awb_no and a.awb_date=ddt_qtbu.awb_date and a.flt_key=ddt_qtbu.flt_key and a.flt_date=ddt_qtbu.flt_date 
			where  a.flt_key=#fltKey#  and a.flt_date=to_date(#fltDate#,'DDMONYY')
			and ((a.manifest_pcs-NVL(ddt_if.pcs,0)-NVL(ddt_tt.pcs,0)-NVL(ddt_qtifbulk.pcs,0)-NVL(ddt_qtbu.pcs,0)) >0 OR a.manifest_pcs = 0) 
			GROUP BY a.awb_no) 
			
			UNION ALL		
			
			 select 6 ord, 'Cargo' AS type,'Tarmac-TT' AS typeCode, count(tt.awb_no) noOfShp, nvl(SUM(tt.trfPcs),0) as  pcs,
			nvl(SUM(tt.trfWt),0) as wt, 0 as bupWt, nvl(SUM(tt.trfWt),0) as bulkWt
			from imp_car_shp imp  , imp_car_awb b, awb  ,
      			(select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) trfPcs,
                nvl(SUM(m.shp_trf_wt),0) trfWt from v_ddt_dtl m 
                where m.SHP_TRF_TYPE='TT'
                  group by m.awb_no,m.awb_date,m.flt_key,m.flt_date) tt 
			where imp.awb_no = b.awb_no AND imp.awb_date = b.awb_date and imp.awb_no = awb.awb_no AND imp.awb_date = awb.awb_date 
			and imp.awb_no=tt.awb_no and imp.awb_date=tt.awb_date 	AND b.catalog not IN ('TM')
			AND not exists(select null from CUST_AIRL_SPL_CODE casc
			where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
			and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
			awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
      		and imp.flt_date=tt.flt_date and imp.flt_key=tt.flt_key	
			and imp.flt_key=#fltKey#  and imp.flt_date=to_date(#fltDate#,'DDMONYY') 
					
			UNION ALL
			
			select 7 ord, 'Cargo' AS type,'Transit-IF' AS typeCode, count(a.awb_no) noOfShp,
			nvl(SUM(a.pcs),0) as  pcs, nvl(SUM(a.bulk_wt),0) +  nvl(SUM(a.bup_wt),0) as wt , 
			nvl(SUM(a.bup_wt),0) as bupWt, nvl(SUM(a.bulk_wt),0) as bulkWt 
			from (
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('IF')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='IF'
			and m.trf_type ='IF' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date  
			union all 
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, 0 bulk_wt, nvl(SUM(m.shp_trf_wt),0) bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='IF'
			and m.trf_type ='IF' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) a , imp_car_awb b, awb 
			where   a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date  AND b.catalog not IN ('TM') 
        			AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
        		and a.flt_key=#fltKey#  and a.flt_date=#fltDate#
		
			UNION ALL
			select 8 ord,'Cargo' AS type, 'T/S Mail' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			  FROM imp_car_awb b, imp_car_shp a
			WHERE a.awb_no = b.awb_no
			 AND a.awb_date = b.awb_date
			AND catalog IN ('TM')
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			 where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			UNION ALL
			 select 9 ord,'Cargo' AS type, 'Courier' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			 from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			 FROM imp_car_awb b, imp_car_shp a
			WHERE a.awb_no = b.awb_no
			 AND a.awb_date = b.awb_date
			   AND b.catalog in ('IO')
			  AND not (nvl(b.ect_handler, 'CPCT') != 'CPCT' 
			  and (a.awb_no||a.awb_date in (select awb_no||awb_date from awb_inventory where LOC_CODE = 'ECT')
			                                                       OR a.recd_pcs = 0))
			                                 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			                  where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			                  UNION ALL
			                  
			  select 10 ord,'Cargo' AS type, 'Total' AS typeCode, 0 noOfShp, 0 pcs, 0 wt, 0 bupWt, 0 bulkWt from  dual
			UNION ALL			                  
			select 11 ord,'IRR' AS type, 'IRR-Surplus' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			 from flt_opr f
			 left join (SELECT a.flt_key, a.flt_date, count(1) AS noofshp, sum(CIR_PCS) AS pcs, sum(CIR_WT) AS wt, sum(CIR_BUP_WT) AS bupWt, sum(CIR_BULK_WT) AS bulkWt
			  FROM imp_car_shp a
			  WHERE cir_proc_user IS NOT NULL and cir_pcs_type = 'SP'
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			UNION ALL
			 select 12 ord,'IRR' AS type, 'IRR-Shortland' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			 left join (SELECT a.flt_key, a.flt_date, count(1) AS noofshp, sum(CIR_PCS) AS pcs, sum(CIR_WT) AS wt, sum(CIR_BUP_WT) AS bupWt, sum(CIR_BULK_WT) AS bulkWt
			  FROM imp_car_shp a
			 WHERE cir_proc_user IS NOT NULL and cir_pcs_type = 'SL'
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			 where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			                  
			) q
			ORDER BY ord     
				]]>	  
			</select>             
			
	<select id="flight_report_getDiscrepancyIrregularity"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.DisIrrBO">
      <!--  
      	SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
			docDisc AS dcpCode,        
         case when shp.dir_proc_user is not null then m.Code_Desc end as action,   
		 case when shp.cir_proc_user is not null then shp.cir_proc_user else shp.dir_proc_user end as actionedBy,      
		 case when shp.cir_proc_user is not null then shp.cir_proc_date else shp.dir_proc_date end actionedDateTime,          
		 case when shp.cir_proc_user is not null then shp.cir_rmk else shp.dir_action_rmk end as remarks , shp.DIR_ACTION actionCode
		FROM (Select case when CIR_PCS_TYPE = 'SL' then 'MSCA' else 
			case when CIR_PCS_TYPE = 'SP' then 'FDCA' else DOC_DISC end end docDisc, s.* from IMP_CAR_SHP s) shp
		left join Mast_code_dtl m on m.Code = shp.DIR_ACTION and m.Code_Type = 'ACTION_CODE', 
		imp_car_awb b
		WHERE shp.awb_no = b.awb_no
			AND shp.awb_date = b.awb_date
			AND shp.flt_key = #fltKey#
			AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
			and (NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW' OR shp.CIR_PROC_USER is not null) --> 
			
		select a.* from (
					SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
					docDisc AS dcpCode,        
					null as action,   
					shp.cir_proc_user as actionedBy,      
					shp.cir_proc_date actionedDateTime,          
					decode(shp.cir_proc_user,null,null,shp.cir_rmk)  as remarks , null actionCode
					FROM (Select case when CIR_PCS_TYPE = 'SL' then 'MSCA'   
					when CIR_PCS_TYPE = 'SP' then 'FDCA' end docDisc, s.* from IMP_CAR_SHP s) shp,
					imp_car_awb b
					WHERE shp.awb_no = b.awb_no
					AND shp.awb_date = b.awb_date
					AND shp.flt_key = #fltKey#
					AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
					and shp.CIR_PROC_USER is not null 
					union     
					SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
					docDisc AS dcpCode,        
					case when shp.dir_proc_user is not null then m.Code_Desc end as action,   
					shp.dir_proc_user as actionedBy,      
					shp.dir_proc_date actionedDateTime,          
					shp.dir_action_rmk as remarks , shp.DIR_ACTION actionCode
					FROM (Select DOC_DISC docDisc, s.* from IMP_CAR_SHP s) shp
					left join Mast_code_dtl m on m.Code = shp.DIR_ACTION and m.Code_Type = 'ACTION_CODE', 
					imp_car_awb b
					WHERE shp.awb_no = b.awb_no
					AND shp.awb_date = b.awb_date
					AND shp.flt_key = #fltKey#
					AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
					and (NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW') ) a order by awbNo
	</select>
	
	<select id="flight_report_getDiscrepancyIrregularity_table"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.DisIrrBO">
		SELECT TR_NO AS trNo,
				DOC_LINE_NO AS docLineNo,
				AWB_NO AS awbNo,
				TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
				DEST AS awbDest,
				DCP_CODE AS dcpCode,
				m.code_desc AS action,
				d.ACTION AS actionCode,
				ACTION_RMK AS remarks,
				ACTION_BY AS actionedBy
		FROM IMP_FLT_HAND_DOC_DISC d
		left join Mast_code_dtl m on m.Code = d.ACTION and m.Code_Type = 'ACTION_CODE'
		WHERE TR_NO =#reptTrNo#
	</select>
	<insert id="flight_report_insertLoadInfo" parameterClass="cargo.cms.imprt.bo.LoadInfoBO">
		INSERT INTO IMP_FLT_HAND_LOAD_INFO (
		   TR_NO, DOC_LINE_NO, FLT_NO, 
		   FLT_DATE, FLT_ATA, FLT_KEY, 
		   CARR_CODE, CARGO_TYPE, NO_OF_SHP, 
		   PCS, BUP_WT, BULK_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE, WT, CARGO_TYPE_DESC) 
		VALUES ( #trNo#, #docLineNo#, #fltNo#,
		    #fltDate#, #fltAta#, #fltKey#,
		    #carrCode#, #type#, #noOfShp#,
		    #pcs#, #bupWt#, #bulkWt#,
		    #userID#, sysdate, #userID#,
		    sysdate, #wt#, #typeCode#)
	</insert>
 <!-- flight handling report delete flight_report_deleteTarmacInfo-->

 <!--Inbound flight discrepancy  -->
 <!--  Changed for QR -->
 	<select id="imp_discrepancy_getDiscrepancyList" parameterClass="cargo.cms.imprt.bo.DiscrepancyBO"
		resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
			SELECT 
				SHP.FLT_KEY as fltKey ,
				SHP.FLT_DATE as fltDate,
				SHP.FLT_DATE_DISPLAY as fltDateDisplay,
				PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata, 
				SHP.FFM as ffm, 
				SHP.CAR as car, 
				SHP.CIR as cir,
				FLT.ORIG as orig,
				FLT.DEST as dest
			FROM
				(
					SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,
					SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' THEN 1 ELSE 0 END) AS FFM, 
					SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CAR,
					SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR
					FROM IMP_CAR_SHP A, IMP_CAR_AWB B
					WHERE A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
					AND CATALOG NOT IN ('TA') 
					GROUP BY FLT_KEY, FLT_DATE
				) SHP
				JOIN FLT_OPR FLT ON 
					FLT.FLT_KEY = SHP.FLT_KEY AND 
					FLT.SCH_DATE = SHP.FLT_DATE AND 
					FLT.FLT_TYPE = 'A'
			WHERE
				CIR > 0 AND				
				SHP.FLT_DATE = #fltDate#  
				<isNotEmpty property="defaultCarrCode" prepend="AND" >
						FLT.CARR_CODE = #defaultCarrCode# 
				</isNotEmpty>
				<isNotEmpty property="carrCode" prepend="AND" > 
					FLT.CARR_CODE = #carrCode# 
					<isNotEmpty property="fltNo" prepend="AND" >
						FLT.FLT_NO = NVL(#fltNo#, FLT.FLT_NO)
					</isNotEmpty>
				</isNotEmpty>
				<isEmpty property="fltNo">
					<isNotEmpty property="loginCarrier">
						AND	(FLT.CARR_CODE = #loginCarrier# OR FLT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
						WHERE GRP_CARR_CODE	= #loginCarrier#))							
					</isNotEmpty>
				</isEmpty>
				ORDER BY TO_CHAR(FLT.SCH_TIME,'0000')
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_discrepancy_getDiscrepancy" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
			SELECT 
				SHP.FLT_KEY as fltKey ,
				SHP.FLT_DATE as fltDate,
				SHP.FLT_DATE_DISPLAY as fltDateDisplay,
				PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata, 
				SHP.FFM as ffm, 
				SHP.CAR as car, 
				SHP.CIR as cir,
				FLT.ORIG as orig,
				FLT.DEST as dest
			FROM
				(
					SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,
					SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' THEN 1 ELSE 0 END) AS FFM, 
					SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CAR,
					SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR
					FROM IMP_CAR_SHP A, IMP_CAR_AWB B
					WHERE A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
					AND CATALOG NOT IN ('TA') 
					GROUP BY FLT_KEY, FLT_DATE
				) SHP
				JOIN FLT_OPR FLT ON 
					FLT.FLT_KEY = SHP.FLT_KEY AND 
					FLT.SCH_DATE = SHP.FLT_DATE AND 
					FLT.FLT_TYPE = 'A'
			WHERE
				CIR > 0 AND				
				SHP.FLT_DATE = #fltDate#  AND
				SHP.FLT_KEY = #fltKey# 
				ORDER BY TO_CHAR(FLT.SCH_TIME,'0000')
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_discrepancy_getShpIrrList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			B.ACCS_HANDLER as accsHandler,
			A.CIR_RMK as cirRmk,
			A.CIR_PROC_USER as userID,
			A.CIR_PROC_USER as displayUserId,
			TO_CHAR(A.CIR_PROC_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
		WHERE CATALOG NOT IN ('TA') AND
			A.CIR_PROC_USER is not null AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.FLT_KEY = #fltKey#   AND
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  = #fltDate#				
		ORDER BY A.AWB_NO	
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getShpIrrBO"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			nvl(ca.HDLG_AGENT, 'CPCT') as accsHandler,			
			A.CIR_RMK as cirRmk,
			A.CR_USER_ID as userID,
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
			LEFT JOIN CST_AWB CA ON A.AWB_NO = CA.AWB_NO AND A.FLT_KEY = CA.FLT_KEY AND A.FLT_DATE = CA.FLT_DATE
		WHERE 
			(A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT 
	        or A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND
			A.FLT_KEY = #fltKey#   AND
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  = #fltDate#
   	</select>
   	<select id="imp_discrepancy_getOtherList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			B.ACCS_HANDLER as accsHandler,
			A.CIR_RMK as cirRmk,
			A.CR_USER_ID as userID,
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
		WHERE 
			(A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT 
	        or A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND
			(A.FLT_KEY != #fltKey#   OR
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  != #fltDate#)
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getHouseCirList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.HouseCirBO">
		SELECT
   		HAWB_NO as hawbNo, 
   		decode (HCIR_PCS, '', '', NULL, '', 0, '', (HCIR_PCS ||'/'||HCIR_PCS_TYPE)) as hseCirPcsType,
   		decode (HCIR_WT, '', '', NULL, '', 0, '', (HCIR_WT ||'/'||HCIR_WT_TYPE)) as hseCirWtType,
   		NVL(HAWB_BRKDN_PCS,0) ||'/'||NVL(HAWB_BRKDN_WT,0) as bdPcsWt, 
   		HCIR_RMK as hseCirRem 
  		FROM IMP_HAWB_STRG_DTL
  		WHERE  FLT_KEY = #fltKey# and FLT_Date = #fltDate# AND AWB_NO = #awbNo# AND AWB_Date = #awbDate#
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getHouseOtherList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.HouseCirBO">
		select NVL(SUM(HCIR_PCS),0) as otherHcirPcs,NVL(SUM(HAWB_BRKDN_PCS),0) as otherbdPcs,
   		NVL(SUM(HCIR_WT),0) as otherHcirwt,NVL(SUM(HAWB_BRKDN_WT),0) as otherbdwt
  		FROM IMP_HAWB_STRG_DTL WHERE AWB_NO = #awbNo# AND AWB_Date = #awbDate# and FLT_KEY != #fltKey# and FLT_Date != #fltDate# and HAWB_NO=#hawbNo#
   	</select>
   	
 <!--flight discrepancy  -->


	<!-- ##################### Cargo Damage Report: Start ###############################################-->	

	<!-- Updated for fix 12533. Sanket 15SEP14 -->
	<select id="getCargoDamageList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgLstBO">
		SELECT 
			shp.FLT_KEY AS flightKey,
			TO_CHAR(shp.FLT_DATE, 'DDMONYY') AS flightDate,
			shp.damageNumber,
			pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') ata,
			ORIG AS origin, 
			DEST AS destination, 
			WTHR_COND AS weather
		FROM (SELECT FLT_KEY, FLT_DATE, count(1) AS damageNumber
			 		FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null GROUP BY FLT_KEY, FLT_DATE) shp
		JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A'
		WHERE damageNumber > 0 AND shp.FLT_DATE = #flightDate# 
		<isNotEmpty property="defaultCarrierCode" prepend="AND" >
			(flt.CARR_CODE = #defaultCarrierCode# or flt.CARR_CODE in (select carr_code from mast_carr_grp 
			where grp_carr_code	= #defaultCarrierCode#))
		</isNotEmpty>
		<isNotEmpty property="loginCarrier">
			AND	(flt.CARR_CODE = #loginCarrier# OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
			WHERE GRP_CARR_CODE	= #loginCarrier#))							
		</isNotEmpty>
	</select>

	<select id="getCargoDamageDetailsForShipmentList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgLstBO">
		SELECT 
			shp.FLT_KEY AS flightKey,
			TO_CHAR(shp.FLT_DATE, 'DDMONYY') AS flightDate,
			shp.damageNumber,
			pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') ata,
			ORIG AS origin, 
			DEST AS destination, 
			WTHR_COND AS weather
		FROM (SELECT FLT_KEY, FLT_DATE, count(1) AS damageNumber
			 		FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null GROUP BY FLT_KEY, FLT_DATE) shp
		JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A'
		WHERE damageNumber > 0 AND shp.FLT_DATE = #flightDate# 
			AND shp.FLT_KEY = #flightKey#
	</select>

	<!--  Changed for QR -->
	<select id="getCargoDamageShipmentList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgShpmntLstBO">
		SELECT 
			shp.AWB_No AS awbNumber, 
			TO_CHAR(shp.AWB_Date, 'DDMONYY') AS awbDate,
			CONTENT AS content,
			DAM_REF_NO AS referenceNumber,
			DAM_DECL_PCS AS damagePieces,
			DAM_DECL_WT AS damageWeight,
			(case
	         when (select count(1) from awb_inventory ai where ai.awb_no=shp.AWB_No and ai.awb_date=shp.AWB_Date and upper(dam_type)='MAJOR') >= 1
	         then 'Major'
	         when (select count(1) from awb_inventory ai where ai.awb_no=shp.AWB_No and ai.awb_date=shp.AWB_Date and upper(dam_type)='MINOR') >= 1
	         then 'Minor'
	         else ''
	         end) AS damtype,
   			DAM_RMK AS damageRemarks,
			DAM_PROC_USER AS processedUser,
			to_char(DAM_PROC_DATE, 'DDMONYY HH24:MI') AS processedDate   
		FROM IMP_CAR_SHP shp 
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE DAM_PROC_USER is not null	 
	    AND shp.FLT_KEY = #flightKey# 
		AND shp.FLT_DATE = #flightDate#
		ORDER BY shp.AWB_No
	</select>

	<select id="getCargoDamageDetails1"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtBO">
		SELECT 
			a.AWB_NO AS awbNumber,
			TO_CHAR(a.AWB_DATE, 'DDMONYY') AS awbDate,
			TO_CHAR(a.FLT_DATE, 'DDMONYY') AS flightDate,
			a.FLT_KEY AS flightKey, 
			pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A') AS ata,  
			a.MANIFEST_PCS AS manifestPieces, 
			a.MANIFEST_WT AS manifestWeight,
			a.DAM_PCS AS damagePieces,
			a.DAM_WT AS damageWeight, 
			a.DAM_REF_NO AS referenceNumber,
			a.DAM_DECL_PCS AS damageDeclaredPieces,
			a.DAM_DECL_WT AS damageDeclaredWeight,
			b.ACCS_HANDLER AS accsHandler,
			b.AWB_PCS AS awbPieces,
			b.AWB_WT AS awbWeight, 
			b.CONTENT AS content,
			a.DAM_RMK AS awbRemarks,
			b.CONSOLE_IND cnslInd,
			((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNumber# AND AWB_DATE = #awbDate#) )) AS transactionId
		FROM IMP_CAR_SHP a, IMP_CAR_AWB b
		WHERE a.AWB_NO = #awbNumber#
			AND to_date(a.AWB_DATE) = #awbDate#
			AND a.FLT_DATE = #flightDate#
			AND a.FLT_KEY = #flightKey#
			AND a.AWB_NO = b.AWB_NO 
			AND a.AWB_DATE = b.AWB_DATE
	</select>

	<select id="getCargoDamageDetails2"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtCndtnBO">
		SELECT
			a.DAM_PCS AS damagePieces,
			b.CODE_DESC AS damageDescription
		FROM MAST_CODE_DTL b 
		LEFT JOIN IMP_AWB_STRG_DAM_COND a
			 ON a.DAM_COND = b.CODE 
				AND A.AWB_NO = #awbNumber#
				AND A.AWB_DATE = #awbDate#
				AND A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = #flightDate#
		WHERE b.CODE_TYPE = 'DAMAGE_CONDN'
		ORDER BY b.CODE_DESC
	</select>

	<select id="getCargoDamageDetails3"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgHsBO">
		SELECT 
			a.HAWB_NO AS hawbNumber,
			a.HAWB_BRKDN_PCS AS hawbBreakdownPieces,
			a.HAWB_BRKDN_WT AS hawbBreakdownWeight,
			a.DAM_PCS AS damagePieces,
			a.DAM_WT AS damageWeight,
			a.DAM_RMK AS damageRemarks
		FROM IMP_HAWB_STRG_DTL a
		WHERE A.AWB_NO = #awbNumber#
			AND A.AWB_DATE = #awbDate#
			AND A.FLT_KEY = #flightKey#
			AND A.FLT_DATE = #flightDate#
	</select>
	<select id="getcargodamagelocation"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtBO">
    select awb.FLT_KEY as flightKey,
 	TO_CHAR(awb.FLT_DATE,'DDMONYY') as flightDate,
 	awb.LOC_CODE as location,
 	decode(awb.LSP_NO,null, awb.ULD_KEY, awb.LSP_NO) lspno,
 	awb.LOCN_PCS as storagepcs,
 	awb.LOCN_WT as storagewts,
 	NVL(awb.DAM_PCS,'0') as dampcs,
 	NVL(awb.DAM_WT,'0') as damwts
    FROM AWB_INVENTORY awb  
    where awb.AWB_NO= #awbNumber# AND awb.AWB_DATE= #awbDate# and awb.DAM_IND = 'Y'
    </select>   
<!-- ##################### Cargo Damage Report : End   ###############################################-->	
 <!-- Inbound Consignment list Starts-->
<select id="imp_discrepancy_getFlightList" parameterClass="map"	resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
	   <![CDATA[
	   SELECT      SHP.FLT_KEY as fltKey ,
	     SHP.FLT_DATE as fltDate,     SHP.FLT_DATE_DISPLAY as fltDateDisplay,     
		 SUBSTR(TRIM(TO_CHAR(NVL(FLT.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(FLT.SCH_TIME,0),'0000')),3,4) AS sta,     
		 PKG_COMMON.get_flt_eta(FLT.FLT_KEY,FLT.SCH_DATE,'A')	AS eta,    
		 PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE,'A','DD')AS ata,
		 pkg_common.flt_ports(FLT.FLT_KEY,FLT.SCH_DATE) AS route,     
		 FLT.ACFT_REG_NO as reg,     
		 FLT.ACFT_TYPE  as type,     
		 SHP.FFM as ffm,      
		 SHP.CAR as car,      
		 FLT.ORIG as orig,
		 FLT.DEST as dest
		 FROM     (SELECT FLT_KEY,CARR_CODE,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,      
			 SUM(CASE WHEN NVL(FFM_FLG, 'N') ='Y' THEN 1 ELSE 0 END) AS FFM,       
			 SUM(CASE WHEN (NVL(CAR_CREATED, 'N') = 'Y' or RECD_PCS > 0) THEN 1 ELSE 0 END) AS CAR 
			 FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE,CARR_CODE     ) SHP     
		 JOIN FLT_OPR FLT ON       FLT.FLT_KEY = SHP.FLT_KEY AND       
		 FLT.SCH_DATE = SHP.FLT_DATE AND       FLT.FLT_TYPE = 'A' 
		 WHERE SHP.FLT_DATE = #fltDate# 	 
		]]>
		<isEqual property="fltKey" compareValue="%">					
			AND SHP.FLT_KEY LIKE #fltKey#								
		</isEqual>	
		<isNotEmpty property="carrCode">
		<isEmpty property="fltNo">
			AND SHP.CARR_CODE = #carrCode#
		</isEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="fltNo">
		<isEmpty property="carrCode">
			AND SHP.FLT_KEY like('%'|| #fltNo#)
		</isEmpty>
		</isNotEmpty>
		<isNotEmpty property="fltNo">
		<isNotEmpty property="carrCode">
			AND SHP.FLT_KEY=#fltKey#
		</isNotEmpty>
		</isNotEmpty>	
		<isEqual property="secondTime" compareValue="Y">
			AND SHP.FLT_KEY=#fltKey#
		</isEqual>	
		<isEmpty property="fltNo">
			<isNotEmpty property="loginCarrier">
				AND	(FLT.CARR_CODE = #loginCarrier#
				OR FLT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>
		ORDER BY sta
	</select>     
	
	<select id="imp_discrepancy_getFlightList_route" parameterClass="map"	resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
   <![CDATA[
  		SELECT 
  			DISTINCT OFF_POINT AS route    
  		FROM 
  			FLT_OPR_LEG 
  		WHERE 
  				FLT_TYPE = 'A' 
  			AND FLT_KEY = #fltKey# 
  			AND SCH_DATE = #fltDate# 	
	]]>
	</select>  
<select id="imp_cnsgn_locn_list" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT A.LOC_CODE as locCode,A.LOCN_PCS as locnPcs,TRIM(TO_CHAR(NVL(A.LOCN_WT,0), '9999999990D9'))  as locnWt,NVL(A.ULD_KEY,A.LSP_NO) as deviceNum,
		DECODE(NVL(U.REF_NET_WT,L.REF_NET_WT),'','N/A',null,'N/A',TRIM(TO_CHAR(NVL(NVL(U.REF_NET_WT,L.REF_NET_WT),0), '9999999990D9'))) as refWt 
		FROM AWB_INVENTORY A
		LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
		LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
		WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select> 
<select id="imp_cnsgn_post_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_SRF A,IMP_SRF_FLT B WHERE B.SRF_NO = A.SRF_NO AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.STATUS='POSTED'
	</select>
	<select id="imp_cnsgn_devicecolor_record" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM(SELECT DISTINCT AWB_NO FROM AWB_INVENTORY WHERE (ULD_KEY =#deviceNum# OR LSP_NO=#deviceNum#))
	</select>
	<select id="imp_cnsgn_ttif_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	    SELECT COUNT(1) FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE DS.TR_NO      =DTL.TR_NO AND DM.TR_NO      = DTL.TR_NO AND dtl.trf_type IN ('TT','IF')
    AND DM.DDT_STATUS = 'P' AND DS.AWB_NO=#awbNo# AND DS.AWB_DATE=#awbDate#
	</select>
	<select id="imp_cnsgn_nullrefwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	<![CDATA[ 
	SELECT COUNT(1) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate# 
	AND ((a.uld_key is not null and U.REF_NET_WT IS NULL)  OR 
        (a.lsp_no is not null and L.REF_NET_WT IS NULL) or
        (a.uld_key is null and a.lsp_no is null))
	]]>
	</select>
	<select id="imp_cnsgn_shcconfig_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB AWB,MAST_SPL_HAND_CODE SPL WHERE 
    SPL.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
    AND NVL(SPL.REF_WT_REQ,'N') = 'Y' AND AWB.AWB_NO=#awbNo# AND AWB.AWB_DATE=#awbDate#
	</select>
	<select id="imp_cnsgn_buildup_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_INVENTORY A WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE=#awbDate# AND FLT_TYPE = 'E'
	</select>
	<select id="imp_cnsgn_postct_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_TRM_HD H JOIN IMP_TRM_DTL D ON H.TRM_NO = D.TRM_NO 
			 	  WHERE H.VOID_USER IS NULL AND D.AWB_NO = #awbNo# AND D.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND STATUS = 'POSTED'
	</select>
        <select id="imp_cnsgn_totalrefwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(SUM(NVL(NVL(U.REF_NET_WT,L.REF_NET_WT),0)), '9999999990D9')) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select>
	<select id="imp_cnsgn_totalmanfwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(NVL(SUM(A.manifest_wt),0),'9999999990D9')) as refWt FROM IMP_CAR_SHP A
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select>
	<select id="imp_cnsgn_configrefwtvar_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='REFERENCE_WT_CONFIG'
	</select>	
	<select id="imp_discrepancy_getAwbList" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		<![CDATA[ 
		SELECT
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			rtrim(B.AWB_ORIGIN || '/' || B.AWB_DEST, '/') as origDest, 
			UPPER(B.CONTENT) as content, 
			case WHEN (B.CONTENT like 'CONS%') THEN 'Y' ELSE 'N' end as consl,
			B.CONSOLE_IND as conslind,
			(SELECT sum(HAWB_PCS) FROM EDI_FHL_HAWB where TR_NO =  
			(select MAX(TR_NO) From EDI_FHL where AWB_NO=A.AWB_NO and TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(A.AWB_DATE, 'DDMONYY')) ) as hawbPCS,			
			AB.SPL_CODE1 as splCode1, 
			AB.SPL_CODE2 as splCode2,
			AB.SPL_CODE3 as splCode3, 
			AB.SPL_CODE4 as splCode4,
			AB.SPL_CODE5 as splCode5, 
			AB.SPL_CODE6 as splCode6,
			AB.SPL_CODE7 as splCode7, 
			AB.SPL_CODE8 as splCode8,
			AB.SPL_CODE9 as splCode9,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
			WHERE V.FLT_KEY = A.FLT_KEY AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
			B.CATALOG as catalog,
			B.APPNTD_AGENT as appntdAgent,
			NVL(I.INV_PCS,0) || '/' || TRIM(TO_CHAR(NVL(I.INV_WT,0), '9999999990D9')) as invPcsWt,
			NVL(B.AWB_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(B.AWB_WT,0), '9999999990D9')) as awbPcsWt, 
			(NVL(A.MANIFEST_PCS,0) || '/' || TRIM(TO_CHAR(NVL(A.MANIFEST_WT,0), '9999999990D9'))) as manfPcsWt,
			NVL(A.RECD_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(A.RECD_WT,0), '9999999990D9'))  as bdPcsWt,
			A.BULK_PCS as manfBulkPcs,
     		TRIM(TO_CHAR(NVL(A.BULK_WT,0), '9999999990D9')) as manfBulkWt, 
			NVL(A.BUP_PCS,0) as manfBupPcs,
			NVL(A.BUP_WT,0)  as manfBupWt,
			CASE WHEN B.CATALOG = 'TA' THEN 0
				ELSE CASE WHEN A.CIR_WT_TYPE IS NULL THEN case when nvl(A.PPK_TYPE,'B') != 'P' then RECD_WT else 0 end 
			 		ELSE NVL(A.BULK_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BULK_WT,0) ELSE NVL(A.CIR_BULK_WT,0) END END END as bdBulkWt, 
			CASE WHEN B.CATALOG = 'TA' THEN 0
				 ELSE CASE WHEN  A.CIR_WT_TYPE IS NULL THEN case when nvl(A.PPK_TYPE,'B') = 'P' then RECD_WT else 0 end	 
						ELSE NVL(A.BUP_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BUP_WT,0) ELSE NVL(A.CIR_BUP_WT,0) END END END as bdBupWt,
			rtrim(AI.LOC_CODE, '/') || CASE WHEN INV_COUNT > 1 THEN '(+)' END  as whDestLocn,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam,
			ltrim(NVL(S.PCS, TR.PCS) || '/' || NVL(S.WT, TR.WT), '/') as srfTrmPcsWt,
			NVL(A.CAR_CREATED,'N') as carYN,
		      (case when B.awb_pcs <> A.MANIFEST_PCS then 'Y'  else 'N' end ) partShpYN,
		      DECODE(A.DOC_DISC,null,null,SUBSTR(A.DOC_DISC,1,1)) docDisc,
		      ( Case when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
		      when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
		      when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
		      END) as trfType,
		      (CASE WHEN 
		      (select count(1) from cust_company where code=B.AGENT_CUST_NO AND NVL(virtual_cr_acc,'N') = 'Y')>0 then 'Y'
		      ELSE Case when
		      (SELECT count(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=B.AGENT_CUST_NO AND nvl(upper(Status),'**') <> 'VOID'
		      AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(A.CARR_CODE ),'**') ) > 0
	          AND ((B.CATALOG IN ('IG','IS') AND (CR_TYPE='Import_GEN' OR CR_TYPE='GEN'))
	          	OR (B.CATALOG ='IO' AND (CR_TYPE='Import_OBC' OR CR_TYPE='GEN'))) 
		      AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
				<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
				>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) )>0 then 'Y'
	          ELSE CASE WHEN 
	          (SELECT count(1) FROM cust_agent_level_crd WHERE CUST_NO=B.AGENT_CUST_NO   AND nvl(upper(Status),'**') <> 'VOID' 
				AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
				<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
				>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) )>0 then 'Y'
	          ELSE 'N' 
		      END END END) as airlCrYN,
		      (CASE WHEN B.CATALOG LIKE 'T%' THEN
			  'T'
			  ELSE
			  'I'
			  END) awbType,
			  (CASE WHEN 'IMX' IN (B.SPL_CODE1,
			  B.SPL_CODE2 ,
			  B.SPL_CODE3,
			  B.SPL_CODE4 ,
			  B.SPL_CODE5,
			  B.SPL_CODE6,
			  B.SPL_CODE7,
			  B.SPL_CODE8 ,
			  B.SPL_CODE9) THEN
			  1 
			  WHEN
			  'IMR' IN (B.SPL_CODE1,
			  B.SPL_CODE2 ,
			  B.SPL_CODE3,
			  B.SPL_CODE4 ,
			  B.SPL_CODE5,
			  B.SPL_CODE6,
			  B.SPL_CODE7,
			  B.SPL_CODE8 ,
			  B.SPL_CODE9) THEN
			  1
			  ELSE 
			  2 
			  END ) displayOrd,
			   (SELECT CASE WHEN (SELECT count(1) FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = A.AWB_NO and xt.AWB_DATE = A.AWB_DATE and xt.IMP_FLT_KEY = A.flt_key and xt.IMP_FLT_DATE = A.flt_date ) > 0 then 'Y' else 'N' end  from dual) as xtShpFlg 
		      ]]>
		FROM IMP_CAR_AWB B, IMP_CAR_SHP A
		LEFT JOIN 
		(SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT, 
		 SUM(DECODE(LOC_CODE, NULL, 0, 1)) LOCN_COUNT, count(1) INV_COUNT
			FROM AWB_INVENTORY 
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON A.AWB_NO = I.AWB_NO AND
			A.AWB_DATE = I.AWB_DATE AND
			A.FLT_KEY = I.FLT_KEY AND
			A.FLT_DATE = I.FLT_DATE
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = I.SEQ_NO
		LEFT JOIN AWB AB ON AB.AWB_NO = A.AWB_NO AND  AB.AWB_DATE = A.AWB_DATE
		LEFT JOIN 
		(SELECT SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, SUM(SR.SRF_PCS) PCS, SUM(SR.SRF_WT) WT			  
			FROM IMP_SRF SR 
			join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
			WHERE ((SR.SRF_EXPY_DATE > sysdate and SR.STATUS ='ISSUED') or SR.STATUS ='POSTED' or
				   SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))    
			GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE
		) S ON A.AWB_NO = S.AWB_NO AND
			A.AWB_DATE = S.AWB_DATE AND
			A.FLT_KEY = S.FLT_KEY AND
			A.FLT_DATE = S.FLT_DATE
		LEFT JOIN 
		(SELECT D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE, SUM(D.PCS) PCS, SUM(D.WT) WT		
			FROM IMP_TRM_DTL D
			JOIN IMP_TRM_HD H ON H.TRM_NO = D.TRM_NO
			WHERE H.VOID_DATE IS NULL
			GROUP BY D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE
		) TR ON
			A.AWB_NO = TR.AWB_NO AND
			A.AWB_DATE = TR.AWB_DATE AND
			A.FLT_KEY = TR.FLT_KEY AND
			A.FLT_DATE = TR.FLT_DATE		
		WHERE 
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO AND
			A.FLT_KEY = #fltKey# AND
			A.FLT_DATE  = #fltDate#
			<isNotEmpty property="loginCarrier">
				   AND ( A.carr_code = #loginCarrier# OR  A.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            </isNotEmpty>  
            <isEqual property="xtShpFlg" compareValue="Y">
     		<![CDATA[
	 			 AND  EXISTS (SELECT NULL FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = A.AWB_NO and xt.AWB_DATE = A.AWB_DATE and xt.IMP_FLT_KEY = A.flt_key and xt.IMP_FLT_DATE = A.flt_date )
      		 	]]>
    		 </isEqual>          		
		ORDER BY awbtype,displayOrd,awbNo
	</select>   

<select id="imp_discrepancy_getAgentList" parameterClass="map"
	resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	SELECT
		B.AGENT_CUST_NO as agentCustNo, b.APPNTD_AGENT as appntdAgent,
		COUNT (B.AWB_NO) as cnt
	FROM IMP_CAR_SHP A, IMP_CAR_AWB B
	LEFT JOIN CUST_COMPANY C ON B.AGENT_CUST_NO = C.CODE  
	WHERE (NVL(A.CAR_CREATED, 'N') = 'Y' or A.RECD_PCS > 0) AND
		A.AWB_DATE = B.AWB_DATE AND
		A.AWB_NO   = B.AWB_NO AND
		A.FLT_KEY = #fltKey# AND
		A.FLT_DATE  = #fltDate# 
	GROUP BY B.AGENT_CUST_NO, b.APPNTD_AGENT
	ORDER BY b.APPNTD_AGENT ASC
</select>
<select id="imp_discrepancy_getAgentAwbList" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			rtrim(B.AWB_ORIGIN || '/' || B.AWB_DEST, '/') as origDest, 
			UPPER(B.CONTENT) as content, 
			case WHEN (B.CONTENT like 'CONS%') THEN 'Y' ELSE 'N' end as consl,
			 B.CONSOLE_IND as conslind,
			(SELECT sum(HAWB_PCS) FROM EDI_FHL_HAWB where TR_NO =  
			(select TR_NO From EDI_FHL where AWB_NO=A.AWB_NO and TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(A.AWB_DATE, 'DDMONYY')) ) as hawbPCS,
			B.SPL_CODE1 as splCode1, 
			B.SPL_CODE2 as splCode2,
			B.SPL_CODE3 as splCode3, 
			B.SPL_CODE4 as splCode4,
			B.SPL_CODE5 as splCode5, 
			B.SPL_CODE6 as splCode6,
			B.SPL_CODE7 as splCode7, 
			B.SPL_CODE8 as splCode8,
			B.SPL_CODE9 as splCode9,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
			WHERE V.FLT_KEY = A.FLT_KEY AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
			B.CATALOG as catalog,
			B.APPNTD_AGENT as appntdAgent,
			NVL(I.INV_PCS,0) || '/' || TRIM(TO_CHAR(NVL(I.INV_WT,0), '9999999990D9')) as invPcsWt,
			NVL(B.AWB_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(B.AWB_WT,0), '9999999990D9')) as awbPcsWt, 
			(NVL(A.MANIFEST_PCS,0) || '/' || TRIM(TO_CHAR(NVL(A.MANIFEST_WT,0), '9999999990D9'))) as manfPcsWt,
			NVL(A.RECD_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(A.RECD_WT,0), '9999999990D9'))  as bdPcsWt,
	    	A.BULK_PCS as manfBulkPcs,
     		TRIM(TO_CHAR(NVL(A.BULK_WT,0), '9999999990D9')) as manfBulkWt, 
			NVL(A.BUP_PCS,0) as manfBupPcs,
			NVL(A.BUP_WT,0)  as manfBupWt,
			CASE WHEN B.CATALOG = 'TA' THEN 0
				ELSE CASE WHEN A.CIR_WT_TYPE IS NULL THEN RECD_WT
			 		ELSE NVL(A.BULK_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BULK_WT,0) ELSE NVL(A.CIR_BULK_WT,0) END END END as bdBulkWt, 
			CASE WHEN B.CATALOG = 'TA' THEN 0
				 ELSE CASE WHEN  A.CIR_WT_TYPE IS NULL THEN 0	 
						ELSE NVL(A.BUP_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BUP_WT,0) ELSE NVL(A.CIR_BUP_WT,0) END END END as bdBupWt,
			rtrim(AI.LOC_CODE, '/') || CASE WHEN INV_COUNT > 1 THEN '(+)' END  as whDestLocn,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam,
			ltrim(NVL(S.PCS, TR.PCS) || '/' || NVL(S.WT, TR.WT), '/') as srfTrmPcsWt
		FROM IMP_CAR_AWB B, IMP_CAR_SHP A
		LEFT JOIN 
		(SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT, 
				SUM(DECODE(LOC_CODE, NULL, 0, 1)) LOCN_COUNT, count(1) INV_COUNT
			FROM AWB_INVENTORY 
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON A.AWB_NO = I.AWB_NO AND
			A.AWB_DATE = I.AWB_DATE AND
			A.FLT_KEY = I.FLT_KEY AND
			A.FLT_DATE = I.FLT_DATE
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = I.SEQ_NO
		LEFT JOIN 
		(SELECT SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, SUM(SR.SRF_PCS) PCS, SUM(SR.SRF_WT) WT			  
			FROM IMP_SRF SR 
			join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
			WHERE ((SR.SRF_EXPY_DATE > sysdate and SR.STATUS ='ISSUED') or SR.STATUS ='POSTED' or
				   SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))    
			GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE
		) S ON A.AWB_NO = S.AWB_NO AND
			A.AWB_DATE = S.AWB_DATE AND
			A.FLT_KEY = S.FLT_KEY AND
			A.FLT_DATE = S.FLT_DATE
		LEFT JOIN 
		(SELECT D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE, SUM(D.PCS) PCS, SUM(D.WT) WT		
			FROM IMP_TRM_DTL D
			JOIN IMP_TRM_HD H ON H.TRM_NO = D.TRM_NO
			WHERE H.VOID_DATE IS NULL
			GROUP BY D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE
		) TR ON
			A.AWB_NO = TR.AWB_NO AND
			A.AWB_DATE = TR.AWB_DATE AND
			A.FLT_KEY = TR.FLT_KEY AND
			A.FLT_DATE = TR.FLT_DATE		
		WHERE
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO AND
			A.FLT_KEY = #fltKey# AND
			A.FLT_DATE  = #fltDate# AND
			B.APPNTD_AGENT = #agentCustName#
		ORDER BY A.AWB_NO
	</select> 
	<select id="imp_trucker_getCustCompany"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
		SELECT 
			   CODE_DESC as codeDesc,
			   CODE as code,
			   CO_IATA_CODE as coIataCode,
			   CARR_CODE as carrCode,
			   TEL_IMP1 as telImp1,
			   TEL_IMP2 as telImp2,
			   FAX1 as fax1,
			   FAX2 as fax2,
			   EMAIL1 as email1,
			   EMAIL2 as email2,
			   DBMS_RANDOM.VALUE(50000,300000) as totalOSPayment
		FROM CUST_COMPANY
		WHERE CODE = #code#
   	</select>

<select id="imp_trucker_getCustIssueNotyCompany"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
		SELECT 
			   CODE_DESC as codeDesc,
			   CODE as code,
			   CO_IATA_CODE as coIataCode,
			   CARR_CODE as carrCode,
			   TEL_IMP1 as telImp1,
			   TEL_IMP2 as telImp2,
			   FAX1 as fax1,
			   FAX2 as fax2,
			   EMAIL1 as email1,
			   EMAIL2 as email2,
			   DBMS_RANDOM.VALUE(50000,300000) as totalOSPayment
		FROM CUST_COMPANY			
		WHERE CODE_DESC = #codeDesc#
   	</select>
   		
   	<select id="imp_trucker_getCustContact" parameterClass="map" 
   		resultClass="cargo.cms.imprt.bo.CustContactBO">
	   	SELECT EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3 FROM CUST_CONTACT 
	   	WHERE CUST_NO=#code# AND CONTACT_TYPE = 'ECA'
   	</select>
   	
   	
<!-- Inbound Consignment list Ends -->


<!-- ULD Breakdown status :: Santosh Desai:: starts -->

		<select id="imp_brk_uldstatuslist"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		 SELECT 
			    TR_NO                                              AS trNo        ,
			    DOC_LINE_NO                                        AS docLineNo   ,
			    FLT_NO                                             AS flightNo    ,
			    FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    CARR_CODE										   AS carrierCode,
			    ULD_KEY                                            AS uldKey      ,			   
			    TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate ,			   
			    CHKIN_YN  										   AS checkInStatus,			    
			    TO_CHAR(BRKDN_START_DATE,'DDMONYY')			   	   AS bdStartDate,			    
			    TO_CHAR(BRKDN_START_DATE,'HH24') 				   AS bdStartTimeHH,
       			TO_CHAR(BRKDN_START_DATE,'MI') 					   AS bdStratTimeMI,   		    
			    BRKDN_START_USER_ID								   AS bdStartUser,			           								   
			    BRKDN_COMPL_YN									   AS breakDownCompl,
			    TO_CHAR(BRKDN_COMPL_DATE,'DDMONYY')			   	   AS bdComplDate,	
			    SUBSTR(TRIM(TO_CHAR(NVL(BRKDN_COMPL_TIME,0),'0000')),0,2) AS bdComplTimeHH,
          		SUBSTR(TRIM(TO_CHAR(NVL(BRKDN_COMPL_TIME,0),'0000')),3,2) AS bdComplTimeMI,  		   
			    BRKDN_COMPL_USER_ID								   AS bdComplUser,			    
			    ROW_NUMBER() OVER (ORDER BY FLT_NO) 			   AS serialNo,
			    (select ui.loc_code from uld_inventory ui where ui.uld_key =  IMP_RAMP_CHK_DTL.ULD_KEY and rownum=1 ) AS location,
			    (SELECT code_desc from mast_code_dtl where code = FUN_GET_ULD_STATE(ULD_KEY) and rownum=1) as uldState			  
			   	FROM IMP_RAMP_CHK_DTL		   
        	    WHERE			  
			   	FLT_NO    = #flightNo#
			  	AND CARR_CODE = upper(#carrierCode#)
			  	AND FLT_DATE = #flightDate#
			  	AND CHKIN_YN='Y'
			  	<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey#
				</isNotEmpty>	
				<![CDATA[ 
					and not exists (select null from uld_inventory where uld_key = IMP_RAMP_CHK_DTL.uld_key and TRANSIT_TYPE in ('IF','TT'))	
				]]>			    
	</select>


	<select id="imp_brk_uldstatusdetails"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		 SELECT 
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.CARR_CODE										   AS carrierCode,
			    dtl.ULD_KEY                                            AS uldKey      ,	
			    <!-- dtl.LOC_CODE									   AS location   , -->
			    dtl.CARGO_DAM										   AS cargoDamage,
			    dtl.DAM_IND											   AS damInd,
			    dtl.SER_IND											   AS servicableInd,
			    pkg_common.get_flt_ata(opr.flt_key, opr.sch_date,'A', 'DD')  AS ata,
			    (select ui.Empty_flg from uld_inventory ui where ui.uld_key =  dtl.ULD_KEY ) empty,		    
			    uld.WH_INSTRUCTION									   AS uldBDInstruction,
			    uld.HANDLING_MODE									   AS handlingMode,
			    uld.TRANSFER_TYPE									   AS transferType,
			    uld.TRANSIT_IND 									   AS transitInd,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate 		   
			    FROM IMP_RAMP_CHK_DTL	dtl
			   	LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
			   	JOIN FLT_OPR opr on dtl.FLT_KEY	 = opr.FLT_KEY   AND dtl.FLT_DATE = opr.SCH_DATE  AND	opr.FLT_TYPE = 'A'				
			   	WHERE			  
			   	dtl.FLT_KEY    = #flightKey#			  	
			  	AND dtl.FLT_DATE = #flightDate#			  	
				AND dtl.ULD_KEY = #uldKey#						    
	</select>	
	
	   
	
	<update id="imp_brk_uldbreak_start" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #lmUserId#,
			BRKDN_START_DATE = TO_DATE(#bdStartDateTime#,'DDMONYY HH24:MI'),					
			DAM_IND = #damInd#,
			BRKDN_LOCN = #location#,
			SER_IND = #servicableInd#,
			CARGO_DAM = #cargoDamage#,
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
	</update>

	<update id="imp_brk_uldbreak_unstart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = '',
			BRKDN_START_DATE = '',					
			DAM_IND = 'N',
			CARGO_DAM = 'N',
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
	</update>
	
	<update id="updateInvAfterBDUnStart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set DAM_IND = 'N',
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#
		 where uld_key = #uldKey#
	</update>
		
	<update id="imp_brk_uldbreak_complete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET		
			BRKDN_COMPL_YN ='Y',
			BRKDN_COMPL_DATE = to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),
			BRKDN_COMPL_TIME = to_Char(to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),'HH24MI'),						
			BRKDN_COMPL_USER_ID=#lmUserId#,
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 	
		WHERE 	FLT_KEY    = #flightKey#			  	
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					   
	</update>
		
	<select id="sqlCheck_NOT_Transituld_HANDMODE_NBK_PPK" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and not (TRANSIT_FLG='Y' and (HANDLING_MODE='PPK' or HANDLING_MODE='NBK'))
	</select>
	
	<update id="updateInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set empty_flg=#empty#,
		  <isEqual property="empty" compareValue="Y">handling_mode = '',</isEqual>
			FLT_NO=NULL,
			FLT_TYPE=NULL,
			FLT_DATE=NULL,
			FLT_KEY=NULL,
			CARR_CODE=NULL,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#,
			transit_flg = decode(#empty#,'Y','N',transit_flg),
			transit_type = decode(#empty#,'Y',null,transit_type),
			CONTR_CODE = decode(#contourCodeRemoveInd#,'Y',null,CONTR_CODE),
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate
		 where uld_key = #uldKey#
	</update>
	
	<select id="checkAwbInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO" resultClass="java.lang.Integer">
	  select count(1) from awb
	  join awb_inventory awbInv on awbInv.awb_no = awb.awb_no and  awbInv.awb_date = awb.awb_date
	  where awb.awb_type = 'T' and awbInv.uld_key = #uldKey#
	</select>
	
	<update id="updateInvAfterCheckAwbInvBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
			set transit_flg = #transitIndYN#,
			CONTR_CODE = decode(#contourCodeRemoveInd#,'Y',null,CONTR_CODE),
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate
		where uld_key = #uldKey#
	</update>
	
	<select id="getRampCheckINEmptyFlag" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO" resultClass="java.lang.String">
		SELECT empty_ind FROM imp_ramp_chk_dtl WHERE FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY = #flightKey# AND ULD_KEY = #uldKey#
	</select>			
	
	
	<update id="updateInvAfterBDUnComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set FLT_NO=IMP_FLT_NO,
			FLT_TYPE=DECODE(IMP_FLT_KEY,'','','I'),
			FLT_DATE=IMP_FLT_DATE,
			FLT_KEY=IMP_FLT_KEY,
			empty_flg = NVL(#empty#,empty_flg),
			CARR_CODE=IMP_FLT_CARR,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#,
			LM_USER_ID = #lmUserId#,
			LM_DATE =SYSDATE
		 where uld_key = #uldKey#
	</update>
	
	<update id="updateInvAfterBDStart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set DAM_IND = #damInd#,
			LOC_CODE = #location#,
			SER_IND = #servicableInd#,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#
		 where uld_key = #uldKey#
	</update>
	
	
	<update id="imp_brk_uldbreak_uncomplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET
			BRKDN_COMPL_YN ='N',
			BRKDN_COMPL_DATE =NULL,		
			BRKDN_COMPL_TIME =NULL,			
			BRKDN_COMPL_USER_ID=NULL,	
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype#
		WHERE 	FLT_KEY    = #flightKey#			  	
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
				AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>
	
	<select id="imp_brk_uld_awb_statuslist"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		<!--  select DISTINCT ddt.cntg_flt_key as cngFlightKey, TO_CHAR(ddt.cntg_flt_date,'DDMONYY') as cngFlightDate, 
        (select count(shp1.awb_no) from  DDT_SHP shp1 where shp1.udoc_line_no= ddt.doc_line_no) as awbCount,
        dtl.trf_wt as awbWt
		FROM DDT_ULD ddt,  DDT_SHP shp, DDT_SHP_TRF_DTL dtl
		where				 
		ddt.ULD_KEY=#uldKey# and
        ddt.DOC_LINE_NO = shp.UDOC_LINE_NO and 
        shp.UDOC_LINE_NO = dtl.SDOC_LINE_NO  -->
        
                  select SHP_CNTG_FLT_KEY as cngFlightKey, 
                  TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') as cngFlightDate,
                  COUNT(AWB_NO) as awbCount,
                  SUM(SHP_TRF_WT) as awbWt
                  from v_ddt_dtl DTL
                  where flt_key = #flightKey#
                  and TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#
                  and uld_key = #uldKey# 
                  GROUP BY SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE			    
	</select>
	
	<select id="imp_brk_uld_awbSHP_count"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"   
		resultClass="java.lang.Integer">	        
         SELECT COUNT(1)
		  FROM V_FFM_DTL V 		 
		  WHERE
			V.FLT_KEY = #flightKey# AND
			V.FLT_DATE = TO_DATE (#flightDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#       
    </select>
    
    <select id="imp_brk_uld_awbStrg_count"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="java.lang.Integer">	  
       select count(AWB_NO) as awbCount  
	   FROM (select DISTINCT AWB_NO
       FROM  IMP_AWB_STRG_DTL
       where                   
       CHKIN_ULD_KEY=#uldKey# and       
       TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and
       FLT_KEY=#flightKey#)       
    </select>
    
    <update id="imp_brk_uld_convert_uldmixprepack" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE ULD_INVENTORY	SET
			ULD_FLOW ='E',
			MIX_PPK_IND = 'Y',
			PPK_IND = 'N',
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate 		
		WHERE ULD_KEY = #uldKey#				
	</update>  
    
	
<!-- ULD Breakdown status :: Santosh Desai:: ends -->


<!-- Declare ULD BD Start :: Anup :: Starts -->
 	<select id="uld_Key_Search"	parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO"
			 resultClass="cargo.cms.imprt.bo.UldBDSearchBO">
		SELECT 
			ULD_KEY AS uldNo, (FLT_KEY || '/' || TO_CHAR(FLT_DATE,'DDMONYY')) AS fltNoDate, FLT_KEY as fltNo, 
			TO_CHAR(FLT_DATE,'DDMONYY') AS fltDt, TO_CHAR(CHKIN_DATE,'DDMONYY') AS chkInDate,ULD_KEY || '/' ||  (FLT_KEY || '/' || TO_CHAR(FLT_DATE,'DDMONYY')) selectULD 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE (ULD_No = #uldKey# or ULD_KEY = #uldKey#)AND BRKDN_COMPL_DATE IS NULL AND CHKIN_YN='Y'
	</select>
	
	<update id="update_imp_ramp_chk_dtls" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO">
		UPDATE IMP_RAMP_CHK_DTL 
			SET 
				CARGO_DAM=#cargoDamage#, 
				SER_IND=#serviceable#, 
				DAM_IND=#uldDamage#,
				BRKDN_LOCN=#location#,
				BRKDN_START_DATE=SYSDATE,
				BRKDN_START_USER_ID=#bdStartUserid#,
				TR_TYPE = #trtype# 
			WHERE 
				ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDate#
	</update>
	
	<update id="update_loc_uld_inventory" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO">
		UPDATE ULD_INVENTORY 
			SET 
				LOC_CODE=#location#,
				SER_IND=#serviceable#, 
				DAM_IND=#uldDamage#, 
				REF_TR_DATE=SYSDATE, 
				REF_TR_EVENT='BDS', 
				REF_TR_NO='28', 
				REF_TR_TYPE='BD',
				TR_TYPE = #trtype# 
			WHERE 
				ULD_KEY=#uldNo#
	</update>
	
	<select id="cargo_transhipment_dtls" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO" 
			resultClass="cargo.cms.imprt.bo.UldBDTransCargoBO">
			<!-- 
		SELECT 
			(c.CNTG_FLT_KEY || '/' || TO_CHAR(c.CNTG_FLT_DATE,'DDMONYY') || '/' || c.UNLDG_PT) AS CNTGFLTDT, 
			COUNT(b.AWB_NO) AS AWBCNT, 
			(CASE WHEN c.TRF_TYPE='QT' THEN 'Y' ELSE 'N' END) AS QTBU, 
			SUM(c.TRF_WT) AS WT 
		FROM 
			DDT_ULD a, DDT_SHP b, DDT_SHP_TRF_DTL c 
		WHERE 
			c.SDOC_LINE_NO=b.DOC_LINE_NO AND b.UDOC_LINE_NO=a.DOC_LINE_NO AND 
			a.ULD_KEY=#uldNo# 
			GROUP BY c.CNTG_FLT_KEY, c.TRF_TYPE, c.CNTG_FLT_DATE, c.UNLDG_PT-->
			
		select
            (SHP_CNTG_FLT_KEY || '/' || TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') || '/' || SHP_UNLDG_PT) AS CNTGFLTDT,
            COUNT(AWB_NO) AS AWBCNT,
            QT_BU AS QTBU,
            SUM(SHP_TRF_WT) AS WT       
            from v_ddt_dtl
            where FLT_KEY = #fltNo#
            AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')                 
            and uld_key = #uldNo# 
           GROUP BY SHP_CNTG_FLT_KEY,SHP_CNTG_FLT_DATE,SHP_UNLDG_PT,QT_BU 
	</select>
	
	<select id="valid_location_check" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CODE as locationCode 
		FROM 
			MAST_WH_LOC 
		WHERE 
			CODE = #location#
	</select>
	
	<select id="uld_chk_location" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
		SELECT ULD_KEY FROM ULD_INVENTORY WHERE LOC_CODE=#location# and uld_key <> #uldno# and (base_plt <> #uldno# or base_plt is null)
		]]>
	</select>
	
	<select id="uld_BD_instruction" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			WH_RMK WH_INSTRUCTION 
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
	
	<select id="uld_Handling_Code" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			HANDLING_MODE 
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
	
	<select id="checkULDInterfaceIF" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 select count(1) from uld_inventory where ULD_KEY = #uldNo# and TRANSIT_TYPE IN ('IF','TT')
	</select>
	
	<select id="imp_uld_flt_db_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 
			B.WHSE_COMPL_DATE 
		from 
			IMP_RAMP_CHK_DTL A, FLT_OPR_EVENTS B 
		where 
			B.FLT_KEY = A.FLT_KEY and B.SCH_DATE = A.FLT_DATE and  B.FLT_TYPE = 'A' and 
			A.ULD_KEY = #uldNo# AND A.FLT_KEY=#fltNo# AND A.FLT_DATE=#fltDt#
	</select>
	
	<select id="imp_uld_db_start_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 
			BRKDN_START_DATE 
		from 
			IMP_RAMP_CHK_DTL 
		where 
			ULD_KEY = #uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
 <!-- Declare ULD BD Start :: Anup :: Ends -->

 <!-- Queries for Breakdown Worksheet Starts -->

<!--  Changed for QR -->
<select id="getbreakdownlist"  parameterClass="cargo.cms.imprt.bo.BDQueryBO" resultClass="cargo.cms.imprt.bo.BDWorkSheetBO">
	SELECT RD.ULD_KEY AS uldNo,
                TO_CHAR(nvl(RD.BRKDN_START_DATE, RD.BRKDN_COMPL_DATE),'DDMONYY HH24:MI') AS startBD,
                DECODE( RTRIM(TO_CHAR(RD.BRKDN_COMPL_DATE,'DDMONYY')||SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),0,2) || ':' ||  
                SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),3,4)||'/'||RD.BRKDN_COMPL_USER_ID, '/'),'00:00','',RTRIM(TO_CHAR(RD.BRKDN_COMPL_DATE,'DDMONYY')||SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),0,2) || ':' ||  
                SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),3,4)||'/'||RD.BRKDN_COMPL_USER_ID, '/')) AS completedBD,   
                A.AWB_NO AS awbNo,  
                rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,
                SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
                SUBSTR(A.AWB_NO,4)  awbNoSuffix ,
                B.CONTENT AS content,
    pkg_common.get_awb_splcodes(A.AWB_NO, A.AWB_DATE, 'I') AS splcode,
    B.AWB_DEST AS dest, 
    A.LOC_CODE AS locn, 
                A.STRG_PCS AS pc,
                A.STRG_WT AS wt,
                A.LSP_NO AS lspNo,
                A.ULD_KEY AS uld2,
                A.TAG_NO AS tagNo,
                RD.DAM_RMK AS damage,
                RD.DAM_IND AS damageIndicator,
                DECODE((SELECT ULD_IMAGE_NAME FROM ULD_IMAGE where uld_key=RD.ULD_KEY and rownum=1),NULL,'N','Y') AS IMAGE,
            A.DAM_PC_DECL AS DAMAGEPC, 
            A.DAM_WT_DECL AS DAMAGEWT,
            A.DAM_COND AS DAMAGETYPE,  
            (SELECT ULD_IMAGE_NAME FROM ULD_IMAGE where uld_key=RD.ULD_KEY and rownum=1) AS transactionId
	FROM IMP_RAMP_CHK_DTL RD 
    	LEFT JOIN IMP_AWB_STRG_DTL A ON A.FLT_DATE = RD.FLT_DATE  AND A.FLT_KEY  = RD.FLT_KEY      AND A.CHKIN_ULD_KEY  = RD.ULD_KEY 
  		<!--  LEFT JOIN (SELECT FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, CHKIN_ULD_KEY, MIN(CR_DATE) START_DATE 
    					FROM IMP_AWB_STRG_DTL GROUP BY FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, CHKIN_ULD_KEY) M
    	ON M.CHKIN_ULD_KEY = A.CHKIN_ULD_KEY AND M.FLT_KEY = A.FLT_KEY AND M.FLT_DATE = A.FLT_DATE AND M.AWB_NO = A.AWB_NO AND M.AWB_DATE = A.AWB_DATE -->
  		LEFT JOIN IMP_CAR_AWB B ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE  
  WHERE (RD.BRKDN_COMPL_DATE IS NOT NULL OR A.FLT_KEY IS NOT NULL OR A.TAG_NO IS NOT NULL)
    <isNotEmpty prepend="AND" property="arrDate">
		RD.FLT_DATE = #arrDate#
		</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="fltNo">	
		RD.FLT_KEY = #fltNo#
		</isNotEmpty>	  
	  	<isNotEmpty prepend="AND" property="uldNo">
		RD.ULD_KEY = #uldNo#
		</isNotEmpty>	
	  	<isNotEmpty prepend="AND" property="cargoCatalog">
		(B.CATALOG = #cargoCatalog# or A.CATALOG = #cargoCatalog#)
		</isNotEmpty>	
	ORDER BY RD.ULD_KEY, A.AWB_NO
  </select>

<!--  Changed for QR -->
<select id="breakdownsummaryinfo"  parameterClass="cargo.cms.imprt.bo.BDQueryBO" resultClass="cargo.cms.imprt.bo.BreakDownSummaryBO">
	<![CDATA[
	SELECT PKG_COMMON.get_flt_ata(FLT_KEY,FLT_DATE,'A','DD') AS ata,SUM(STRG_PCS) AS totalPcs,SUM(STRG_WT)  AS totalWt FROM
  (
   SELECT 
   A.FLT_KEY,A.FLT_DATE,
   A.STRG_PCS,  
   A.STRG_WT
   FROM   IMP_AWB_STRG_DTL A,IMP_RAMP_CHK_DTL RD 
   WHERE 
   A.CHKIN_ULD_KEY  = RD.ULD_KEY AND 
   A.FLT_DATE = RD.FLT_DATE  AND 
   A.FLT_KEY  = RD.FLT_KEY AND
   (RD.BRKDN_COMPL_DATE IS NOT NULL OR A.FLT_KEY IS NOT NULL OR A.TAG_NO IS NOT NULL))
   where  FLT_DATE	  = #arrDate# 
   AND FLT_KEY = #fltNo#   group by FLT_KEY , FLT_DATE
	]]>
</select>

<!-- Queries for Breakdown Worksheet Ends -->

<!-- Query for Update/Enquire Damage ULD Remarks starts-->
<!--  Changed for QR -->
	<select id="imp_dmg_uld"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
		SELECT  A.FLT_KEY AS flightKey,
    A.FLT_NO AS flightNo , 
    A.CARR_CODE AS carrierCode ,
    TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
    A.TR_NO AS trNo,
    B.ULD_KEY AS uldKey,   B.ULD_NO as uldNo,  
    B.LOC_CODE AS wareHouseLoc,
    B.EIC_IND AS eic,
    B.EMPTY_IND AS empty,
    B.DAM_IND AS uldDamage,
    B.CARGO_DAM AS crgDamage,
    B.ser_ind AS condition,
    B.DAM_RMK AS damageRemark,
    B.DAM_RMK AS oldDamageRmk,
    B.DOC_LINE_NO AS docLineNo,
    B.ULD_CARR AS uldCarr,B.ULD_TYPE AS uldType,
    C.ORIG AS ladingPoint,
    C.DEST AS unladingPoint, 
    C.ACFT_REG_NO AS regn,
    (SELECT MAST_CODE_DTL.CODE_DESC FROM FLT_OPR, MAST_CODE_DTL WHERE  MAST_CODE_DTL.CODE_TYPE =  'WTH_CONDN' AND
             MAST_CODE_DTL.CODE  = FLT_OPR.WTHR_COND AND FLT_OPR.SCH_DATE =  A.FLT_DATE AND FLT_OPR.FLT_KEY =  A.FLT_KEY AND FLT_OPR.FLT_TYPE = 'A') AS weatherCondition,
    C.CARR_CODE AS owner,
    PKG_COMMON.get_flt_ata(C.FLT_KEY,C.SCH_DATE,'A') AS ata 
    FROM IMP_RAMP_CHK_HD A, IMP_RAMP_CHK_DTL B, FLT_OPR C
   WHERE  
     A.FLT_NO    = #flightNo# AND
     A.CARR_CODE  = upper( #carrierCode#) AND
     A.FLT_DATE  =  TO_DATE(#flightDate#,'DDMONYY') AND
     A.FLT_KEY   = C.FLT_KEY     AND
     A.FLT_DATE  = C.SCH_DATE      AND
     B.DAM_IND ='Y' AND
     A.TR_NO   = B.TR_NO     AND
     B.CHKIN_YN  = 'Y'      AND
     C.FLT_TYPE  = 'A'     
   ORDER BY    B.ULD_KEY
	</select>
	<update id="imp_upd_dmg_uld" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		UPDATE IMP_RAMP_CHK_DTL
			SET DAM_RMK = #damageRemark#,	    
			LM_USER_ID  = #lmUser#,	    
			LM_DATE     = sysdate 
		 WHERE
			TR_NO	 = #trNo#  AND
			ULD_KEY	 = #uldKey#
	</update>
	<select id="imp_uld_image"  parameterClass="cargo.cms.imprt.bo.ULDImageBO" resultClass="cargo.cms.imprt.bo.ULDImageBO">
		SELECT  
				ULD_KEY as uldKey,
				ULD_IMAGE_NAME as fileName
				
		FROM ULD_IMAGE WHERE ULD_KEY =#uldKey#
	</select>
	<insert id="imp_insertUldRmk" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		INSERT INTO ULD_RMK (ULD_TYPE,ULD_NO,ULD_CARR,TR_NO,TR_TYPE,DOC_LINE_NO,ULD_RMK,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EVENT_ID)
		VALUES( #uldType#,#uldNo#,#uldCarr# ,'19','DU',#docLineNo#,#damageRemark#, #uldKey#,#userID#,sysdate,#userID#,sysdate,'DU')
	</insert>
	<delete id="imp_uld_delete" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
	DELETE ULD_IMAGE WHERE ULD_KEY =#uldKey# AND ULD_IMAGE_NAME = #transactionId#
	</delete>
	<!--bug no 628  -->
	<update id="updUldInvnt" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		UPDATE ULD_INVENTORY
			SET DAM_RMK = #damageRemark#,	    
			LM_USER_ID  = #lmUser#,	    
			LM_DATE     = sysdate 
		 WHERE
			ULD_KEY	 = #uldKey#
	</update>
	<!-- Query for Update/Enquire Damage ULD Remarks ends-->	

 <!-- Post Breakdown Check List :: Anup :: Starts -->
 	<select id="imp_pfchl_checkFlight"  parameterClass="map"  
		resultClass="java.lang.Integer">
			SELECT count(1) FROM FLT_OPR WHERE 
				FLT_KEY=#fltKey#
				AND SCH_DATE = #fltDate# 
				AND FLT_TYPE='A'
   	</select>

	<select id="imp_pfchl_getShpIrrList"  parameterClass="cargo.cms.imprt.bo.DBDCSearchBO"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			B.AWB_DEST as dest, 
			UPPER(B.CONTENT) as cont, 
			NVL(B.CONSOLE_IND, 'N') as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(trim(to_char(B.AWB_WT, '9999990D99')),0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(trim(to_char(A.MANIFEST_WT, '9999990D99')),0) as manfPcsWt, 
			(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) || '/' || NVL(trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)) , '9999990D99')),0) as locnPcsWt, 
			(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) - NVL(A.MANIFEST_PCS,0) as discPcs,
			trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)) - NVL(A.MANIFEST_WT,0), '9999990D99')) discWt, 
			NVL(A.DAM_DECL_PCS,0) as damDecPcs,
			NVL(trim(to_char(A.DAM_DECL_WT, '9999990D99')),0) as damDecWt,
      		NVL(A.DAM_PCS,0) as damPcs,	NVL(trim(to_char(A.DAM_WT, '9999990D99')),0) as damWt,
          awbInv.lsp_no lspNo,
      case when countAwbInv > 0  OR countAwbLspInv > 0 then null else NVL(trim(to_char(ref_wt, '9999990D99')),0) end as refWt,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam, 
      		case when A.DAM_PROC_USER is not null AND A.DAM_PROC_DATE is not null then 'Y' else 'N' end as damDec, 
      		(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) as recdPcs,
      		trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)),'999999990D99')) as recdWt, 
      		case when (SELECT COUNT(1) FROM CST_BD_DISC D WHERE D.AWB_NO = B.AWB_NO AND D.AWB_DATE = B.AWB_DATE 
            AND D.FLT_KEY = A.FLT_KEY AND D.FLT_DATE = A.FLT_DATE) >0 then 'Y' else 'N' end AS bdsSubm
		FROM IMP_CAR_SHP A 
    	JOIN IMP_CAR_AWB B ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
    	LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
		Left join (select  awb_no,awb_date,flt_key,flt_Date, min(lsp_no) lsp_no , count(1) countAwbInv from awb_inventory where lsp_no is not null group by awb_no, awb_date, flt_key, flt_Date) awbInv
		                ON A.AWB_NO = awbInv.AWB_NO AND A.AWB_DATE = awbInv.AWB_DATE AND A.FLT_KEY = awbInv.FLT_KEY AND A.FLT_DATE = awbInv.FLT_DATE
		Left join lsp_inventory lspInv on lspInv.lsp_no = awbInv.lsp_no 
		Left join (select  lsp_no, awb_no , count(1) countAwbLspInv from awb_inventory group by lsp_no, awb_no) awbLspInv on awbLspInv.lsp_no = awbInv.lsp_no and awbLspInv.awb_no = awbInv.awb_no 
		WHERE 
			(A.MANIFEST_PCS != NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0) or A.MANIFEST_WT != NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)
	        or A.CIR_PROC_USER is not null) AND (A.CAR_CREATED = 'Y' or NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)  > 0) AND
			(B.CATALOG != 'TA' OR B.CATALOG IS NULL) AND
			A.FLT_KEY = #fltKey#    AND
			A.FLT_DATE  = #fltDate#
		ORDER BY A.AWB_NO
   	</select>
   	
   	<select id="imp_transit_mail_tag" parameterClass="cargo.cms.imprt.bo.DBDCSearchBO" 
   		resultClass="cargo.cms.imprt.bo.PostBDTransitMailBO">
   		SELECT 
   			TAG_NO as tagNo, ORIG as origin, DEST, 
   			ACT_PCS as actPcs, TO_CHAR(ACT_WT,'9999990D99') as actWt
   		FROM IMP_XPS_OBC_MAIL 
   		WHERE 
   			FLT_KEY = #fltKey# AND TRIM(TO_CHAR(FLT_DATE, 'DDMONYY')) = #fltDate# 
   			AND AWB_NO IS NULL  AND AWB_DATE IS NULL AND CATALOG='TM'
   	</select>
   	
   	<select id="imp_locn_discrepancy" parameterClass="map" resultClass="cargo.cms.imprt.bo.ShpIrrBO">
   		select 
   			TARGET as target, LOC_CODE as locCode, LSP_NO as lspNo 
   		from IMP_AWB_STRG_DTL 
   		where 
   			FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and 
   			AWB_NO = #awbNo# and AWB_DATE = #awbDate#
   	</select>
   	
   	<select id="fetchAwbLocations" parameterClass="map" resultClass="cargo.cms.imprt.bo.ShpIrrBO">
   		select LOC_CODE as locCode, LOCN_PCS || '/' || nvl(trim(to_char(LOCN_WT,'999999990D99')),0) as locnPcsWt, LSP_NO as lspNo, ULD_KEY as uldKey from awb_inventory 
        	where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO = #awbNo# and AWB_DATE = #awbDate# AND LOC_CODE IS NOT NULL
   	</select>
   	
   	
   	<select id="imp_ref_wt_with_lspno" parameterClass="java.lang.String" resultClass="java.lang.String">
   		select 
   			REF_WT 
   		from LSP_INVENTORY 
   		where 
   			LSP_NO = #lspNo#
   	</select>
 <!-- Post Breakdown Check List :: Anup :: Ends -->

 <!-- Enquire Collection Slot :: Anup :: Begins -->
 	 <select id="imp_search_booking_dtls" parameterClass="cargo.cms.imprt.bo.EnquireCollSlotSearchBO" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotBkgLstBO">
 		<![CDATA[
 		SELECT BOOKING_NO as bkgNo, 		  
					 TO_CHAR(CR_DATE, 'DDMONYY HH24:MI') as creationDt, 
			   RTRIM(nvl(TRUCK1,'') ||' , '|| nvl(TRUCK2,'') ||' , '|| nvl(TRUCK3,'') ||' , '|| nvl(TRUCK4,'') 
						||' , '|| nvl(TRUCK5,'') ||' , '|| nvl(TRUCK6,''),  ' , ') truckNo,         
			  case when  decode(TRUCK1,null,0,1) + decode(TRUCK2,null,0,1) + decode(TRUCK3,null,0,1) +
              decode(TRUCK4,null,0,1) + decode(TRUCK5,null,0,1) + decode(TRUCK6,null,0,1)  > 3 then '2' else '1' end noTruckDocks, 
				COLL_PERSON_NAME as collBy, TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDt,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStr, 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) bkgTimeSlotToStr,
				TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot,
				COLL_PERSON_ID as hkId, nvl(PHONE_NO,'') as phoneNo,
			   (select stragg(stringdelim(AWB_NO,', ')) from IMP_BOOKING_DTL where IMP_BOOKING_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO) awbNo ,			   
				nvl(TRUCK1,'')  truckNoOne,
				nvl(TRUCK2,'') truckNoTwo,  
				nvl(TRUCK3,'') truckNoThree ,  
				nvl(TRUCK4,'') truckNoFour,
				nvl(TRUCK5,'') truckNoFive, 
				nvl(TRUCK6,'') truckNoSix,
				COLLECT_ULD collectUld,
				DEL_ZONE deliveryZone
			FROM 
				IMP_BOOKING 
 		WHERE STATUS <> 'CANCEL'
 		]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			( Agent_id = #loginCustNo# or Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="agtCode">
      		 	( Agent_id = #agtCode# or Trucker_id = #agtCode#)  
      		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="truckNo">
 				(TRUCK1 = #truckNo# OR TRUCK2 = #truckNo# OR TRUCK3 = #truckNo# OR TRUCK4 = #truckNo# OR TRUCK5 = #truckNo# OR TRUCK6 = #truckNo#)
 			</isNotEmpty>
 			<isNotEmpty property="bkgTimeSlotFromDt">
				 <isNotEmpty property="bkgTimeSlotToDt">
				  	<isNotEmpty property="bkgTimeSlotFromStr">
			  		 <isNotEmpty property="bkgTimeSlotToStr">
			      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
			              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
			 		 </isNotEmpty>
			 		 </isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>       		
			<dynamic prepend="ORDER BY ">
        		<isNotEmpty property="sortOrder.sortField">
            		$sortOrder.sortField$
           		</isNotEmpty>
           		<isEmpty property="sortOrder.sortField">
            		bkgNo 
           		</isEmpty>
        	</dynamic>
   	</select>
   	<select id="imp_search_booking_dtlsCOUNT" parameterClass="cargo.cms.imprt.bo.EnquireCollSlotSearchBO" 
 		resultClass="java.lang.Integer">
 		<![CDATA[
 		SELECT COUNT(1) FROM (
 		SELECT 
 			null
 		FROM 
 			IMP_BOOKING 
 		WHERE STATUS <> 'CANCEL'
 		]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			( Agent_id = #loginCustNo# or Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="agtCode">
      		 		( AGENT_ID = #agtCode# or Trucker_id = #agtCode#)  
      		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="truckNo">
 				(TRUCK1 = #truckNo# OR TRUCK2 = #truckNo# OR TRUCK3 = #truckNo# OR TRUCK4 = #truckNo# OR TRUCK5 = #truckNo# OR TRUCK6 = #truckNo#)
 			</isNotEmpty>
 			<isNotEmpty property="bkgTimeSlotFromDt">
				 <isNotEmpty property="bkgTimeSlotToDt">
				  	<isNotEmpty property="bkgTimeSlotFromStr">
			  		 <isNotEmpty property="bkgTimeSlotToStr">
			      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
			              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
			 		 </isNotEmpty>
			 		 </isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>    
		)
   	</select>
   	<select id="sqlGetImpBkgIsAWBLicensed" parameterClass="map" 
 		resultClass="java.lang.String">
 		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') LICENCED 
			FROM CUST_UNDERTAKING UND
			LEFT OUTER JOIN (
			  SELECT AWB_DATE, CARR_CODE FROM IMP_CAR_SHP 
			  WHERE AWB_NO = #AWB_NO# AND FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
			) AWB
			ON 1 = 1
			WHERE UND.CARR_CODE = AWB.CARR_CODE
 		]]>
			<isNotEmpty prepend="AND" property="AGENT_CODE">
 				UND.AGENT_CODE = #AGENT_CODE# 
 			</isNotEmpty> 
			AND AWB.AWB_DATE BETWEEN EFF_FROM AND EFF_TO			
 		
 	</select>
   	<select id="sqlGetImpBkgIsAWBConsol" parameterClass="map" 
 		resultClass="java.lang.String">
 		<![CDATA[
			SELECT NVL(AWB.CONSOLE_IND, 'N')
			FROM IMP_CAR_AWB AWB
			JOIN IMP_CAR_SHP SHP
			ON AWB.AWB_NO = SHP.AWB_NO AND AWB.AWB_DATE = SHP.AWB_DATE
			WHERE
			SHP.AWB_NO = #AWB_NO# AND SHP.FLT_KEY = #FLT_KEY# AND SHP.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
 		]]>
 	</select> 		
   	<select id="imp_bkg_shipment_dtls" parameterClass="map" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotShpDtlsBO">
 		<![CDATA[
 		select  bkg.BOOKING_NO, SUBSTR(bkgDtl.AWB_NO,1,3)  awbNoPfx , SUBSTR(bkgDtl.AWB_NO,4)  awbNoSfx , 
				SUBSTR(bkgDtl.AWB_NO,1,3)||'-'||SUBSTR(bkgDtl.AWB_NO,4) as awbNoDisp ,  bkgDtl.awb_no awbNo, to_char(bkgDtl.awb_date,'DDMONYY') awbDate ,
				bkgDtl.flt_Key fltKey, to_char(bkgDtl.flt_date,'DDMONYY') fltDate, sta, eta, ata,
      				decode(WHSE_COMPL_DATE,null,'N','Y') bdcompl,
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
          		nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs,
				AWB.content as content,
				carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
        		case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = bkgDtl.awb_no and  t1.awb_date = bkgDtl.awb_date 
					and t1.flt_key = bkgDtl.flt_key and t1.flt_DATE = bkgDtl.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = bkgDtl.FLT_KEY AND V.FLT_DATE = bkgDtl.FLT_DATE AND V.AWB_NO = bkgDtl.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc  ,    
				osCharge chrgs, TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
            	shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  CUST_NO = shp.TRUCKER_CUST_NO and code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CUST_NO = carAwb.agent_cust_no and CODE = #loginId#) loginHkid, bkgDtl.CHARGES charges
			from IMP_BOOKING bkg
      join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
      join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  bkgDtl.flt_Key = fltTimes.flt_Key and  bkgDtl.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
    join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date and shp.flt_Key = bkgDtl.flt_Key 
          and  shp.flt_Date = bkgDtl.flt_date  
    join IMP_CAR_AWB carAwb on bkgDtl.awb_no = carAwb.awb_no and  bkgDtl.awb_date = carAwb.awb_date                  
    join AWB on bkgDtl.awb_no = AWB.awb_no and  bkgDtl.awb_date = AWB.awb_date                  
    left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
          group by awb_no, awb_date, flt_key, flt_date) awbInv 
          on bkgDtl.awb_no = awbInv.awb_no and  bkgDtl.awb_date = awbInv.awb_date and awbInv.flt_Key = bkgDtl.flt_Key 
          and  awbInv.flt_Date = bkgDtl.flt_date 
    left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate ) trkMnf
          on bkgDtl.awb_no = trkMnf.awb_no and  bkgDtl.awb_date = trkMnf.awb_date and bkgDtl.flt_key = trkMnf.flt_key and bkgDtl.flt_DATE = trkMnf.flt_date
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			left JOIN (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT  	ON GT.AWB_NO = bkgDtl.AWB_NO AND GT.AWB_DATE = bkgDtl.AWB_DATE	 
    Where bkg.BOOKING_NO = #bkgNo# 
    ]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			 ( bkg.Agent_id = #loginCustNo# or bkg.Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>

 	</select>
 	
 	<select id="imp_dlv_spl_hdlg_code" parameterClass="map" resultClass="java.lang.String">
 		SELECT 
 			CODE 
 		FROM 
 			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE = A.SPL_CODE1 OR B.CODE = A.SPL_CODE2 OR B.CODE = A.SPL_CODE3 OR 
			B.CODE = A.SPL_CODE4 OR B.CODE = A.SPL_CODE5 OR B.CODE = A.SPL_CODE6 OR 
			B.CODE = A.SPL_CODE7 OR B.CODE = A.SPL_CODE8 OR B.CODE = A.SPL_CODE9) 
			AND A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# 
		ORDER BY 
			PRIORITY
 	</select>
 	
 	<select id="imp_coll_slot_info" parameterClass="map" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotBkgLstBO">
 		SELECT 
 			TRUCK1 || case when TRUCK2 is not null then ', ' || TRUCK2 else '' end || 
 			case when TRUCK3 is not null then ', ' || TRUCK3 else '' end || 
 			case when TRUCK4 is not null then ', ' || TRUCK4 else '' end || 
 			case when TRUCK5 is not null then ', ' || TRUCK5 else '' end || 
 			case when TRUCK6 is not null then ', ' || TRUCK6 else '' end as truckNo, 
 			COLL_PERSON_NAME as collBy, COLL_PERSON_ID as hkId, 
 			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot, 
      		PHONE_NO as phoneNo,
      		DEL_ZONE deliveryZone
 		FROM 
 			IMP_BOOKING 
    	WHERE 
      		BOOKING_NO = #bkgNo#
 	</select>
 	
 	<select id="imp_login_usr_agt_trucker" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE_DESC 
 		FROM CUST_COMPANY 
 		WHERE 
 			(AGENT_YN='Y' OR TRUCKER_YN='Y') AND BLACKLISTED='N' 
 			AND ACTIVE='Y' AND CODE_DESC=#companyName#
 	</select>

 	
 	<select id="imp_login_usr_agt_trucker_code" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE
 		FROM CUST_COMPANY 
 		WHERE 
 			(AGENT_YN='Y' OR TRUCKER_YN='Y') AND BLACKLISTED='N' 
 			AND ACTIVE='Y' AND CODE_DESC=#companyName#
 	</select>


 <!-- Enquire Collection Slot :: Anup :: Ends -->
<!-- Enquire CDIF -->
<select id="imp_maintainCdif_enquireHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SRF_NO  srfNoPrefix ,  
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			TO_CHAR(CDIF_PCS) cdifPcs,
			TO_CHAR(CDIF_WT) cdifWt,			
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			UTL_RMK utlRemark,
			UTL_EMAIL1 emailAddress1, 
			UTL_EMAIL2 emailAddress2, 
			UTL_EMAIL3 emailAddress3,
			FOLLOW_ON_TRUCK truckNo
		from IMP_CDIF  
		where 		
		CDIF_NO = #cdifNo# 		
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_maintainCdif_awbInfo"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
	<![CDATA[
		SELECT
		A.AWB_NO awbNo,
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.SRF_NO srfNo,
		SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
		SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
		TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
		B.FLT_KEY fltNoKey, 
		TO_CHAR(C.ACT_TIME) ata,
		PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A') AS ataTime,
		SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),3,4) AS staTime,
		TO_CHAR(A.SRF_PCS) delvPc, 
		TO_CHAR(A.SRF_WT) delvWt, 
		D.CONTENT content,
		D.CSGNE_NAME csgnDesc, 
		D.APPNTD_AGENT agentDesc,
		'' truckNo,
		TO_CHAR(A.SRF_PCS - E.dlvPcSum) unDelvPcs,
    	TO_CHAR(A.SRF_WT - E.dlvWtSum) unDelvWt
		FROM imp_srf A join imp_car_awb D on A.awb_no = D.awb_no AND A.awb_date = D.awb_date,
			(select FLT_KEY, FLT_DATE from (
    			Select FLT_KEY, FLT_DATE from imp_srf_awb_inventory where SRF_NO = #srfNo# and nvl(locn_pcs,0) <> nvl(dlv_pcs,0)
    			group by FLT_KEY, FLT_DATE order by FLT_DATE ASC) where ROWNUM = 1
    		 ) B
			left join flt_opr C on B.flt_key = C.flt_key AND B.flt_date = C.sch_date AND C.FLT_TYPE = 'A',			
			(select sum(dlv_pcs) dlvPcSum,sum(dlv_Wt) dlvWtSum from imp_srf_flt where srf_no = #srfNo# group by srf_no) E
		 WHERE A.srf_no = #srfNo#	
	  ]]> 	 
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_maintainCdif_awbInfo_exp"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT
		A.AWB_NO awbNo,
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.SRF_NO srfNo,
		SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
		SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
		TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
		B.FLT_KEY fltNoKey, 
		TO_CHAR(C.ACT_TIME) ata,
		PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A') AS ataTime,
		SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),3,4) AS staTime,
		TO_CHAR(A.SRF_PCS) delvPc, 
		TO_CHAR(A.SRF_WT) delvWt, 
		D.CONTENT content,
		F.CSGNE_NAME csgnDesc, 
		D.AGENT_NAME agentDesc,
		'' truckNo,
		TO_CHAR(A.SRF_PCS - E.dlvPcSum) unDelvPcs,
    	TO_CHAR(A.SRF_WT - E.dlvWtSum) unDelvWt
		FROM imp_srf A
			join awb D on A.awb_no = D.awb_no AND A.awb_date = D.awb_date
			left join EXP_CAR F on F.awb_no = D.awb_no and F.awb_date = D.awb_date , 
			(Select FLT_KEY, FLT_DATE from imp_srf_flt where SRF_NO =#srfNo# and ROWNUM = 1 order by FLT_DATE DESC) B
			left join flt_opr C on B.flt_key = C.flt_key AND B.flt_date = C.sch_date AND C.FLT_TYPE = 'A',
			(select sum(dlv_pcs) dlvPcSum,sum(dlv_Wt) dlvWtSum from imp_srf_flt where srf_no =#srfNo# group by srf_no) E
		WHERE  A.srf_no =#srfNo#	 
	</select>
	
		<select id="imp_maintainCdif_enquireHawb"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			HAWB_NO hawbNo,
			CDIF_NO cdifNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			TO_CHAR(DOC_LINE_NO) docLineNo, 
			TO_CHAR(CDIF_DT_PCS) detainPc,
			TO_CHAR(CDIF_DT_WT) detainWt,
			TO_CHAR(CDIF_PS_PCS) psPc,
			TO_CHAR(CDIF_PS_WT) psWt,
			TO_CHAR(CDIF_UTL_PCS) unlocPc,
			TO_CHAR(CDIF_UTL_WT) unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
			RMK cdifRemark
		from IMP_CDIF_HAWB  
		where 		
		CDIF_NO = #cdifNo#
	</select>
<!-- End of Enquire CDIF -->
<!-- Void CDIF -->

	<select id="imp_maintainCdif_VOIDHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SRF_NO  srfNoPrefix , 
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			TO_CHAR(CDIF_PCS) cdifPcs,
			TO_CHAR(CDIF_WT) cdifWt,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			VOID_USER lmUserId,
			TO_CHAR(VOID_DATE,'DDMONYY HH24:MI:SS') voidDate,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
			FOLLOW_ON_TRUCK truckNo			 
		from IMP_CDIF  
		where 		
		CDIF_NO = #cdifNo# 
	</select>
	
	<select id="imp_maintainCdif_checkvoid"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from IMP_CDIF where void_user is not null and CDIF_NO = #cdifNo#
	</select>
	
	<select id="imp_maintainCdif_checkSRFissued"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from IMP_CDIF where cdif_no= #cdifNo# and cdif_srf_no is not null
	</select>
	
	<update id="imp_maintainCdif_void" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_CDIF set 
		VOID_USER = #crUserId#, 
		VOID_DATE = SYSDATE, 
		LM_USER_ID = #crUserId# , 
		LM_DATE = SYSDATE,
		tr_type='VCDIF'
		where 		
		CDIF_NO = #cdifNo#
   </update>
   
	
   <update id="imp_VoidCdif_IMP_SRF_AWB_Inventory_refCdif" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update awb_inventory
			set CDIF_NO = #referenceCdifNo#,
			SRF_NO = (SELECT SRF_NO FROM IMP_CDIF WHERE CDIF_NO = #cdifNo#),
			lm_user_id = #crUserId#, 
			lm_date= SYSDATE
		where CDIF_NO = #cdifNo# AND NVL(FLT_KEY,'*')  = NVL(#refFltKey#,'*') AND NVL(FLT_DATE,SYSDATE) = NVL(#refFltDate#,SYSDATE)
	</update>

<select id="getReferenceCDIFNumber"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
    	select ref_cdif_no as referenceCdifNo,flt_key as refFltKey,TO_CHAR(flt_Date,'DDMONYY') as refFltDate  
			from IMP_SRF_AWB_INVENTORY where cdif_no= #cdifNo#  and ref_cdif_no is not null group by cdif_no,awb_no,awb_date,flt_key,flt_date,ref_cdif_no		
	</select>
    
	<update id="imp_VoidCdif_IMP_SRF_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update awb_inventory
			set CDIF_NO = '',
			SRF_NO = (SELECT SRF_NO FROM IMP_CDIF WHERE CDIF_NO = #cdifNo#),
			lm_user_id = #crUserId#, 
			lm_date= SYSDATE
		where CDIF_NO = #cdifNo#
	</update>
	
	<update id="imp_VoidCdif_IMP_SRF_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_SRF_AWB_INVENTORY
			set CDIF_NO = '',
			CDIF_PC	= '',
			CDIF_WT = '',
        	LM_DATE = sysdate,
			LM_USER_ID = #crUserId#
		where CDIF_NO = #cdifNo#
	</update>
	
	<select id="imp_getInventryDtls"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
	SELECT
     AWB_NO as awbNo,
     TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate,
     FLT_KEY as fltKey, 
     FLT_TYPE as fltType,
     TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate,
     LOC_CODE as cdifLocCode,
     LSP_NO as lspNo,
     ULD_KEY as uldKey,
     TRM_NO as trmNo,
     CDIF_NO as cdifNo,
     REF_DOC_LINE_NO as docLineNo
	FROM AWB_INVENTORY  WHERE  CDIF_NO = #cdifNo#
  	</select>
  	
  	<select id="getSequenceNoToVoid" parameterClass="cargo.cms.imprt.bo.CDIFBO" resultClass="cargo.cms.imprt.bo.CDIFBO" >
 	SELECT SEQ_NO as cdifSeqNo, CDIF_NO AS cdifNo
	FROM AWB_INVENTORY
    WHERE 
    AWB_NO = #awbNo#
    AND AWB_DATE = #awbDate#
    AND CDIF_NO = #cdifNo#
    AND REF_DOC_LINE_NO = #docLineNo#
    AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    AND NVL(LOC_CODE,'*') = NVL(#cdifLocCode#,'*')
    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
    AND SRF_NO IS NULL
   </select>
  	
  	<select id="imp_getCdifPcsWt"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
 		 select CDIF_PC as cdifPcs, CDIF_WT as cdifWt from IMP_SRF_AWB_INVENTORY 
 		 where SEQ_NO = #cdifSeqNo# and CDIF_NO = #cdifNo#
    </select>
  
  	<select id="imp_searchForMatchingLoc"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
 	 SELECT LOC_CODE as oldLocCode, SEQ_NO as oldSeqNo, SRF_NO AS srfNo
  		FROM AWB_INVENTORY
  		WHERE 
    		AWB_NO = #awbNo#
    		AND AWB_DATE = #awbDate#
    		AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
    		AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    		AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    		AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
    		AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    		AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
    		AND NVL(LOC_CODE,'*') = NVL(#cdifLocCode#,'*')
    		AND DLV_YN = 'N'
    		AND CDIF_NO IS NULL
    		AND SRF_NO IS NOT NULL
    		AND ROWNUM = 1
    </select>
    
    <update id="imp_updateCdifSrfLoc" parameterClass="java.util.HashMap">
    update imp_srf_awb_inventory
			set 
        	LOCN_PCS = LOCN_PCS + to_number(#locPcs#,'99999'),
        	LOCN_WT = LOCN_WT + to_number(#locWt#,'999999999.99'),
        	LM_DATE = sysdate,
			LM_USER_ID = #lmuserId#
			where 
     		SEQ_NO = #matSeqNo#
   			and srf_no = #matsrfNo#
   			and LOC_CODE = #matLocCode#
    </update> 
      
    <update id="imp_updateCdifAwbLoc" parameterClass="java.util.HashMap">
    	update AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#locPcs#,'99999'),
        	LOCN_WT = LOCN_WT + to_number(#locWt#,'999999999.99'),
        	LM_DATE = sysdate,
			LM_USER_ID = #lmuserId#
			WHERE 
			SEQ_NO = #matSeqNo#
   			and srf_no = #matsrfNo#
   			and LOC_CODE = #matLocCode#
    </update>  
    
    <delete id="imp_deleteAwbLoc" parameterClass="java.util.HashMap" >
   		 DELETE AWB_INVENTORY  WHERE SEQ_NO = #cdifSeqNo# 
    </delete>
    
    <delete id="imp_deleteSrfLoc" parameterClass="java.util.HashMap" >
   		 DELETE imp_srf_awb_inventory  WHERE SEQ_NO = #cdifSeqNo# 
	</delete>
	
	<!-- End Void CDIF-->
	
	<!-- Maintain CDIF -->	
	
	<select id="checkCdifCreated" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select count(1)  from imp_cdif where srf_no = #srfNo#
	</select>
	
	<select id="getSequenceNoForCDIF" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select srf_no||trim(to_char(to_char(max(to_number(SUBSTR(cdif_no,9)))+1),'000')) from imp_cdif where srf_no = #srfNo# group by srf_no
	</select>
	
	<select id="getCpclAddr" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select rule_value from cmsrules where rule_code = 'COM_NOTF_SENDER' and rownum=1
	</select>
	
	<select id="getSequenceNo" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" resultClass="java.lang.String" >
 	SELECT SEQ_NO as seqNo
	FROM AWB_INVENTORY
    WHERE AWB_NO = #awbNo#
    AND AWB_DATE = #awbDate#
    AND NVL(FLT_KEY,'*')  = NVL(#fltNoKey#,'*')
    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    AND NVL(LOC_CODE,'*') = NVL(#whLocn#,'*')
    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
    AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
    AND NVL(CDIF_NO,'*') = NVL(#cdifNo#,'*')
    AND REF_DOC_LINE_NO = #docLineNo#
    AND SRF_NO IS NULL
	</select>
	
	<select id="getDuplicateRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" resultClass="java.lang.String" >
 	 SELECT seq_no AS seqNo FROM awb_inventory 
 		WHERE 
		 AWB_NO = #awbNo# 
 		 AND AWB_DATE = #awbDate# 
 		 AND NVL(FLT_KEY,'*')  = NVL(#fltNoKey#,'*')
   		 AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
   		 AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
		 AND CDIF_NO = #cdifNo#
		 AND DLV_YN = 'N'
		 AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
		 AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
		 AND NVL(LOC_CODE,'*') = NVL(#whLocn#,'*')
		 AND SRF_NO IS NULL
	</select>
	
	<update id="updateExistRecAwbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO">
	 		update AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#cdifPcs#,'99999'),
			LOCN_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
			LM_USER_ID = #lmUserId#, 
			LM_DATE = SYSDATE
			WHERE 
			SEQ_NO = #seqNo#
	</update>
	
	<update id="updateExistRecSRFAwbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO">
	 	  	update IMP_SRF_AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#cdifPcs#,'99999'),
			LOCN_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
	   		CDIF_PC = LOCN_PCS + to_number(#cdifPcs#,'99999'),
	   		CDIF_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
			LM_USER_ID = #lmUserId#, 
			LM_DATE = SYSDATE
			WHERE 
			SEQ_NO = #seqNo#
	</update>

	<insert id="imp_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
	 INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,CC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, STRG_DATE,CR_USER_ID, CR_DATE,
	 SRF_NO, CDIF_NO, TRM_NO,BUP_WT,BULK_WT,
	 LM_USER_ID, LM_DATE, FLT_NO, FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,
	 REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,
	 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,WH_DAM_IND,DAM_TYPE,DAM_PCS,DAM_WT)
	 VALUES
	 (#awbNo#,#awbDate#,#carrCode#,#lspNo#,#whLocn#,#ccCode#,
	 #cdifPcs#,#cdifWt#,#damInd#, #ppkInd#,sysdate, #crUserId#, sysdate,
	 '', #cdifNo#, #trmNo#,NVL(#bupWtDisp#,0),NVL(#bulkWtDisp#,0),
	 #lmUserId#, sysdate, #fltNo#,#fltDate#,#fltNoKey#,#fltType#,#uldNo#,AWB_INV_SEQ.NEXTVAL,
	 '','',#trNo#,'CD',sysdate,#docLineNo#,#whLocn#,'CD',#rmk#,#whLocn#,#whDamInd#,#damType#,#damPcs#,#damWt#)
	</insert>
	
	<insert id="Imp_InsertImpSrfAwbInventoryAfterCDIF" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		AWB_NO,AWB_DATE,CARR_CODE,CDIF_NO,CDIF_PC,CDIF_WT,CR_DATE,CR_USER_ID,CC_CODE,
		DAM_IND,FLT_DATE,FLT_KEY,LOCN_PCS,LOCN_WT,LOC_CODE,SEQ_NO,SRF_NO,ULD_KEY,LSP_NO,REF_CDIF_NO) 
		VALUES (#awbNo#,#awbDate#,#carrCode#,#cdifNo#,to_number(#cdifPcs#,'99999'),to_number(#cdifWt#,'999999999.99'),SYSDATE,#crUserId#,#ccCode#,
   		#damInd#,#fltDate#,#fltNoKey#,#cdifPcs#,#cdifWt#,#whLocn#,#seqNo#,#srfNo#,#uldNo#,#lspNo#,#issCdifNo#)
   		]]>
	</insert>
	
	<insert id="insertHawbRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
		INSERT INTO HAWB_INVENTORY (
		SEQ_NO, HAWB_NO,STRG_PCS, STRG_WT,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID) 
		VALUES (#seqNo#,#hawbInvNo#,#hawbStrogPcs#,#hawbStrogWt#,SYSDATE,#crUserId#,SYSDATE,#lmUserId#)
   		]]>
	</insert>

	<update id="updateExistHawbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >	 
		update HAWB_INVENTORY set
		STRG_PCS = STRG_PCS + to_number(#hawbStrogPcs#,'99999'),
		STRG_WT = STRG_WT + to_number(#hawbStrogWt#,'999999999.99'),
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #seqNo# and HAWB_NO = #hawbInvNo#
	</update>
	
	<update id="imp_update_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update AWB_INVENTORY set
		LOCN_PCS = #strgPcDisp#, 
		LOCN_WT = #strgWtDisp#,
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #oldseqNo#
	</update>
	
	<delete id="imp_delete_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE AWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getSrfDlvInd" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="java.lang.String" >
 		select NVL(DLV_IND,'N')  from IMP_SRF_AWB_INVENTORY where seq_no = #oldseqNo# AND SRF_NO = #srfNo#
	</select>
	
	<delete id="imp_delete_IMP_SRF_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE IMP_SRF_AWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<delete id="deleteHawbRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE HAWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<select id="checkHawbExists" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="java.lang.String" >
 		select count(1) from hawb_inventory where HAWB_NO = #hawbInvNo# and seq_no = #seqNo#
	</select>

	<update id="Imp_UpdateImpSrfAwbInventoryAfterCDIF" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update IMP_SRF_AWB_INVENTORY set
		LOCN_PCS = LOCN_PCS - to_number(#cdifPcs#,'99999'),
		LOCN_WT = LOCN_WT - to_number(#cdifWt#,'999999999.99'),
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #oldseqNo# AND SRF_NO = #srfNo#
	</update>
	
	<!--
	
	<update id="Imp_UpdateImpSrfAwbInvWhenZero" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update IMP_SRF_AWB_INVENTORY set
		LOCN_PCS = LOCN_PCS - to_number(#strgPcDisp#,'99999'),
		LOCN_WT = LOCN_WT - to_number(#strgWtDisp#,'999999999.99'),
		WHERE 
		SEQ_NO = #oldseqNo#
	</update>
	
	-->
	
	<select id="getHawbInvenDtls"  parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		select STRG_PCS hawbStrogPcs, STRG_WT hawbStrogWt, HAWB_NO hawbInvNo from HAWB_INVENTORY where SEQ_NO = #oldseqNo#
	</select>
	 
	<select id="imp_maintainCdif_query"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		SELECT
			A.AWB_NO awbNo,
			SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			A.SRF_NO srfNo,
			SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
			SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
			A.CDIF_NO cdifNo,
			SUBSTR(A.CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(A.CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(A.CDIF_NO,1,8)||'-'||SUBSTR(A.CDIF_NO,9) as cdifNoDisp , 
			TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
			B.FLT_KEY fltNoKey, 
			C.ACT_TIME ata,
			PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A')  as ataTime
		FROM IMP_CDIF A , IMP_SRF_FLT B , FLT_OPR C
		WHERE 
			A.AWB_NO = B.AWB_NO AND
			A.AWB_DATE = B.AWB_DATE  AND
			B.FLT_KEY = C.FLT_KEY   AND
			B.FLT_DATE = C.SCH_DATE  and
			c.flt_type = 'A' and B.SRF_NO = A.SRF_NO
			<isNotEmpty property="cdifNo">
				AND A.CDIF_NO	 = #cdifNo# 		
			</isNotEmpty>	
			<isNotEmpty property="srfNo">		   
				AND A.SRF_NO   = #srfNo#
			</isNotEmpty>	
	</select>
	<select id="imp_maintainCdif_CheckSRFDeliveryStarted"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
		select count(1) from imp_srf_awb_inventory WHERE dlv_date is not null and SRF_NO = #srfNo#
	</select>	
	<select id="imp_maintainCdif_CheckConsole" parameterClass="java.lang.String" resultClass="java.lang.String">
		select b.CONSOLE_IND from IMP_SRF a , IMP_CAR_AWB b 
		where a.AWB_NO = b.AWB_NO and 
		a.AWB_DATE = b.AWB_DATE and 
		a.SRF_NO = #srfNo#  
	</select>
	<select id="imp_Inventory_list"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		SELECT	
			STRG_RMK remarkDisp,	
			B.LOC_CODE whLocnDisp, 
			B.LOCN_PCS strgPcDisp, 
			B.LOCN_WT strgWtDisp,
			B.LOCN_PCS dispStrgPcs, 
			B.LOCN_WT dispStrgWt,
			B.LOCN_PCS strgLocPcs, 
			B.LOCN_WT strgLocWt,
			B.CARR_CODE carrCode,
			B.LSP_NO lspNoDisp, 
			B.ULD_KEY uldNoDisp,  
			B.BULK_WT bulkWtDisp, 
			B.BUP_WT bupWtDisp,
			B.DAM_IND damInd, 
			B.PPK_IND ppkInd,
			B.STRG_DATE strgDate,
			B.CC_CODE ccCode,
			TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
			B.FLT_KEY fltNoKey ,
			B.FLT_TYPE fltType ,
			B.CDIF_NO issCdifNo,
			B.LM_USER_ID lmUserId,
			B.CR_USER_ID crUserId,
     		B.seq_no inventorySeqNo,
    		H.SEQ_NO as hawbSeqNO,
      		H.hawbPcs as totHawbPcs,
    		H.hawbWt as totHawbWt
			FROM IMP_SRF A, AWB_INVENTORY B
      		left join (select SEQ_NO , sum(STRG_PCS) hawbPcs, sum(STRG_WT) hawbWt from HAWB_INVENTORY group by SEQ_NO) H on H.SEQ_NO = B.SEQ_NO
			WHERE A.SRF_NO = B.SRF_NO AND
					  A.AWB_NO   = #awbNo# AND
					  TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND 
					  A.SRF_NO   = #srfNo#
					  AND B.DLV_YN = 'N'
	</select>
	
	<select id="imp_checkHawb"  parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT count(1) FROM MAST_HAWB 
	WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# 
	AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	]]>
	</select>

	<select id="imp_maintainCdif_viewHAWB"  parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		select 
		A.hawb_no hawbNoDisp,
		A.STRG_PCS strgPcDisp,
		A.STRG_WT strgWtDisp,
		SUBSTR(B.AWB_NO,1,3)||'-'||SUBSTR(B.AWB_NO,4) as awbNoDisp ,
		B.LOC_CODE whLocnDisp,
		B.LSP_NO lspNoDisp, 
		B.ULD_KEY uldNoDisp
		from hawb_inventory A left join AWB_INVENTORY B on A.seq_no = B.seq_no 
		where A.seq_no = #inventorySeqNo#
	</select>
	
	<select id="imp_maintainCdif_ttlHAWBPcWt"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
		sum(A.STRG_PCS) locPcs,
		sum(A.STRG_WT) locWt
		from hawb_inventory A left join AWB_INVENTORY B on A.seq_no = B.seq_no 
		where A.hawb_no = #hawbNo# 
		<iterate prepend="AND" property="arlLocCode"
		open="(" close=")" conjunction="OR" >
			B.LOC_CODE = $arlLocCode[]$
		</iterate>	
		<iterate prepend="AND" property="arlSeqNo"
		open="(" close=")" conjunction="OR" >
			A.seq_no =  $arlSeqNo[]$
		</iterate>	
	</select>
	
	<select id="imp_maintainCdif_HAWBPcWt"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT SUM(A.STRG_PCS) locPcs,  SUM(A.STRG_WT) locWt FROM hawb_inventory A
			LEFT JOIN AWB_INVENTORY B ON A.seq_no     = B.seq_no
			WHERE A.hawb_no = #HAWB#
			and B.AWB_NO = #AWB# AND B.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and B.DLV_YN = 'N'
	</select>
	
	<insert id="imp_issueCdif_IMP_CDIF" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
		INSERT INTO IMP_CDIF (
			CDIF_NO, 
			SRF_NO, 
			AWB_NO, 
			AWB_DATE, 
			CDIF_DATE,			 
			UTL_RMK, 
			UTL_EMAIL1, 
			UTL_EMAIL2,
			UTL_EMAIL3, 
			TR_STATUS, 			
			CR_USER_ID,
			CR_DATE, 
			LM_USER_ID, 
			LM_DATE,CDIF_PCS, CDIF_WT,FOLLOW_ON_TRUCK, TR_TYPE) 
		VALUES (#cdifNo#,
		   #srfNo#,	 
		   #awbNo#,
		   TO_DATE(#awbDate#, 'DDMONYY'), 
		   SYSDATE ,		 
		   #utlRemark#,
		   #emailAddress1#,
		   #emailAddress2#,
		   #emailAddress3#,
		   'A',
		   #crUserId#,
		   SYSDATE ,
		   #crUserId# ,
		   SYSDATE ,#cdifPcs#,#cdifWt#,#truckNo#,'MCDIF')
		   ]]>		
	</insert>

	<insert id="imp_issueCdif_IMP_CDIF_HAWB" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
		INSERT INTO IMP_CDIF_HAWB (   
			CDIF_NO, 
			DOC_LINE_NO, 
			AWB_NO,    
			AWB_DATE, 
			HAWB_NO, 
			CDIF_UTL_PCS,   
			CDIF_UTL_WT, 
			CDIF_PS_PCS, 
			CDIF_PS_WT,    
			CDIF_DT_PCS, 
			CDIF_DT_WT, 
			CDIF_FOLLOW_ON_PCS,
			CDIF_FOLLOW_ON_WT,
			TR_TYPE,    
			TR_STATUS, 
			RMK,
			CR_USER_ID, 
			CR_DATE,    
			LM_USER_ID, 
			LM_DATE) 
		VALUES (  #cdifNo#, 
			   	  #docLineNo#,
				  #awbNo# ,
 			      TO_DATE(#awbDate#, 'DDMONYY'), 
				  #hawbNo# ,
				  #unlocPc# ,
				  #unlocWt#,
				  #psPc#,
				  #psWt#,
				  #detainPc# , 
				  #detainWt#,
				  #followonPc# , 
				  #followonWt#,
				  'CD',	  
		          'A',	
			      #cdifRemark#,			  
				  #crUserId#, 
				  SYSDATE,
				  #crUserId#,
				  SYSDATE )
			]]>		
	</insert>

	<insert id="imp_issueCdif_IMP_CDIF_UTL_LOCN" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
			INSERT INTO IMP_CDIF_UTL_LOCN (   
				CDIF_NO, 
				CDIF_LOCN, 
				CDIF_UL_PCS, 
				CDIF_UL_WT,			
				TR_TYPE, 	
				TR_STATUS, 
				CR_USER_ID,
				CR_DATE, 
				LM_USER_ID, 
				LM_DATE,
				LSP_NO, 
				ULD_KEY) 
			VALUES ( #cdifNo#,
					 #whLocnDisp#,
					 #utlPc#,
					 #utlWt# , 					  					 
					 'CD',
			         'A',
					 #crUserId#, 
					 SYSDATE,
					 #crUserId#,
					 SYSDATE,
					#lspNoDisp#,
					#uldNoDisp# )
			]]>		
	</insert>
			  
	<insert id="imp_issueCdif_AWB_RELOC_HD" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[	   
			INSERT INTO AWB_RELOC_HD (   
				TR_NO, 
				CR_USER_ID, 
				CR_DATE,   
			  	LM_USER_ID, 
				LM_DATE, 
				AWB_NO,   
				AWB_DATE, 				
				RELOC_TYPE)
			VALUES (#trNo# ,
					#crUserId#, 
					SYSDATE ,
					#crUserId#, 
					SYSDATE ,
					#awbNo# ,
					TO_DATE(#awbDate#, 'DDMONYY'), 					
					'CD' )
		]]>		
	</insert>

	<insert id="imp_issueCdif_AWB_RELOC_ISS" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[	
			INSERT INTO AWB_RELOC_ISS (   
				TR_NO, 
				DOC_LINE_NO,				    
				LOC_CODE,  
				LOCN_PCS, 
				LOCN_WT,    
				LSP_NO,    
				ULD_KEY,   
				PPK_IND,  	
				FLT_DATE,  
				FLT_TYPE,  
				FLT_KEY,   
				SRF_NO,    
				CR_USER_ID, 
				CR_DATE,    
				LM_USER_ID, 
				LM_DATE, 
				DAM_IND,    
				BULK_WT, 
				BUP_WT,
				CDIF_NO) 			
				VALUES (#trNo# ,#docLineNo#,#whLocnDisp#,#strgPc# , #strgWt#,#lspNoDisp# ,
				#uldNoDisp#,#ppkInd# ,To_DATE(#fltDate#,'DDMONYY'),'I',#fltNoKey# , #srfNo# , #crUserId#   ,SYSDATE ,#crUserId#  , 
				SYSDATE, #damInd#,NVL(#bulkWt#,0),NVL(#bupWt#,0),#issCdifNo#)
			]]>		
	</insert>				


	<insert id="imp_issueCdif_AWB_RELOC_RECV" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
			INSERT INTO AWB_RELOC_RECV (   
				TR_NO, 
				DOC_LINE_NO, 
				LOC_CODE, 
				LOCN_PCS, 
				LOCN_WT,    
				LSP_NO, 
				ULD_KEY,
				PPK_IND,    
				FLT_DATE,
				FLT_TYPE,  
				FLT_KEY, 	
				CDIF_NO, 
				CR_USER_ID, 
				CR_DATE,   
				LM_USER_ID, 
				LM_DATE, 
				DAM_IND,   
				BULK_WT, 
				BUP_WT,
				RMK
				) 
			VALUES (#trNo# ,
			#docLineNo#,
			#whLocn#,
			#strgPc#,
			#strgWt#,
			#lspNo# ,
			#uldNo# ,
			#ppkInd# ,#fltDate#,
			'I',#fltNoKey# , #cdifNo#,#crUserId#   ,SYSDATE ,#crUserId#  , SYSDATE, #damInd#,
			NVL(#bulkWt#,0),NVL(#bupWt#,0),#remark#)
			]]>		
	</insert>
	<insert id="imp_issueCdif_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
	INSERT INTO AWB_INVENTORY (   
				SEQ_NO, 				 
				AWB_NO,   
				AWB_DATE, 
				SRF_NO, 
        		CDIF_NO,
       			LOCN_PCS,
       			LOCN_WT,
        		CR_USER_ID, 
				CR_DATE,   
        		LM_USER_ID, 
				LM_DATE
				)
			VALUES ( AWB_INV_SEQ.NEXTVAL,
          			#awbNo# ,
		  			TO_DATE(#awbDate#, 'DDMONYY'), 
          			#srfNo#, 
          			#cdifNo#,
          			#cdifPcs#,
          			#cdifWt#,
					#crUserId#, 
					SYSDATE ,
					#crUserId#, 
					SYSDATE )
					]]>	
		</insert>
	<update id="imp_issueCdif_IMP_SRF_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update imp_srf_awb_inventory
			set CDIF_NO = #cdifNo#, 
				cdif_pc=#cdifPcs#, 
				cdif_wt=#cdifWt#
			where srf_no=#srfNo#   
	</update>	
		<select id="imp_maintainCdif_updateDataHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SUBSTR(SRF_NO,1,8)  srfNoPrefix , 
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate
		from IMP_CDIF  
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo# and 
		SRF_NO = #srfNo#  
	</select>
	
	<select id="imp_maintainCdif_updateDataHawb"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 	
			CDIF_NO cdifNo,	
			HAWB_NO hawbNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			DOC_LINE_NO docLineNo, 
			CDIF_DT_PCS detainPc,
			CDIF_DT_WT detainWt,
			CDIF_PS_PCS psPc,
			CDIF_PS_WT psWt,
			CDIF_UTL_PCS unlocPc,
			CDIF_UTL_WT unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			RMK cdifRemark,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate 
		from IMP_CDIF_HAWB  
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo#
	</select>
	
	<select id="getCdifHawbList"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT HAWB_NO hawbNo,
		  hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_DT_PCS) cdifPcs,
			TO_CHAR(CDIF_DT_WT) cdifWt,
			TO_CHAR(CDIF_DT_PCS)detainPc,
			TO_CHAR( CDIF_DT_WT )detainWt,
			'' psPc,
			'' psWt,
			'' unlocPc,
			'' unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_DT_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_PS_PCS) cdifPcs,
			TO_CHAR(CDIF_PS_WT) cdifWt,
			'' detainPc,
			'' detainWt,
			TO_CHAR(CDIF_PS_PCS)detainPc,
			TO_CHAR( CDIF_PS_WT )detainWt,
			'' unlocPc,
			'' unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_PS_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_UTL_PCS) cdifPcs,
			TO_CHAR(CDIF_UTL_WT) cdifWt,
			'' detainPc,
			'' detainWt,
			'' psPc,
			'' psWt,
			TO_CHAR(CDIF_UTL_PCS)unlocPc,
			TO_CHAR( CDIF_UTL_WT )unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_UTL_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) cdifPcs,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) cdifWt,
			'' detainPc,
			'' detainWt,
			'' psPc,
			'' psWt,
			'' unlocPc,
			'' unlocWt,
			TO_CHAR( CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR( CDIF_FOLLOW_ON_PCS) followonWt,
		  rmk cdifRemark
		FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_FOLLOW_ON_PCS,0) &gt; 0
	</select>
	
	<select id="getHawbLocationList"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		    SELECT loc_code as whLocnDisp,
			  NVL(lsp_no,uld_key) as lspNoDisp   
			FROM awb_inventory inv
			join hawb_inventory hinv on hinv.seq_no = inv.seq_no
			WHERE inv.cdif_no = #cdifNo#
			and hinv.hawb_no = #hawbNo#
	</select>
	
		<select id="imp_maintainCdif_info"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			hawb.AWB_NO awbNo,
			SUBSTR(hawb.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(hawb.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(hawb.AWB_NO,1,3)||'-'||SUBSTR(hawb.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(hawb.AWB_DATE, 'DDMONYY') awbDate, 	
			hawb.CDIF_NO cdifNo,	
			HAWB_NO hawbNo,
			SUBSTR(hawb.CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(hawb.CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(hawb.CDIF_NO,1,8)||'-'||SUBSTR(hawb.CDIF_NO,9) as cdifNoDisp,
			DOC_LINE_NO docLineNo, 
			CDIF_DT_PCS detainPc,
			CDIF_DT_WT detainWt,
			CDIF_PS_PCS psPc,
			CDIF_PS_WT psWt,
			CDIF_UTL_PCS unlocPc,
			CDIF_UTL_WT unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			RMK cdifRemark,
			TO_CHAR(hawb.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate ,
			(select flt_key from imp_srf_flt where srf_no = cdif.srf_no  and rownum = 1) as fltNoKey,
			(select to_char(flt_date,'DDMONYY') from imp_srf_flt where srf_no = cdif.srf_no  and rownum = 1) as fltDate,
      (SELECT code_desc FROM cust_company where code = (SELECT agent_id FROM imp_srf where srf_no = cdif.srf_no) and rownum = 1) as agentDesc
from IMP_CDIF_HAWB hawb 
join imp_cdif cdif  on hawb.cdif_no = cdif.cdif_no
where hawb.CDIF_NO = #cdifNo#
	</select>
	
	<update id="imp_maintainCdif_update" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_CDIF_HAWB set 
		RMK  = #cdifRemark#,
		LM_USER_ID = #crUserId# , 
		LM_DATE = SYSDATE 
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo# and 
		DOC_LINE_NO = #docLineNo#   
	</update>
	
	<update id="updateLspInvForMaintainCdif" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='N' WHERE LSP_NO=#lspNo#
	</update>
	<update id="updateUldInvForMaintainCdif" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='N' WHERE ULD_KEY=#uldNo#
	</update>
	<!-- End Maintain CDIF -->


<!--Queries for Assign target location starts   -->

<select id="getuldinfolist" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.AssignTargetLocBO">
		SELECT 
		A.AWB_NO AS awbNo,
		substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4,8) awbNoDisp,
		(SELECT AWB_TYPE FROM AWB WHERE AWB_NO = A.AWB_NO AND awb_date = A.awb_date) AS type,
		A.LOCN_PCS AS pc,
		A.LOCN_WT AS wt,
		A.FLT_KEY AS fltNo,
		TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
		TO_CHAR(L.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
    	L.loc_code AS locn,
    	L.TARGET as target,
    	(select lastOrder FROM
		 (select target || '(' || NVL(STATUS,'STARTED') || ')' as lastOrder from rtrv_move_order where uld = #uldNo# order by cr_date desc) where rownum = 1) as lastOrder
		FROM ULD_INVENTORY L
    	LEFT JOIN AWB_INVENTORY A ON A.ULD_KEY = L.ULD_KEY
		WHERE L.ULD_KEY = #uldNo#		
</select>
	

<select id="imp_xom_getUldInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM ULD_INVENTORY WHERE ULD_KEY = #uldNo#
</select>	

<select id="getlspinfolist" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.AssignTargetLocBO">
		SELECT 
		A.AWB_NO AS awbNo,
		substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4,8) awbNoDisp,
		to_char(A.AWB_DATE,'DDMONYY') awbDate,		
		(SELECT AWB_TYPE FROM AWB WHERE AWB_NO = A.AWB_NO AND awb_date = A.awb_date) AS type,
		A.LOCN_PCS AS pc,
		A.LOCN_WT AS wt,
		A.FLT_KEY AS fltNo,
		TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
		TO_CHAR(L.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
    	L.loc_code AS locn,
    	L.TARGET as target
		FROM LSP_INVENTORY L
   		LEFT JOIN AWB_INVENTORY A ON A.LSP_NO = L.LSP_NO
		WHERE L.LSP_NO = #lspNo#			
	</select>
	
<select id="imp_xom_getLspInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM LSP_INVENTORY WHERE LSP_NO = #lspNo#
</select>
 
<update id="updatelsplocation" parameterClass="map">
		UPDATE LSP_INVENTORY
		SET TARGET = #newtarget#,
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		WHERE LSP_NO = #lspNo# AND
		TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
</update>
<update id="updateuldlocation" parameterClass="map">
		 UPDATE ULD_INVENTORY
		SET TARGET = #newtarget#,
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		WHERE ULD_KEY = #uldNo# AND
		TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
</update>
<select id="imp_brk_validate_storage_in_mhs" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(COUNT(1),0) from mast_wh_group where wh_type='MHS' and wh_group=(select wh_group from mast_wh_loc
    where code=#locn# )
</select>

<select id="imp_brk_validate_storage_in_manualstorage" parameterClass="map" resultClass="java.lang.Integer">
		select nvl(count(1),0) from mast_wh_group where wh_type='FG' and wh_group =(select wh_group from mast_wh_loc 
		where CODE =#locn#)
</select>

<select id="imp_brk_validate_oldTargetForArea" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM mast_wh_area where WH_AREA = #oldTarget#
</select>

<select id="imp_brk_getnewtargetarea" parameterClass="map" resultClass="java.lang.String">
		select wh_area from mast_wh_group where wh_group=(select WH_GROUP from mast_wh_loc where code=#newTarget#)
</select>
 
<update id="updatejoborder" parameterClass="map">
		 update rtrv_move_order 
		 set status = #status# ,
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld = #uldNo# or lsp = #lspNo#
</update>

<update id="updatelsptarget" parameterClass="map">
		 update lsp_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where lsp_no=#lspNo#
		 
</update>

<update id="updateuldtarget" parameterClass="map">
		 update uld_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld_key=#uldNo#
		 
</update>

<select id="getlockstatusforlsp" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(Count(1),'0') from lsp_inventory where lsp_no=#lspNo# and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')
</select>

<select id="getlockstatusforuld" parameterClass="map" resultClass="java.lang.String">
		select decode(NVL(locked,'N'),'Y',locked,NVL(lock_rqs,'N')) from uld_inventory where uld_key=#uldNo# 
</select>


<select id="checkMovOrderExists1" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#	
]]>	
</select>

<select id="checkMovOrderExists" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#
	and status <> 'COMPLETED'
]]>	
</select>


<select id="checkJobOrderExists1" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#LSP# or ULD=#ULD#) and AWB_NO = #AWB_NO#	
]]>	
</select>

<select id="checkJobOrderExists" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#LSP# or ULD=#ULD#) and AWB_NO = #AWB_NO#
	and (STATUS IS NULL or status ='STARTED')
]]>	
</select>


<update id="update_order_byType" parameterClass="map">	
	<![CDATA[
		UPDATE rtrv_move_order
		SET status=#status#,
		LM_USER_ID=#lmUserId#,
		LM_DATE=sysdate
		where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#	
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
	]]>	
</update>

<insert id="create_order_byType" parameterClass="map">
	INSERT INTO rtrv_move_order(FUNC,REF_NO,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,
                            CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE) VALUES
                            (#func#,#refNo#,#awbNo#,#currLocn#,#lspNo#,#uldNo#,#pcs#,#wt#,#target#,#status#, 
                            #crUserId#,sysdate,#lmUserId#, sysdate,#orderType#,#invType#)
 </insert>


 <!--Queries for Assign target location ends   -->	
	<!-- Enquire SRF by RANJITH  STARTS -->
<select id="imp_EnquireSRF_getlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT
			To_Char(SRF_DATE,'DDMONYY HH24:MI')  srfDate,
			A.SRF_NO srfNo,
			A.SRF_NO  srfNoPrefix , 
			SUBSTR(A.SRF_NO,1,8) as srfNoDisp ,
			<!-- pkg_common.get_srf_cc(A.SRF_NO) as strCC, -->
			A.AWB_CC_CODE as strCC,
			A.AWB_NO awbNo,
			SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			SRF_PCS srfPc , 
			SRF_WT srfWt,
			(select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO = A.SRF_NO  group by srf_no) firstCargoArrDate, 
			(select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =A.SRF_NO and b.CLOSED='N' and rownum=1) tdDoc,
			
			To_Char(SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') verTime,
			To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			To_Char(SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			NVL(ESRF_YN,'N') as eSrf,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') else '' end cargoVerification,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_COLLECTED,'DDMONYY HH24:MI') else '' end  cargoCollect,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_RELEASE,'DDMONYY HH24:MI') else '' end  cargoReleaseOK,
			HKID_COLLECT_PERSON hkidOfCollectPerson,
			COLLECT_PERSON_RECVD collectPersonReceive,
			 HOLD_SRF_IND AS holdSrf,
			<!-- (select CC_CODE from IMP_SRF_FLT isf   where isf.srf_no = A.SRF_NO  and isf.awb_no = A.AWB_NO and to_char(isf.AWB_DATE,'DDMONYY')= to_char(A.AWB_DATE,'DDMONYY')) ccCode,-->
			<!-- CASE is added to resolve the bug 'Delivery Completed should show value if all the locations for the SRF are delivered' -->
			case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=A.SRF_NO) > 0 then ''
      		else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = A.SRF_NO group by srf_no )end deliComplDate,
      		decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			A.CR_USER_ID crUserID,
			DECODE(POST_DATE,NULL, 'N','Y') srfPostedYN,  
			case when A.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=A.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
				B.BYPASS_REL byPass,
			A.CONSTRAINED_ON_POST ccOnPostYN,
			statusCDIF,
			statusExit,
			statusVoid,
			(SELECT STRAGG(STRINGDELIM(LOC_CODE,',')) FROM AWB_INVENTORY WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE) locn,
			(SELECT TO_CHAR(MAX(DLV_SNAP_TIME), 'DDMONYY HH24:MI') FROM IMP_SRF WHERE SRF_NO = A.SRF_NO) firstAvailableTime
		FROM (Select s.*, case when 
					(Select count(1) from Imp_CDIF where SRF_No = s.SRF_No and VOID_USER is null) > 0 then 'Y' else 'N' end statusCDIF,  
					   DECODE(POST_DATE,NULL, 'N','Y') statusExit,    
					   DECODE(VOID_DATE,NULL, 'N','Y') statusVoid from IMP_SRF s) A 
		LEFT JOIN  IMP_CAR_AWB B ON A.AWB_NO 	= B.AWB_NO AND A.AWB_DATE  = B.AWB_DATE 
		<isNotEmpty property="truckDockNo">
			LEFT JOIN (SELECT TRUCK_TRIP.TRUCK_DOCK TRUCK_DOCK, IMP_TRUCK_SRF.SRF_NO SRF_NO, TCS_DOCK_MASTER.DOCK_LEVEL  DOCK_LEVEL FROM IMP_TRUCK_SRF, TRUCK_TRIP, TCS_DOCK_MASTER WHERE 
			IMP_TRUCK_SRF.TRIP_ID = TRUCK_TRIP.TRIP_ID AND TRUCK_TRIP.CLOSED = 'N' AND TCS_DOCK_MASTER.TRUCK_DOCK = TRUCK_TRIP.TRUCK_DOCK) T ON T.SRF_NO = A.SRF_NO
		</isNotEmpty>
		WHERE 1= 1 
		<isEmpty property="srfNo">
		AND SRF_DATE BETWEEN      
			TO_DATE(TO_CHAR(#srfDateFrom#||' '||#srfTimeFromHH#||':'||#srfTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#srfDateTo#||' '||#srfTimeToHH#||':'||#srfTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		</isEmpty>
			
		<isNotEmpty property="status">
			<isEqual property="status" compareValue="VOID">
			   	 AND statusVoid = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="POSTED">
				 AND A.POST_DATE is not null
			</isEqual>
			<isEqual property="status" compareValue="NOT_EXIT">
			  AND A.SRF_EXPY_DATE &gt; sysdate 
			  AND statusVoid = 'N'  
			  AND UPPER(A.STATUS) = 'ISSUED'
			</isEqual>
			<isEqual property="status" compareValue="CDIF">
			   	 AND statusCDIF = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXPIRED">
			   	 AND A.SRF_EXPY_DATE &lt; sysdate
				 AND UPPER(A.STATUS) = 'ISSUED'
			</isEqual>
		</isNotEmpty>
	
		<isNotEmpty property="crUserId">
			AND   A.CR_USER_ID  = UPPER(#crUserId#) 	   
		</isNotEmpty>
		<isNotEmpty property="esrfInd">
			AND   NVL(ESRF_YN,'N') = #esrfInd#	   
		</isNotEmpty>
	
		<isNotEmpty property="srfNo">
			AND A.SRF_NO like  ('%'||#srfNo#||'%')	
		</isNotEmpty>
		<isEmpty property="srfNo">
		    <isNotEmpty property="loginCarrier">
				   AND ( A.carr_code = #loginCarrier# OR  A.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	    </isNotEmpty>
                </isEmpty>				
		<isNotEmpty property="srfAgent">
			AND A.AGENT_ID = 	#srfAgent#	
		</isNotEmpty>

		<isNotEmpty property="srfHkid">
			AND A.COLL_HKID = 	#srfHkid#	
		</isNotEmpty>
		
		<isNotEmpty property="srfTD">
		<isEqual property="srfTD" compareValue="Y">
			AND (select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =A.SRF_NO and b.CLOSED = 'N' and rownum=1) is null
		</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="srfByPass">
			<isEqual property="srfByPass" compareValue="Y">
				AND B.BYPASS_REL=#srfByPass#
			</isEqual>
		</isNotEmpty>

		<isNotEmpty property="srfPostYN">
		<isEqual property="srfPostYN" compareValue="Y">
			  AND A.SRF_EXPY_DATE &gt; sysdate 
			  AND statusVoid = 'N'  
			  AND UPPER(A.STATUS) = 'ISSUED'
		</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="constrYN">
		<isEqual property="constrYN" compareValue="Y">
		<![CDATA[
		AND (select count(1) from IMP_SRF_FLT isf  join MAST_CONSTRAINT_CODE mcc  on isf.CC_CODE = mcc.CODE    where isf.srf_no = A.SRF_NO
                        and isf.awb_no = A.AWB_NO and to_char(isf.AWB_DATE,'DDMONYY')= to_char(A.AWB_DATE,'DDMONYY') and mcc.CONSTRAINT='Y')>0
                        ]]>
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="ccOnPostYN">
			<isEqual property="ccOnPostYN" compareValue="Y">
				AND A.CONSTRAINED_ON_POST='Y'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="agentName">
				AND (B.APPNTD_AGENT=#agentName#  or (NVL((select AGENT_NAME from EXP_CAR ECAR where ECAR.AWB_NO = A.AWB_NO and ECAR.AWB_DATE = A.AWB_DATE),'**') = #agentName#))
		</isNotEmpty>
		<isNotEmpty property="prntDateFrom">
		<isNotEmpty property="prntTimeFromHH">
		<isNotEmpty property="prntTimeFromMM">
		<isNotEmpty property="prntDateTo">
		<isNotEmpty property="prntTimeToHH">
		<isNotEmpty property="prntTimeToMM">
		<![CDATA[
			AND SRF_PRNT_DATE BETWEEN      
			TO_DATE(TO_CHAR(#prntDateFrom#||' '||#prntTimeFromHH#||' '||#prntTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#prntDateTo#||' '||#prntTimeToHH#||' '||#prntTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		]]>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="truckDockNo">
			AND T.DOCK_LEVEL = #truckDockNo#
		</isNotEmpty>
		 
		<dynamic prepend="ORDER BY ">
		        <isEmpty property="sortOrder.sortField">
             		SRF_DATE DESC
        		</isEmpty>
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>
 		
	</select>

	<select id = "getCarrCodeForSRF"  parameterClass="map"  resultClass="java.lang.String">	
		SELECT carr_code from imp_srf where srf_no = #SRF_NO#
	</select>

	<select id = "getCarrCodeForCDIF"  parameterClass="map"  resultClass="java.lang.String">	
		SELECT CARR_CODE FROM IMP_SRF WHERE SRF_NO = (select SRF_NO from imp_cdif WHERE CDIF_NO = #CDIF_NO#)
	</select>

	<select id="imp_EnquireSRF_getTotal"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT    
		sum(SRF_PCS) totalSrfPc ,     
		sum(SRF_WT) totalSrfWt
		FROM (Select s.*, case when 
					(Select count(1) from Imp_CDIF where SRF_No = s.SRF_No and VOID_USER is null) > 0 then 'Y' else 'N' end statusCDIF,  
					   DECODE(POST_DATE,NULL, 'N','Y') statusExit,    
					   DECODE(VOID_DATE,NULL, 'N','Y') statusVoid from IMP_SRF s) A, IMP_CAR_AWB B   
		WHERE A.AWB_NO 	= B.AWB_NO AND
		A.AWB_DATE  = B.AWB_DATE 
	
		<isNotEmpty property="status">
			<isEqual property="status" compareValue="VOID">
			   	 AND statusVoid = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXIT">
			   	 AND statusExit = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="NOT_EXIT">
			   	 AND statusExit = 'N' AND statusVoid = 'N'
			</isEqual>
			<isEqual property="status" compareValue="CDIF">
			   	 AND statusCDIF = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXPIRED">
			   	 AND A.SRF_EXPY_DATE &lt; sysdate
				 AND A.STATUS = 'ISSUED'
			</isEqual>
		</isNotEmpty>
	
		<isNotEmpty property="crUserId">
			AND   UPPER(A.CR_USER_ID)  = UPPER(#crUserId#) 	   
		</isNotEmpty>
	
		<isNotEmpty property="srfNo">
			AND A.SRF_NO = 	#srfNo#	
		</isNotEmpty>
	
		<isNotEmpty property="srfDateFrom">
		<isNotEmpty property="srfTimeFromHH">
		<isNotEmpty property="srfTimeFromMM">
		<isNotEmpty property="srfDateTo">
		<isNotEmpty property="srfTimeToHH">
		<isNotEmpty property="srfTimeToMM">
		<![CDATA[
			AND SRF_DATE BETWEEN      
			TO_DATE(TO_CHAR(#srfDateFrom#||' '||#srfTimeFromHH#||' '||#srfTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#srfDateTo#||' '||#srfTimeToHH#||' '||#srfTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		]]>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="loginCarrier">
			and exists (select 1 from Imp_Car_Shp
			where awb_no = a.awb_no and awb_date = a.awb_date and carr_code = #loginCarrier#)
		</isNotEmpty>
	</select>
	<select id="imp_VoidSRF_getDataConsignee"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
				IMG_TRANS_ID transactionId,
			   SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			   SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			   SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			   B.CARR_CODE carrCode,
			   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.AWB_PCS awbPc, 
			   A.AWB_WT awbWt, 
			   A.CONTENT contents,
			   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
			   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   CSGNE_NAME consignee, 
			   APPNTD_AGENT apptdAgt,  
			   case when B.STATUS = 'VOID' then 'N' else
			   case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
			   A.BANK_ENDOS bankEndorsmentYN, 
			   A.BANK_TYPE bank,  
			   A.AIRLN_RMK awbRemarks, 			  
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			   TO_CHAR(B.VERIFIED_TIME,'DDMONYY HH24:MI') verTime, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, (
			   	SELECT MAX(TRUCK_NO) 
			   	FROM TRUCK_TRIP TRIP
  				JOIN IMP_TRUCK_SRF SRFTRIP
 				ON TRIP.TRIP_ID = SRFTRIP.TRIP_ID
  				WHERE SRFTRIP.SRF_NO = B.SRF_NO
  			   ) truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 <!--   (select to_char(DLV_DATE,'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo# and ROWNUM =1 ) deliComplDate, --> 
			   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) > 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
			   <!-- pkg_common.get_srf_cc(b.srf_no) as strCC,-->
			   B.AWB_CC_CODE as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   AND CUST_NO = A.AGENT_CUST_NO AND nvl(upper(Status),'**') &lt;&gt; 'VOID' AND ROWNUM = 1), 0)  airlCrdAvail,
	    	   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN ,
			   NVL(B.ESRF_YN,'N') as esrfInd,
			   B.HOLD_SRF_IND as holdSrf,
			   (SELECT 'Amt: ' || TOTAL_AMT || ', ' || 'Due Date: ' || to_char(DUE_DATE,'DDMONYY')
			   			 FROM BILL_PRE_PAYMENT_DTL where srf_no=#srfNo# and rownum =1 ) prePayInfo
			   FROM IMP_SRF B , IMP_CAR_AWB A
			   WHERE  
			   B.AWB_NO = A.AWB_NO AND
			   B.AWB_DATE = A.AWB_DATE AND
			   B.SRF_NO = #srfNo#
	</select>
	
	<select id="fetchAwbTypeForSRF"  parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT A.AWB_TYPE FROM AWB A  JOIN IMP_SRF S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE WHERE S.SRF_NO = #srfNo#	  
	</select>
	
	<select id="imp_VoidSRF_getDataConsigneeExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			   SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
  			IMG_TRANS_ID transactionId,
			  SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			  SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
         SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		   B.CARR_CODE carrCode,
		   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   A.CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		 	   FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.PCS awbPc, 
			   A.WT awbWt,
			   'E' srfType,
			   A.CONTENT contents,
		   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
		   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   C.CSGNE_NAME consignee, 
			   A.AGENT_NAME apptdAgt,
		   case when B.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CODE) iataCode,
			   '' bankEndorsmentYN, 
			   '' bank,
			   A.AWB_RMK awbRemarks,
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, 					
			   B.TRUCK_NO truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 	   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) &gt; 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
 			   pkg_common.get_srf_cc(b.srf_no) as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
						AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					    AND CUST_NO = A.AGENT_CODE AND nvl(upper(Status),'**') &lt;&gt; 'VOID' ), 0)  airlCrdAvail,
	    	   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND CUST_NO = A.AGENT_CODE AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CODE ), 'N') undertakingYN 
			   FROM IMP_SRF B 
			    JOIN AWB A ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
          LEFT JOIN EXP_CAR C ON B.AWB_NO = C.AWB_NO AND C.AWB_DATE = B.AWB_DATE
			   WHERE   B.SRF_NO =#srfNo#
	</select>
	
	
	<select id="imp_VoidSRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.FLT_KEY flightNoKey, 
			case when length(a.FLT_KEY)>8  then 'N' else 'Y' end as fltKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			CC_CODE strCC, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
		<select id="Imp_enquireSrf_extendCheck"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">	
		SELECT SRF_EXTENDED FROM IMP_SRF WHERE  SRF_NO = #srfNo#
	</select>
	<select id="selectUrfUlds"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	<![CDATA[
		SELECT A.uld_key urfUld
		FROM imp_uld_list A
		JOIN imp_srf_awb_inventory B
		ON 
		a.ULD_KEY = b.ULD_KEY
		AND a.FLT_KEY = b.FLT_KEY
		AND a.flt_date = b.flt_date
		WHERE 
		b.srf_no = #srfNo#
		AND (A.HANDLING_MODE      IS NOT NULL
		AND (upper(A.HANDLING_MODE)='PPK'
		OR upper(A.HANDLING_MODE)  ='NBK'))
	]]>
	</select>
	
	<select id="getVoidSplHdlgCode"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
	SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
          from (select distinct SHC FROM V_IMP_FLT_ULD_SHC
	      WHERE awb_no = #awbNo# AND awb_date = #awbDate#  )
                where ROWNUM <= 3   
	]]>
	</select>
	<select id="Imp_Srf_ruleCode"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		select RULE_VALUE FROM CMSRULES WHERE RULE_CODE =  #ruleCode#
	</select>
        <update id="Imp_Extend_IMP_SRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		update imp_srf set SRF_EXPY_DATE = (SRF_EXPY_DATE + (#extendHrs#/24)), SRF_EXTENDED = (SRF_EXTENDED + 1 ) , LM_USER_ID =#userId#, LM_DATE = sysdate where srf_no = #srfNo#
	</update>
	
	<select id="slectHAWBDtl"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	  select HAWB_NO hawbNo,
           LOCN_HAWB_PCS hawbPcs,
           LOCN_HAWB_WT hawbWt
    from IMP_SRF_AWB_INVENTORY_DTL where SEQ_NO = #seqNo# and SRF_NO = #srfNo#
	</select>
	<select id="selectLocList"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
			select
			SEQ_NO seqNo, 
			LOC_CODE locn,
			NVL(LOCN_PCS,0) dlvPcs,
			NVL(LOCN_WT,0) dlvWt,
			ULD_KEY uld,
			LSP_NO lsp,
			to_char(FLT_DATE,'DDMONYY') fltDate,
			FLT_KEY fltKey,
			DAM_IND damInd,
			to_char(DLV_DATE,'DDMONYY HH24:MI') dlvDate,
			DLV_RMK dlvRmk 
			from imp_srf_awb_inventory
			where SRF_NO=#srfNo#
			and CDIF_NO is NULL
	</select>
	
	<select id="selectCurrLoc"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
			select LOC_CODE currLocn,
			LSP_NO currLSP,
			ULD_KEY currULD,
			LOCN_PCS currPcs,
			LOCN_WT currWt 
			from awb_inventory
			where SRF_NO=#srfNo#
	</select>
	
	
	<select id="checkValidAgent"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	select count(1) from CUST_COMPANY where ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' and code = #AgentId#
	</select>
	
	<select id="checkValidAgentName"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	select count(1) from CUST_COMPANY where ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' and code_desc = #AgentId#
	</select>
	
	
		<!--Enquire SRF by RANJITH Ends -->
			<!--Void SRF by RANJITH Starts-->	
		
<select id="imp_getAwbNoAndDate"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
	SELECT AWB_NO awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') awbDate 
	FROM IMP_SRF  WHERE  SRF_NO = #srfNo#
</select>
<select id="getOnloadCarrierForAWBSRF"  parameterClass="map"  resultClass="java.lang.Integer">
	select count(1) 
	from Imp_Car_Shp s
	join mast_carrier c on c.code = s.carr_code
	where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') 
	and c.SELF_CARR = 'Y'
</select> 
<select id="imp_maintainCdif_CountCheck"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_CDIF WHERE SRF_NO = #srfNo# AND VOID_USER is null
</select>
<update id="imp_voidsrf" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	UPDATE IMP_SRF SET 
	VOID_USER = #lmUserId# , 
	VOID_DATE = SYSDATE , 		
	LM_USER_ID = #lmUserId# ,
	STATUS = 'VOID', 
	LM_DATE = SYSDATE,
	TR_TYPE = #trtype#  
	WHERE SRF_NO = #srfNo#
</update>	
<update id="closeSrfRtrvOrder" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
<![CDATA[
	UPDATE rtrv_move_order
	SET status='CANCELLED'
	where LSP = (SELECT LSP_NO FROM imp_srf_awb_inventory WHERE srf_no=#srfNo# AND ROWNUM=1)
	AND (status IS NULL OR(status <> 'E' AND status <>'C'))
]]>
</update>
<select id="sqlFetchAwbInvDtlsBySrfNo" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT 
			SEQ_NO, NVL(LSP_NO,'DUMMY_LSP') LSP_NO, NVL(ULD_KEY,'DUMMY_ULD') ULD_KEY, LOC_CODE, LOCN_PCS, 
			LOCN_WT, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, BUP_WT, BULK_WT, DAM_PCS, DAM_WT, DAM_IND,
			NVL(FLT_KEY,'DUMMY_FLT_KEY') FLT_KEY, to_char(to_date(NVL(FLT_DATE,'01JAN00')),'DDMONYY') FLT_DATE
		FROM AWB_INVENTORY 
		WHERE SRF_NO=#srfNo#
	</select>
	
	<update id="sqlUpdAwbInvDtlsVoidSrf" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS=NVL(LOCN_PCS,0)+NVL(#LOCN_PCS#, 0), LOCN_WT=NVL(LOCN_WT,0)+NVL(#LOCN_WT#, 0), BUP_WT=BUP_WT+NVL(#BUP_WT#,0), 
			BULK_WT=BULK_WT+NVL(#BULK_WT#,0), DAM_PCS=DAM_PCS+NVL(#DAM_PCS#,0), DAM_WT=DAM_WT+NVL(#DAM_WT#,0), DAM_IND=DECODE(DAM_IND,'Y','Y',#DAM_IND#), 
			LM_USER_ID=#USER_ID#, LM_DATE=SYSDATE, REF_TR_NO=#TR_NO#, REF_TR_TYPE=#REF_TR_TYPE#, REF_AWB_EVENT=#TR_TYPE_EVNT#, REF_TR_EVENT=#REF_TR_EVENT#, 
			REF_TR_DATE=SYSDATE 
		WHERE 
			AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY') AND NVL(LSP_NO,'DUMMY_LSP')=#LSP_NO# 
			AND NVL(ULD_KEY,'DUMMY_ULD')=#ULD_KEY# AND LOC_CODE=#LOC_CODE# 
			AND NVL(FLT_KEY,'DUMMY_FLT_KEY')=#FLT_KEY# AND to_date(NVL(FLT_DATE,'01JAN00'))= to_date(#FLT_DATE#)
			AND SRF_NO IS NULL AND SEQ_NO <> #SEQ_NO#
	]]>
	</update>
	
	<delete id="sqlDeleteAwbInvVoidSrf" parameterClass="java.lang.String">
		DELETE FROM AWB_INVENTORY WHERE SEQ_NO=#SEQ_NO#
	</delete>

	<!--Void  SRF by RANJITH Ends -->

<!-- Issue Notification :: Santosh Desai:: starts -->
	 
	<select id="handler_carriers"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CarrierBO">
		SELECT CODE AS carrCode, CODE_DESC AS carrName FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' ORDER BY CODE
	</select>
	
	
	<select id="imp_trucker_getCustCode" parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="java.util.HashMap">
		SELECT 
			CODE,CODE_DESC 
		FROM 
			CUST_COMPANY 
		WHERE			
			AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'	
			<isNotEmpty property="codeDesc"> 
			AND CODE_DESC=#codeDesc# 
			</isNotEmpty>		
			<isNotEmpty property="coIataCode">
			AND CO_IATA_CODE=#coIataCode# 
			</isNotEmpty>
			AND rownum=1
	</select>

        <select id="imp_issuenotf_checkagent" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_CAR_AWB WHERE APPNTD_AGENT = #PARAM#
	</select>
	
	<select id="imp_issuenotf_checkIATACode" parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM CUST_COMPANY 
	WHERE CODE_DESC =  #codeDesc# 
	AND CO_IATA_CODE=#coIataCode# 
	</select>
	
	<select id="imp_trucker_getCustCompanyList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
			<!-- SELECT 
			   NVL(CC.CODE_DESC, A.APPNTD_AGENT) as codeDesc,
			   A.AGENT_CUST_NO as code,
			   CC.CO_IATA_CODE as coIataCode,
			   A.CARR_CODE as carrCode,
			   CC.TEL_IMP1 as telImp1,
			   CC.TEL_IMP2 as telImp2,
			   a.osCharge as totalOSPayment
		FROM (SELECT CA.AGENT_CUST_NO, count(1) cnt , CARR_CODE, APPNTD_AGENT, sum(gt.osCharge) osCharge
			FROM IMP_CAR_SHP CS      
			JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
				GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
			   		   ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
               AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
			JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
			left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
				 ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE         
			WHERE CS.CARR_CODE = NVL('', CS.CARR_CODE)
			GROUP BY CA.AGENT_CUST_NO, CARR_CODE, APPNTD_AGENT) A  
		LEFT JOIN 	CUST_COMPANY CC ON CC.CODE = A.AGENT_CUST_NO 
		WHERE NVL(CC.CODE_DESC, A.APPNTD_AGENT) = #codeDesc# 
		AND NVL(CC.CO_IATA_CODE, '*') = NVL(#coIataCode#, NVL(CC.CO_IATA_CODE, '*'))
		<isNotEmpty property="loginCarrier">
			AND A.CARR_CODE = #loginCarrier#
		</isNotEmpty>	-->	
		   SELECT 
              NVL(CC.CODE_DESC, AGT_NAME) as codeDesc,
              CC.CO_IATA_CODE as coIataCode,
              A.CARR_CODE as carrCode,
              CC.CODE as code,
              CC.TEL_IMP1 as telImp1,
              CC.TEL_IMP2 as telImp2,
              round(a.osCharge,2) as totalOSPayment
              FROM (SELECT CARR_CODE, AGT_NAME, sum(osCharge) osCharge
          FROM (SELECT S.CARR_CODE, AGT_NAME, gt.osCharge
                FROM (SELECT CA.AWB_NO, CA.AWB_DATE, cs.CARR_CODE, nvl(C.CODE_DESC, CA.APPNTD_AGENT) AGT_NAME
                    FROM IMP_CAR_SHP CS      
                    JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
                    JOIN AWB AWB ON AWB.AWB_NO = CS.AWB_NO AND AWB.AWB_DATE = CS.AWB_DATE AND AWB.AWB_CLOSED_YN='N'
                    JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
                      GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
                             ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
                             AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
                    LEFT JOIN        CUST_COMPANY C ON C.CODE = CA.AGENT_CUST_NO
                    WHERE        
                      CS.CARR_CODE = NVL(#carrCode#, CS.CARR_CODE)                      
                    <isEmpty property="carrCode">
                    	<isNotEmpty property="logedInCarrier">
							AND ( CS.CARR_CODE = #logedInCarrier# OR CS.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #logedInCarrier#))             
        	        	</isNotEmpty>
        	        </isEmpty>  
                    AND (CA.APPNTD_AGENT = NVL(#codeDesc#, CA.APPNTD_AGENT)
                        OR CA.AGENT_CUST_NO = NVL(#code#, CA.AGENT_CUST_NO))) S
                 left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge 
                          from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
                   ON GT.AWB_NO = S.AWB_NO AND GT.AWB_DATE = S.AWB_DATE) CH    
          		GROUP BY CARR_CODE, AGT_NAME) A  
              LEFT JOIN CUST_COMPANY CC ON CC.CODE_desc = A.AGT_NAME
       		where NVL(CC.CO_IATA_CODE, '*') = NVL(#coIataCode#, NVL(CC.CO_IATA_CODE, '*'))       		
			
   	</select>
   	
   	 <select id="imp_trucker_getAWB"  parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
          SELECT
          inv.invPcs as invPcs,
          inv.invWt as invWt,
          NVL(AI.LOCN_PCS,0) ||'/'||NVL(AI.LOCN_WT,0) as invPcsWt,
		  AWB.PCS AS pcsAWB,
          AWB.WT AS wtAWB,
          ISF.DLV_PCS AS dlvPcs,
          ISF.DLV_WT AS dlvWt,
          CA.SHPR_NAME shprName,
          CS.CAR_CREATED carYN,
		  NVL(CC.CODE_DESC, CA.APPNTD_AGENT) as codeDesc,
		  CA.AGENT_CUST_NO as code,
		  AWB.AGENT_CODE chargeAgent,
		  CS.AWB_NO as awbNo,
		  substr(CS.AWB_NO, 1, 3)||'-'||SUBSTR(CS.AWB_NO,4,LENGTH(CS.AWB_NO))as awbNo1,
          TO_CHAR(CS.AWB_DATE, 'DDMONYY') as awbDate,
          AWB.AWB_TYPE as awbType,
          CS.FLT_KEY as fltKey,
          TO_CHAR(CS.FLT_DATE, 'DDMONYY') as fltDate,
          CS.FLT_TYPE as fltType,
          TO_CHAR(CS.FLT_DATE, 'DDMONYY') as fltDateDisplay,
          CS.FLT_KEY||' / '|| TO_CHAR(CS.FLT_DATE,'DDMONYY') fltNoDate,
          CS.FLT_TYPE as fltType,
          CA.AWB_ORIGIN orig,
          CA.AWB_DEST dest,
          CA.CSGNE_NAME csgneName,
          NVL(CA.CSGNE_ADDR1,'Y_X') addr1,
          NVL(CA.CSGNE_ADDR2,'Y_X') addr2,
          NVL(CA.CSGNE_ADDR3,'Y_X') addr3,
          NVL(CA.CSGNE_ADDR4,'Y_X') addr4,
          NVL(CA.CSGNE_ADDR5,'Y_X') addr5,
          NVL(CA.CSGNE_PLACE,'Y_X') place,
          (select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE) as country,         
          NVL(CA.CSGNE_PIN_CODE,'Y_X') pincode,           
          CA.SPL_CODE1 splCode1,
          CA.SPL_CODE2 splCode2,
          CA.SPL_CODE3 splCode3,
		  CA.SPL_CODE4 splCode4,
		  CA.SPL_CODE5 splCode5,
		  CA.SPL_CODE6 splCode6,
		  CA.SPL_CODE7 splCode7,
		  CA.SPL_CODE8 splCode8,
		  CA.SPL_CODE9 splCode9,         
          CA.CONTENT as content,
          TO_CHAR(nvl(ACT_DATE, sch_date),'DDMONYY') as fltActDate,
		  lpad(nvl(act_time, sch_time),4,0) as fltActTime,
          (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
                WHERE V.FLT_KEY = CS.FLT_KEY AND V.FLT_DATE = CS.FLT_DATE AND V.AWB_NO = CS.AWB_NO 
                AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS ccCode, 
          NVL(AI.LOCN_PCS,0) as pcs, NVL(AI.LOCN_WT,0) as wt,
		  NVL(CA.AWB_PCS,0) as awbPcs, NVL(CA.AWB_WT,0) as awbWt,		  
		  NVL(CS.MANIFEST_PCS,0) as mnfstPc,	NVL(CS.MANIFEST_WT,0) as  mnfstWt,  
          DECODE(CS.DAM_PROC_DATE,NULL,'N','Y') as dam,
          0 as osCredit,
          0 as osCash,
          (select (TO_CHAR(NOTF_SENT_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(NOTF_SENT_TIME,'0000')),0,2) || ':'|| SUBSTR(TRIM(TO_CHAR(NOTF_SENT_TIME,'0000')),3,4), ':'))
          from IMP_CAR_SHP ES where ES.AWB_DATE = CS.AWB_DATE AND ES.AWB_NO = CS.AWB_NO AND ES.FLT_DATE = CS.FLT_DATE AND ES.FLT_KEY = CS.FLT_KEY) as ecanSendDate,
          TO_CHAR(pkg_Calculate.GET_FREE_DAYS(CS.FLT_DATE, CS.FLT_KEY,CS.AWB_NO,CS.AWB_DATE), 'DDMONYY') as freeStrorageExpiry,
          CA.CATALOG as catalog,
          round(nvl(GT.AAT_OS,0),2) AS aatOSch,
          round(nvl(GT.AIRL_OS,0),2)  AS  airlOSch
          FROM IMP_CAR_SHP CS
           JOIN (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, count(1) cnt, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT
                   from AWB_INVENTORY 
                   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) AI
                           ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY
            JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
            JOIN AWB AWB ON AWB.AWB_NO = CS.AWB_NO AND AWB.AWB_DATE = CS.AWB_DATE
            LEFT JOIN CUST_COMPANY CC ON CC.CODE = CA.AGENT_CUST_NO
            join FLT_OPR f on f.FLT_KEY  = CS.FLT_KEY  AND f.SCH_DATE =  CS.FLT_DATE  and f.flt_type='A' 
            LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE   
			LEFT JOIN (SELECT  SRF.AWB_DATE, SRF.AWB_NO, SUM(SRF.DLV_PCS) DLV_PCS, SUM(SRF.DLV_WT) DLV_WT FROM IMP_SRF_FLT SRF 
            GROUP BY SRF.AWB_DATE, SRF.AWB_NO) ISF on ISF.AWB_DATE = CS.AWB_DATE AND ISF.AWB_NO = CS.AWB_NO
            left join (select i.awb_no,i.awb_date, sum(locn_pcs) invpcs,sum(locn_wt) invwt 
		                  from awb_inventory i
		                  join flt_opr_events foe on i.flt_key = foe.flt_key and i.flt_date = foe.sch_date and foe.flt_type = 'A' and foe.whse_compl_date is not null
		                  group by i.awb_date, i.awb_no) inv on inv.awb_date = cs.awb_date and inv.awb_no = cs.awb_no
           WHERE NVL(CS.CARR_CODE, '*') LIKE NVL(#carrCode#, CS.CARR_CODE)   
           AND NVL(AWB.DEST,'HKG') = 'HKG'
           <isNotEmpty prepend="AND" property="codeDesc">       
            NVL(CC.CODE_DESC, CA.APPNTD_AGENT) = #codeDesc# 	
           </isNotEmpty> 	 
           <isNotEmpty prepend="AND" property="awbNo">
					CS.AWB_NO = #awbNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="flightKey">
					CS.FLT_KEY = #flightKey#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="flightDate">
					CS.FLT_DATE = #flightDate#
			</isNotEmpty>	
   	</select>
   	
   	
   		<insert id="imp_trucker_getAWB_insert" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		Insert into GT_ISSUE_NOTIFICATION
		(CHARGEAGENT,AWBNO,AWBNO1,AWBDATE,AWBTYPE,FLTKEY,FLTDATE,FLTTYPE,FLTDATEDISPLAY,FLTNODATE,ORIG,DEST,CSGNENAME,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,PLACE,COUNTRY,PINCODE,
		SPLCODE1,SPLCODE2,SPLCODE3,SPLCODE4,SPLCODE5,SPLCODE6,SPLCODE7,SPLCODE8,SPLCODE9,CONTENT,FLTACTDATE,FLTACTTIME,CCCODE,INVPCSWT,PCS,WT,INVPCS,INVWT,AWBPCS,AWBWT,MNFSTPC,
		MNFSTWT,DAM,OSCREDIT,OSCASH,ECANSENDDATE,FREESTRORAGEEXPIRY,CATALOG,AATOSCH,AIRLOSCH,
		CARYN,SHPRNAME,PCSAWB,WTAWB,DLVPCS,DLVWT)
		values
		(#chargeAgent#,#awbNo#,#awbNo1#,#awbDate#,#awbType#,#fltKey#,#fltDate#,#fltType#,#fltDateDisplay#,#fltNoDate#,#orig#,#dest#,#csgneName#,
		#addr1#,#addr2#,#addr3#,#addr4#,#addr5#,#place#,#country#,#pincode#,#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
		substr(#content#,1,20),#fltActDate#,#fltActTime#,#ccCode#,#invPcsWt#,#pcs#,#wt#,#invPcs#,#invWt#,#awbPcs#,#awbWt#,#mnfstPc#,#mnfstWt#,#dam#,#osCredit#,#osCash#,
		#ecanSendDate#,#freeStrorageExpiry#,#catalog#,#aatOSch#,#airlOSch#,
		#carYN#,#shprName#,#pcsAWB#,#wtAWB#,#dlvPcs#,#dlvWt#)
	</insert>

	<select id="imp_trucker_getAWB1" parameterClass="cargo.cms.imprt.bo.CustCompanyBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT 
		chargeAgent chargeAgent,
		awbNo awbNo,
		awbNo1 awbNo1,
		awbDate awbDate,
		awbType awbType,
		fltKey fltKey,
		fltDate as fltDate,
		fltType fltType,
		fltDateDisplay as fltDateDisplay,
		fltNoDate fltNoDate,
		fltType fltType,
		orig orig,
		dest dest,
		csgneName csgneName,
		addr1 addr1,
		addr2 addr2,
		addr3 addr3,
		addr4 addr4,
		addr5 addr5,
		place place,
		country country,
		pincode pincode,
		splCode1 splCode1,
		splCode2 splCode2,
		splCode3 splCode3,
		splCode4 splCode4,
		splCode5 splCode5,
		splCode6 splCode6,
		splCode7 splCode7,
		splCode8 splCode8,
		splCode9 splCode9,
		content content,
		fltActDate as fltActDate,
		fltActTime fltActTime,
		ccCode ccCode,
		invPcsWt invPcsWt,
		wt wt,
		pcs pcs,
		invPcs as invPcs, 
		invWt invWt,
		awbPcs awbPcs,
		awbWt awbWt,
		mnfstPc mnfstPc, mnfstWt mnfstWt,
		dam dam,
		osCredit as osCredit,
		osCash as osCash,
		ecanSendDate ecanSendDate,
		freeStrorageExpiry freeStrorageExpiry,
		catalog catalog,
		aatOSch aatOSch,
		airlOSch airlOSch,
		pcsAWB pcsAWB,
	    wtAWB wtAWB,
	    dlvPcs dlvPcs,
	    dlvWt dlvWt,
	    shprName shprName,
	    carYN carYN
		FROM GT_ISSUE_NOTIFICATION
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
           </isNotEmpty>
		</dynamic>
	</select>


	<select id="imp_trucker_getAWB1COUNT" parameterClass="cargo.cms.imprt.bo.CustCompanyBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT COUNT(1)
		FROM GT_ISSUE_NOTIFICATION
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
           </isNotEmpty>
		</dynamic>
	</select>
   	
<delete id="DELETE_GT_OS_CHARGES" parameterClass="java.lang.String" >
		delete from GT_OS_CHARGES
</delete>   	

   		 
   	
   	<select id="imp_trucker_getNextTrNo" parameterClass="map" resultClass="java.lang.Integer">
	   	 <!-- SELECT IMP_ECAN_SEQ.NEXTVAL from DUAL -->
	   	 SELECT IMP_ECAN_SHP_SEQ.NEXTVAL from DUAL
   	</select>
   	
   	<parameterMap id="argsMap" class="map" >
       <parameter property="agentCode" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="carrierCode" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="prc_os_chrgs_truck_man" parameterMap="argsMap" >
		{  call PRC_OS_CH_TRUCK_MAN(?,?,?) }
	</procedure>
	
	<insert id="imp_trucker_inserteEcanAddress" parameterClass="cargo.cms.imprt.bo.EcanAddressBO" >
	   	INSERT INTO IMP_ECAN_ADDR
		   (TR_NO, ADDR_GRP, ADDR_TYPE, MSG_ADDR, CR_USER_ID, LM_USER_ID, CR_DATE, LM_DATE)
		VALUES
		   (#trNo#,
		   #addressGroup#,
		   #addressType#,
		   #msgAddress#,
		   #createdUserId#,
		   #modifiedUserId#,
		   SYSDATE,
		   SYSDATE)
   </insert>
   
   
   
	<insert id="imp_trucker_insertAwbEvents" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" >
	   INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), 'INF', 'Issue Notification', 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), #fltType#, #trNo#, #uldKey#, #pcs#, 
			#wt#, #lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
   </insert>
   
   <!--  Changed for QR -->
   <insert id="imp_trucker_insertAwbEvents1" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" >
	   INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), 'INF', 'FLT_BD_COMPLT', 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 'I', #trNo#, #uldKey#, #awbPcs#, 
			#awbWt#, #lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
   </insert>
   
   	<update id="imp_trucker_updateImpCarShp1" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			NOA_IND = 'Y',
			LM_USER_ID = 'SYSTEM',
			LM_DATE = SYSDATE,
			TR_TYPE = 'INF',
		  	NOTF_SENT_DATE = TO_char(SYSDATE,'DDMONYY'),
		   	NOTF_SENT_TIME = TO_Char(SYSDATE,'HH24MI')			
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
    <insert id="imp_trucker_insertCustInteraction" parameterClass="map">
	   INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,
  					FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,COMP_DATE,COMP_BY,AWB_DATE,STATUS)
				VALUES (UPPER(#awbNo#),#purpose#, #interactMode#, #contName#,SYSDATE,
				'',#fallowUpAction#, #remarks#,SYSDATE,SYSDATE,#crUserId#,#lmUserId#,SYSDATE,#crUserId#,#awbDate#,'1 New') 		
   </insert>   
   
   
   	<update id="imp_trucker_updateImpCarShp" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			NOA_IND = 'Y',
			LM_USER_ID = #lmUserId#,
			LM_DATE = SYSDATE,
			TR_TYPE = 'INF',
		  	NOTF_SENT_DATE = TO_char(SYSDATE,'DDMONYY'),
		   	NOTF_SENT_TIME = TO_Char(SYSDATE,'HH24MI')
		  WHERE  
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
   
   <select id="chkShcSpecifiedForNOA" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.String">
	    SELECT STRAGG(STRINGDELIM(MAST_SPL_HAND_CODE.CODE,',')) 
    	FROM AWB,MAST_SPL_HAND_CODE
	    WHERE AWB.AWB_NO             = UPPER(#awbNo#)
	    AND AWB.AWB_DATE             =  TO_DATE(#awbDate#,'DDMONYY')  
	    AND (MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE1
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE2
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE3
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE4
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE5
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE6
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE7
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE8
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE9)
	    AND MAST_SPL_HAND_CODE.NOA_YN = 'N'
   	</select>
   	
    <insert id="imp_trucker_inserteEcanShp" parameterClass="cargo.cms.imprt.bo.EcanShpBO" >
	   	INSERT INTO IMP_ECAN_SHP
		   (TR_NO, DOC_LINE_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, FLT_TYPE, CR_USER_ID, LM_USER_ID, CR_DATE, LM_DATE)
		VALUES
		   (#trNo#,
		   #docLineNo#,
		   #awbNo#,
		   TO_DATE(#awbDate#, 'DDMONYY'),		  	 
		   #fltKey#,
 		   TO_DATE(#fltDate#, 'DDMONYY'),
 		   #fltType#,
		   #createdUserId#,
		   #modifiedUserId#,
		   SYSDATE,
		   SYSDATE)		  
   </insert>
   
   <select id="imp_trucker_catalogList" parameterClass="map" resultClass="cargo.cms.imprt.bo.CatalogBO">
		<![CDATA[
		SELECT DECODE(CR_TYPE, 'Import_GEN', 'IG', 'Import_OBC', 'IO') as catalogCode, NVL(sum(CR_BAL), 0) as airlCrdAvail
		FROM CUST_AGENT_AIRL_CREDIT  
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE) and upper(CR_TYPE) like 'IMPORT%' 
		AND CUST_NO = #apptdAgtCode# AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 AND nvl(upper(Status),'**') != 'VOID'
		group by CR_TYPE
   		]]>
   </select> 
   
      <select id="imp_trucker_aat_avaliableCreditLimit_internal" parameterClass="map" resultClass="java.lang.Double">
	 <![CDATA[
		SELECT NVL((SELECT NVL(sum(CR_BAL), 0) as aatCrdAvail
		FROM CUST_AGENT_CREDIT
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) >= trunc(SYSDATE) 
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
		AND CUST_NO = #apptdAgtCode# AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') <> 'VOID'), 0) aatCrdAvail from dual
  	]]>
   	</select>
   	
   	<select id="test_package_execution"  parameterClass="map"  resultClass="java.lang.Integer">
	select count(1) from GT_OS_CHARGES
	</select>
	
	
	<select id="fetchBrKDownComplete"  parameterClass="map"  resultClass="java.lang.String">
	SELECT TO_CHAR(WHSE_COMPL_DATE) FROM FLT_OPR_EVENTS WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A'
	</select>
	
	<!-- Issue Notification ::  Santosh Desai :: Ends -->	
	
	<!-- Amend Collection Slot :: Anup :: Begins -->
	
	<select id="getinitdateBefore2days" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2,'DDMONYY') from dual
	]]>
	</select>
	
	<select id="getinitBefore2HH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'DDMONYY') from dual
	]]>
	</select>
	<select id="getinitBeforeSysdate2HH24" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'HH24') from dual
	]]>
	</select>

	<select id="getinitBeforeSysdate2MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'MI') from dual
	]]>
	</select>     
    
    <select id="getinitAfter2daysHH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2,'DDMONYY') from dual
	]]>
	</select>
        
    <select id="getinitAfter2HH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'DDMONYY') from dual
	]]>
	</select>
	<select id="getinitAfterSysdate2HH24" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'HH24') from dual
	]]>
	</select>

	<select id="getinitAfterSysdate2MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'MI') from dual
	]]>
	</select> 
	<!--  Changed for QR :: Ranjith -->
 	<select id="imp_amend_search_bkg_dtls" parameterClass="cargo.cms.imprt.bo.AmendCollSlotSearchBO" 
 		resultClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
 		<![CDATA[
			SELECT BOOKING_NO as bkgNo, 		  
					 TO_CHAR(CR_DATE, 'DDMONYY HH24:MI') as creationDt, 
			  RTRIM(nvl(TRUCK1,'') ||' , '|| nvl(TRUCK2,'') ||' , '|| nvl(TRUCK3,'') ||' , '|| nvl(TRUCK4,'') 
						||' , '|| nvl(TRUCK5,'') ||' , '|| nvl(TRUCK6,''),  ' , ') truckNo,         
			  case when  decode(TRUCK1,null,0,1) + decode(TRUCK2,null,0,1) + decode(TRUCK3,null,0,1) +
              decode(TRUCK4,null,0,1) + decode(TRUCK5,null,0,1) + decode(TRUCK6,null,0,1)  > 3 then '2' else '1' end noTruckDocks, 
				COLL_PERSON_NAME as collBy, TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDt,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStr, 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) bkgTimeSlotToStr,
				TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot,
				COLL_PERSON_ID as hkId, nvl(PHONE_NO,'') as phoneNo,
			   (SELECT  stragg(stringdelim(AWB_NO,', ')) FROM ( select DISTINCT AWB_NO , BOOKING_NO from IMP_BOOKING_DTL ) IMP_BOOKING_DTL 
			   						where IMP_BOOKING_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO) awbNo ,
			    TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDtHide,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStrHide,
				nvl(TRUCK1,'')  truckNoOne,
				nvl(TRUCK2,'') truckNoTwo,  
				nvl(TRUCK3,'') truckNoThree ,  
				nvl(TRUCK4,'') truckNoFour,
				nvl(TRUCK5,'') truckNoFive, 
				nvl(TRUCK6,'') truckNoSix,
				SRF_ISSUED srfissuedYn,
				COLL_PERSON_NAME as collByHide, COLL_PERSON_ID as hkIdHide, nvl(PHONE_NO,'') as phoneNoHide, 
				nvl(TRUCK1,'')  truckNoOneHide,
				nvl(TRUCK2,'') truckNoTwoHide,  
				nvl(TRUCK3,'') truckNoThreeHide,  
				nvl(TRUCK4,'') truckNoFourHide,
				nvl(TRUCK5,'') truckNoFiveHide, 
				nvl(TRUCK6,'') truckNoSixHide
			FROM 
				IMP_BOOKING
			WHERE to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate
          		and status <> 'CANCEL' AND SRF_ISSUED = 'N' AND (
          			SELECT COUNT(1) 
          			FROM IMP_SRF SRF
          			JOIN IMP_SRF_FLT SRF_FLT
          			ON SRF.SRF_NO = SRF_FLT.SRF_NO AND SRF.STATUS <> 'VOID'
          			JOIN IMP_BOOKING_DTL BKG_DTL
          			ON SRF_FLT.AWB_NO = BKG_DTL.AWB_NO AND SRF_FLT.AWB_DATE = BKG_DTL.AWB_DATE AND
          				SRF_FLT.FLT_KEY = BKG_DTL.FLT_KEY AND SRF_FLT.FLT_DATE = BKG_DTL.FLT_DATE
          			WHERE SRF_FLT.DLV_PCS > 0 AND BKG_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO
          		) = 0
      		]]>
      		 <isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="truckNo">
      		 		#truckNo# IN(TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, TRUCK6)
      		 </isNotEmpty>      		 
      		 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="agtCode">
      		 		AGENT_ID = #agtCode#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="agtName">
      		 		AGENT_ID = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#agtName#) AND ACTIVE = 'Y')
      		 </isNotEmpty>
      		 <isEqual property="searchBy" compareValue="CREATE">	 
	      		 <isNotEmpty property="createDtFrom">
		      		 <isNotEmpty property="createDtTo">
			      		AND (CR_DATE &gt;= TO_DATE(#createDtFrom#, 'DDMONYY') AND CR_DATE &lt;= ((TO_DATE(#createDtTo#, 'DDMONYY') + 1) - 1/24/60))
		      		 </isNotEmpty>
	      		 </isNotEmpty>
      		 </isEqual>
      		 <isEqual property="searchBy" compareValue="BKG">
				 <isNotEmpty property="bkgTimeSlotFromDt">
					 <isNotEmpty property="bkgTimeSlotToDt">
					  	<isNotEmpty property="bkgTimeSlotFromStr">
				  		 <isNotEmpty property="bkgTimeSlotToStr">
				      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
				              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
				 		 </isNotEmpty>
				 		 </isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isEqual>    		 
      		 ORDER BY BOOKING_NO
 	</select>
 	
 	<select id="imp_amend_shpmt_coll_lst" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO"
 		resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		<![CDATA[
		select a.* from 
 		( select  bkg.BOOKING_NO bkgNo, SUBSTR(bkgDtl.AWB_NO,1,3)  awbNoPfx , SUBSTR(bkgDtl.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(bkgDtl.AWB_NO,1,3)||'-'||SUBSTR(bkgDtl.AWB_NO,4) as awbNoDisp ,  bkgDtl.awb_no awbNo, to_char(bkgDtl.awb_date,'DDMONYY') awbDate ,
				bkgDtl.flt_Key fltKey, to_char(bkgDtl.flt_date,'DDMONYY') fltDate, sta, eta, ata,
      			decode(WHSE_COMPL_DATE,null,'N','Y') bdcompl,
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
          		nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
        		case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = bkgDtl.awb_no and  t1.awb_date = bkgDtl.awb_date 
					and t1.flt_key = bkgDtl.flt_key and t1.flt_DATE = bkgDtl.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = bkgDtl.FLT_KEY AND V.FLT_DATE = bkgDtl.FLT_DATE AND V.AWB_NO = bkgDtl.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc  ,    
				bkgDtl.CHARGES  chrgs, TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		        (select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            	shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CODE = #loginId#) loginHkid,
                bkgDtl.AIRL_CHRG airlChrgs, bkgDtl.CPCT_CHRG agtChrgs, 
                bkgDtl.AIRL_CHRG showAirlChrgs, bkgDtl.CPCT_CHRG showAgtChrgs, 
                 (case when bkgDtl.AIRL_CHRG > 0 then 'A'  end ) revIndAirl,
                 (case when bkgDtl.CPCT_CHRG > 0 then 'G'  end ) revIndGrund,
                nvl(SRF.print_ind,'N') printSrf, shp.Carr_code carrCode		       
			from IMP_BOOKING bkg
      join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
      join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date ) fltTimes  
          on  bkgDtl.flt_Key = fltTimes.flt_Key and  bkgDtl.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
    join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date and shp.flt_Key = bkgDtl.flt_Key 
          and  shp.flt_Date = bkgDtl.flt_date  
    join IMP_CAR_AWB carAwb on bkgDtl.awb_no = carAwb.awb_no and  bkgDtl.awb_date = carAwb.awb_date                  
    join AWB on bkgDtl.awb_no = AWB.awb_no and  bkgDtl.awb_date = AWB.awb_date                  
    left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
          group by awb_no, awb_date, flt_key, flt_date) awbInv 
          on bkgDtl.awb_no = awbInv.awb_no and  bkgDtl.awb_date = awbInv.awb_date and awbInv.flt_Key = bkgDtl.flt_Key 
          and  awbInv.flt_Date = bkgDtl.flt_date 
    left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on bkgDtl.awb_no = trkMnf.awb_no and  bkgDtl.awb_date = trkMnf.awb_date and bkgDtl.flt_key = trkMnf.flt_key and bkgDtl.flt_DATE = trkMnf.flt_date
      left join IMP_SRF SRF ON SRF.SRF_NO = bkgDtl.SRF_NO
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
    Where bkg.booking_no =  #bkgNo#) a
					order by  bdcompl desc , to_date(estCollTime,'DDMONYY HH24:MI') desc, ata desc
			 	]]>
 	</select>
 	
 	<select id="getAmendBookingAgtCreditBalList" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
	 <![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
              and agtTab.CUST_NO = #agtCode# 
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			and crdLvl in ('AGENT_LVL','DM_LVL','CPCT_LVL','CPCT_LVL_GEN') 
      			group by crdLvl	    	
   	]]>
   	</select>

	<select id="getAmendAirlBookingCreditBalList" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
	<![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			 AND CRDLVL IN ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','AIRL_LVL_GEN','AIRL_LVL')
      			group by crdLvl	    
		]]>
	</select>
	
	<select id="getAmendAirlAmtAgnstBkg" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="java.lang.String">
	 <![CDATA[
	     select sum(bkgDtl.AIRL_CHRG) airlChrgs
				from IMP_BOOKING bkg
	      		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
	     		join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date 
	     								and shp.flt_Key = bkgDtl.flt_Key and  shp.flt_Date = bkgDtl.flt_date  
	     Where  status = 'ISSUED'  and ((bkg.agent_id = #agtCode#  ) or (bkg.TRUCKER_id =  #agtCode# )) 
	     and shp.carr_code = #carrCode#
	     and  TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
	     and bkg.BOOKING_NO <> #bkgNo#
   	]]>
   	</select>
        
	<select id="getAmendAgtAmtAgnstBkg" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="java.lang.String">
	 <![CDATA[
     	select sum(bkgDtl.CPCT_CHRG) agtChrgs
		from IMP_BOOKING bkg
		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
		Where  status = 'ISSUED' 
			and TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
			and ((bkg.agent_id = #agtCode#) or (bkg.TRUCKER_id =  #agtCode#))
			and bkg.BOOKING_NO <> #bkgNo#
   	]]>
   	</select>
 	
	<update id="cancelBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		update IMP_BOOKING set status = 'CANCEL' , lm_date = sysdate , lm_user_id = #loginId# where BOOKING_NO = #bkgNo#				
	</update>
	
	
	<select id="checkForValidAgent" parameterClass="java.lang.String" resultClass="java.lang.String">
	  select case when (SELECT decode(COUNT(1),0,'','X') FROM cust_company WHERE code_desc = #codeDesc#) is not null then 'X'
      else  (SELECT decode(COUNT(1),0,'','X') FROM IMP_CAR_AWB WHERE APPNTD_AGENT = #codeDesc#) end from dual
	</select>	
		
	<select id="imp_amend_shpmt_WOBooking_coll_lst" parameterClass="cargo.cms.imprt.bo.AmendCollSlotSearchBO"
 		resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		<![CDATA[
 		select a.* from (select shp.rowid rid, (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY') fltDate, sta  , eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
				nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl((SELECT (SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE) bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1),'N')  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'NO Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'NO Booking', 'Booked'),'Assigned'))  status, 
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,    
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		          comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CODE = #loginId#) loginHkid, shp.Carr_code carrCode
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                        
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 			
			left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
			left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate ) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
      left join (SELECT sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date, sum(sf.DLV_PCS) deliveryPcs,
                  sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN
                FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
                      or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
                group by  sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date) srf
          on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date and srf.flt_Key = shp.flt_Key 
          and  srf.flt_Date = shp.flt_date 
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      								and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			and nvl(trkMnf.trk_manf_flz, 'N') = 'N' and nvl(srf.srfYN,0) = 0 and (shp.recd_pcs = 0 or (shp.recd_pcs > 0 and awbInv.invPcs > 0))
						
				]]>
		<isNotEmpty property="arlRowId">
           <iterate prepend="AND" property="arlRowId"
          open="(" close=")" conjunction="OR" >
              shp.rowid =  #arlRowId[]#
          </iterate>  
        </isNotEmpty>      
		 ) a where a.status &lt;&gt; 'Booked'	 order by sortStatus, bdcompl desc,to_date(estCollTime,'DDMONYY HH24:MI') desc , ata desc	
		
 	</select>
	
	<select id="getMaxDoclineNoOfBooking" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select max(to_number(nvl(doc_line_no,0))) doclinenumer from IMP_BOOKING_dtl where booking_No = #bkgNo# 
	</select>
	
	<select id="tcsCheckingValueYN" parameterClass="java.lang.String" resultClass="java.lang.String">
		select RULE_VALUE from cmsrules where RULE_CODE = 'VAL_CHK_TCS_DOWN'
	</select>
	
	<select id="tcsAmndHrs" parameterClass="java.lang.String" resultClass="java.lang.String">
		select RULE_VALUE from cmsrules where RULE_CODE = 'BOOKING_SLOT_AMEND_TIME_HRS'
	</select>
	
	<select id="tcsAmndHrsCheck" parameterClass="java.lang.String" resultClass="java.lang.Double">
    	<![CDATA[
			select (to_date(#paramTime#,'DDMONYY HH24:MI') - nvl((select RULE_VALUE from cmsrules where RULE_CODE = 'BOOKING_SLOT_AMEND_TIME_HRS'),0)/ 24 )  - sysdate from  dual
		]]>
	</select>
	
	<select id="getPrintSrfYN" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT PRINT_IND printSrfYN
			FROM IMP_SRF s
			join imp_srf_flt sf on s.srf_no = sf.srf_no 
			WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
			or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )) 
			and sf.awb_no = #awbNo# and  sf.awb_date = #awbDate# and sf.flt_Key = #fltKey# 
			and  sf.flt_Date = #fltDate# 
		]]>
	</select>
	
	<update id="updateAmendBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		update IMP_BOOKING set 
				COLL_PERSON_NAME =#collByName# , COLL_PERSON_ID = #collBy#, 
				TRUCK1 = #truckNoOne#, TRUCK2 = #truckNoTwo#, TRUCK3 = #truckNoThree#,
				TRUCK4 =#truckNoFour#, TRUCK5 = #truckNoFive#, TRUCK6 = #truckNoSix#, 
				PHONE_NO = #phoneNo# , LM_USER_ID = #loginId# , LM_DATE = sysdate, 
				BKG_SLOT_DATE = #bkgTimeSlotDt# ,BKG_SLOT_FROM = #startTime# ,BKG_SLOT_TO = #endTime#,
				HK_ID = #hkId#, COLLECT_ULD = #collectUld#, 
				PURPOSE = #bkgPurpose#, DOCK_PURPOSE = #dockPurpose#, EXP_DURATION = #expDuration#, 
				POOL_ID = #poolId#, DEL_ZONE = #deliveryZone#
		Where BOOKING_NO = #bkgNo# 
	</update>
	
	<insert id="insertAmendBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		Insert into IMP_BOOKING (BOOKING_NO,BOOKING_DATE,COLL_PERSON_NAME,COLL_PERSON_ID,TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,
		TRUCK6,PHONE_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BKG_SLOT_DATE,BKG_SLOT_FROM,BKG_SLOT_TO,HK_ID,STATUS,COLLECT_ULD,
		PURPOSE, DOCK_PURPOSE, EXP_DURATION) 
		values ( #bkgNo#,sysdate,#loginCustName#,#loginCustNo#,#collByName#,#collBy#,#truckNoOne#,#truckNoTwo#,#truckNoThree#,#truckNoFour#,#truckNoFive#,
		#truckNoSix#,#phoneNo#,#loginId#,sysdate,#loginId#,sysdate,#bkgTimeSlotDt#,#bkgTimeSlotFromStr#,#bkgTimeSlotToStr#,#hkId#,'ISSUED',#collectUld#,
		#bkgPurpose#, #dockPurpose#, #expDuration#)
	</insert>
	
	<insert id="insertAmendBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		Insert into IMP_BOOKING_DTL (BOOKING_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CHARGES,AUTH_REP_NAME,AUTH_REP_ID,AIRL_CHRG,CPCT_CHRG) 
		values (#bookingNo#,#docLineNumber#,#awbNo#,#awbDate#,#fltKey#,#fltDate#,#loginId#,sysdate,#loginId#,sysdate,#chrgs#,#asgnTruckerCode#,#asgnLoginId#,#airlChrgs#,#agtChrgs#)
	</insert>
	
	<update id="amendBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
			update IMP_BOOKING_DTL 
			    set
			    DOC_LINE_NO = #docLineNumber#,
			    LM_USER_ID = #loginId#,
			    LM_DATE = sysdate,
			    CHARGES = #chrgs#,
			    AUTH_REP_NAME = #asgnTruckerCode#,
			    AUTH_REP_ID = #asgnLoginId#,
			    AIRL_CHRG = #airlChrgs#,
			    CPCT_CHRG = #agtChrgs#
			    where  BOOKING_NO = #bookingNo# and 
			     AWB_NO = #awbNo# and 
			    AWB_DATE = to_date(#awbDate#,'DDMONYY') and 
			    FLT_KEY = #fltKey# and 
			    FLT_DATE = to_date(#fltDate#,'DDMONYY')		
	</update>
	
	<delete id="deleteBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
			delete from  IMP_BOOKING_DTL 
			    where  BOOKING_NO = #bookingNo# and
			     AWB_NO = #awbNo# and 
			    AWB_DATE = to_date(#awbDate#,'DDMONYY') and 
			    FLT_KEY = #fltKey# and 
			    FLT_DATE = to_date(#fltDate#,'DDMONYY')		
	</delete>
 <!-- Amend Collection Slot :: Anup :: Ends -->
 <!-- Flight Document Report :: breakdown -->
 	<!-- For 'AVI' -->
	<select id="flight_report_getAVISplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'AVI' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('AVI') or SPL_CODE2 in ('AVI') or SPL_CODE3 in ('AVI') or SPL_CODE4 in ('AVI')
			or SPL_CODE5 in ('AVI') or SPL_CODE6 in ('AVI') or SPL_CODE7 in ('AVI') or SPL_CODE8 in ('AVI') or SPL_CODE9 in ('AVI'))
	</select>
	<!-- For 'DG' -->
	<select id="flight_report_getDGSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'DG' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE))
			or SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			)
	</select>
	<!-- For 'VAL'  SPL_VAL -->
	<select id="flight_report_getVALSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'VAL' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE))
			or SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			)
	</select>
	<!-- For 'VUN' -->
	<select id="flight_report_getVUNSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
	select 'SPL' as type, 'VUN' as code, count(1) as noOfShp
	from IMP_CAR_SHP s
	join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
	where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	AND (SPL_CODE1 in ('VUN') or SPL_CODE2 in ('VUN') or SPL_CODE3 in ('VUN') or SPL_CODE4 in ('VUN')
		or SPL_CODE5 in ('VUN') or SPL_CODE6 in ('VUN') or SPL_CODE7 in ('VUN') or SPL_CODE8 in ('VUN') or SPL_CODE9 in ('VUN'))
	</select>	
	<!--   For 'COL' -->
		<select id="flight_report_getCOLSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'Cool Room Cargo(COL)' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('COL') or SPL_CODE2 in ('COL') or SPL_CODE3 in ('COL') or SPL_CODE4 in ('COL')
		or SPL_CODE5 in ('COL') or SPL_CODE6 in ('COL') or SPL_CODE7 in ('COL') or SPL_CODE8 in ('COL') or SPL_CODE9 in ('COL')) 
	</select>
	<!--  For 'FRZ' -->
	<select id="flight_report_getFRZSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'Freezer Room(FRZ)' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('FRZ') or SPL_CODE2 in ('FRZ') or SPL_CODE3 in ('FRZ') or SPL_CODE4 in ('FRZ')
		or SPL_CODE5 in ('FRZ') or SPL_CODE6 in ('FRZ') or SPL_CODE7 in ('FRZ') or SPL_CODE8 in ('FRZ') or SPL_CODE9 in ('FRZ')) 
	</select>
	<!--  For 'RAD' -->
	<select id="flight_report_getRADSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
			resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'RAD' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('RAD') or SPL_CODE2 in ('RAD') or SPL_CODE3 in ('RAD') or SPL_CODE4 in ('RAD')
		or SPL_CODE5 in ('RAD') or SPL_CODE6 in ('RAD') or SPL_CODE7 in ('RAD') or SPL_CODE8 in ('RAD') or SPL_CODE9 in ('RAD')) 
	</select>
	<!-- SL -->
	<select id="flight_report_getSLSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'SL' as code, count(1) as noOfShp from IMP_CAR_SHP 
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND 
		(CIR_PCS_TYPE = 'SL' or CIR_WT_TYPE = 'SL') AND CIR_PROC_USER is not null
	</select>
	
	<!-- SP -->
	<select id="flight_report_getSPSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'SP' as code, count(1) as noOfShp from 
			IMP_CAR_SHP where 
			FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND (CIR_PCS_TYPE = 'SP' or CIR_WT_TYPE = 'SP') AND CIR_PROC_USER is not null
	</select>
	
	<!-- T/S -->
	<select id="flight_report_getTSSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'T/S' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND Catalog like 'T%'
	</select>
	<!-- MISC -->
	<select id="flight_report_getSpl" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
			SELECT 
				   RECORD_TYPE as type,
				   CODE as code,
				   NO_OF_SHP as noOfShp,
				   DOC_LINE_NO as docLineNo
			FROM IMP_FLT_HAND_WH_SPL_INFO
			WHERE 	
				  FLT_KEY = #fltKey# AND
				  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				  RECORD_TYPE = #recordType# AND
				  TR_NO = #reptTrNo# 
				  Order by RECORD_TYPE , CODE
	</select>
	<select id="generateBdTonnage" parameterClass="cargo.cms.imprt.bo.FlightReportBO"  resultClass="java.lang.String">
	<![CDATA[
		SELECT SUM(RECD_WT) FROM IMP_CAR_SHP WHERE FLT_KEY = #fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# 
	]]>
	</select>
	<select id="flight_report_getDocSortingOffInfoIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
	 resultClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
	
	SELECT 
		   TR_NO as trNo,
		   DOC_LINE_NO as docLineNo,
		   TO_CHAR(INFO_DATE,'DDMONYY') as timeDate,
		   INFO_TIME as infoTime,
		   INFO_CONTENT as content,
		   INFO_USER as documentStaffAdviced,
		   INFO_ACT as resultAction,
		   substr(trim(to_char(INFO_TIME,'0000')), 0, 2) timeHour,
		   substr(trim(to_char(INFO_TIME,'0000')), 3, 4) timeMinute
	FROM IMP_FLT_HAND_DOC_OFFINFO 
	
	WHERE FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  FROM_TO = #fromTo# AND
		  TR_NO = #reptTrNo#
	</select>
	<insert id="flight_report_insertimpflthandsummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO">
	INSERT INTO IMP_FLT_HAND_SUMMARY (
	   TR_NO, REP_MODULE, CARR_CODE, 
	   FLT_NO, FLT_DATE, FLT_KEY, 
	   FLT_ATA, SVC_STD_RMK,  
		CR_USER_ID, CR_DATE,  
		LM_USER_ID, LM_DATE , BD_TONNAGE,GEN_RMK, IMAGE) 
	VALUES (#reptTrNo#, #reptType#, #carrCode#,
			#fltNo#, to_date(#fltDate#,'DDMONYY'), #fltKey#,
			#ataForInsert#, #serviceStdRemarks#, 
			#userID#, SYSDATE , 
			#userID#, SYSDATE ,#bdTonnage# ,#generalRmk#, #transactionId#
	 )
	</insert>
			
	<insert id="flight_report_insertimpflthanddocoffinfo" parameterClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
	INSERT INTO IMP_FLT_HAND_DOC_OFFINFO (
	   TR_NO, DOC_LINE_NO, FLT_NO, 
	   FLT_DATE, FLT_KEY, 
	   CARR_CODE, FROM_TO, INFO_DATE, 
	   INFO_TIME, INFO_USER, INFO_CONTENT, 
	   INFO_ACT, CR_USER_ID, CR_DATE, 
	   LM_USER_ID, LM_DATE) 
	VALUES ( #trNo#, #docLineNo#, #fltNo#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#,
	    #carrCode#, #fromTo#, to_date(#timeDate#,'DDMONYY'),
	    #infoTime#, #documentStaffAdviced#, #content#,
	    #resultAction#, #userID#, SYSDATE,
	    #userID#, SYSDATE)	
	</insert>	
	<insert id="flight_report_insertimpflthandsplhdlgshp" parameterClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO">
	INSERT INTO IMP_FLT_HAND_WH_SPL_INFO ( 
		TR_NO, DOC_LINE_NO, FLT_DATE, 
		FLT_KEY, CARR_CODE,	RECORD_TYPE, 
		CODE, NO_OF_SHP, CR_USER_ID, 
		CR_DATE, LM_USER_ID, LM_DATE ) VALUES ( 
		#trNo#, #docLineNo#, to_date(#fltDate#,'DDMONYY'), 
		#fltKey#, #carrCode#, #type#, 
		#code#, #noOfShp#, #userID#,
	    SYSDATE, #userID#, SYSDATE)	 
	</insert>
	<delete id="flight_report_deleteMiscSpl" parameterClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO">

		  DELETE IMP_FLT_HAND_WH_SPL_INFO	
		  WHERE		
		  FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  RECORD_TYPE = 'MISC' AND
		  DOC_LINE_NO = #docLineNo#  AND
		  TR_NO = #reptTrNo#

	</delete>
	<select id="get_flight_details_report" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.FlightReportBO" >	
	SELECT  SUBSTR(TRIM(TO_CHAR(NVL(OPR.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(OPR.SCH_TIME,0),'0000')),3,4) sta,
			PKG_COMMON.get_flt_eta(FLT_KEY, SCH_DATE, 'A')  eta,
			PKG_COMMON.get_flt_ata(FLT_KEY, SCH_DATE, 'A')  ata,
			(select code_desc from MAST_ACFT_TYPE where code = OPR.ACFT_TYPE) cargoAcftType,
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.WTHR_COND AND CODE_TYPE='WTH_CONDN') weather,
			pkg_common.flt_route(FLT_KEY, SCH_DATE, 'A') portOfCall
	FROM	FLT_OPR OPR
	WHERE	OPR.FLT_TYPE = 'A'
	AND		OPR.SCH_DATE = #fltDate#
	AND		OPR.FLT_KEY = #fltKey#	
	</select>
	
	<select id="flight_report_getCCSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
	select 'CC' as type,c.CODE code ,nvl(noOfShp, 0) noOfShp
		from MAST_CONSTRAINT_CODE c
		left join (select code as code, 
						  count(1) noOfShp 
				   from (SELECT V.CC_CODE code
			 	  		  from V_CST_IMP_CC_CODE_AWB V
	                          where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	                              AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000') 
					group by CODE) S on C.CODE = S.CODE
		where IMP_FLT_RPT_YN = 'Y'
	</select>

	<delete id="flight_report_deleteDocSortingOfficeIMBFR" parameterClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
		DELETE FROM IMP_FLT_HAND_DOC_OFFINFO
		
		WHERE 
		  FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  DOC_LINE_NO = #docLineNo#  AND
		  TR_NO = #reptTrNo#
	</delete>
	<select id="flight_brkDwnReport_getTimeStamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			TSTAMP_CODE as itemCode, 
			to_char(TSTAMP_DATE,'DDMONYY') as actionedTime,
			substr(trim(to_char(TSTAMP_TIME,'0000')), 0, 2) actionedTimeHour,
		   substr(trim(to_char(TSTAMP_TIME,'0000')), 3, 4) actionedTimeMinute		
		FROM IMP_FLT_HAND_TIME_STAMP A
		where FLT_KEY=#fltKey# and FLT_DATE=#fltDate# 
		and TSTAMP_CODE in ('CRCI','PER_STIME','PER_CBDCOM','XAVICBDCOM') 
		
	</select> 
	
 <!-- Flight Document Report :: breakdown -->

 
 <!-- Import House Constraint Code Enquiry::  starts -->
 	
 	<select id="shipment_tracking_getConstraintCode"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	SELECT
	VV.AWB_NO as awb, VV.HAWB_NO as hawb, 
	NVL(FH.manifest_desc,AA.CONTENT) as content, VV.FLT_KEY as fltKey, TO_CHAR(VV.FLT_DATE, 'DDMONYY') as fltDate,
	TO_CHAR(VV.FLT_DATE, 'DDMONYY') as fltDateDisplay ,VV.CC_CODE as ccCode
	FROM V_CST_IMP_CC_CODE_ALL  VV
	join imp_car_shp s ON s.FLT_KEY = vv.FLT_KEY AND s.FLT_DATE = vv.FLT_DATE AND s.AWB_NO = vv.AWB_NO 
	join IMP_CAR_AWB AA on aa.AWB_NO = s.AWB_NO and aa.awb_date = s.awb_date
	LEFT JOIN (SELECT FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO,FHAWB.manifest_desc 
  	FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = VV.HAWB_NO AND FH.AWB_NO = S.AWB_NO AND FH.AWB_DATE = S.AWB_DATE
	WHERE VV.AWB_NO = #awb# AND VV.AWB_DATE = (select max(awb_date) from  awb where  awb_no = #awb#)
	<isNotEmpty property="custCode">
		and AA.AGENT_CUST_NO = #custCode#
	</isNotEmpty> 
	order by vv.flt_key, vv.flt_date, vv.hawb_no
</select>
 
 <!-- Import House Constraint Code Enquiry:: Ends -->
 
 
 <!-- Issue Truck Seal:: Starts -->
	 <select id="selectsealnosbytruckno" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="cargo.cms.imprt.bo.IssueTruckSealBO">
			select seal_no as seal from truck_seal where truck_no = #truckNo#
	</select>
	
	<select id="validate_truck_in_terminal"	parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.String">
			SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N' and CURR_LOC NOT IN ('TPA','TPX')
	</select>
	
	<select id="getSRFdtlsForTruck"	parameterClass="map" resultClass="cargo.cms.imprt.bo.IssueTruckSealBO">
			SELECT 
			S.SRF_NO as srfNo,
			A.AWB_NO as awbNo,
			to_char(A.AWB_DATE,'DDMONYY') as awbDate
			FROM IMP_SRF A
			JOIN IMP_TRUCK_SRF  S ON S.SRF_NO = A.SRF_NO
			WHERE S.TRIP_ID = #tripId#
			AND A.VOID_DATE is null
	</select>
	
	<select id="check_SRF_posted_for_truck" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM IMP_SRF WHERE AWB_NO = #awbNo# 
			and awb_date = to_date(#awbDate#,'DDMONYY') and status='POSTED' and srf_no=#srfNo# AND POST_DATE IS NOT NULL
	</select>
	<select id="checkSRFVoided" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM IMP_SRF WHERE  status='VOID' and srf_no=#srfNo# AND VOID_DATE IS NOT NULL AND VOID_USER IS NOT NULL
	</select>
	
	<select id="check_outstanding_charge_for_shipment" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo#
		and awb_date = to_date(#awbDate#,'DDMONYY') and status='PENDING' AND ((WAVR_DONE='Y' AND CHRG_AMT>0) OR WAVR_DONE='N') and srf_no=#srfNo#
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="check_manifest_posted_for_truck" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.String">
		select 'Y' from dual
	</select>
	
	-->
	<select id="check_unique_seal" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from truck_seal where seal_no =#sealNo#
	</select>
	
	<insert id="insert_sealNo_for_truck" parameterClass="map">
	insert into truck_seal (TRIP_ID,SEAL_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_NO) values
	(#tripId#,#sealNo#,#crUserId#,sysdate,#lmUserId#,sysdate,#truckNo#)	 
	</insert>

	<update id="delete_sealNo_for_truck" parameterClass="map">
		delete from truck_seal	WHERE SEAL_NO = #oldSealNo# and TRUCK_NO = #truckNo#
	</update>
 
 <!-- Issue Truck Seal:: Ends -->
 
 <!-- Capture SRF Delivery by Location :: Anup :: Starts -->
 	<select id="get_dlv_endorsement_user" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE AS username
		FROM 
			SEC_USER
		WHERE 
			UPPER(CODE) = UPPER(#username#)
 	</select>
 	<select id="get_dlv_endorsement_password" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			USER_PASSWORD  AS orgPwd
		FROM 
			SEC_USER
		WHERE 
			UPPER(CODE) = UPPER(#username#)
 	</select>
 	<select id="get_role_by_user" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			ROLE_NAME AS rolename 
 		FROM 
 			SEC_USER_ROLE 
		WHERE 
			UPPER(USER_ID)= UPPER(#username#) ORDER BY ROLE_NAME
 	</select>
 <select id="find_SRF_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
 		SELECT A.SRF_PCS AS srfPc, A.SRF_WT AS srfWt, 
 			A.COLL_NAME AS collBy, A.COLL_HKID AS hkId,
    	       A.awb_cc_code as ccCodeMble
      FROM 
            IMP_SRF A 
        WHERE A.SRF_NO = #srfNo#
 	</select>
 	<select id="find_SRF_Cargo_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">			
		<!-- SELECT 
 			A.ULD_KEY as uldNo, A.LOCN_PCS AS locPc, A.LOCN_WT AS locWt, TO_CHAR(A.DLV_DATE, 'DDMONYY HH:MM') AS dlvTime, 
 			A.LOC_CODE as locCode, A.LSP_NO as lspNo, A.AWB_NO as awbNo,  TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.SEQ_NO as seqNo, A.DLV_IND as dlvYN, A.FLT_KEY as fltNo, TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate, 
 			A.SRF_NO as srfNo 
		FROM 
			IMP_SRF_AWB_INVENTORY A, V_CST_IMP_CC_CODE_AWB B, IMP_SRF C 
		WHERE 
      		A.CDIF_NO IS NULL AND C.SRF_NO=A.SRF_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE AND 
      		B.AWB_NO = A.AWB_NO AND (B.CC_CODE = A.CC_CODE OR A.CC_CODE = 'NC') AND A.SRF_NO = #srfNo# -->
      		SELECT 
 			ULD_KEY as uldNo, LOCN_PCS AS locPc, LOCN_WT AS locWt, TO_CHAR(DLV_DATE, 'DDMONYY HH24:MI') AS dlvTime, 
 			LOC_CODE as locCode, LSP_NO as lspNo, AWB_NO as awbNo,  TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, 
 			SEQ_NO as seqNo, NVL(DLV_IND,'N') as dlvYN, FLT_KEY as fltNo, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
 			SRF_NO as srfNo, REF_CDIF_NO as refCdifNo,
 			case when (SELECT count(1) FROM IMP_SRF_AWB_INVENTORY_DTL B WHERE B.SRF_NO=A.SRF_NO AND B.SEQ_NO=A.SEQ_NO  AND B.SRF_NO=A.SRF_NO) > 0 then 'Y'
        		else 'N' end hawbExistYN
		FROM 
			IMP_SRF_AWB_INVENTORY A
		WHERE 
      		CDIF_NO IS NULL AND SRF_NO = #srfNo# 
		<isNotEmpty property="lspULD">
			AND (LSP_NO = #lspULD# OR (LOC_CODE = #lspULD# AND ULD_KEY IS NULL AND LSP_NO IS NULL) OR ULD_KEY = #lspULD#)			
      	</isNotEmpty>
 	</select>
 	<select id="findCCCodeChngdStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 		select count(1) from dual where NVL((select STRAGG(STRINGDELIM( A.CC_CODE, ','))  FROM  (select CC_CODE from IMP_SRF_FLT
       where SRF_NO = #srfNo#) A),'*')
       in NVl((SELECT  pkg_common.get_srf_cc( #srfNo#)  from dual ),'*')
 	</select>
 	<select id="imp_srf_awb_dtls" parameterClass="java.util.HashMap"
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocEndorseBO">
 		SELECT 
 			B.CODE as splCode, B.ENDR_SRF_CAP_DLV_LOC as endorseSRF, A.AWB_NO as awbNo, 
 			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp 
		FROM 
			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE = A.SPL_CODE1 OR B.CODE = A.SPL_CODE2 OR B.CODE = A.SPL_CODE3 OR B.CODE = A.SPL_CODE4 OR 
			B.CODE = A.SPL_CODE5 OR B.CODE = A.SPL_CODE6 OR B.CODE = A.SPL_CODE7 OR B.CODE = A.SPL_CODE8 OR B.CODE = A.SPL_CODE9) 
      		AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		ORDER BY 
			PRIORITY
 	</select>
 		<select id="chk_cc_code_for_srf" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
 	SELECT COUNT(1) FROM V_CST_IMP_CC_CODE_AWB C where C.AWB_NO=#awbNo# AND C.FLT_KEY=#fltNo# AND C.FLT_DATE=#fltDate# AND C.CC_CODE = 'CA'
 	</select>
 	<select id="find_srf_hawb_loc_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
 		SELECT 
 			AWB_NO as awbNo, LOC_CODE as locn 
 		FROM 
 			IMP_SRF_AWB_INVENTORY 
 		WHERE 
 			ULD_KEY = #uldNo#
 	</select>
 	<select id="find_srf_hawb_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
 		SELECT 
 			HAWB_NO as hawbNo, LOCN_HAWB_PCS as locnPc, LOCN_HAWB_WT as locnWt,
 			B.SEQ_NO as seqNo
 			<!-- , A.DLV_PCS as dlvPc, A.DLV_WT as dlvWt --> 
 		FROM 
 			IMP_SRF_AWB_INVENTORY_DTL A, IMP_SRF_AWB_INVENTORY B 
 		WHERE 
 			B.SRF_NO=A.SRF_NO AND B.SEQ_NO=A.SEQ_NO AND B.SEQ_NO=#seqNo# AND B.SRF_NO=#srfNo#
 	</select>
 		<update id="update_srf_awb_dtls" parameterClass="java.util.HashMap">
 		<![CDATA[
			UPDATE IMP_SRF_AWB_INVENTORY 
			SET 
			DLV_PCS = NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT = NVL(DLV_WT, 0) + #dlvWt#, DLV_RMK = #dlvRemark#,
			DLV_DATE = TO_DATE(#dlvTime#, 'DDMONYY HH24:MI'), DLV_IND='Y', DLV_BY = #userID#, LM_USER_ID = #userID#,
			LM_DATE = SYSDATE, TR_TYPE = NVL(#trType#,'CDSRF')
			WHERE SEQ_NO = #seqNo# AND SRF_NO = #srfNo#
		]]>
	</update>
	<select id="sqlGetIsSRFDelivered" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM IMP_SRF_AWB_INVENTORY 
			WHERE SRF_NO = #PARAM# AND NVL(DLV_PCS, 0) > 0
		]]>
	</select>
	<select id="sqlGetSRFDlvTimeSnapshot" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(MAX(DLV_SNAP_TIME), 'DDMONYY HH24:MI') FROM IMP_SRF WHERE SRF_NO = #PARAM#
		]]>
	</select>
	<update id="sqlUpdateSRFDlvTimeSnapshot" parameterClass="java.lang.String">
 		<![CDATA[
			UPDATE IMP_SRF SET DLV_SNAP_TIME = SYSDATE WHERE SRF_NO = #PARAM# AND DLV_SNAP_TIME IS NULL
		]]>
	</update>
<update id="update_srf_awb_endorsement" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_SRF_AWB_INVENTORY 
		SET 
			ENDORSE_USER=#username#, ENDORSE_USER_TIME=TO_DATE(#endorseTime#, 'DDMONYY HH24MI'), LM_USER_ID=#userID#, 
			LM_DATE=SYSDATE, ENDORSED_DC_BY=#endorseDCBy#, ENDORSED_DC_DATE=TO_DATE(#endorseDCTime#, 'DDMONYY HH24MI') ,tr_type = NVL(#trType#,'CDSRF')
		WHERE 
			SEQ_NO = #seqNo# AND SRF_NO=#srfNo#
	</update>
	<update id="update_srf_hawb_dtls" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			IMP_SRF_AWB_INVENTORY_DTL 
		SET 
			DLV_PCS=NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT=NVL(DLV_WT, 0) + #dlvWt#, LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo# AND SRF_NO=#srfNo#
	</update>
	<update id="update_srf_dlv_flt" parameterClass="java.util.HashMap">	
		UPDATE 
			IMP_SRF_FLT 
		SET 
			DLV_PCS = NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT = NVL(DLV_WT, 0) + #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE 
		WHERE 
			SRF_NO=#srfNo# 
			<isEmpty property="refCdifNo">
				AND FLT_DATE=#fltDate# AND FLT_KEY=#fltNo# 
			</isEmpty>
			<isNotEmpty property="refCdifNo">
				AND FLT_KEY=#refCdifNo# 
			</isNotEmpty>
	</update>
	<select id="find_srf_verified_status" parameterClass="java.lang.String" 
		resultClass="java.lang.String">
		SELECT 
			VERIFIED as srfVerified 
		FROM 
			IMP_SRF 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<select id="find_awb_inv_dtls_wit_td" parameterClass="java.util.HashMap" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
			AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, ULD_KEY as uldKey, LOC_CODE as locn, 
			LOCN_PCS as locnPc, LOCN_WT as locnWt, CARR_CODE as carrCode, SRF_NO as srfNo, 
			LSP_NO as lspNo, SEQ_NO as seqNo, CC_CODE as ccCode, FLT_TYPE as fltType 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='Y' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode#
			<!--  commented by srinivas for bug fix for inserting duplicate record --> 
			<!--<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>-->
			</select>
	<select id="find_awb_inv_dtls_witot_td" parameterClass="java.util.HashMap" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
			AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, ULD_KEY as uldKey, LOC_CODE as locn, 
			LOCN_PCS as locnPc, LOCN_WT as locnWt, CARR_CODE as carrCode, SRF_NO as srfNo, 
			LSP_NO as lspNo, SEQ_NO as seqNo, CC_CODE as ccCode, FLT_TYPE as fltType 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<!-- AND LOC_CODE!=#locCode# --> 
			<!--<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>-->
	</select>
	<insert id="insert_awb_inv" parameterClass="java.util.HashMap">
		INSERT INTO 
			AWB_INVENTORY 
			(AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, LOC_CODE, LOCN_PCS, LOCN_WT, 
			CARR_CODE, STRG_DATE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, SEQ_NO, 
			SRF_NO, DLV_YN, CC_CODE, FLT_TYPE, REF_TR_TYPE, REF_TR_NO, REF_TR_DATE, CDIF_NO,RTN_NO) 
		VALUES
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 
			#locn#, #locPc#, #locWt#, #carrCode#, SYSDATE, #userid#, SYSDATE, #userid#, 
			SYSDATE, #seqNo#, #srfNo#, #dlvYN#, #ccCode#, #fltType#, #refTRType#, 
			#refTRNo#, SYSDATE, #cdifNo# , #rtnNo#)  
	</insert>
	<update id="update_awb_inv_pcwt_decre" parameterClass="java.util.HashMap">	
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS = LOCN_PCS - #dlvPc#, LOCN_WT = LOCN_WT - #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE , ref_awb_event = #trType#
		WHERE 
			SEQ_NO=#seqNo#
			<!--AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</update>
	<update id="update_awb_inv_pcwt_incre" parameterClass="java.util.HashMap">	
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS = NVL(LOCN_PCS, 0) + #dlvPc#, LOCN_WT = NVL(LOCN_WT,0) + #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE, ref_awb_event = #trType# 
		WHERE 
			SEQ_NO=#seqNo#
			<!-- AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='Y' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</update>
	<delete id="delete_awb_inv_entry" parameterClass="java.util.HashMap">
		DELETE FROM
			AWB_INVENTORY
		WHERE
			SEQ_NO=#seqNo#
			<!-- AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</delete>
	<select id="findTruckDockForSRF" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			B.TRUCK_DOCK 
		FROM 
			IMP_TRUCK_SRF A, TRUCK_TRIP B 
		WHERE 
			B.TRIP_ID=A.TRIP_ID AND A.SRF_NO=#srfNo# and B.CLOSED = 'N'
	</select>
	<select id="findCollCenterForSRF" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#
	</select>
	<!-- Changed for QR :: RANJITH -->
	<select id="findLocationAvailableToCollect" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<!-- SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE DLV_IND='N' AND SRF_NO=#srfNo# -->
		<!-- Changed for QR :: RANJITH
		SELECT COUNT(1) 
		FROM IMP_SRF_AWB_INVENTORY 
		WHERE (SELECT SUM(LOCN_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#)=(SELECT 
		SUM(DLV_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND (SELECT SUM(LOCN_WT) FROM IMP_SRF_AWB_INVENTORY WHERE 
		SRF_NO=#srfNo#)=(SELECT SUM(DLV_WT) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND SRF_NO=#srfNo# -->
		
		SELECT COUNT(1) FROM 
				(SELECT SRF_NO , SUM(LOCN_PCS) LOCN_PC , SUM(LOCN_WT) LOCN_WT , SUM(DLV_PCS) DLV_PC , SUM(DLV_WT) DLV_WT  
					FROM IMP_SRF_AWB_INVENTORY GROUP BY SRF_NO) SRF_INV
				WHERE  SRF_INV.SRF_NO = #srfNo# AND NVL(SRF_INV.LOCN_PC,0) = NVL(SRF_INV.DLV_PC,0) AND NVL(SRF_INV.LOCN_WT,0) = NVL(SRF_INV.DLV_WT,0) 
	</select>
	<select id="findShpmntAlwdForPostSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<!-- SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE A, IMP_SRF_AWB_INVENTORY B 
		WHERE 
			A.CODE=B.CC_CODE AND A.IMP_SRF_POST_YN='Y' AND B.SEQ_NO=#seqNo# -->		
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE A, IMP_SRF_AWB_INVENTORY B 
		WHERE 
			A.CODE=B.CC_CODE AND A.IMP_SRF_POST_YN='N' AND (SELECT SUM(LOCN_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#)=(SELECT 
			SUM(DLV_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND (SELECT SUM(LOCN_WT) FROM IMP_SRF_AWB_INVENTORY WHERE 
			SRF_NO=#srfNo#)=(SELECT SUM(DLV_WT) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND B.SRF_NO=#srfNo#
	</select>
	<select id="findCapDlvStarted" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE NVL(DLV_IND,'N') = 'Y' AND SRF_NO=#srfNo#
	</select>
	<select id="findAwbInvSeqNoByLocCode" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT 
			SEQ_NO 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>
	</select>
	<select id="findAwbInvlocPcsByLocCode" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT 
			LOCN_PCS 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>
	</select>
	<select id="findNextAWBInvSeqNo" resultClass="java.lang.String" parameterClass="java.lang.String">
		select AWB_INV_SEQ.NEXTVAL FROM DUAL
	</select>
	<select id="findHAWBInvDtlsBySeqNo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT SEQ_NO as seqNo, HAWB_NO as hawbNo, STRG_PCS as strgPcs, STRG_WT as strgWt FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo#
	</select>
	<insert id="insertHAWBInventory" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		INSERT INTO 
			HAWB_INVENTORY 
			(SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES 
			(#seqNo#, #hawbNo#, NVL(#dlvPc#, 0), NVL(#dlvWt#, 0), #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<update id="updateHawbInvPcWtIncre" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			HAWB_INVENTORY 
		SET 
			STRG_PCS=NVL(STRG_PCS, 0) + NVL(#dlvPc#, 0), STRG_WT=NVL(STRG_WT, 0) + NVL(#dlvWt#, 0), LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo#
	</update>
	<update id="updateHawbInvPcWtDecre" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			HAWB_INVENTORY 
		SET 
			STRG_PCS=NVL(STRG_PCS, 0) - NVL(#dlvPc#, 0), STRG_WT=NVL(STRG_WT, 0) - NVL(#dlvWt#, 0), LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo#
	</update>
	<delete id="deleteHawbInv" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		DELETE FROM HAWB_INVENTORY WHERE HAWB_NO=#hawbNo# AND SEQ_NO=#seqNo#
	</delete>
	<select id="findHAWBExistsForSeqNo" resultClass="java.lang.Integer" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT COUNT(1) FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo# AND HAWB_NO=#hawbNo#
	</select>
	<select id="findUldLspEmptyStatus" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT COUNT(1) FROM AWB_INVENTORY
		<isNotEmpty property="lspNo">
			WHERE LSP_NO=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldNo">
			WHERE ULD_KEY=#uldNo#
		</isNotEmpty>
	</select>
	<update id="updateEmptyInUldInv" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='Y' , HANDLING_MODE = null WHERE ULD_KEY=#uldKey# 
	</update>
	<update id="updateEmptyInLspInv" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='Y' WHERE LSP_NO=#lspNo#
	</update>
	<select id="findAllLocDelivered" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' AND SRF_NO=#srfNo#
	</select>
	<select id="capDelTimeConcurrency" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE NVL(DLV_IND,'N') ='Y' AND SRF_NO=#srfNo# AND SEQ_NO=#seqNo#
	</select>
	<select id="isCdifCreatedForSrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo# AND CDIF_NO IS NOT NULL
	</select>
	<update id="updateAwbInvDlvIndforRevert" parameterClass="java.util.HashMap">
		UPDATE AWB_INVENTORY SET DLV_YN='N',LM_USER_ID=#userID#, LM_DATE=SYSDATE WHERE SRF_NO=#srfNo# AND DLV_YN='Y'
	</update>
	<select id="revertDlvFetchAwbInvDtls" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
			SELECT 
			A.SRF_NO as srfNo, A.AWB_NO as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.CARR_CODE as carrCode, A.CATALOG as catalog, A.CC_CODE as ccCode, 
			A.SCH_COLL_DATE as schCollDate, A.ULD_KEY as uldKey, A.LSP_NO as lspNo, A.LOC_CODE as locCode, A.LOCN_PCS as locPc, A.LOCN_WT as locWt, 
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate, A.FLT_KEY as fltNo, A.DAM_IND as damYN, A.REF_RMK as refRmk, A.CDIF_NO as cdifNo, A.SEQ_NO as seqNo, 
			A.DLV_YN as dlvYN,
      (SELECT NVL(DLV_PCS,'0') FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY        = A.FLT_KEY AND B.AWB_DATE         = A.AWB_DATE AND B.AWB_NO           = A.AWB_NO AND B.FLT_DATE         = A.FLT_DATE AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*')  = NVL(A.LSP_NO,'*') AND B.LOC_CODE         = A.LOC_CODE AND B.SRF_NO=#srfNo#) AS impdlvPcs,
      (SELECT DECODE(TRUNC(TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))),0,0,TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))) FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY        = A.FLT_KEY AND B.AWB_DATE         = A.AWB_DATE AND B.AWB_NO           = A.AWB_NO AND B.FLT_DATE         = A.FLT_DATE AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*')  = NVL(A.LSP_NO,'*') AND B.LOC_CODE         = A.LOC_CODE AND B.SRF_NO=#srfNo#) AS impdlvWt,
      (SELECT NVL(DLV_PCS,'0') FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY is null AND B.AWB_DATE = A.AWB_DATE AND B.AWB_NO = A.AWB_NO AND B.FLT_DATE is null AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*') = NVL(A.LSP_NO,'*') AND A.LOC_CODE = B.LOC_CODE AND B.SRF_NO=#srfNo#) AS expdlvPcs,
      (SELECT DECODE(TRUNC(TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))),0,0,TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))) FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY is null AND B.AWB_DATE = A.AWB_DATE AND B.AWB_NO = A.AWB_NO AND B.FLT_DATE is null AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*') = NVL(A.LSP_NO,'*') AND A.LOC_CODE = B.LOC_CODE AND B.SRF_NO=#srfNo#) AS expdlvWt ,
      C.AWB_TYPE as awbType      
		FROM 
			AWB_INVENTORY A, AWB C
		WHERE 
    C.AWB_NO = A.AWB_NO AND C.AWB_DATE = A.AWB_DATE AND
			A.SRF_NO= #srfNo#
	</select>
	<delete id="revertDlvDeleteSrfAwbInv" parameterClass="java.util.HashMap">
		DELETE FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#
	</delete>
	<delete id="revertDlvDeleteSrfAwbInvDtl" parameterClass="java.util.HashMap">
		DELETE FROM IMP_SRF_AWB_INVENTORY_DTL WHERE SRF_NO=#srfNo#
	</delete>
	<insert id="revertDlvInsertSrfAwbInv" parameterClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
		INSERT INTO 
			IMP_SRF_AWB_INVENTORY 
			(SRF_NO,AWB_NO,AWB_DATE,CARR_CODE,CATALOG,CC_CODE,SCH_COLL_DATE,ULD_KEY,LSP_NO,LOC_CODE,LOCN_PCS,LOCN_WT,FLT_DATE,FLT_KEY,CR_USER_ID,CR_DATE,
			DAM_IND,CTM_REF_NO,CDIF_NO,DLV_BY,DLV_DATE,SEQ_NO,DLV_PCS,DLV_WT,ENDORSE_USER,ENDORSE_USER_TIME,DLV_RMK,CDIF_PC,CDIF_WT,DLV_IND,LM_DATE,LM_USER_ID,
			REF_CDIF_NO,TR_TYPE,ENDORSED_DC_BY,ENDORSED_DC_DATE)
		VALUES
			(#srfNo#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #carrCode#, #catalog#, #ccCode#, #schCollDate#, #uldKey#, #lspNo#, #locCode#, 
			#locPc#, #locWt#, TO_DATE(#fltDate#, 'DDMONYY'), #fltNo#, #crUserId#, SYSDATE, #damYN#, #refRmk#, '', '', '', #seqNo#, '',
			 '', '', '', '', '', '', 'N', SYSDATE, #lmUserId#, #refCdifNo# , 'REVCD','','')
	</insert>
	<select id="revertDlvFetchHawbInv" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT SEQ_NO as seqNo, HAWB_NO as hawbNo, STRG_PCS as locnPc, STRG_WT as locnWt FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo#
	</select>
	<insert id="revertDlvInsertSrfAwbInvDtl" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		INSERT INTO IMP_SRF_AWB_INVENTORY_DTL VALUES(#seqNo#, #hawbNo#, #locnPc#, #locnWt#, '', '', #crUserId#, SYSDATE, #lmUserId#, SYSDATE, #srfNo#)
	</insert>
	<update id="updateRevertDlvImpSrfFlt" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_SRF_FLT 
		SET 
  			DLV_PCS='', DLV_WT='', LM_USER_ID=#userID#, LM_DATE=SYSDATE 
		WHERE 
  			SRF_NO=#srfNo# 
			<isNotEmpty property="refCdifNo">
				AND FLT_KEY=#refCdifNo# 
			</isNotEmpty>
	</update>
	
	<select id="sqlFetchDlvrdPcsWtForRvrt" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND DLV_YN='Y' AND CDIF_NO IS NULL group by LOCN_PCS, LOCN_WT 
	</select>
	
	<select id="sqlFetchDlvrdPcsWtForRvrtCDIF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT FROM AWB_INVENTORY WHERE SRF_NO=#srfNumber# AND DLV_YN='Y' AND CDIF_NO = #cdifNumber# group by LOCN_PCS, LOCN_WT 
	</select>
	
	<select id="sqlFetchSeqNoForRvrtDlv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SEQ_NO FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND LOC_CODE=(SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#) AND DLV_YN='N' AND CDIF_NO IS NULL
	</select>
	
	<select id="fetchSeqNoAwbInvForRvrtCDIF" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT SEQ_NO,CDIF_NO,SRF_NO FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND LOC_CODE=(SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#) AND DLV_YN='N' AND CDIF_NO IS NOT NULL
	</select>
	
	<update id="sqlUpdateAwbInvForRvrt" parameterClass="java.util.HashMap">
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS=NVL(LOCN_PCS, 0) + NVL(#locnPcs#, 0), LOCN_WT=NVL(LOCN_WT, 0) + NVL(#locnWt#, 0), LM_DATE=SYSDATE, LM_USER_ID=#userId# 
		WHERE SEQ_NO=#seqNo#
	</update>
	
	<delete id="deleteAwbInvForRvrt" parameterClass="java.lang.String">
		DELETE FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND DLV_YN='Y' AND CDIF_NO IS NULL
	</delete>
	
	<delete id="deleteAwbInvForRvrtCDIF" parameterClass="java.util.HashMap">
		DELETE FROM AWB_INVENTORY WHERE SRF_NO = #srfNumber# AND DLV_YN='Y' AND CDIF_NO = #cdifNumber# 
	</delete>
	
 <!-- Capture SRF Delivery by Location :: Anup :: Ends -->
 
 <!-- TRG_AWB_LOCK_INS & TRG_IMP_AWB_DAM Trigger Conversion :: Anup :: Begins -->
 	<insert id="insert_awb_events" parameterClass="cargo.cms.imprt.bo.AWBEventBO">
 		INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #eventId#, #eventDesc#, 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), #fltType#, #trNo#, #uldKey#, #pcs#, 
			#wt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE)
 	</insert>
 	<select id="find_event_desc" parameterClass="java.util.HashMap" 
 		resultClass="java.lang.String">
 		SELECT 
 			EVENT_DESC 
 		FROM 
 			MAST_AWB_EVENTS 
 		WHERE 
 			EVENT_ID = #eventId#
 	</select>
 <!-- TRG_AWB_LOCK_INS & TRG_IMP_AWB_DAM Trigger Conversion :: Anup :: Ends -->
 
 <!-- Post SRF :: Anup :: Begins -->
 	<select id="checkDlvStatusPostSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 		<![CDATA[
 			select count(1) from imp_srf_awb_inventory where srf_no = #srfNo# and (dlv_pcs > 0 OR cdif_pc > 0) 		
 		]]>
 	</select>
 	
	<select id="checkReturnCargoSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 			select count(1) from exp_rtn_hd where srf_no= #srfNo#		
 	</select>
	
	<select id="find_srf_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			A.SRF_NO as srfNo, A.SRF_PCS as pcs, A.SRF_WT as wt, 
 			A.AWB_NO as awbNo, A.COLL_NAME as collBy, 
 			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.CARR_CODE as carrCode, A.SRF_PCS as, A.CR_DATE as crDate, 
      		A.DOC_LINE_NO as docLineNo, SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp,
      		esrf_yn as esrfyn,
      		CARGO_RELEASE_STS as cargoReleaseStatus,
      		HOLD_SRF_IND as holdSrf,  
      		decode((select sum(NVL(dlv_pcs, 0))+sum(NVL(cdif_pc, 0)) from IMP_SRF_AWB_INVENTORY where SRF_NO = A.SRF_NO),A.SRF_PCS,'Y','N') dlvComp
		FROM 
			IMP_SRF A
		WHERE 
			A.VERIFIED = #printInd#   
			<isNotEmpty property="srfNo">
			and	A.SRF_NO = #srfNo# 
			</isNotEmpty>
			<isNotEmpty property="truckNo">
			AND	A.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'))
			</isNotEmpty>
			
 	</select>
 	<select id="fetchNotYetPrintedSrfForAssociatedTrk" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" resultClass="cargo.cms.imprt.bo.SRFBO">
 		SELECT 
 			A.SRF_NO as srfNo 
		FROM 
			IMP_SRF A, IMP_TRUCK_SRF B 
		WHERE 
			B.SRF_NO=A.SRF_NO AND A.PRINT_IND='N' 
		<isNotEmpty property="srfNo">
			AND B.TRIP_ID IN (SELECT TRIP_ID FROM IMP_TRUCK_SRF WHERE SRF_NO=#srfNo#) 
		</isNotEmpty>
		<isNotEmpty property="truckNo">
			AND B.TRIP_ID IN (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND CLOSED = 'N')
		</isNotEmpty>
 	</select>
 	<select id="find_srf_cargo_rels_date" parameterClass="java.lang.String" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
 		SELECT 
 			TO_CHAR(MAX(DLV_DATE), 'DDMONYY HH24:MI') as deliveryCompleteDt, 
 			TO_CHAR(MIN(DLV_DATE), 'DDMONYY HH24:MI') as firstCargoDt 
		FROM 
			IMP_SRF_AWB_INVENTORY 
		WHERE 
			SRF_NO = #srfNo#
 	</select> 	
 	<select id="find_srf_uld_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO"
 		resultClass="cargo.cms.imprt.bo.SRFUldBO">
 	 	SELECT 
 			A.ULD_KEY as uldKey, sum(A.LOCN_WT) as uldWt 
 		FROM 
 			IMP_SRF_AWB_INVENTORY A, IMP_SRF B 
			WHERE B.AWB_DATE=A.AWB_DATE AND B.AWB_NO=A.AWB_NO AND B.SRF_NO=A.SRF_NO AND  cdif_NO IS NULL 
			<isNotEmpty property="srfNo">
			and	B.SRF_NO = #srfNo#
			</isNotEmpty>
			<isNotEmpty property="truckNo">
			AND	B.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'))
			</isNotEmpty>
			group by A.ULD_KEY
 	</select>
 	<!--  Changed for QR :: Ranjith -->
 	<select id="find_srf_post_allowed" parameterClass="java.lang.String" resultClass="java.lang.String">
 	 SELECT DECODE(cnt,0,'Y','N') 
    	from (
	 SELECT 
 		count(1) as cnt	
 		FROM 
       (SELECT CC_CODE,IMP_SRF_POST_YN,SRF_NO FROM (SELECT T1.CC_CODE,IMP_SRF_POST_YN,SRF_NO FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 ,IMP_SRF SRF
		WHERE T1.CC_CODE = T2.CODE AND T1.AWB_NO =SRF.AWB_NO AND SRF.SRF_NO=#srfNo# AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
		ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1)
		WHERE  NVL(IMP_SRF_POST_YN,'Y') = 'N')
 	</select>
 	<update id="upd_img_post_srf" parameterClass="java.util.HashMap">
 		UPDATE 
 			IMP_SRF 
 		SET
 			IMG_TRANS_ID = NVL(#transId#,IMG_TRANS_ID), POST_RMK = #srfRmk#, POST_USER = #userid#, 
 			POST_DATE = TO_CHAR(SYSDATE, 'DDMONYY'), POST_TIME = TO_CHAR(SYSDATE, 'HH24MI'), 
 			STATUS = 'POSTED', LM_USER_ID = #userid#, LM_DATE = SYSDATE,TR_TYPE='POSRF',CONSTRAINED_ON_POST=#constPostSRF#  
 		WHERE 
 			SRF_NO = #srfNo#
 	</update> 	
 	
	<update id = "updateCargoRealease"  parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET cargo_release = SYSDATE, CARGO_RELEASE_STS = 'OK' where SRF_NO = #srfNo#  AND NVL(esrf_yn,'N') != 'Y'		
 	</update>
 	
 	<update id = "updateCargoRealeaseEPH"  parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET cargo_release = SYSDATE, CARGO_RELEASE_STS = 'OK' where SRF_NO = #srfNo#  AND NVL(esrf_yn,'N') = 'Y'		
 	</update>
 	
 	<select id="checkForEsrf" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select NVL(esrf_yn,'N') from IMP_SRF where SRF_NO = #srfNo# 
 	</select>
 	
 	
 	
 	<select id="checkForEsrfNoCargoRelease" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select NVL(esrf_yn,'N') from IMP_SRF where SRF_NO = #srfNo# AND NVL(esrf_yn,'N') = 'Y' AND cargo_release is null
 	</select>
 	
 	<select id="chkSrfIsPosted" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select count(1) from IMP_SRF where SRF_NO = #srfNo# and STATUS = 'POSTED'
 	</select>
 	
 	<!-- <delete id="del_srf_in_awb_inv" parameterClass="java.util.HashMap">
 		DELETE 
 			AWB_INVENTORY 
 		WHERE
 			SRF_NO = #srfNo# AND LOC_CODE = #truckDock#
 	</delete> -->
 	<!--  Changed for QR :: Ranjith  -->
 	<select id="check_DC_captured_for_RP" parameterClass="java.lang.String" 
 		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			CST_DC_DTL A, IMP_SRF B 
		WHERE 
			A.SHPM_TYPE = 'I' AND B.AWB_NO=A.AWB_NO AND 
			B.AWB_DATE=A.AWB_DATE AND B.SRF_NO = #srfNo#
	</select>
	<select id="hdlg_ser_for_srf" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ASVInventoryBO">
		SELECT 
			A.HANDL_SERVICE_YN AS hndlgServInd, A.AGENT_CUST_NO AS agentCode 
		FROM 
			IMP_CAR_AWB A, IMP_SRF B 
		WHERE 
			B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE 
			AND B.SRF_NO = #srfNo#
	</select>
	<select id="asv_inv_dtls_for_srf" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ASVInventoryBO">
		SELECT 
  			D.HAWB_NO AS hawbNo, D.HAWB_PCS AS locPcs, D.HAWB_NET_WT AS locWt, B.AWB_NO AS awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') AS awbDate, 
  			B.LSP_NO AS lspNo, B.ULD_KEY AS uldKey, B.LOC_CODE AS locCode, B.DAM_IND AS damInd, B.DAM_PCS AS damPcs, B.DAM_WT AS damWt, 
  			D.HAWB_ORG AS origin, D.HAWB_DEST AS destination  
		FROM 
  			IMP_SRF A, AWB_INVENTORY B, HAWB_INVENTORY H, EDI_FHL C, EDI_FHL_HAWB D 
		WHERE 
			A.SRF_NO = B.SRF_NO AND B.SEQ_NO = H.SEQ_NO AND A.AWB_NO=C.AWB_NO AND A.AWB_DATE=C.AWB_DATE AND C.TR_NO=D.TR_NO AND 
			D.HAWB_NO = H.HAWB_NO AND A.SRF_NO=#srfNo#
	</select>
	<select id="sqlFetchAsvHawbExists" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ASV_HAWB WHERE HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</select>
	<select id="sqlFetchAsvHawbExists1" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO" resultClass="java.lang.String">
		SELECT FLOW FROM ASV_HAWB WHERE HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</select>
	<insert id="insertAsvHawb" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		INSERT INTO ASV_HAWB 
			(HAWB_NO, AGENT_CODE, FLOW, AWB_NO, AWB_DATE, ORIG, DEST, HAWB_PCS, HAWB_WT, RECD_PCS, RECD_WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE, DAM_PCS, DAM_WT, ORIGINAL_AWB_NO, ORIGINAL_AWB_DATE) 
		VALUES 
			(#hawbNo#, #agentCode#, DECODE(#destination#, 'HKG', 'I', 'T'), DECODE(#destination#, 'HKG', #awbNo#, ''), 
			DECODE(#destination#, 'HKG', TO_DATE(#awbDate#, 'DDMONYY'), ''), #origin#, #destination#, #locPcs#, #locWt#, 
			#locPcs#, #locWt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE, #damPcs#, #damWt#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'))
	</insert>
	<update id="updateAsvHawb" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		UPDATE 
			ASV_HAWB 
		SET 
			HAWB_PCS=NVL(HAWB_PCS,0) + NVL(#locPcs#,0), HAWB_WT=NVL(HAWB_WT,0) + NVL(#locWt#,0),
			LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</update>
	<insert id="insert_asv_inventory" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		INSERT INTO 
			ASV_INVENTORY 
			(SEQ_NO,HAWB_NO,AGENT_CODE,AWB_NO,AWB_DATE,LSP_NO,ULD_KEY, LOC_CODE,LOCN_PCS,LOCN_WT,DAM_IND,DAM_PCS,DAM_WT,
			CR_USER_ID, CR_DATE,LM_USER_ID, LM_DATE) 
		VALUES 
			((SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)), #hawbNo#, #agentCode#, DECODE(#destination#, 'HKG', #awbNo#, ''), 
			DECODE(#destination#, 'HKG', TO_DATE(#awbDate#, 'DDMONYY'), ''), #lspNo#, #uldKey#, #locCode#, #locPcs#, #locWt#, 
			#damInd#, #damPcs#, #damWt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE)
	</insert>
	<select id="find_wt/pcs_for_awb" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
			a.AWB_PCS as awbPcs, a.AWB_WT as awbWt, sum(b.MANIFEST_PCS) as manifestPcs, 
			sum(b.MANIFEST_WT) as manifestWt, sum(b.RECD_PCS) as recvdPcs, sum(b.RECD_WT) as recvdWt, 
			sum(b.CIR_PCS) as cirPcs, sum(b.CIR_WT) as cirWt, a.AWB_NO as awbNo, 
			TO_CHAR(c.AWB_DATE, 'DDMONYY') as awbDate, c.img_trans_id as transactionId
		FROM 
			IMP_CAR_AWB a, IMP_CAR_SHP b, IMP_SRF c 
		WHERE 
      		c.AWB_NO=b.AWB_NO AND c.AWB_DATE=b.AWB_DATE 
      		AND c.AWB_NO=a.AWB_NO AND c.AWB_DATE=a.AWB_DATE 
      		AND c.SRF_NO = #srfNo#
      		group by a.AWB_PCS,a.AWB_WT,a.AWB_NO,c.AWB_DATE,c.img_trans_id
	</select>
	<select id="find_total_dlv_pc/wt" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
			SUM(a.DLV_PCS) as totDlvPcs, SUM(a.DLV_WT) as totDlvWt 
		FROM 
			IMP_SRF_FLT a 
		WHERE 
			a.SRF_NO = #srfNo#
	</select>
	<select id="entry_in_awb_inventory" parameterClass="java.lang.String" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			AWB_INVENTORY 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<update id="update_awb_closed" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET 
			AWB_CLOSED = 'Y', AWB_CLOSE_DATE = SYSDATE, 
			AWB_CLOSE_USER = #userid#,LM_DATE = sysdate,LM_USER_ID = 'SYSTEM'
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="update_awb_close_ind" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'Y', LM_DATE = SYSDATE, 
			LM_USER_ID = #userid#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="find_imp_srf_dtls" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			SRF_NO as srfNo,
 			SRF_PCS as pcs, 
 			SRF_WT as wt, 
 			AWB_NO as awbNo, 
 			esrf_yn as esrfyn,
 			HOLD_SRF_IND as holdSrf,  
 			COLL_NAME as collBy, 
 			CARGO_RELEASE_STS as cargoReleaseStatus,
 			TO_CHAR(CARGO_RELEASE, 'DDMONYY') as cargoRelease,
 			HOLD_SRF_IND as holdSrf,  
 			TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, 
 			CARR_CODE as carrCode, SRF_PCS as, 
 			TO_CHAR(CR_DATE, 'DDMONYY') as crDate, 
      		DOC_LINE_NO as docLineNo 
		FROM 
			IMP_SRF 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<select id="imp_getDlvPcWt"  parameterClass="cargo.cms.imprt.bo.POSTSRFBO" 
		resultClass="cargo.cms.imprt.bo.POSTSRFBO">
		<!-- SELECT 
			#lmUserId# lmUserId , srf_no srfNo, nvl(cdif_no, flt_key) fltKey, 
			to_char(nvl(to_date(substr(cdif_no, 1, 6), 'DDMMYY'), flt_date), 'DDMONYY') fltDate, 
			sum(LOCN_PCS) dlvPc, sum(LOCN_WT) dlvWt 
		FROM 
			AWB_INVENTORY 
		WHERE 
			srf_no = #srfNo#
		GROUP BY 
			SRF_NO, nvl(cdif_no, flt_key), nvl(to_date(substr(cdif_no, 1, 6), 'DDMMYY'), flt_date) -->			
		SELECT 
			#lmUserId# lmUserId , srf_no srfNo, nvl(cdif_no, flt_key) fltKey, 
			to_char(flt_date, 'DDMONYY') fltDate, sum(LOCN_PCS) dlvPc, sum(LOCN_WT) dlvWt 
		FROM 
			AWB_INVENTORY 
		WHERE 
			srf_no = #srfNo#
		GROUP BY 
			SRF_NO, nvl(cdif_no, flt_key),  flt_date
	</select>
	<update id="postsrfFlt" parameterClass="cargo.cms.imprt.bo.POSTSRFBO">
		UPDATE 
			IMP_SRF_FLT 
		SET 
			DLV_PCS = nvl(#dlvPc#,0), 
			DLV_WT = nvl(#dlvWt#,0) ,
			LM_USER_ID = #lmUserId# , 
			LM_DATE = SYSDATE  
		WHERE 
			SRF_NO = #srfNo# and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</update>
	<select id="findDlvDtlsBySrfNo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.POSTSRFBO">
		<![CDATA[
		SELECT 
			  CASE
			    WHEN SUM(NVL(LOCN_PCS,0)) = (SUM(NVL(DLV_PCS,0)) + SUM(NVL(CDIF_PC,0)))
			    THEN 'Y'
			    ELSE 'N'
			  END AS pcInd,
			  CASE
			    WHEN SUM(NVL(LOCN_WT,0)) = (SUM(NVL(DLV_WT,0)) + SUM(NVL(CDIF_WT,0)))
			    THEN 'Y'
			    ELSE 'N'
			  END AS wtInd,
			  SUM(NVL(LOCN_PCS,0)) AS locPc,
			  SUM(NVL(LOCN_WT,0))  AS locWt,
			  SUM(NVL(DLV_PCS,0))  AS dlvPc,
			  SUM(NVL(DLV_WT,0))   AS dlvWt,
			  SUM(NVL(CDIF_PC,0))  AS cdifPc,
			  SUM(NVL(CDIF_WT,0))  AS cdifWt
			FROM IMP_SRF_AWB_INVENTORY
			WHERE SRF_NO = #srfNo#
			]]>
	</select>
	<select id="findUrfNoBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT EIR_NO FROM ULD_ISS_HD WHERE SRF_NO=#srfNo#
	</select>
	<select id="findUrfDtlsByUrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SUM(NVL(ULD_REL_QTY, 0)) || ' ' || ULD_TYPE FROM ULD_ISS_DTL WHERE EIR_NO=#urfNo# GROUP BY ULD_TYPE
	</select>
	
	<select id="findUrfDtlsByUrfNoPost" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT STRAGG(STRINGDELIM(T.uldReq,',')) AS uldRequired  FROM 
	(SELECT SUM(NVL(ULD_REQ_QTY, 0)) || ' ' || ULD_TYPE  uldReq FROM ULD_ISS_DTL WHERE EIR_NO=#urfNo# AND ULD_EQUIP = 'U' GROUP BY ULD_TYPE)T
	</select>
	
	<select id="findCountOfUnPostedSrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_TRUCK_SRF A, IMP_SRF B , TRUCK_TRIP C 
		WHERE 
			B.SRF_NO=A.SRF_NO AND B.PRINT_IND='Y' AND B.POST_DATE IS NULL  AND A.TRIP_ID=C.TRIP_ID AND C.CLOSED='N' AND A.SRF_NO=#srfNo#
	</select>
	<!-- Changed for QR :: RANJITH -->
	<select id="findLatestCCCodeBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			decode(Count(1),0,'XX','RP') 
		FROM 
			IMP_SRF_FLT A, V_CST_IMP_CC_CODE_AWB B 
		WHERE 
			B.AWB_NO=A.AWB_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE 
			AND A.SRF_NO = #srfNo# AND B.CC_CODE = 'RP' 
	</select>
	<select id="findTrkNoBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT B.TRUCK_NO FROM IMP_TRUCK_SRF A, TRUCK_TRIP B WHERE B.TRIP_ID=A.TRIP_ID AND B.CLOSED='N' AND A.SRF_NO=#srfNo#
	</select>
	<select id="isSrfPrinted" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE PRINT_IND='Y' AND SRF_NO=#srfNo#
	</select>
	<update id="updateSrfPrinteIndicator" parameterClass="map">
	 	UPDATE 
	 		IMP_SRF  
	 	SET 	PRINT_IND=#indicatorValue#, 
	 			LM_USER_ID=#userID#, 
	 			LM_DATE=SYSDATE    
		WHERE 
			SRF_NO=#srfNo# 
	</update>
 <!-- Post SRF :: Anup :: Ends -->

 <!-- Issue SRF :: Bala :: Starts -->
	
 <select id="sqlGetSrfTruckTarget"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		select TRUCK_DOCK from truck_trip tp
		join imp_truck_srf ist
		on tp.trip_id = ist.trip_id
		where ist.srf_no=#srfNo#
    	and tp.truck_no=#truckNo#    	
</select>
  
 <select id="imp_IssueSRF_checkForCCodeSeverity"  parameterClass="java.lang.String" 
		resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CONSTRAINT_CODE WHERE  PRIORITY BETWEEN 0 AND (select priority FROM MAST_CONSTRAINT_CODE 
		WHERE code=#PARAM#) and code=#PARAM#
 </select>
 <parameterMap id="FSURCFDHLMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuRcfDhl" parameterMap="FSURCFDHLMap" >
	{call PKG_FSU.FSU_RCF_DHL(?,?,?,?,?)}
</procedure>
<parameterMap id="FSUNFDDHLMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuNfdDhl" parameterMap="FSUNFDDHLMap" >
	{call PKG_FSU.FSU_NFD_DHL(?,?,?,?,?)}
</procedure>
 <select id="imp_IssueSRF_checkCarCreated" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	select COUNT(1) from imp_car_shp 
	where FLT_KEY = #flightKeyProc# AND FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY')
	and awb_no = #awbNo# and awb_date = to_date(#awbDate# ,'DDMONYY') and CAR_CREATED = 'N'
	]]>
</select>
 
 <select id="getTotalCharges"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">
	<![CDATA[
	select sum(CASE WHEN (chamt - nvl(pchrg, 0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0)) END) amt
	from 
		 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
				  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
				 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
				 from GT_SRF_CHARGES G
				 JOIN AWB awb ON awb.AWB_NO = G.AWB_NO 
				 AND awb.awb_date = G.awb_date
				 AND awb.awb_type = 'I'    
				 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0)),0) pchrg
						 from BILL_CHARGE_DTL C
						 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
						 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
						 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
								  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
				 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					
				 and G.RMODE = 'SRF'
				 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
		  union
		  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
				 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
				 'N', 'N'
				  from IMP_CHRG_ITM_REV_AWB 
				  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
				  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
		  ) c
	join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
	join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
	join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
	left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate
		 AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
	left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(CHRG_AMT) pchrg 
		 from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%'
		 group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate
		 AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
	where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value') 
	]]>
</select>
 
 	
 	<!-- Changed for QR :: RANJITH -->
 	<!-- <select id="chk_truck_in_aat"  parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
	 SELECT COUNT(1)
            FROM (SELECT INC_PURPOSE, ACTIVITY_DATE, 
                      DENSE_RANK() OVER (PARTITION BY TRUCK_NO ORDER BY ACTIVITY_DATE DESC) RANK 
                        FROM INT_TRUCK_ACTIVITY T
                        WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
                        AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE CHECK_POINT in ('ENTER_TERMINAL' , 'TRUCK_DOCK_ALLOCATION', 'DECLARE_INCOMING_PURPOSE') 
									AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL', 'TRUCK_DOCK_LEAVING') 
									AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE TRUCK_NO = T.TRUCK_NO
									AND TASK_ID > T.TASK_ID)
						AND upper(INC_PURPOSE) LIKE 'IMPORT%'  
						AND SYSDATE < ACTIVITY_DATE + 2/24 
                        AND TRUCK_NO = #TRUCKNO#) A
	]]>
	</select> -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="chk_truck_msg_send"  parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
	 SELECT COUNT(1)
		FROM (SELECT 1
				FROM INT_TRUCK_ACTIVITY T
				WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
				AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
							WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL', 'TRUCK_DOCK_LEAVING') 
							AND TASK_ID = T.TASK_ID)
				AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
							WHERE TRUCK_NO = T.TRUCK_NO
							AND TASK_ID > T.TASK_ID)
				AND upper(INC_PURPOSE) LIKE 'IMPORT%'  
				AND SYSDATE < ACTIVITY_DATE + 2/24 
				AND TRUCK_NO = #TRUCKNO#
		  UNION ALL
		  SELECT 1 FROM DUAL 
		  WHERE NOT EXISTS (SELECT 1
						FROM INT_TRUCK_ACTIVITY T
						WHERE EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT IN ('ENTER_TERMINAL', 'TRUCK_DOCK_ALLOCATION') AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE TRUCK_NO = T.TRUCK_NO
									AND TASK_ID > T.TASK_ID)
						AND SYSDATE < ACTIVITY_DATE + 2/24 
						AND TRUCK_NO = #TRUCKNO#
						AND ROWNUM = 1) 
			) A	
	]]>
	</select>  -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="chk_truck_in_alert"  parameterClass="java.lang.String" resultClass="java.lang.String">			
		<![CDATA[
		 SELECT INC_PURPOSE
				FROM (SELECT INC_PURPOSE, ACTIVITY_DATE, 
						  DENSE_RANK() OVER (PARTITION BY TRUCK_NO ORDER BY ACTIVITY_DATE DESC) RANK 
					FROM INT_TRUCK_ACTIVITY T
					WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
					AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								  WHERE CHECK_POINT in ('ENTER_TERMINAL' ,  'TRUCK_DOCK_ALLOCATION', 'DECLARE_INCOMING_PURPOSE') 
								  AND TASK_ID = T.TASK_ID)
					AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL') 
								AND TASK_ID = T.TASK_ID)
					AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								WHERE TRUCK_NO = T.TRUCK_NO
								AND TASK_ID > T.TASK_ID)
					AND upper(INC_PURPOSE) NOT LIKE 'IMPORT%' 
					AND SYSDATE < ACTIVITY_DATE + 2/24 
							 AND TRUCK_NO = #TRUCKNO#) A
		  where rownum = 1
		]]>
	</select> -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="getTdNo"  parameterClass="java.lang.String" resultClass="java.lang.String">			
	<![CDATA[
 SELECT DOCK_NO 
    FROM (SELECT DOCK_NO 
          FROM INT_TRUCK_ACTIVITY
          WHERE TASK_ID NOT IN (SELECT TASK_ID FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL')
          AND CHECK_POINT = 'TRUCK_DOCK_ALLOCATION' AND SYSDATE < ACTIVITY_DATE + 2/24 
          AND TRUCK_NO = #TRUCKNO#
          order by ACTIVITY_DATE desc) A
    where rownum = 1
	]]>
</select>
-->
<!-- Changed for QR :: RANJITH -->
	<!-- <select id="impsrfchecktruckactivity" parameterClass="cargo.cms.common.ext.bo.TruckInfoGreenLightBO" 
resultClass="java.lang.Integer">
	SELECT count(1) FROM INT_TRUCK_ACTIVITY WHERE DOCK_NO  IS NOT NULL AND TRUCK_NO=#vehicleNo# AND
	CHECK_POINT='LEAVING_TERMINAL'
</select> -->
 <select id="Imp_check_truck_ban" parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
		select count(1) 
		from int_truck_ban_log 
		where TRUCK_NO = #truckNo# 
		and PERIOD_FROM <= to_char(sysdate, 'DDMONYY') 
		and PERIOD_TO >= to_char(sysdate, 'DDMONYY') 
		AND ACTIVE_YN = 'Y'
	]]>
</select>
 <select id="unPostedSRFexists" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
	   SELECT count(1) FROM IMP_SRF T
	   WHERE AWB_NO = #AWBNO# AND AWB_DATE =  TO_DATE(#AWBDATE#, 'DDMONYY') 
	   AND (STATUS ='ISSUED' and sysdate < srf_expy_date
	   OR
	   EXISTS (SELECT NULL FROM imp_srf_awb_inventory where srf_no = t.srf_no and t.status = 'ISSUED' and dlv_pcs > 0)
   )
 	]]>
</select>
<select id="imp_checkStorageLocationExist"  parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT NVL(SUM(LOCN_PCS), 0) PCS
	from AWB_INVENTORY A
	LEFT JOIN IMP_SRF S ON 
	A.SRF_No = S.SRF_No AND 
	((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
	where S.SRF_NO IS NULL AND A.TRM_NO IS NULL
	AND A.AWB_NO = #AWBNO# AND A.AWB_DATE = TO_DATE(#AWBDATE#, 'DDMONYY')
	]]>
</select>
<!-- Changed for QR :: RANJITH -->
<select id="imp_IssueSRF_Consigneedata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	<![CDATA[
		SELECT
		A.AWB_No awbNo, 
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.CATALOG catalog,
	    (SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			  THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			           ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		 FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,		
		A.AWB_PCS awbPc, 
		A.AWB_WT awbWt, 
		A.CONTENT contents,
		A.SPL_CODE1 splCode1, 
		A.SPL_CODE2 splCode2, 
		A.SPL_CODE3 splCode3, 
		A.SPL_CODE4 splCode4, 
		A.SPL_CODE5 splCode5, 
		A.SPL_CODE6 splCode6, 
		A.SPL_CODE7 splCode7, 
		A.SPL_CODE8 splCode8,
		A.SPL_CODE9 splCode9,
		A.AWB_DEST dest,
		NVL(A.HANDL_SERVICE_YN,'N') hdldByAgtSvcs,
		CSGNE_NAME consignee, 
		A.APPNTD_AGENT apptdAgt,  
		(SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
		NVL((SELECT haffa_member FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO),'N') haffaMember,
		A.BANK_ENDOS bankEndorsmentYN, 
		A.BANK_TYPE bank,  
		A.AIRLN_RMK awbRemarks,
		A.AIRLN_RMK oldAwbRemarks,
		A.ECT_HANDLER ectHandler,
		NVL((SELECT sum(CR_BAL) 
				FROM CUST_AGENT_AIRL_CREDIT
				WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE) 
				AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) > 0 
				AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
				AND CUST_NO = A.AGENT_CUST_NO AND CARR_CODE = B.CARR_CODE and nvl(upper(Status),'**') != 'VOID' ), 0)  airlCrdAvail,
		NVL((SELECT sum(CR_BAL )
				FROM CUST_AGENT_CREDIT
				WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) >= trunc(SYSDATE) 
				AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) > 0 
				AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN' and nvl(upper(Status),'**') != 'VOID'), 0)  aatCrdAvail,
		NVL((select sum(dlv_pcs)  from imp_srf_flt flt,imp_srf srf  where flt.AWB_NO =  #awbNo# AND flt.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
    AND flt.awb_no=srf.awb_no and flt.awb_date=srf.awb_date and srf.status!='VOID' and srf.srf_no=flt.srf_no), 0) delvPcToDate,
		NVL((SELECT 'Y' C
				FROM CUST_UNDERTAKING 
				WHERE EFF_FROM < SYSDATE AND NVL(EFF_TO, SYSDATE) >= SYSDATE AND ROWNUM = 1
				AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN,
				B.CARR_CODE carrCode,
				A.PPK_TYPE ppkInd,
				CASE WHEN 
		         (SELECT count(1) FROM BILL_PRE_PAYMENT_DTL WHERE AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') ) > 0
		         THEN
				(SELECT 'Amt: ' || TOTAL_AMT || ', ' || 'Due Date: ' || to_char(DUE_DATE,'DDMONYY')
					   			 FROM BILL_PRE_PAYMENT_DTL WHERE AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and SRF_NO is null and rownum =1 )
		          ELSE (SELECT 'Bundle Ref: ' || hd.BUNDLE_REF_NO || ',' || 'Bundle Amt: ' || COMMITTED_AMT || ', ' || 'Due Date: ' || to_char(HD.VALIDITY_DATE,'DDMONYY')
		                 FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		                 AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') 
		                 AND hd.status = 'COMMITTED' and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND rownum =1 ) END AS prePayInfo
		FROM IMP_CAR_AWB A  , AWB B
		WHERE  
		A.AWB_NO 	 = B.AWB_NO 	 AND
		A.AWB_DATE	 = B.AWB_DATE	 AND
		A.AWB_NO =  #awbNo# AND A.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')	
		]]>
	</select>
<select id="imp_IssueSRF_ShipmentData"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
	resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
	 <![CDATA[
	 
		SELECT
		A.FLT_KEY flightNoKey, 
		To_Char(A.FLT_DATE,'DDMONYY') flightDate, 
		To_Char(ACT_TIME) ata, 
		PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A') ataTime,
		NVL(I.PCS, 0) invPc, 
		NVL(I.WT, 0) invWt, 
		To_Char(A.MANIFEST_PCS) manfPc, 
		To_Char(A.MANIFEST_WT) manfWt, 
		replace(A.CIR_PCS_TYPE || '/' || A.CIR_WT_TYPE, '/','') cirType, 
		A.CIR_PCS_TYPE cirPcsType,
		To_Char(A.CIR_PCS) cirPc,
		To_Char(A.CIR_WT) cirWt,
		A.DOC_DISC docDisc,
		S.SRF_NO existSrfNo , B.FLT_NO AS flightNo, B.CARR_CODE AS flightKey
		FROM IMP_CAR_SHP A 
		left join (Select s.SRF_No, s.AWB_NO, s.AWB_DATE, sf.FLT_KEY, sf.FLT_DATE from IMP_SRF s, IMP_SRF_FLT sf 
			 	  where s.SRF_No = sf.SRF_No 
			 	  and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
				  	  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))	s 
			on s.AWB_NO = a.AWB_NO and s.AWB_DATE = A.AWB_DATE and s.FLT_KEY = A.FLT_KEY and s.FLT_DATE = A.FLT_DATE
		LEFT JOIN (SELECT A.AWB_NO, A.AWB_DATE, A.FLT_KEY, A.FLT_DATE, SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT
			 	  	FROM AWB_INVENTORY A
					LEFT JOIN IMP_SRF S ON 
						A.SRF_No = S.SRF_No AND 
						((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
					WHERE S.SRF_NO IS NULL AND A.CDIF_NO IS NULL AND A.TRM_NO IS NULL
				    GROUP BY A.AWB_NO, A.AWB_DATE, A.FLT_KEY, A.FLT_DATE) I
			on I.AWB_NO = A.AWB_NO and I.AWB_DATE = A.AWB_DATE and I.FLT_KEY = A.FLT_KEY and I.FLT_DATE = A.FLT_DATE,
		FLT_OPR B, IMP_CAR_AWB C
		WHERE A.FLT_KEY   = B.FLT_KEY AND
		A.FLT_DATE  = B.SCH_DATE AND
		B.FLT_TYPE  = 'A'		   AND
		A.AWB_NO	  = C.AWB_NO   AND
		A.AWB_DATE  = C.AWB_DATE AND		
		A.AWB_NO	  =		#awbNo#		   AND
		A.AWB_DATE= TO_DATE(#awbDate#, 'DDMONYY') 
		UNION
		SELECT C.CDIF_NO flightNoKey, 
		To_Char(C.CDIF_DATE,'DDMONYY') flightDate, 
		'' ata, 
		'' ataTime,	
		CH.PCS invPc, 
		CH.WT invWt, 
		'' manfPc, 
		'' manfWt, 
		'' cirType, 
		'' cirPcsType,
		'' cirPc,
		'' cirWt,
		'' docDisc,
		S.SRF_NO AS existSrfNo , '' AS flightNo, '' AS flightKey
		FROM IMP_CDIF C
		JOIN (SELECT CDIF_NO, SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS, 
			 SUM(NVL(CDIF_UTL_WT, 0) + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
			 FROM IMP_CDIF_HAWB GROUP BY CDIF_NO) CH ON C.CDIF_NO = CH.CDIF_NO
		LEFT JOIN (SELECT CDIF_NO, MAX(SEQ_NO) SEQ_NO FROM AWB_INVENTORY WHERE CDIF_NO IS NOT NULL GROUP BY CDIF_NO) AM ON AM.CDIF_NO = C.CDIF_NO
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = AM.SEQ_NO
		left join (Select s.SRF_No, s.AWB_NO, s.AWB_DATE, sf.FLT_KEY, sf.FLT_DATE from IMP_SRF s, IMP_SRF_FLT sf 
			 	  where s.SRF_No = sf.SRF_No 
			 	  and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
				  	  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))	s 
			on s.AWB_NO = c.AWB_NO and s.AWB_DATE = c.AWB_DATE and s.FLT_KEY = c.CDIF_NO and s.FLT_DATE = trunc(c.CDIF_DATE)
		WHERE C.VOID_USER IS NULL 
		AND C.AWB_NO	   =	#awbNo#		   
		AND C.AWB_DATE  = TO_DATE(#awbDate#, 'DDMONYY')  
		
		]]>
	</select>	
	<select id="imp_IssueSRF_RepeatYN_Check"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		SELECT NVL(REPEAT_YN,'N')
		FROM IMP_SRF
		WHERE CR_USER_ID = #PARAM#  and rownum = 1
		AND CR_DATE IN 
			(SELECT max(CR_DATE) FROM IMP_SRF WHERE CR_USER_ID = #PARAM#)
	</select>	
	
	<select id="getULDToSendMHCS"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select uld_key as uld, lsp_no as lsp from awb_inventory where 
		FLT_KEY = #FLT_KEY#	AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		AND flt_type = 'I' and ( lsp_no is not null OR uld_key is not null)
	</select>
	
	<select id="getUldLspToSendMHCS"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select uld_key as uld, lsp_no as lsp from awb_inventory where 
		AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		AND flt_type = 'I' and ( lsp_no is not null OR uld_key is not null)
	</select>

	<select id="getawblistformilestonesrf"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select DECODE(ref_cdif_no,'',FLT_KEY,NULL,flt_key,REF_CDIF_NO) AS flightKey,to_char(flt_date,'DDMONYY') AS flightDate,awb_no AS awbNo,TO_CHAR(awb_date,'DDMONYY') AS awbDate,uld_key as uld,lsp_no as lsp,loc_code as locn,dlv_pcs  AS locnPcs,  dlv_wt AS locnWt from imp_srf_awb_inventory where srf_no=#PARAM# and dlv_pcs is not null and dlv_wt is not null
	</select>

	<select id="checkifAnyBookingAvail"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select booking_no as bookingNo,awb_no as awbNo,to_char(awb_date,'DDMONYY') as awbDate,flt_key as fltKey,
		to_char(flt_date,'DDMONYY') as fltDate,auth_rep_id as authRepID, auth_rep_name as authRepName,
		(select TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || ':' || LPAD(BKG_SLOT_FROM,4,'0') from imp_booking where imp_booking.booking_no = imp_booking_dtl.booking_no ) AS bookingSlotDate,
		(select AGENT_ID from imp_booking where imp_booking.booking_no = imp_booking_dtl.booking_no ) AS agentCode,
		 mail_sent as mailSent
		from imp_booking_dtl
		where booking_no in (select booking_no from imp_booking where status = 'ISSUED' and srf_issued = 'N' and 
		TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI') BETWEEN SYSDATE  AND  
		TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CHK_SRF_BKG_HRS')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI'))
	</select>	
	
	<select id="checkAnyBookingExistsForAWB"  parameterClass="map"  resultClass="java.lang.String">	
		select booking_no AS BKG_NO from imp_booking_dtl where flt_key = #FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY') 
	    and awb_no = #AWB_NO# and awb_date =  to_date(#AWB_DATE#,'DDMONYY')
	    and booking_no in (select booking_no from imp_booking where status = 'ISSUED' and srf_issued = 'N'and 
		TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI')  > 
		TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CHK_SRF_BKG_HRS')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI'))
	</select>
	
	<update id="updateMailIndForBkgDtls" parameterClass="map" >
	    update imp_booking_dtl set mail_sent = 'N' where 
    	flt_key = #FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY') 
    	and awb_no = #AWB_NO# and awb_date =  to_date(#AWB_DATE#,'DDMONYY') 
    	and booking_no = #BKG_NO#
    </update>
		
	<select id="checkifAnyBookingTocreateJob"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select  booking_no as bookingNo from imp_booking where TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI')
		 between sysdate  and TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CONFIG_HRS_SRF_JOB')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI')
     	 AND RTRV_JOB_YN = 'N'
	</select>
	
	<update id="updateJobOrderInd" parameterClass="map" >
		UPDATE imp_booking SET RTRV_JOB_YN = 'Y',lm_user_id = #USER_ID#,lm_date = sysdate WHERE booking_no = #BOOKING_NO#
	</update>
	
	<select id="getTheArivalStatus"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'SRF_JOB_ORDER'
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="checkConstraintForSRF"  parameterClass="cargo.cms.imprt.bo.SRFBO"  resultClass="java.lang.String">	
		select imp_srf_iss_yn 
			from mast_constraint_code
			 where code = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			 				WHERE V.FLT_KEY = #fltKey#  AND V.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND V.AWB_NO = #awbNo#
			 				AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000')
	</select>	
	
	<select id="checkBreakDownstart"  parameterClass="cargo.cms.imprt.bo.SRFBO"  resultClass="java.lang.String">	
		<![CDATA[
			select DECODE (COUNT(1),0,'N','Y') from IMP_CAR_SHP 
     		 where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey#  and FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
     		 AND (RECD_PCS <> MANIFEST_PCS OR RECD_WT <> MANIFEST_WT)
     	 ]]>
     </select>
		
	<update id="updateMailIndInBkgHD" parameterClass="cargo.cms.imprt.bo.SRFBO" >
		    Update imp_booking_dtl SET mail_sent = 'Y' where booking_no = #bookingNo# 
    		and flt_key = #fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') 
    		and awb_no = #awbNo# and awb_date =  to_date(#awbDate#,'DDMONYY')  
	</update>
	
	<select id="getSrfAgentMailIds"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select  email1 as emailAddress1,email2 as emailAddress2,email3 as emailAddress3,email4 as emailAddress4,email5 as emailAddress5
		from cust_company where CODE_DESC =  NVL(#AGENT_NAME#,CODE_DESC) AND code = #CODE#
	</select>	
	
	
	<select id="getSrfDetailsToSendMail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.util.HashMap">	
		select s.agent_id as agentId,(select code_desc from cust_company where code = s.agent_id)  as agentName
		 from imp_srf s where srf_no = #srfNo# 
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="imp_IssueSRF_previousInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		SELECT
		SRF_EXPY_DATE srfExpiryDate,
		SRF_PRT_CODE srfPtr,
		INV_PRT_CODE invcPtr,
		TRUCK_CO truckerCo,
		TRUCK_NO truckNo,	   
		TD_NO truckDockNo,			   
		REPEAT_YN repeatYN,
		COLL_HKID hkId,
		COLL_NAME collectedBy
		FROM  IMP_SRF	  
		WHERE To_CHAR(AWB_DATE,'DDMONYY') =  #awbDate# AND
		AWB_NO   = #awbNo#	 
	</select>	 
	-->
	
	<parameterMap id="CCmap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ORGFLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ORGFLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="CC" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="CTMREFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="prc_get_cc_code" parameterMap="CCmap" >
		{call prc_get_cc_code(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="incvMap" class="map" >	
	<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="INVOICENO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPrcCrdInv" parameterMap="incvMap" >
		{call PKG_IMP.PRC_CRD_INV(?,?,?,?,?)}
	</procedure>
	<select id="imp_IssueSRF_checkManifestPcsWt"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from Imp_CAR_SHP c
		where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) 
		AND AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
		and c.Flt_KEY = #flightKeyProc# and To_char(c.FLT_DATE,'DDMONYY') = #flightDateProc# 
		]]>
	</select>
	<select id="imp_IssueSRF_checkForCir"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from Imp_CAR_SHP 
		where CIR_PROC_USER is null
		AND Flt_KEY =  #flightKeyProc# and To_char(FLT_DATE,'DDMONYY') = #flightDateProc# and 
		AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	]]>
	</select>
	<select id="imp_IssueSRF_checkForNoBdsSubmitted" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	Select count(1)
		from CST_SUBM s
		join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
				s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
		where s.Flt_KEY =  #flightKeyProc# and S.FLT_DATE = To_date(#flightDateProc# ,'DDMONYY') and 
			  s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #awbNo# and
			  c.brkdn_code in ('LP', 'LC', 'SP', 'SC')
	]]>
	</select>
	
	<select id="chkBDSComplete" parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
		Select DECODE (COUNT(1),0,'N','Y')
			from CST_SUBM s
			join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
					s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
					where s.Flt_KEY =  #FLT_KEY# and S.FLT_DATE = To_date(#FLT_DATE# ,'DDMONYY') and 
				 	s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #AWB_NO# and
				  	c.brkdn_code in ('LP', 'LC', 'SP', 'SC')
		]]>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="imp_IssueSRF_checkForBdsInProgress" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join (Select s.Flt_KEY, s.FLT_DATE, s.Flt_Type, c.AWB_NO, s.REC_TYPE, max(s.VER_NO) VER_NO 
			   from CST_SUBM s
			   join cst_csgnm c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
			   		s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no and s.REC_TYPE = c.RECV_REC_TYPE
			   where s.Flt_KEY =  c.FLT_KEY and s.FLT_DATE = c.FLT_DATE and 
			   s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and
			   s.SEND_STATUS in ('P', 'W')
			   group by s.Flt_KEY, s.FLT_DATE, s.Flt_Type, c.AWB_NO, s.REC_TYPE) s
			on c.FLT_KEY = s.FLT_KEY and c.FLT_DATE = s.FLT_DATE and c.AWB_NO = s.AWB_NO and s.FLT_TYPE = 'I'
		where c.AWB_NO = #awbNo# and c.FLT_KEY = #flightKeyProc# and c.FLT_DATE = to_date(#flightDateProc#,'DDMONYY')
	]]>
	</select>
	<select id="imp_IssueSRF_checkForNoNewCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		<![CDATA[
		select count(1)
		from (Select s.Flt_KEY, s.FLT_DATE, s.Flt_Type, s.REC_TYPE, c.AWB_NO, HAWB_NO, SUBM_DATE, 
					 case when BRKDN_CODE in ('SP', 'SC') then 1 else 0 end val
			   from CST_SUBM s
			   join cst_BD_DISC c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
					s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no and c.MSG_TYPE = 'B'
			   where s.Flt_KEY =  #flightKeyProc# and To_char(S.FLT_DATE,'DDMONYY') = #flightDateProc# and 
			   s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #awbNo#) s
		left join CST_RECV r on 
			   s.Flt_KEY = r.Flt_KEY and s.FLT_DATE = r.FLT_DATE and 
			   s.Flt_Type = r.Flt_Type and r.REC_TYPE in ('C', 'E') and s.AWB_NO = r.AWB_NO
		where (r.RECV_DATE > s.SUBM_DATE and s.val = 1)	or s.val = 0		
		]]>
	</select>
	<select id="imp_IssueSRF_checkForNoCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT count(1) 
	FROM IMP_CAR_AWB A 
	JOIN IMP_CAR_SHP S on A.AWB_NO = S.AWB_NO and A.AWB_DATE = S.AWB_DATE
	LEFT JOIN V_CST_IMP_CC_CODE_AWB V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO 
		 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' 
	WHERE S.FLT_KEY = #flightKeyProc# AND S.FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY') AND S.AWB_NO = #awbNo# 
		  AND V.CC_CODE IS NULL AND A.CATALOG not in ('IO')
	]]>
	</select>
	<parameterMap id="hmap" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	<parameter property="FLIGHTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="FLIGHTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="imp_IssueSRF_checkForNoCodeHAWB" parameterMap="hmap" >
		{ ? = call fun_get_cc_cnt(?,?,?) }
	</procedure>
	<select id="imp_IssueSRF_checkForCallCustoms" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM 
		(SELECT CC_CODE,IMP_SRF_ISS_YN FROM (SELECT T1.CC_CODE,IMP_SRF_ISS_YN FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 
		WHERE T1.CC_CODE = T2.CODE AND AWB_NO = #awbNo# AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
		ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1) where IMP_SRF_ISS_YN='N'
		]]>
	</select>
	<select id="imp_IssueSRF_checkForRestrictedCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) 
		FROM IMP_CAR_AWB A 
		JOIN IMP_CAR_SHP S on A.AWB_NO = S.AWB_NO and A.AWB_DATE = S.AWB_DATE
		LEFT JOIN V_CST_IMP_CC_CODE_AWB V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' 
		WHERE S.FLT_KEY = #flightKeyProc# AND S.FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY') AND S.AWB_NO = #awbNo# 
	  	AND A.CATALOG not in ('IO') AND V.CC_CODE in ('VG', 'VQ', 'VI')
	]]>
	</select>
	<select id="imp_IssueSRF_checkForRP" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM CST_DC_DTL 
		WHERE SHPM_TYPE IN ('I', 'A') AND AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
		]]>
	</select>
	<select id="imp_IssueSRF_codeDesc"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #PARAM#
	</select>
	<select id="imp_issueSrf_airlCrdAvail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_BAL, 0)) airlCrdAvail
		FROM CUST_AGENT_AIRL_CREDIT  
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#catalog#, 'IG', 'Import_GEN', DECODE(#catalog#, 'IO', 'Import_OBC', '*')))
		AND CUST_NO = #apptdAgtCode# AND CARR_CODE = #carrCode# AND nvl(upper(Status),'**') <> 'VOID' AND ROWNUM = 1
	]]>
	</select>
	
	<select id="imp_issueSrf_aatCrdAvail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_BAL, 0)) aatCrdAvail
		FROM CUST_AGENT_CREDIT
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
		AND CUST_NO = #apptdAgtCode# AND upper(CR_TYPE) = 'IMPORT_GEN' and nvl(upper(Status),'**') <> 'VOID' 
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
	
	]]>
	</select>
	
	<select id="imp_issueSrf_dmApprvlAmt"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_AMT,0)) FROM CUST_AGENT_DM_APP 
		WHERE
		CUST_NO=#apptdAgtCode#
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') <> 'VOID'
	]]>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getIssueSRFList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 <![CDATA[
	SELECT list.*,
(CASE WHEN (list.recd_pcs != NVL((list.pcs + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirPcsType = 'SL' THEN -1 * list.cirPc ELSE list.cirPc END END),'0')) THEN 'Y' 
ELSE CASE WHEN (TO_CHAR(list.recd_wt,'99999990D9') != TO_CHAR(NVL((TO_NUMBER(NVL(list.wt,0)) + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirWtType = 'SL' THEN -1 * TO_NUMBER(NVL(list.cirWt,0)) ELSE TO_NUMBER(NVL(list.cirWt,0)) END END),0),'99999990D9')) THEN 'Y' 
 ELSE CASE WHEN list.strCC IS NULL THEN 'Y' ELSE   
 CASE WHEN (SELECT COUNT(1) FROM MAST_CONSTRAINT_CODE A WHERE CODE = list.strCC AND IMP_SRF_ISS_YN = 'N') > 0 THEN 'Y' ELSE 'N' END END END END) disableInd
FROM (SELECT 'Normal' as srfType,awb.AGENT_CUST_NO,shp.carr_code,shp.awb_no awbNo,
  SUBSTR(shp.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(shp.AWB_NO,4) AS awbNoDisp ,
  TO_CHAR(shp.awb_date,'DDMONYY') awbDate,
  a.awb_type awbType,
  shp.flt_key flightKey,
  shp.recd_pcs as recd_pcs,
  TRIM(TO_CHAR(shp.recd_wt,'99999990D9')) as recd_wt,
  shp.manifest_pcs pcs,
  TRIM(TO_CHAR(shp.manifest_wt, '99999990D9')) wt,
  awb.doc_chk_comp docChkCompl,
  awb.doc_chk_req docChkReqd,
  shp.flt_date,
  awb.SPL_CODE1 AS splCode1,
  awb.SPL_CODE2 AS splCode2,
  awb.SPL_CODE3 AS splCode3,
  awb.SPL_CODE4 AS splCode4,
  awb.SPL_CODE5 AS splCode5,
  awb.SPL_CODE6 AS splCode6,
  awb.SPL_CODE7 AS splCode7,
  awb.SPL_CODE8 AS splCode8,
  awb.SPL_CODE9 AS splCode9,
  awb.CONTENT   AS contents ,
  awb.lock_ind lockInd,
  (SELECT cc_code
    FROM
  (SELECT t1.cc_code
  FROM V_CST_IMP_CC_CODE_AWB t1
  WHERE awb_no                             = SHP.AWB_NO
  AND FLT_KEY=SHP.FLT_KEY
  AND TO_CHAR(FLT_DATE,'DDMONYY')=SHP.FLT_DATE
  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  AND t1.flt_key NOT LIKE 'NB%'
  ) WHERE rownum = 1)  AS strCC,
  TO_CHAR(shp.FLT_DATE,'DDMONYY') AS flightDate,
  awb.APPNTD_AGENT                AS agentName,
  (SELECT SUM(inv.locn_pcs)
  FROM awb_inventory inv
  WHERE inv.awb_no = shp.awb_no
  AND inv.awb_date = shp.awb_date
  AND inv.flt_key  = shp.flt_key
  AND inv.flt_date = shp.flt_date
  ) AS invenPc,
  (SELECT TRIM(TO_CHAR(SUM(inv.locn_wt), '99999990D9'))
  FROM awb_inventory inv
  WHERE inv.awb_no = shp.awb_no
  AND inv.awb_date = shp.awb_date
  AND inv.flt_key  = shp.flt_key
  AND inv.flt_date = shp.flt_date
  )             AS invenWt,
  awb.CHRG_MODE AS chargeMode,
   (
  CASE
    WHEN (SELECT COUNT(*)
      FROM CUST_UNDERTAKING CU
      WHERE CU.AGENT_CODE =
        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
        )
      AND CU.CARR_CODE =
        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
        )
      AND awb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
    THEN 'Y'
    ELSE 'N'
  END)                                     AS licUnder,
  shp.CIR_PROC_USER as CIR_PROC_USER,
  shp.cir_pcs_type                          AS cirPcsType,
  shp.cir_wt_type                          AS cirWtType,
  shp.cir_wt_type                          AS cirType,
  shp.cir_pcs                              AS cirPc,
  TRIM(TO_CHAR(shp.cir_wt, '99999990D9')) AS cirWt,
  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=awb.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)  AS valInd,
  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
  (SELECT COUNT(b.hawb_no)
  FROM EDI_FHL A,
    EDI_FHL_HAWB B
  WHERE AWB_NO = shp.awb_no
  AND awb_date = shp.awb_date
  AND A.TR_NO  =B.TR_NO
  ) AS fhlCount,
  (
  CASE
    WHEN (SELECT sum(coun) from (
        SELECT decode(count(1),0,0,1) coun
        FROM IMP_CHRG_ITM_REV_AWB
        WHERE AWB_NO = shp.awb_no
        AND AWB_DATE = shp.awb_date
        AND ITM_CODE = 'TCPREP'
        UNION
        SELECT decode(count(1),0,0,2) coun
      FROM IMP_CHRG_ITM_REV_AWB
      WHERE AWB_NO =shp.awb_no
      AND AWB_DATE =shp.awb_date
        AND ITM_CODE = 'TCBULK')) > 2
    THEN 'MIX'
    ELSE
      CASE
        WHEN (SELECT COUNT(1)
          FROM IMP_CHRG_ITM_REV_AWB
          WHERE AWB_NO =shp.awb_no
          AND AWB_DATE =shp.awb_date
          AND ITM_CODE ='TCPREP') > 0
        THEN 'PPK'
        ELSE
          CASE
            WHEN (SELECT COUNT(1)
              FROM IMP_CHRG_ITM_REV_AWB
              WHERE AWB_NO =shp.awb_no
              AND AWB_DATE =shp.awb_date
              AND ITM_CODE = 'TCBULK') > 0
            THEN 'Bulk'
            ELSE ''
          END
      END
  END) AS tcType,
  (SELECT DECODE(COUNT(1),0,'N','Y')  FROM MAST_CARRIER carrier  where nvl(carrier.allow_esrf,'N') = 'Y' and carrier.code = a.carr_code) as disableEAWB,
  (SELECT FUN_GET_ESRF_STATUS(a.awb_no,a.awb_date)  from DUAL) as eligibilityStatus,
  EAWB_PRINT_YN as awbPrinted  
FROM imp_car_shp shp,
  imp_car_awb awb,
  awb a
WHERE shp.awb_no   = awb.awb_no
AND shp.awb_date   = awb.awb_date
AND shp.awb_no     = a.awb_no
AND shp.awb_date   = a.awb_date
AND a.awb_closed_yn='N'
AND EXISTS
  (SELECT NULL
    FROM awb_inventory av
    WHERE av.awb_no = shp.awb_no
    AND av.awb_date = shp.awb_date
    and av.flt_key = shp.flt_key
    and av.flt_date = shp.flt_date
    and av.cdif_no is null
    AND av.locn_pcs > 0
  )
AND (shp.awb_no,shp.awb_date,shp.flt_key,shp.flt_date) NOT IN (
SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
UNION ALL
SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =shp.awb_no AND IMPSRF.AWB_DATE = shp.awb_date 
AND IMPSRFFLT.FLT_KEY=shp.flt_key AND IMPSRFFLT.FLT_DATE = shp.flt_date AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED'
)
AND a.awb_type='I'
UNION ALL
SELECT 'CDIF' AS srfType,car.AGENT_CUST_NO,'' carr_code,a.awb_no awbNo,
  SUBSTR(a.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(a.AWB_NO,4) AS awbNoDisp,
  TO_CHAR(a.awb_date,'DDMONYY') awbDate,
  a.awb_type awbType,
  C.CDIF_NO flightKey,
  0 as recd_pcs,
  TRIM(TO_CHAR('0','99999990D9')) as recd_wt,
  0 pcs,
  TRIM(TO_CHAR(0, '99999990D9')) wt,
  'N/A' docChkCompl,
  'N/A' docChkReqd,
  C.CDIF_DATE AS flt_date,
    a.SPL_CODE1 AS splCode1,
  a.SPL_CODE2 AS splCode2,
  a.SPL_CODE3 AS splCode3,
  a.SPL_CODE4 AS splCode4,
  a.SPL_CODE5 AS splCode5,
  a.SPL_CODE6 AS splCode6,
  a.SPL_CODE7 AS splCode7,
  a.SPL_CODE8 AS splCode8,
  a.SPL_CODE9 AS splCode9,
  a.CONTENT   AS contents ,
  CAR.lock_ind lockInd,
(SELECT cc_code
    FROM
  (SELECT t1.cc_code
  FROM V_CST_IMP_CC_CODE_AWB t1
  WHERE awb_no                             = A.AWB_NO
  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  AND t1.flt_key NOT LIKE 'NB%'
  ) WHERE rownum = 1)                           AS strCC,
  TO_CHAR(C.CDIF_DATE,'DDMONYY') AS flightDate,
  CAR.APPNTD_AGENT               AS agentName,
  CH.PCS                         AS invenPc,
  TRIM(TO_CHAR(CH.WT, '99999990D9'))                          AS invenWt,
  'N/A'                          AS chargeMode,
    (
  CASE
    WHEN (SELECT COUNT(*)
      FROM CUST_UNDERTAKING CU
      WHERE CU.AGENT_CODE =
        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
        )
      AND CU.CARR_CODE =
        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
        )
      AND a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
    THEN 'Y'
    ELSE 'N'
  END)  AS licUnder,
  '' as CIR_PROC_USER,
  'N/A'                          AS cirPcsType,
  'N/A'                          AS cirWtType,
  'N/A' AS cirType,
  0 AS cirPc,
  TRIM(TO_CHAR('0','99999990D9')) AS cirWt,
  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=car.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)                             AS valInd,
  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
  (SELECT COUNT(HAWB.hawb_no)
    FROM EDI_FHL HD,
      EDI_FHL_HAWB HAWB
    WHERE HD.AWB_NO = a.awb_no
    AND HD.awb_date = a.awb_date
    AND HAWB.TR_NO  =HD.TR_NO
  )     AS fhlCount,
  'N/A' AS tcType,
  (SELECT DECODE(COUNT(1),0,'N','Y')  FROM MAST_CARRIER carrier  where nvl(carrier.allow_esrf,'N') = 'Y' and carrier.code = a.carr_code) as disableEAWB,
  (SELECT FUN_GET_ESRF_STATUS(a.awb_no,a.awb_date)  from DUAL) as eligibilityStatus,
  '' as awbPrinted
FROM IMP_CDIF C
JOIN AWB a
ON c.awb_no         = a.awb_no
AND c.awb_date      = a.awb_date
AND a.awb_closed_yn = 'N'
AND a.awb_type      ='I'
JOIN IMP_CAR_AWB CAR
ON CAR.awb_no    = a.awb_no
AND CAR.awb_date = a.awb_date
JOIN
  (SELECT CDIF_NO,
    SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS,
    SUM(NVL(CDIF_UTL_WT, 0)  + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
  FROM IMP_CDIF_HAWB
  GROUP BY CDIF_NO
  ) CH
ON CH.CDIF_NO = C.CDIF_NO
LEFT JOIN
  (SELECT CDIF_NO,
    MAX(SEQ_NO) SEQ_NO
  FROM AWB_INVENTORY
  WHERE CDIF_NO IS NOT NULL
  GROUP BY CDIF_NO
  ) AM
ON AM.CDIF_NO = C.CDIF_NO
LEFT JOIN AWB_INVENTORY AI
ON AI.SEQ_NO = AM.SEQ_NO
WHERE C.VOID_USER IS NULL 
AND (A.awb_no,A.awb_date,c.CDIF_NO,TRUNC(c.CDIF_DATE)) NOT IN (
SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
UNION ALL
SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =A.awb_no AND IMPSRF.AWB_DATE = A.awb_date 
AND IMPSRFFLT.FLT_KEY=c.CDIF_NO AND IMPSRFFLT.FLT_DATE = TRUNC(c.CDIF_DATE) AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED')
AND EXISTS
    (SELECT NULL
    FROM awb_inventory av
    WHERE av.awb_no = a.awb_no
    AND av.awb_date = a.awb_date
    and av.cdif_no = c.cdif_no
    and av.cdif_no is not null
    AND av.locn_pcs > 0
    )) list WHERE 1=1
    ]]>
	<dynamic>
	<isEmpty property="awbSearchStatus">
		<isNotEmpty prepend="AND" property="carrCode">
		((list.CARR_CODE = #carrCode#) OR (EXISTS (SELECT NULL FROM IMP_SRF_FLT A,IMP_CDIF B WHERE A.SRF_NO = B.SRF_NO AND B.CDIF_NO=list.flightKey and a.CARR_CODE=#carrCode#)))
        </isNotEmpty>
        <isNotEmpty property="fltDateFrom">
        <isNotEmpty property="fltDateTo">
          and to_date(TO_CHAR(list.flt_date,'DDMONYY'),'DDMONYY') BETWEEN  to_date( #fltDateFrom# , 'DDMONYY' ) AND to_date( #fltDateTo# , 'DDMONYY' )
        </isNotEmpty>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="agentName">
          list.AGENT_CUST_NO in (select code from cust_company where code_desc like #agentName#||'%')
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="agentCode">
          list.AGENT_CUST_NO = #agentCode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="fltKey">
         list.flightKey = #fltKey#
        </isNotEmpty>
        <isNotEmpty property="loginCarrier">
				   AND ( list.carr_code = #loginCarrier# OR  list.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="awbSearchStatus">
        AND list.awbNo in (#awbNo1#,#awbNo2#,#awbNo3#,#awbNo4#,#awbNo5#,#awbNo6#,#awbNo7#,#awbNo8#,#awbNo9#,#awbNo10#,
						   #awbNo11#,#awbNo12#,#awbNo13#,#awbNo14#,#awbNo15#,#awbNo16#,#awbNo17#,#awbNo18#,#awbNo19#,#awbNo20#,
						   #awbNo21#,#awbNo22#,#awbNo23#,#awbNo24#,#awbNo25#,#awbNo26#,#awbNo27#,#awbNo28#,#awbNo29#,#awbNo30#,
						   #awbNo31#,#awbNo32#,#awbNo33#,#awbNo34#,#awbNo35#,#awbNo36#,#awbNo37#,#awbNo38#,#awbNo39#,#awbNo40#)
		</isNotEmpty>
        
</dynamic>	
order by list.awbNo,list.flt_date,list.flightKey
	</select>
	<select id="getReIssueSRFList" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.SRFBO">
	<![CDATA[
		SELECT B.SRF_NO as srfNo,A.AWB_NO as awbNo,substr(A.AWB_NO,0,3)||'-'||substr(A.AWB_NO,4) as awbNoDisp,TO_CHAR(B.AWB_DATE,'DDMONYY') AS awbDate,
	  (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=B.AGENT_ID AND ROWNUM=1) apptdAgt,
	  B.AUTH_REP_NAME AS authRepName,
	  B.AUTH_REP_ID AS authRepID,
	  B.AGENT_ID AS agentCode
	  FROM
	IMP_SRF B,IMP_CAR_AWB A
	WHERE B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND B.post_date is null and B.post_time is null and B.post_user is null
	AND B.void_date is null and B.void_user is null
	AND EXISTS (SELECT NULL FROM awb_inventory av,IMP_SRF SRF,IMP_SRF_FLT SRFFLT WHERE 
	            av.awb_no = B.awb_no AND SRF.SRF_NO = SRFFLT.SRF_NO AND SRF.SRF_NO = B.SRF_NO
	            AND av.awb_date = B.awb_date and av.flt_key = SRFFLT.flt_key and av.flt_date = SRFFLT.flt_date  and av.cdif_no is null
	            AND av.locn_pcs > 0
	            UNION ALL
	            SELECT NULL FROM awb_inventory av  WHERE   av.awb_no = B.awb_no
  				AND av.awb_date = B.awb_date AND av.cdif_no  IS NOT NULL  AND av.locn_pcs > 0
	            )
	AND (B.AWB_NO,B.SRF_NO) NOT IN (SELECT B.AWB_NO,B.REF_KEY FROM BATCH_JOB_HD A, BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE='REISSUESRF' AND B.COMP_DATE IS NULL)
	AND (sysdate <= B.SRF_EXPY_DATE AND B.STATUS='ISSUED')
	            ]]>
	<isNotEmpty property="agentCode">
	AND B.AGENT_ID = #agentCode#
	</isNotEmpty>
	<isNotEmpty property="agentName">
	AND B.AGENT_ID IN (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName#)
	</isNotEmpty>
	order by b.srf_date desc
	</select>
		<select id="getReIssueSRFFltList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFBO">
	SELECT B.FLT_KEY AS fltKey,TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate FROM IMP_SRF A,IMP_SRF_FLT B WHERE B.SRF_NO = A.SRF_NO AND A.SRF_NO = #PARAM#
	</select>
	<insert id="awbEventFORSRF" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', #EVENT_TYPE#, 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="awbEventFORFORSRFDTLS" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS,COD_HWB_NUM, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', #EVENT_NUM#, #desHisDtls#,#transactionNUM#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
		<insert id="Imp_IssueSrfbatch_hd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO BATCH_JOB_HD (JOB_ID,JOB_TYPE,ACT_USER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES ( #latestBatchJob#,#jobType#,#userID#,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	<insert id="Imp_IssueSrfbatch_dtl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO BATCH_JOB_DTL (JOB_ID,REF_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CDIF_NO,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOCLINE_NO)
		VALUES ( #latestBatchJob#,#refKey#,#awbNo#,#awbDate#,#flightKey#,#flightDate#,#cdifNo#,#srfNo#,#userID#,SYSDATE,#userID#,SYSDATE,nvl(#docLineNum#,'1'))
	</insert>

		<update id="updateBatchDTLRecord" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update BATCH_JOB_DTL set SRF_NO = #srfNo#,COMP_DATE = SYSDATE,REMARKS = #errorRemarks#,LM_DATE = SYSDATE,LM_USER_ID = #userID# WHERE JOB_ID = #latestBatchJob# AND AWB_NO = #awbNo# AND COMP_DATE is null
		<isNotEmpty property="flightKey" > 
		AND FLT_KEY=#flightKey# 
		</isNotEmpty>
		<isNotEmpty property="refKey" > 
		AND REF_KEY=#refKey# 
		</isNotEmpty>
	 </update>

		<select id="sqlgetbatchjobdetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT to_char(JOB_ID) AS JOBID , STATUS as STATUS
				FROM
				  (SELECT JOB_ID ,
				  CASE 
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is null) > 0 THEN 'P'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.SRF_NO is null) > 0 THEN 'R'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.SRF_NO is not null) > 0 THEN 'C'  
				  END as STATUS
				  FROM BATCH_JOB_HD A
				  WHERE A.ACT_USER = #USER# AND A.JOB_TYPE = #JOB_TYPE#
				  AND CR_DATE > SYSDATE-1 ORDER BY CR_DATE DESC
				  )
				WHERE ROWNUM < = 5
		]]>
	</select>
	  <select id="sqlgetBatchJobStatus" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(JOB_ID)
		FROM
		  (SELECT DISTINCT A.JOB_ID
		  FROM BATCH_JOB_HD A,
		    BATCH_JOB_DTL B
		  WHERE B.JOB_ID   = A.JOB_ID
		  AND A.JOB_TYPE   =#screenFlow#
		  AND A.ACT_USER = #userID#
		  AND B.COMP_DATE IS NULL
		  AND ((24 * (SYSDATE  - B.CR_DATE)) <= 120)
		  )
		]]>
	</select>
	<select id="srfExist"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	 <![CDATA[
		Select COUNT(1)
			from IMP_SRF s, IMP_SRF_FLT sf 
			where s.SRF_No = sf.SRF_No 
			and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
			AND S.AWB_NO = #awbNo# AND S.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			 AND SF.FLT_KEY = #flightNoKey# AND SF.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')   
		]]>
	</select>	
	<select id="imp_issueSrf_valid_colletedBy"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM CUST_COMPANY C 
		LEFT JOIN CUST_AGENT_AUTH_REP R ON C.CODE = R.CUST_NO AND AUTH_REP_NAME = #collectedBy# AND AUTH_REP_ID = NVL(#hkId#, AUTH_REP_ID)
		WHERE C.CODE = #apptdAgtCode#
		AND R.CUST_NO IS NULL
	</select>
	<parameterMap id="Hmap" class="map" >
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="INOUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="INOUT"/>
		<parameter property="FLTNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="splitFltKeyProc" parameterMap="Hmap" >
		{call PKG_IMP.PRC_FLT_FOR_CDIF(?,?,?,?)}
	</procedure>	
	<parameterMap id="ahmIssueSRF" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="CARR" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="splitFltKey" parameterMap="ahmIssueSRF" >
	{  ? = call FUN_GET_FLT_CARR(?,?,?) }
	</procedure>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="Imp_SrfWhDest" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="cargo.cms.imprt.bo.WhDestBO">
		SELECT inv.LOC_CODE FROM AWB_INVENTORY inv		
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 		
		 AND AWB_TYPE = 'I' 
		AND inv.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND inv.FLT_KEY = #flightNoKey#
		AND ROWNUM=1
	</select>
	-->
	<select id="imp_IssueSRF_getStrgCharges"  parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT srf.AMT	FROM GT_SRF_CHARGES srf
			WHERE 
			srf.AWB_NO = #AWBNO# AND srf.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND 			
			srf.FLT_KEY = #FLTKEY# AND  
			srf.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
			srf.RMODE = #PMODE# AND srf.CHRG_TYPE = #CHRGTYPE# AND 
			exists (select null
					       from   awb
					       where  awb_no = srf.awb_no
					       and    awb_date = srf.awb_date
						   and    awb_type = #AWBTYPE#)  			
		]]>
	</select>
	
<select id="getChargesListdata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 		resultClass="cargo.cms.imprt.bo.ChargesListBO">
		<![CDATA[
		
		select awbNo, awbDate, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, qty, unitPrice, waiveAmount,
        CASE WHEN (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) END amt,
        (chamt - nvl(waiveAmount,0)) chrgAmt, minChrgInd, maxChrgInd,
	    a.AGENT_CODE custNo, a.AGENT_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
		m.WAVR_IND waiveCharges
		from 
			 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
					  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
					 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
					 from GT_SRF_CHARGES G
					 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0) + nvl(WAVR_AMT,0)),0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
							 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
							 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							 	   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								   	  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
							 	   	  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
					 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					 
					  and G.RMODE = 'SRF'
					 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
			  union
			  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
			  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
					 'N', 'N'
					  from IMP_CHRG_ITM_REV_AWB 
					  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
					  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
			  ) c
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(ica.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(NET_AMT+WAVR_AMT) pchrg  from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%' group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')  
		]]>
	</select>
       	<select id="getOverChargeListdata"  parameterClass="map" resultClass="cargo.cms.imprt.bo.ChargesListBO">
			select tr_no gtTrNo, INV_NO InvNo, inv_doc_line_no invDocLineNo, to_char(INV_DATE,'DDMONYY') invDate,
			AWB_NO awbNo,to_char(AWB_DATE,'DDMONYY') awbDate, ITM_CODE itemCode,ITM_CODE_SFX  itemCodeSfx,  ITM_DESC itemDesc , OLD_CHRG oldChrg,
			NEW_CHRG newChrgAmt, nvl(NEW_CHRG,0) - nvl(OLD_CHRG,0) reimbChrg, reimb_Chrg rmbDbCharge, CUST_NAME custName, REV_IND revInd,
			inv_type invType 
			from GT_BILL_OLD_INV_DTL 
			where 1=1 and  
			<iterate property="trNo"
            open="(" close=")" conjunction="OR" >
                tr_no = $trNo[]$
                
            </iterate>   
	</select>	

	<select id="getOverChargeList_AWB_CARR_CATALOG"  parameterClass="cargo.cms.imprt.bo.ChargesListBO" resultClass="cargo.cms.imprt.bo.ChargesListBO">
			select carr_code carrCode, catalog catalog from awb 
					where awb_no = #awbNo# and awb_date = #awbDate# and rownum = 1
	</select>	
	
<select id="getPreviousExtraChargesListdata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 		resultClass="cargo.cms.imprt.bo.ChargesListBO">
		<![CDATA[
		
	select awbNo, to_char(awbDate,'DDMONYY') awbDate, inv.inv_no invNo, to_char(inv.inv_date,'DDMONYY') invDate, inv.inv_type invType, 
      c.tr_no chrgTrNo, itemCode, itemCodeSfx, 
        nvl(itemDesc, (select itm_desc from BILL_ITM_MASTER where itm_code = itemCode and nvl(itm_code_sfx,'**') = nvl(itemCodeSfx,'**') and rownum = 1 ) ) itemDesc,
         m.REV_IND revInd, qty, unitPrice, 
        pchrg as oldChrg, nvl(chamt, 0) newChrgAmt, nvl(pchrg, 0) -  nvl(chamt, 0) - nvl(waiveAmount,0) reimbChrg,
        (chamt - nvl(waiveAmount,0)) newChrg, minChrgInd, maxChrgInd,
        a.AGENT_CODE custNo, inv.CUST_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
        m.WAVR_IND waiveCharges, carrCode, accAdjAmount, inv.catalog, remarks,invDocLineNo,cashInd 
    from 
			 (select C.tr_no ,C.AWB_NO awbNo, C.AWB_DATE awbDate, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE itemCode, C.ITM_CODE_SFX itemCodeSfx,c.ECT_HANDLER,
           			nvl(sum(nvl(NET_AMT,0))  ,0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO               
							 where C.Status = 'PAID'  and C.AWB_NO = #awbNo# and C.AWB_DATE = to_date(#awbDate#, 'DDMONYY')		
							 group by C.tr_no ,C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, c.ECT_HANDLER ) c       
    left join (select G.AWB_NO , G.AWB_DATE , G.ITM_CODE  , G.ITM_CODE_SFX , 
                            min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice,  sum(G.AMT) chamt, 
                            min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd				
                            from GT_SRF_CHARGES  G 
                            group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX ) gt on  C.awbNo = gt.AWB_NO AND C.awbDate = gt.AWB_DATE
							 	   	  AND C.itemCode = gt.ITM_CODE and NVL(C.itemCodeSfx, '**') = NVL(gt.ITM_CODE_SFX, '**')
    
    join (select chrgDtl.AWB_NO, chrgDtl.AWB_DATE, 
            invDtl.inv_no,invhd.inv_date, invDtl.DOC_LINE_NO AS invDocLineNo ,chrg_tr_no ,chrgDtl.ITM_CODE, chrgDtl.ITM_CODE_SFX, 
           invhd.inv_type,invDtl.CASH_IND  cashInd,chrgDtl.REMARKS AS remarks,
            (Select CATALOG FROM AWB WHERE AWB_NO = chrgDtl.AWB_NO and AWB_DATE =  chrgDtl.AWB_DATE and awb_type in ('I','T')  and rownum = 1) as catalog,
            (Select carr_code FROM AWB WHERE AWB_NO = chrgDtl.AWB_NO and AWB_DATE =  chrgDtl.AWB_DATE  and awb_type in ('I','T') and rownum = 1) as carrCode,
            nvl(invDtl.ACC_ADJ_AMT, 0) AS accAdjAmount, chrgDtl.CUST_NAME
            from BILL_CHARGE_DTL chrgDtl 
            join bill_inv_dtl invDtl on invDtl.chrg_tr_no = chrgDtl.tr_no 
            join BILL_inv_hd invhd on invhd.inv_no = invDtl.inv_no 
            where Status = 'PAID' 
    	) inv on c.tr_No = inv.chrg_tr_no and inv.AWB_NO = c.awbNo AND  inv.AWB_DATE = c.awbDate AND inv.ITM_CODE = c.itemCode and NVL(inv.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
    
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(c.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')		
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where itemcode like 'TC%' and NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')
    	and (nvl(chamt,0) + nvl(waiveAmount,0) - nvl(pchrg, 0) ) < 0
		]]>
	</select>

	<update id="updateOverChargeOSTDCharges" parameterClass="map" >
 		update GT_BILL_OLD_INV_DTL set ostd_chrg = #ostd_chrg# where tr_no  = #trNo#
 	</update>

	<delete id="delete_GT_BILL_OLD_INV_DTL_OLDATA" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
 		<![CDATA[
 		delete from GT_BILL_OLD_INV_DTL where cr_date  < sysdate - 30
 		]]>
 	</delete>
 	<delete id="delete_GT_BILL_OLD_INV_DTL" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
 		delete from GT_BILL_OLD_INV_DTL where inv_no = #invNo# and inv_Date = #invDate#
 	</delete>
	<insert id="insert_GT_BILL_OLD_INV_DTL" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		insert into GT_BILL_OLD_INV_DTL
		(TR_NO,  DOC_LINE_NO , INV_NO , inv_doc_line_no, INV_DATE , INV_TYPE , CHRG_TR_NO , AWB_NO , AWB_DATE , CARR_CODE , SRF_NO , ITM_CODE, 
		ITM_CODE_SFX , ITM_DESC , REV_IND , QTY , unit_Price , old_Chrg , new_Chrg, CHARGE_AMT , reimb_Chrg , ACC_ADJ_AMT , 
		RMK , CUST_NAME , CUST_NO	, CASH_IND , 	CR_USER_ID , CR_DATE , LM_USER_ID , LM_DATE  )
		values (#gtTrNo#, #docLineNo#, #invNo#, #invDocLineNo#, #invDate#, #invType#, #chrgTrNo#, #awbNo#, to_date(#awbDate#,'DDMONYY') , #carrCode#, #srfNo#, #itemCode#,
		#itemCodeSfx#, #itemDesc#, #revInd#, #qty#, #unitPrice#, #oldChrg#, #newChrg#, #newChrgAmt#, #reimbChrg#,#accAdjAmount#,
		#remarks#, #custName#, #custNo#, #cashInd#, #crUserId# , sysdate, #crUserId# , sysdate)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<update id="updateBillWaiveFromSrf" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		Update BILL_WAIVE_CHARGE
		SET CHARGE_CREATED = 'Y'
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# AND
		ITM_CODE = #itemCode# AND
		NVL(ITM_CODE_SFX,'**') = NVL(#itemCodeSfx#,'**')
		AND CHARGE_CREATED = 'N'
	</update>
	
	<select id="issuesrf_check_ecthandler" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		select count(1)
		from imp_car_awb a
		join imp_car_shp s on s.AWB_NO = a.AWB_NO AND s.AWB_DATE = a.AWB_DATE
		join awb_inventory i on s.AWB_NO = i.AWB_NO AND s.AWB_DATE = i.AWB_DATE 
		AND s.FLT_KEY = i.FLT_KEY AND s.FLT_DATE = i.FLT_DATE
		where a.ECT_HANDLER != 'CPCT' and i.LOC_CODE = 'ECT'
		and s.AWB_NO = #awbNo# AND s.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
	</select>
	<select id="Imp_Expiry_IMP_SRF" parameterClass="java.lang.String" resultClass="java.lang.String"> 	
		select TO_CHAR((SYSDATE + (#extendHrs#/24)),'DDMONYY HH24:MI') from dual
	</select> 
	<select id="Imp_SrfCarrCode" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		SELECT CARR_CODE 
		FROM AWB 
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND AWB_TYPE = 'I'
	</select>
	<update id="Imp_IssueSrf_Upd_Consignee_Data" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Update IMP_CAR_AWB SET
		AGENT_CUST_NO=#apptdAgtCode#, 	
		APPNTD_AGENT=#apptdAgt#,
		AGENT_ADDR1 = #apptdAgtAddrOne#,
		AGENT_ADDR2 = #apptdAgtAddrTwo#,
		AGENT_ADDR3 = #apptdAgtAddrThree#,
		AGENT_ADDR4 = #apptdAgtAddrFour#,
		AGENT_ADDR5 = #apptdAgtAddrFive#,
		AGENT_PLACE = #city#, 
		AGENT_CTRY_CODE = #country#, 
		AGENT_PIN_CODE = #pin#,
		BANK_ENDOS=#bankEndorsmentYN#, 
		BANK_TYPE=#bank#,  
		AIRLN_RMK=#awbRemarks# ,
		LM_USER_ID = #crUserId#,
		LM_DATE = sysdate,
		TR_TYPE ='DUMMY'
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# 	
	</update>
	
	<update id="Imp_IssueSrf_Upd_Consignee_Data_AWB" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Update AWB SET
		AGENT_CODE=#apptdAgtCode#, 	
		AGENT_NAME=#apptdAgt#
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# 	
	</update>
	
	<insert id="Imp_IssueSrf_insertConsigneeData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF ( 
		AWB_NO,
		AWB_DATE,
		SRF_NO,
		DOC_LINE_NO,
		SRF_DATE,		
		SRF_PRT_CODE,
		INV_PRT_CODE,
		TRUCK_CO,
		TRUCK_NO,
		TD_NO,
		COLL_NAME,
		COLL_HKID,
		REPEAT_YN,
		SRF_MODE,
		CARR_CODE,
		SRF_PCS,
		SRF_WT,
		ISSUE_USER,
		TR_STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE , 
		SRF_EXPY_DATE,
		AUTH_REP_NAME,
		AUTH_REP_ID,
		CHARGE_STATUS,
		COLL_CENTER,
		AGENT_ID,
		TR_TYPE,
		AWB_CC_CODE,
			SHCS,
			ESRF_YN,
			print_ind,
			print_user,
			SRF_PRNT_DATE
		)
		VALUES
		( #awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#srfNo#,
		#docLineNo#,		
		sysdate,
		#srfPtr#,
		#invcPtr#,
		#truckerCoCode#,
		#truckNo#,
		#truckDockNo#,
		#collectedByCode#,
		#hkId#,
		#repeatYN#,
		'CRD',
		#carrCode#,
		#srfPc#,
		#srfWt#,
		#crUserId#,
		'N',
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		TO_Date(#srfExpiryDate#,'DDMONYY HH24:MI'),
		#authPerson#,
		#authPersonId#,
		#chargeStatus#,#collCenter#,#apptdAgtCode#,
		#trtype#,
		#highCCCode#,
			#shcs#,
			DECODE(#srfPtr#,'ESRF','Y','N'),
			DECODE(#srfPtr#,'ESRF','Y','N'),
			DECODE(#srfPtr#,'ESRF',#crUserId#,''),
			DECODE(#srfPtr#,'ESRF',sysdate,'')
		)
	</insert>
 <update id="updateBatchDTLRecordCAR" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update BATCH_JOB_DTL set 
		CAR_CREATED = #carCreated#,
		COMP_DATE = SYSDATE,
		REMARKS = #errorRemarks#,LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE JOB_ID = #latestBatchJob#  AND AWB_NO = #awbNo# AND COMP_DATE is null
		<isNotEmpty property="flightKey" > 
			AND FLT_KEY=#flightKey# 
		</isNotEmpty>
		<isNotEmpty property="refKey" > 
			AND REF_KEY=#refKey# 
		</isNotEmpty>
	 </update>
	<select id="getbatchjobdetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT to_char(JOB_ID) AS JOBID , STATUS as STATUS
				FROM
				  (SELECT JOB_ID ,
				  CASE 
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is null) > 0 THEN 'P'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.remarks is not null) > 0 THEN 'R'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.remarks is null) > 0 THEN 'C'  
				  END as STATUS
				  FROM BATCH_JOB_HD A
				  WHERE A.ACT_USER = #USER# AND A.JOB_TYPE = #JOB_TYPE#
				  AND CR_DATE > SYSDATE-1 ORDER BY CR_DATE DESC
				  )
				WHERE ROWNUM < = 5
		]]>
	</select>
	
	<select id="getBatchJobDetailsCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT A.JOB_ID AS batchJob1,
			B.REF_KEY AS refKey,
			B.AWB_NO AS awbNo,
			DECODE(b.Car_Created,'Y','Y','N') AS result,
			B.REMARKS AS errorRemarks 
			FROM BATCH_JOB_HD A,BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE = #jobType# AND A.JOB_ID = #jobId# ORDER BY b.job_id,b.docline_no ASC
		]]>
	</select>
	<insert id="Imp_IssueSrf_Shipment_Data" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" >
		INSERT INTO IMP_SRF_FLT ( 
		SRF_NO,
		AWB_NO,
		AWB_DATE,
		CARR_CODE,
		FLT_NO,
		FLT_KEY,
		FLT_TYPE,
		FLT_DATE,
		INV_PCS,
		INV_WT,
		MANIFEST_PCS,
		MANIFEST_WT,
		CIR_TYPE,
		CIR_PCS,
		CIR_WT,
		CC_CODE,
		CTM_REF_NO,
		DC_IND,
		STRG_CHRG,
		RMK,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		ORIG_FLT_KEY, 
		ORIG_FLT_DATE,
		DLV_PCS,
		DLV_WT)
		VALUES 
		(#srfNo#,	
		#awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#flightKey#,
		#flightNo#,
		#flightNoKey#,
		'I',
		#flightDate#,
		#invPc#,
		#invWt#,
		#manfPc#,
		#manfWt#,
		#cirType#,
		#cirPc#,
		#cirWt#,
		#strCC#,
		#ctmRefNo#,
		NVL(#strDC#,'N'),
		#strChrg#,
		#remarks#,
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		NVL(#flightKeyProc#,#flightNoKey#),
		NVL(TO_Date(#flightDateProc#, 'DDMONYY'),TO_Date(#flightDate#, 'DDMONYY')),
		#dlvPcs#,
		#dlvWt#)
	</insert>

    <insert id="Imp_IssueSrf_insertbillcharge_dtl" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		INSERT INTO BILL_CHARGE_DTL
		(TR_NO,AWB_DATE, AWB_NO,  CALC_CHRG ,
		CASH_IND,CHRG_AMT,   CUST_NO , CUST_NAME , ITM_CODE, 
		ITM_CODE_SFX, ITM_DESC, MAX_CHRG_IND, MIN_CHRG_IND, NET_AMT ,
		QTY, REV_IND, SRF_NO,  STD_IND,  
		UNIT_PRICE,UOM, UPD_DESC_IND, UPD_RATE_IND, WAVR_IND,WAVR_AMT,WAVR_DONE,
		LM_USER_ID, CR_USER_ID, STATUS ,CURR_CODE, LM_DATE, CR_DATE,PAID_AMT_DM,WAVR_USER_ID,WAVR_DATE,WAVR_FORM_NO,WAVR_RMK,REMARKS,ECT_HANDLER)
		VALUES
		(#trNo# , TO_DATE(#awbDate#,'DDMONYY'), #awbNo#, NVL(#amt#,0)+NVL(#waiveAmount#,0) ,
		#cashInd# ,#amt# , #custNo# , #custName#,#itemCode# ,
		#itemCodeSfx#, #itemDesc#, #maxChrgInd#, #minChrgInd#, #amt#,
		#qty#,#revInd#,#srfNo#,#stdInd#,
		#unitPrice#, #uom#,#updDesc#,#updRate#,#waiveCharges#,NVL(#waiveAmount#,0),NVL(#waiveDone#,'N'),
		#crUserId#,#crUserId#,NVL(#chargeStatus#,'PENDING'),'HKD',SYSDATE,SYSDATE,#dmApprAmount#,#waiveUser#,TO_DATE(#waiveDate#,'DDMONYY HH24:MI:SS'), #wavrFormNo# , #wavrRmk#,#chargeRmk#, 
		decode(instr(#itemCode#,'TC'),1,NVL((SELECT ECT_HANDLER FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# and AWB_DATE = #awbDate#),'CPCT'),''))
	</insert>
	
	<parameterMap id="srfMap" class="map" >	
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="callPrcSrfRmk" parameterMap="srfMap" >
		{call PKG_IMP.PRC_SRF_RMK(?)}
	</procedure>
	<select id="Imp_countForCloseAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		<![CDATA[		
		SELECT COUNT(1)
		FROM IMP_CAR_AWB A
		JOIN (SELECT AWB_NO, AWB_DATE, SUM(MANIFEST_PCS) MANIFEST_PCS FROM IMP_CAR_SHP s 
			 GROUP BY AWB_NO, AWB_DATE) M ON A.AWB_NO = M.AWB_NO AND A.AWB_DATE = M.AWB_DATE
		JOIN (SELECT AWB_NO, AWB_DATE, SUM(SRF_PCS) SRF_PCS FROM IMP_SRF s
			 WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
					  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
			 and not exists (select null from IMP_CDIF where VOID_USER is null and CDIF_SRF_NO = s.SRF_NO)
			 GROUP BY AWB_NO, AWB_DATE) S
			ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
		WHERE NOT EXISTS (SELECT NULL FROM AWB_INVENTORY AI
						 WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE 						 
						 AND (SRF_NO IS NULL OR 
									 EXISTS (SELECT NULL FROM IMP_SRF WHERE STATUS = 'ISSUED' and SRF_EXPY_DATE < sysdate AND SRF_NO = AI.SRF_NO))) 
		AND A.AWB_NO = #awbNo# AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		AND A.AWB_PCS <= S.SRF_PCS AND A.AWB_PCS <= M.MANIFEST_PCS
		]]>
	</select>
	<update id="Imp_updateForCloseAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE AWB SET AWB_CLOSED_YN = 'Y' , LM_USER_ID = #crUserId# , LM_DATE = sysdate
		WHERE AWB_TYPE = 'I' AND AWB_NO = #awbNo# AND AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<insert id="Imp_InsertImpSrfAwbInventory" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		SRF_NO, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, CTM_REF_NO, SCH_COLL_DATE, ULD_KEY, LSP_NO, 
		LOC_CODE, LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY,DAM_IND, CR_USER_ID, CR_DATE, SEQ_NO,REF_CDIF_NO)
		SELECT SRF_NO, AWB_NO, AWB_DATE, (select CARR_CODE from AWB A where A.AWB_NO = AWB_INVENTORY.AWB_NO AND A.AWB_DATE = AWB_INVENTORY.AWB_DATE) , CATALOG, CC_CODE, REF_RMK, SCH_COLL_DATE, ULD_KEY, LSP_NO, 
		LOC_CODE, LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY,DAM_IND, LM_USER_ID, SYSDATE ,SEQ_NO,CDIF_NO
		FROM AWB_INVENTORY WHERE SRF_NO = #srfNo#
	</insert>
	<update id="updateAwbInventoryRtnCargo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE AWB_INVENTORY inv SET inv.SRF_NO = #srfNo# , inv.LM_USER_ID = #crUserId# , inv.LM_DATE = sysdate
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
		AND exists (select null
        from   awb
        where  awb_no = inv.awb_no
        and    awb_date = inv.awb_date
	    and    awb_type = 'E')  
	</update>
	<select id="checkSrfExist"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	 <![CDATA[
		Select COUNT(1)
		from IMP_SRF s, IMP_SRF_FLT sf 
		where s.SRF_No = sf.SRF_No 
		and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
		AND S.AWB_NO = #awbNo# AND S.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
		AND SF.FLT_KEY = #flightNoKey# AND SF.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')   
		AND S.SRF_NO != #srfNo#
		]]>
	</select>
	<select id="fetchHouseDtls"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		select hawb_no hawbNo, strg_pcs hawbPcs, strg_wt hawbWt from hawb_inventory where seq_no in 
	(select distinct seq_no from  awb_inventory where awb_no=#awbNo# and FLT_KEY = #flightNoKey# and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'))
	</select>
	
	<!--  Changed for QR -->
	<select id="selectUrfUldsforissuesrf"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT uld.uld_key urfUld,
		  awb.flt_key flightNoKey,
		  TO_CHAR(awb.flt_date,'DDMONYY') flightDate, awb.awb_date 
		FROM uld_inventory uld,
		  awb_inventory awb
		WHERE uld.uld_key            =awb.uld_key
		AND awb.awb_no               =#awbNo#
		AND awb.awb_date             =#awbDate#
		AND (awb.FLT_KEY = #fltKey# OR awb.CDIF_NO = #fltKey#) 
		AND awb.FLT_DATE = #fltDate#
		AND (uld.HANDLING_MODE      IS NOT NULL
		AND (upper(uld.HANDLING_MODE)='PPK'
		OR upper(uld.HANDLING_MODE)  ='NBK'))
	</select>
	<select id="checkVirtualCrAcc"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select virtual_cr_acc from cust_company where code_desc=#apptdAgt# and agent_yn='Y'
	</select>
	<!--<insert id="Imp_IssueSrf_HAWBData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
			Insert into IMP_SRF_AWB_INVENTORY_DTL 
 			 (SEQ_NO, 
 			 HAWB_NO,
 			 LOCN_HAWB_PCS,
 			 LOCN_HAWB_WT,
  			CR_USER_ID,
  			CR_DATE,
  			LM_USER_ID,
  			LM_DATE,
  			SRF_NO)
  			values
		((select seq_no from hawb_inventory where hawb_no = #hawbNo# 
  			  and seq_no in (select seq_no from awb_inventory where 
   			 awb_no=#awbNo#  and srf_no=#srfNo# 
    		and FLT_KEY=#flightNoKey# and FLT_DATE=#flightDate#)),
		#hawbNo#,#hawbPcs#,#hawbWt#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#srfNo#)
	</insert>
	--><insert id="Imp_IssueSrf_HAWBData1" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Insert into IMP_SRF_HAWB 
		(SRF_NO,
		HWB_NO,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		SRF_HAWB_PCS,
		SRF_HAWB_WT) 
		values 
		(#srfNo#,
		#hawbNo#,
		#crUserId#,
		sysdate,
		#crUserId#,
		sysdate,
		#hawbPcs#,
		#hawbWt#)
	</insert>
	
	<select id="fetchAuthRepName" parameterClass="map"  resultClass="java.lang.String">
		select auth_rep_name from cust_agent_auth_rep where AUTH_REP_ID=#hkId# and cust_no = (select code from cust_company where code_desc = #agtName#)
	</select>
	<select id="chkDocCompl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate# and (doc_chk_req='Y' and NVL(doc_chk_comp,'N')='N')
	</select>
	<select id="getSRFNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select substr(dbms_random.value(00000000, 99999999),0,7) num from dual 
	</select>
	<select id="checkSrfNo" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_srf where srf_no=#PARAM#
	</select>
	<select id="checkFsuSent"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		select COUNT(1) from AWB_SHP_STS where awb_no=#awbNo# and FLT_NO = #flightNoKey# and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	<select id="validateagentisssrf"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(1) as count FROM CUST_COMPANY WHERE (Trim(UPPER(CODE_DESC)) LIKE UPPER(#PARAM#)) AND ACTIVE = 'Y' AND AGENT_YN = 'Y'
			]]>
   	</select>
   	<select id="ValidateCollCenter"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT Count(1) FROM MAST_WH_LOC WHERE upper(CODE) = upper(#location#)
	</select>
	<select id="imp_issuesrf_agentlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM CUST_APP_AGENT WHERE CUST_NO in (select code from cust_company where code_desc=#consignee#) 
	</select>
	<select id="imp_issuesrf_chkagentlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM CUST_APP_AGENT WHERE CUST_NO in (select code from cust_company where code_desc=#consignee#)
         and agent_id in (select code from cust_company where code_desc=#apptdAgt#)
	</select>
	
	<select id="imp_Reissue_SRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.carr_code returnCargoCarr,
			a.FLT_KEY flightNoKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks,
			orig_flt_key flightKeyProc, 
			to_Char(ORIG_FLT_DATE,'DDMONYY') flightDateProc,
			DLV_PCS dlvPcs,
			DLV_WT dlvWt 
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
	<update id="Imp_IssueSrf_Upd_IMP_SRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		UPDATE IMP_SRF set
		VOID_DATE = SYSDATE,  
		VOID_USER = #crUserId#, 
		REISSUE_SRF_NO = #srfNo#, 
		REISSUE_DATE = SYSDATE, 
		LM_USER_ID = #crUserId#, 
		LM_DATE = SYSDATE,
		STATUS = 'REISSUED',
		TR_TYPE= #trtype#
		WHERE 
		SRF_NO = #oldSrfNo#
	</update>
	<insert id="Imp_ReIssueSrf_insertConsigneeData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF ( 
		AWB_NO,
		AWB_DATE,
		SRF_NO,
		DOC_LINE_NO,
		SRF_DATE,		
		SRF_PRT_CODE,
		INV_PRT_CODE,
		TRUCK_CO,
		TRUCK_NO,
		TD_NO,
		COLL_NAME,
		COLL_HKID,
		REPEAT_YN,
		SRF_MODE,
		CARR_CODE,
		SRF_PCS,
		SRF_WT,
		ISSUE_USER,
		TR_STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE , 
		SRF_EXPY_DATE,
		SRF_RMK,
		AUTH_REP_ID,
		AUTH_REP_NAME,AGENT_ID,CHARGE_STATUS,COLL_CENTER,
		TR_TYPE,
		AWB_CC_CODE, 
		SHCS
		)
		VALUES
		( #awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#srfNo#,
		#docLineNo#,		
		sysdate,
		#srfPtr#,
		#invcPtr#,
		#truckerCoCode#,
		#truckNo#,
		#truckDockNo#,
		#collectedByCode#,
		#hkId#,
		#repeatYN#,
		'CRD',
		#carrCode#,
		#srfPc#,
		#srfWt#,
		#crUserId#,
		'N',
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		(sysdate + (#extendHrs#/24)),
		#srfRmk#,
		#authID#,
		#authName#,#apptdAgtCode#,#chargeStatus#,#collCenter#,
		#trtype#,
		#highCCCode#,
		#shcs#
		)
	</insert>
	
	
	<select id="fetchHouseRecordForSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo,
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt
	FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	FLT_KEY = #flightNoKey# AND 
	FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')) 
	group BY HAWB_NO
	</select>
	
	<select id="fetchHouseRecordWithSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo, 
	SEQ_NO seqNo,
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt,
	#srfNo# srfNo,
	#crUserId# crUserId FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	SRF_NO = #srfNo# ) 
	group by HAWB_NO,SEQ_NO
	</select>

	<insert id="insertHseInvDetails" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		Insert into IMP_SRF_AWB_INVENTORY_DTL 
 		 (SEQ_NO, 
 		  HAWB_NO,
 		  LOCN_HAWB_PCS,
 		  LOCN_HAWB_WT,
  		  CR_USER_ID,
  		  CR_DATE,
  		  LM_USER_ID,
  		  LM_DATE,
  		  SRF_NO)
  		 values
		 (#seqNo#,
		 #hawbNo#,
		 #hawbPcs#,
		 #hawbWt#,
		 #crUserId#,
		 SYSDATE,
		 #crUserId#,
		 SYSDATE,
		 #srfNo#)
	</insert>
	
	<!--<insert id="insertHseInvDetails1" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		Insert into IMP_SRF_AWB_INVENTORY_DTL 
 		 (SEQ_NO, 
 		  HAWB_NO,
 		  LOCN_HAWB_PCS,
 		  LOCN_HAWB_WT,
  		  CR_USER_ID,
  		  CR_DATE,
  		  LM_USER_ID,
  		  LM_DATE,
  		  SRF_NO)
  		 values
		 (#seqNo#,
		 #hawbNo#,
		 #hawbPcs#,
		 #hawbWt#,
		 #crUserId#,
		 SYSDATE,
		 #crUserId#,
		 SYSDATE,
		 #srfNo#)
	</insert>
		
	--><select id="fetchSrfHouseDtl"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo, 
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt,
	#srfNo# srfNo,
	#crUserId# crUserId FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	SRF_NO = #srfNo# ) 
	group by HAWB_NO
	</select>
	
	<!--<select id="fetchHouseRecordForSrf1"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
	SELECT HAWB_NO hawbNo, 
	STRG_PCS hawbPcs, 
	STRG_WT hawbWt FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	FLT_KEY = #flightNoKey# AND 
	FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')) 
	ORDER BY HAWB_NO
	</select>
	--><!-- Issue SRF :: Bala :: End -->

	<!--  Undelivered Shipment List -->
	<!--  Changed for QR -->
 	<select id="undlv_shp_list" parameterClass="cargo.cms.imprt.bo.UndeliveredShpSearchBO" 
		resultClass="cargo.cms.imprt.bo.UndeliveredShpBO">
		SELECT * FROM
		 (
		 		SELECT
				  CASE
				    WHEN NVL(A.CAR_CREATED,'N') = 'N' THEN 'INVENTORY'  WHEN NVL(A.CAR_CREATED,'N') = 'Y' THEN 'CAR' END  AS tag,
				  TO_CHAR(A.FLT_DATE, 'DDMONYY') AS fltDate,
				  A.FLT_KEY                      AS fltKey,
				  TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
				  A.AWB_NO                       AS awbNo,
				  SUBSTR(A.AWB_NO,1,3) ||'-' ||SUBSTR(A.AWB_NO,4) AS awbNoDisp ,
				  SUBSTR(A.AWB_NO,1,3) awbNoPrefix ,
				  SUBSTR(A.AWB_NO,4) awbNoSuffix ,
				  (SELECT V.CC_CODE  FROM V_CST_IMP_CC_CODE_AWB V  WHERE V.FLT_KEY = A.FLT_KEY  AND V.FLT_DATE = A.FLT_DATE
				      AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) AS ccCode,
				  B.APPNTD_AGENT                          AS agentName,
				  B.CSGNE_NAME                            AS consignee,
				  I.INV_PCS                               AS invPcs,
				  TRIM(TO_CHAR(I.INV_WT, '9999999990D9')) AS invWt,
				  A.CAR_CREATED car,
				  AI.LOC_CODE AS Locn,
				  (SELECT TO_CHAR(F.ACT_DATE, 'DDMONYY') FROM FLT_OPR F WHERE F.FLT_KEY = A.FLT_KEY  AND F.SCH_DATE  = A.FLT_DATE  AND F.FLT_TYPE  = 'A') AS actDate,
				  AWB.CARR_CODE carrCode,
				  A.SCH_COLL_YN AS schColl,
				  NVL( (SELECT NVL(CONSTRAINT,'N') FROM MAST_CONSTRAINT_CODE WHERE CODE = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V WHERE V.FLT_KEY = A.FLT_KEY
				    AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'  AND ROWNUM = 1 ) ), 'N') AS srfInd,
				  CASE WHEN A.CIR_PROC_USER IS NOT NULL
				    THEN 'Y' WHEN (A.RECD_PCS+ NVL( (SELECT NVL(SUM(actual_pcs),0) tt_pcs FROM v_ddt_dtl ddt WHERE (shp_trf_type = 'TT' OR trf_type = 'IF')
				                                      AND A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
				                                      ),0) ) > A.MANIFEST_PCS THEN 'Y' ELSE 'N' END AS brkDwn,
				  TO_CHAR(AI.STRG_DATE,'DDMONYY') AS storageDate
				FROM IMP_CAR_AWB B
				JOIN AWB ON AWB.AWB_NO = B.AWB_NO AND AWB.AWB_DATE = B.AWB_DATE AND AWB.AWB_TYPE = 'I'				 
				<isEmpty property="dayBefore">
		 			JOIN (select X.* from IMP_CAR_SHP X where (flt_key , flt_date) in (select flt_key, sch_date from flt_opr where to_date( TO_CHAR( DECODE(ACT_DATE,NULL,SCH_DATE,ACT_DATE), 'DDMONYY'), 'DDMONYY' ) 
				             BETWEEN to_date( #fromDate# , 'DDMONYY' ) AND  to_date(#toDate# , 'DDMONYY' ) and flt_type = 'A' )
				    ) A ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
				</isEmpty>
				
				<isNotEmpty  property="dayBefore">
		 			JOIN IMP_CAR_SHP A ON A.AWB_NO    = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
				</isNotEmpty>				
				join AWB_INVENTORY AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE AND A.FLT_KEY  = AI.FLT_KEY AND A.FLT_DATE = AI.FLT_DATE
				JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, SUM(LOCN_PCS) INV_PCS,    SUM(LOCN_WT) INV_WT, MIN(SEQ_NO) SEQ_NO,    COUNT(1) INV_COUNT
                	FROM AWB_INVENTORY  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) I ON AI.SEQ_NO = I.SEQ_NO    
				WHERE 1 =1 		  	
		 	<isEmpty property="carrierCode">
		 		<isNotEmpty property="loginCarrier">
					AND ( A.CARR_CODE = #loginCarrier# OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))    
				</isNotEmpty>         
    		</isEmpty>
		 	<isNotEmpty property="carrierCode">
		 		AND A.CARR_CODE =#carrierCode#
			</isNotEmpty>
			<isNotEmpty property="agentName">
				AND B.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="woAgent">
			<isEqual property="woAgent" compareValue="Y">			 
				AND B.APPNTD_AGENT is null
			</isEqual>
			<isEqual property="woAgent" compareValue="N">			 
				AND (B.APPNTD_AGENT is not null or B.APPNTD_AGENT is null)
			</isEqual>
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				 AND EXISTS (SELECT NULL FROM CUST_COMPANY WHERE CODE_DESC= B.APPNTD_AGENT AND CODE= #agentCode#)
			</isNotEmpty>
		)	
		where tag = NVL(#status#, tag)
		<isNotEmpty  property="dayBefore">
		 AND (SYSDATE - TO_DATE(storageDate,'DDMONYY') > #dayBefore# )
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             	awbNoDisp asc
           </isEmpty>
        </dynamic>
		
	</select>
	
	<!--  Changed for QR -->
	<select id="undlv_shp_listCOUNT" parameterClass="cargo.cms.imprt.bo.UndeliveredShpSearchBO" 
		resultClass="java.lang.Integer">
		SELECT COUNT(1) as totalRowCount FROM
		 (
		  	 SELECT
				  CASE
				    WHEN NVL(A.CAR_CREATED,'N') = 'N' THEN 'INVENTORY'  WHEN NVL(A.CAR_CREATED,'N') = 'Y' THEN 'CAR' END  AS tag,
				  TO_CHAR(A.FLT_DATE, 'DDMONYY') AS fltDate,
				  A.FLT_KEY                      AS fltKey,
				  TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
				  A.AWB_NO                       AS awbNo,
				  SUBSTR(A.AWB_NO,1,3) ||'-' ||SUBSTR(A.AWB_NO,4) AS awbNoDisp ,
				  SUBSTR(A.AWB_NO,1,3) awbNoPrefix ,
				  SUBSTR(A.AWB_NO,4) awbNoSuffix ,
				  (SELECT V.CC_CODE  FROM V_CST_IMP_CC_CODE_AWB V  WHERE V.FLT_KEY = A.FLT_KEY  AND V.FLT_DATE = A.FLT_DATE
				      AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) AS ccCode,
				  B.APPNTD_AGENT                          AS agentName,
				  B.CSGNE_NAME                            AS consignee,
				  I.INV_PCS                               AS invPcs,
				  TRIM(TO_CHAR(I.INV_WT, '9999999990D9')) AS invWt,
				  A.CAR_CREATED car,
				  AI.LOC_CODE AS Locn,
				  (SELECT TO_CHAR(F.ACT_DATE, 'DDMONYY') FROM FLT_OPR F WHERE F.FLT_KEY = A.FLT_KEY  AND F.SCH_DATE  = A.FLT_DATE  AND F.FLT_TYPE  = 'A') AS actDate,
				  AWB.CARR_CODE carrCode,
				  A.SCH_COLL_YN AS schColl,
				  NVL( (SELECT NVL(CONSTRAINT,'N') FROM MAST_CONSTRAINT_CODE WHERE CODE = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V WHERE V.FLT_KEY = A.FLT_KEY
				    AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'  AND ROWNUM = 1 ) ), 'N') AS srfInd,
				  CASE WHEN A.CIR_PROC_USER IS NOT NULL
				    THEN 'Y' WHEN (A.RECD_PCS+ NVL( (SELECT NVL(SUM(actual_pcs),0) tt_pcs FROM v_ddt_dtl ddt WHERE (shp_trf_type = 'TT' OR trf_type = 'IF')
				                                      AND A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
				                                      ),0) ) > A.MANIFEST_PCS THEN 'Y' ELSE 'N' END AS brkDwn,
				  TO_CHAR(AI.STRG_DATE,'DDMONYY') AS storageDate
				FROM IMP_CAR_AWB B
				JOIN AWB ON AWB.AWB_NO = B.AWB_NO AND AWB.AWB_DATE = B.AWB_DATE AND AWB.AWB_TYPE = 'I'
				<isEmpty property="dayBefore">
		 			JOIN (select X.* from IMP_CAR_SHP X where (flt_key , flt_date) in (select flt_key, sch_date from flt_opr where to_date( TO_CHAR( DECODE(ACT_DATE,NULL,SCH_DATE,ACT_DATE), 'DDMONYY'), 'DDMONYY' ) 
				             BETWEEN to_date( #fromDate# , 'DDMONYY' ) AND  to_date(#toDate# , 'DDMONYY' ) and flt_type = 'A' )
				    ) A ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
				</isEmpty>				
				<isNotEmpty  property="dayBefore">
		 			JOIN IMP_CAR_SHP A ON A.AWB_NO    = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
				</isNotEmpty>	
				join AWB_INVENTORY AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE AND A.FLT_KEY  = AI.FLT_KEY AND A.FLT_DATE = AI.FLT_DATE
				JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, SUM(LOCN_PCS) INV_PCS,    SUM(LOCN_WT) INV_WT, MIN(SEQ_NO) SEQ_NO,    COUNT(1) INV_COUNT
                	FROM AWB_INVENTORY  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) I ON AI.SEQ_NO = I.SEQ_NO  
				WHERE 1 =1 
		 	<isEmpty property="carrierCode">
		 		<isNotEmpty property="loginCarrier">
					AND ( A.CARR_CODE = #loginCarrier# OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))    
				</isNotEmpty>         
    		</isEmpty>
		 	<isNotEmpty property="carrierCode">
		 		AND A.CARR_CODE =#carrierCode#
			</isNotEmpty>
			<isNotEmpty property="agentName">
				AND B.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="woAgent">
			<isEqual property="woAgent" compareValue="Y">			 
				AND B.APPNTD_AGENT is null
			</isEqual>
			<isEqual property="woAgent" compareValue="N">			 
				AND (B.APPNTD_AGENT is not null or B.APPNTD_AGENT is null)
			</isEqual>
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND EXISTS (SELECT NULL FROM CUST_COMPANY WHERE CODE_DESC= B.APPNTD_AGENT AND CODE= #agentCode#)
			</isNotEmpty>		
		)	
		where tag = NVL(#status#, tag)
		<isNotEmpty  property="dayBefore">
		 AND (SYSDATE - TO_DATE(storageDate,'DDMONYY') > #dayBefore# )
		</isNotEmpty>
	</select>
	<select id="undlv_shp_list_checkCarrierExist" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT to_char(count(1))
		FROM mast_carrier
		WHERE code = #carrierCode#
	</select>
 	<!--  Undelivered Shipment List -->

	
	 
 <!-- Retrieval Monitoring:: Starts -->
 <select id="get_details_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO"
		resultClass="cargo.cms.imprt.bo.RetrievalMonitoringBO">
		select 
   		(select code_desc as func from mast_code_dtl where code= O.FUNC) as function,
   		replace(O.FUNC,'_',' ') as txtFunction,
   		O.REF_NO as refNo,
   		decode(instr(O.REF_NO,'/'),0,substr(O.REF_NO,0,6)||' '||substr(O.REF_NO,7),replace(O.REF_NO,'/',' ')) as txtRefNo,
		O.AWB_NO as awbNo,
		substr(O.AWB_NO,0,3)||' '||substr(O.AWB_NO,4) as txtAwbNo,
		case when O.LSP is not null then (select LOC_CODE from lsp_inventory where LSP_NO = O.LSP)
		else case when O.ULD is not null then (select LOC_CODE from uld_inventory where ULD_KEY = O.ULD) else null end end as currLocn,
		O.LSP as csd,
		O.ULD as uld,
		<![CDATA[
	    (CASE WHEN O.LSP is not null THEN (CASE WHEN (SELECT COUNT(1) FROM AWB_INVENTORY INV WHERE INV.LSP_NO=O.LSP) > 1 THEN '+' ELSE '' END)
    	ELSE CASE WHEN O.ULD is not null THEN (CASE WHEN (SELECT COUNT(1) FROM AWB_INVENTORY INV WHERE INV.ULD_KEY=O.ULD) > 1 THEN '+' ELSE '' END)
    	ELSE '' END
    	END) AS locnSymbol,
    	]]>
		substr(O.ULD,0,3)||' '||substr(O.ULD,4,(length(O.ULD)-5))||' '||substr(O.ULD,length(O.ULD)-1) txtUld,
		O.PC as pcs,
		O.WT as wt,
		O.TARGET as target,
		O.STATUS as status,
		SUBSTR(O.STATUS,0,1) as txtStatus,
		O.CURR_LOCN as source,
		O.HAWB_NO as hawb,
		O.AGENT_ID as agent,
		TO_CHAR(O.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
		TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI') as time,
		O.PRIORITY as priority,
		O.TYPE as type,
   		O.CR_USER_ID AS HANDLEUSER,
   		DECODE(O.STATUS,'REJECTED','Y',DECODE(O.STATUS,'CANCELLED','Y','N')) as action,
   		TO_CHAR(O.CR_DATE,'DDMONYY') as handleDate,
   		TO_CHAR(O.OB_FLT_DATE, 'DDMONYY') as obFltDate,
   		O.OB_FLT_KEY as obFltKey,
   		<![CDATA[
   		 	 (CASE WHEN (((O.STATUS IS NULL) OR (O.STATUS !='CANCELLED' AND O.STATUS !='COMPLETED')) AND ROUND((SYSDATE-O.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='RTRVL_MTING_HIGHLIGHT'))) THEN 'R' ELSE 
         (CASE WHEN (SELECT COUNT(1) FROM MAST_CONST_CODE_REGULATOR WHERE REGULATOR_CODE IS NOT NULL AND CODE IN ((CASE WHEN AWB.AWB_TYPE = 'I' THEN 
    	 (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND t1.awb_no = AWB.AWB_NO AND t1.AWB_DATE=AWB.AWB_DATE AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE 
     	 CASE WHEN AWB.AWB_TYPE = 'E' THEN 
     	 (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = AWB.AWB_NO AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  
       AND t1.AWB_DATE = AWB.AWB_DATE	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE
     	 CASE WHEN AWB.AWB_TYPE = 'E' THEN (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = AWB.AWB_NO AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  AND t1.AWB_DATE = AWB.AWB_DATE	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE '' END END END))) > 0 THEN 'O' ELSE 'X' 	 
     	 END)  END) AS indicator, 	 
     	 AWB.AGENT_CODE as agentCode,
     	 AWB.AGENT_NAME as agentName
     	 ]]>
		 from rtrv_move_order O
		 LEFT JOIN AWB AWB ON AWB.AWB_NO=O.AWB_NO AND AWB.AWB_DATE=PKG_COMMON.GET_AWB_DATE(O.AWB_NO,'')
		<isNotEmpty property="obFltKey">
		join (select awb_no,awb_date from exp_pmanifest_awb where flt_date=TO_DATE(#obFltDate#,'DDMONYY') and flt_key=#obFltKey#) E
    	on O.awb_no = E.awb_no and O.AWB_DATE = E.AWB_DATE
		</isNotEmpty>
	<![CDATA[
		where TO_DATE(TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI') ,'DDMONYY HH24:MI')  >=TO_DATE(#rmDateTimeFrom#,'DDMONYY HH24:MI') 
		and TO_DATE(TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI'),'DDMONYY HH24:MI')   <= TO_DATE(#rmDateTimeTo#,'DDMONYY HH24:MI')
		]]>
	<!-- 	<isEmpty property="area">
		<isNotEmpty property="jo">
		and (status='STARTED' or status is null)
		</isNotEmpty> 
		</isEmpty> -->
	<!--  	<isNotEmpty property="area">
		and status='STARTED' 
		</isNotEmpty> -->
		<isNotEmpty property="jo">
			and TYPE	 = 'J'
			<isNotEmpty property="status">
			and STATUS = #status#
			</isNotEmpty>
			<isEmpty property="status">
				<isNotEmpty property="desktop" >		
					and (STATUS IS NULL or status ='STARTED'or status ='COMPLETED' or status ='FCOMPLETED')
				</isNotEmpty>
				 <isNotEmpty property="hht" >		
					and (STATUS IS NULL or status ='STARTED')
				</isNotEmpty>
			</isEmpty>
		</isNotEmpty> 
		<isNotEmpty property="mhs">
			and TYPE	 = 'M'
			<isNotEmpty property="status">
			<isEqual compareValue="Blank" property="status">
			and status is NULL
			</isEqual>
			<isNotEqual property="status" compareValue="Blank">
			and STATUS = #status#
			</isNotEqual>
			</isNotEmpty>
			<isEmpty property="status">
				<isNotEmpty property="desktop" >		
					and (STATUS IN ('E','A') or status ='STARTED'  or status is NULL or status ='COMPLETED' or status ='FCOMPLETED')
				</isNotEmpty>
				 <isNotEmpty property="hht" >		
					and (STATUS IN ('E','A') or status ='STARTED'  or status is NULL)
				</isNotEmpty>
			 
			</isEmpty>
		</isNotEmpty> 
		<isNotEmpty property="whArea">
		and CURR_LOCN in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#whArea#))
		</isNotEmpty> 
		<isNotEmpty property="whGroup">
		and CURR_LOCN in (select code from mast_wh_loc where wh_group =#whGroup#)
		</isNotEmpty>
    	<isNotEmpty property="whLocn">
		and CURR_LOCN	 = #whLocn#
		</isNotEmpty>
		<isNotEmpty property="sourceLevel">
		and CURR_LOCN	 IN (SELECT CODE FROM MAST_WH_LOC WHERE LOC_LEVEL=#sourceLevel#)
		</isNotEmpty> 
		 
		<isNotEmpty property="trArea">
		and TARGET in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#trArea#))
		</isNotEmpty> 
		<isNotEmpty property="trGroup">
		and TARGET in (select code from mast_wh_loc where wh_group =#trGroup#)
		</isNotEmpty>
   		<isNotEmpty property="trLocn">
		and TARGET	 = #trLocn#
		</isNotEmpty> 
		<isNotEmpty property="targetLevel">
		and TARGET	 IN (SELECT CODE FROM MAST_WH_LOC WHERE LOC_LEVEL=#targetLevel#)
		</isNotEmpty> 
		<isNotEmpty property="truckNo">
		AND EXISTS (SELECT NULL FROM IMP_SRF SRF WHERE SRF.SRF_NO=O.REF_NO AND (SRF.TRUCK_NO=#truckNo# 
    	OR SRF.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF ITS, TRUCK_TRIP TT WHERE ITS.SRF_NO = O.REF_NO  
    	AND ITS.TRIP_ID = TT.TRIP_ID AND TT.TRUCK_NO = #truckNo#)))
		</isNotEmpty> 
		<isNotEmpty property="awbNo">
		and AWB_NO	 = #awbNo#
		</isNotEmpty> 
		<isNotEmpty property="csd">
		and LSP	 = #csd#
		</isNotEmpty> 
		<isNotEmpty property="uld">
		and ULD	 = #uld#
		</isNotEmpty> 
		<isEqual property="priority" compareValue="Y">		
			and (PRIORITY IS NOT NULL AND PRIORITY != 'N')	
		</isEqual>
		<isEqual property="inv" compareValue="cpsl">		
			and INV_TYPE = 'CPSL'	
		</isEqual>
		<isEqual property="inv" compareValue="Agent">		
			and INV_TYPE = 'ASV'	
		</isEqual>
		<isNotEmpty property="trkFltKey">
		and TRUCK_FLT_NO=#trkFltKey# and TRUCK_FLT_DATE=TO_DATE(#trkFltDate#,'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="function">
		and FUNC = #function#
		</isNotEmpty>
	</select>
	
	<update id="update_status_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'STARTED', 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>	
<update id="do_complete_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'COMPLETED', 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>	
<update id="remove_target_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	<isNotEmpty property="csd">
		update lsp_inventory  
		set target='',
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		where lsp_no=#csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
		update uld_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld_key=#uld#
	</isNotEmpty>
	
</update>	


<update id="do_Accept_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'A', 
	PRIORITY = #priority#,
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>


<update id="do_save_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	PRIORITY = #priority#, 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>

	<select id="validate_locn_for_area" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from mast_wh_area where wh_area = #locn#
	</select>
	<select id="validate_locn_for_group" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from mast_wh_group where wh_group =#locn#
	</select>
	<select id="fetchfallbackmode"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select rule_value as fbMode from cmsrules where rule_code = 'FALL_BACK_MODE'
	</select>
	
	<!--  Changed for QR -->
	<select id="getFuncName"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select code_desc as func from mast_code_dtl where code=#function# and code_type = 'RTRV_MONITORING'
	</select>
 <!-- Retrieval Monitoring:: Ends -->

	<!-- Enquire Truck::Start -->
	<!--  Changed for QR -->
	<select id="truckDetail" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckBO">
		SELECT TRIP.TRIP_ID, TRIP.TRUCK_NO AS truckNo, TRIP.TRUCK_DOCK truckDocNo 
    	FROM TRUCK_TRIP TRIP
    	WHERE TRIP.CLOSED = 'N' AND TRIP.TRUCK_NO =	#truckNo#
	</select>
	<select id="truckSRFList" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckSRFBO">				
		SELECT SRF.SRF_NO AS srfNo, SRF.STATUS AS status,DECODE(UPPER(SRF.STATUS),'POSTED','Y','N') AS dlvCompl,SUBSTR(SRF.AWB_NO,1,3)||'-'||SUBSTR(SRF.AWB_NO,4,8) AS awbNo,
  SRF.SRF_PCS AS pc, SRF.SRF_WT AS wt, SRF.COLL_NAME AS collBy, SRF.COLL_HKID AS hkId, CAR.CONTENT AS content, 
  (select cc_code 
  from (select distinct awb_no, cc_code 
      from (select awb_no, cc_code, dense_rank() over (partition by awb_no order by PRTY desc) rank
        from V_CST_IMP_CC_CODE_AWB) 
      where rank = 1) c
  where c.awb_no = srf.awb_no) AS cc,
  (select orig_flt_key || '/' || to_char(orig_flt_date, 'DDMONYY') fltKey from imp_srf_flt where srf_no = srf.srf_no and rownum = 1) AS fltKey , 
  '' AS fltDate, CUST.CODE_DESC AS agtName,
  CAR.SPL_CODE1 || DECODE(CAR.SPL_CODE2,NULL,'',','||CAR.SPL_CODE2) || DECODE(CAR.SPL_CODE3,NULL,'',','||CAR.SPL_CODE3)
  || DECODE(CAR.SPL_CODE4,NULL,'',','||CAR.SPL_CODE4) || DECODE(CAR.SPL_CODE5,NULL,'',','||CAR.SPL_CODE5) || DECODE(CAR.SPL_CODE6,NULL,'',','||CAR.SPL_CODE6)
  || DECODE(CAR.SPL_CODE7,NULL,'',','||CAR.SPL_CODE7) || DECODE(CAR.SPL_CODE8,NULL,'',','||CAR.SPL_CODE8) || DECODE(CAR.SPL_CODE9,NULL,'',','||CAR.SPL_CODE9) AS shc
  FROM IMP_SRF SRF 
  JOIN IMP_CAR_AWB CAR ON SRF.AWB_NO = CAR.AWB_NO AND SRF.AWB_DATE = CAR.AWB_DATE
  LEFT JOIN CUST_COMPANY CUST ON SRF.AGENT_ID = CUST.CODE
  WHERE SRF.SRF_NO in (select srf_no from IMP_TRUCK_SRF TRUCK 
  where trip_id = (select max(to_number(trip_id)) from truck_trip where CLOSED = 'N' AND TRUCK_NO = #truckNo#))
  order by  SRF.SRF_NO
	</select>
	<select id="truckULDList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.EnqTruckULDBO">
		SELECT hd.eir_no as urfNo,awb.uld_key as uldNo,awb.bulk_wt as wt
		FROM IMP_SRF SRF 
   		join uld_iss_hd hd on srf.srf_No=hd.SRF_NO
   		left join awb_inventory awb on srf.awb_no=awb.awb_no and srf.awb_date=awb.awb_date
        WHERE SRF.SRF_NO = #param#
	</select>
	<select id="truckSealList" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckBO">
		select seal_no as sealNo from truck_seal where truck_no = #truckNo#
	</select>
	<!-- Enquire Truck::End -->

<!-- Update Damage Cargo Record [Desktop]::Ranjith -->
<parameterMap id="trNoMap" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TR_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>

	<procedure id="damreferenceno" parameterMap="trNoMap" >
		{? = call FUN_GET_TR_NO(?)}
	</procedure>
<select id="getShipmentDamageList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   NVL(I.INV_DAM_PCS, 0) as damPcs, 
		   NVL(I.INV_DAM_WT, 0) as damWt, 
		   case when (select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MAJOR')>0 then 'Major'
           else case when  (select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MINOR')>0 then 'Minor' else null end end as damType, 
           decode((select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MAJOR'),0,'','Major') majorDamType,
           decode((select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MINOR'),0,'','Minor') minorDamType,
       	   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   decode(carshp.DAM_PROC_USER, null,null,carshp.DAM_DECL_PCS) as damPcsDec, 
		   decode(carshp.DAM_PROC_USER, null,null,carshp.DAM_DECL_WT) as damWtDec,
		   carshp.DAM_PROC_USER as damProcUser, 
		   TO_CHAR(carshp.DAM_PROC_DATE, 'DDMONYY HH24:MI') as damProcDate,
		   carshp.DAM_RMK as damRmk,
		   carawb.ACCS_HANDLER as accsHandler, 
		   carawb.CONSOLE_IND as cnsl,		
		   carshp.DAM_REF_NO as damRefNo,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
	 <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		             awbNo asc,damType asc
		           </isEmpty>
		 </dynamic>
</select>
<select id="getShipmentDamageListCOUNT"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
		  COUNT(1)
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, DAM_PCS INV_DAM_PCS, DAM_WT INV_DAM_WT,DAM_TYPE
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,DAM_PCS,DAM_WT,DAM_TYPE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
</select>
<select id="getDamageConditionList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as damPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lmDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#fltKey#) AND
			damCond.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>
<select id="getHeaderForMaintainHouse"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   NVL(I.INV_DAM_PCS, 0) as damPcs, 
		   NVL(I.INV_DAM_WT, 0) as damWt,
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   decode(carshp.DAM_PROC_USER, null, NVL(I.INV_DAM_PCS, 0),carshp.DAM_DECL_PCS) as damPcsDec, 
		   decode(carshp.DAM_PROC_USER, null, NVL(I.INV_DAM_WT, 0),carshp.DAM_DECL_WT) as damWtDec,
		   carshp.DAM_PROC_USER as damProcUser, 
		   TO_CHAR(carshp.DAM_PROC_DATE, 'DDMONYY HH24:MI') as damProcDate,
	   	   carshp.DAM_RMK as damRmk,
		   carawb.ACCS_HANDLER as accsHandler, 
		   NVL(carawb.CONSOLE_IND,'N') as cnsl,		
		   carshp.DAM_REF_NO as damRefNo,
		   carshp.FLT_KEY as fltKey,
		   (select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#)) as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carawb.wh_rmk oldDamRmk 		
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = UPPER(#awbNo#) AND
		  carshp.FLT_KEY = UPPER(#fltKey#) AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
		  carshp.AWB_DATE  = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
	 	  
</select>
<select id="getHawbDamagelist"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
SELECT 
  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
  S.HAWB_NO as hseAwbNo, M.HAWB_PCS as hseAwbPcs, M.HAWB_WT as hseAwbWt, 
  DAM_PCS as damPcs, DAM_WT as damWt, DAM_RMK as damRmk, 
  DAM_USER as damUser, TO_CHAR(DAM_DATE, 'DDMONYY HH24:MI') as damDate,
  'false' as newRecord
FROM IMP_HAWB_STRG_DTL S
LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND
	S.FLT_KEY = UPPER(#fltKey#) AND
	S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
	S.DAM_USER IS NOT NULL
</select>

<select id="imp_checkHawb_damage"  parameterClass="map" resultClass="java.lang.Integer">	
	SELECT count(1)  FROM MAST_HAWB 
      	WHERE HAWB_NO = #houseAWBNo# AND AWB_NO = #awbNo# 
      	AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</select>

<update id="updateimpcarshpmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = #damRmk#,  
			DAM_PROC_USER = #userId#,  
			DAM_PROC_DATE  =  SYSDATE,
			DAM_REF_NO   = #damRefNo#,
			IMG_TRANS_ID = #transactionId#,
			DAM_DECL_PCS = NVL(#damPcsDec#, 0),
			DAM_DECL_WT = NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD' 
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="updateimpcarawbmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_AWb 
		SET 
			WH_RMK = #damRmk#,  
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD' 
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<delete id="deleteabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</delete>	
<update id="deleteimpcarshpmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = '',  
			DAM_PROC_USER = '',  
			DAM_PROC_DATE  =  '',
			DAM_REF_NO   =  '',
			DAM_DECL_PCS = '0',
			DAM_DECL_WT = '0',	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="deleteawbinvenmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = '0',
			DAM_WT = '0',	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="updateabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	UPDATE IMP_AWB_STRG_DAM_COND
	SET 
		DAM_PCS = NVL(#damPcs#,0),
		LM_USER_ID = #userId#,
		LM_DATE = SYSDATE
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<insert id="insertabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	INSERT INTO IMP_AWB_STRG_DAM_COND
		  (AWB_NO, 
		   AWB_DATE, FLT_KEY, FLT_DATE, 
		   DAM_COND, DAM_PCS, DAM_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#awbNo#,
		   #awbDate#, #fltKey#, #fltDate#,
		   #damConditionCode#, #damPcs#, '0',
		   #userId#, SYSDATE, #userId#,
		   SYSDATE  
	)	  
</insert>	
<delete id="deleteabwstrgdamcondallmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</delete>	
<select id="getDamLspList" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
select LSP_NO lspNo from AWB_INVENTORY 
	WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
			and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y')
</select>

<select id="getDamLocList" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.CarShpBO">
	select awb.FLT_KEY as fltkey,
	awb.FLT_KEY as fltNo,
 	TO_CHAR(awb.FLT_DATE,'DDMONYY') as fltDate,
 	awb.LOC_CODE as locCode,
 	decode(awb.LSP_NO,null, awb.ULD_KEY, awb.LSP_NO) lspNo,
 	awb.LOCN_PCS as damLocPc,
 	awb.LOCN_WT as damLocWt,
 	awb.DAM_PCS as damPcs,
 	awb.DAM_WT as damWt
    FROM
    AWB_INVENTORY awb  
    where awb.AWB_NO= #AWB# AND awb.AWB_DATE= #AWBDATE# and (awb.DAM_IND = 'Y' OR NVL(awb.WH_DAM_IND,'N') = 'Y')
</select>

<select id="getHsePcWt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT HAWB_PCS||'/'||HAWB_WT from 
	MAST_HAWB 
	where 
	AWB_NO = #AWB# AND
	to_char(AWB_DATE,'DDMONYY') = #DATE# AND
	HAWB_NO = #HAWB# 
</select>

<select id="validatehawbexistsmaintaindamage" 
	parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>	

<select id="gethwab_pcs_wt" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
		select HAWB_PCS hseAwbPcs, HAWB_WT hseAwbWt from  MAST_HAWB 
		where AWB_NO = #awbNo# and  AWB_DATE = to_date(#awbDate#, 'DDMONYY') 
		and HAWB_NO = #hseAwbNo#
</select>
<insert id="inserthwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE,
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
  DAM_USER, DAM_DATE, TR_TYPE, TR_STATUS,
	CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
	 #hseAwbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#damPcs#,0), NVL(#damWt#,0), #damRmk#,'I',
	 #userId#, SYSDATE, 'HA', 'A',    
	#userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>	
<update id="updatehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_PCS = NVL(#hseAwbPcs#,0), 
			HAWB_WT = NVL(#hseAwbWt#,0), 
			DAM_PCS = NVL(#damPcs#,0),
			DAM_WT = NVL(#damWt#,0),
			DAM_RMK = #damRmk#,
			DAM_USER = #userId#,
			DAM_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>	
<update id="deletehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
UPDATE IMP_HAWB_STRG_DTL 
		SET 
			DAM_PCS = 0,
			DAM_WT = 0,
			DAM_RMK = '',
			DAM_USER = '',
			DAM_DATE = '',
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
</update>

<select id="sqlgetbrkdwnCount" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
 select COUNT(1) from hawb_inventory where seq_no in 
 (select seq_no from awb_inventory ai where ai.awb_no=#awbNo# and to_char(ai.awb_date,'DDMONYY')=#awbDate# and ai.flt_key=#fltKey# and to_char(ai.flt_date,'DDMONYY') = #fltDate#)
 <isNotEmpty property="hseAwbNo">
 and hawb_no=#hseAwbNo#
 </isNotEmpty>
 </select>
 
 <select id="sqlgethousepcwt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	SELECT HAWB_PCS||'/'||HAWB_WT from 
	MAST_HAWB 
	where 
	AWB_NO = #awbNo# AND
	to_char(AWB_DATE,'DDMONYY') = #awbDate# AND
	HAWB_NO = #hseAwbNo# 
</select>

<select id="sqlbrkdwnComplStatus" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
      select count(1) from flt_opr_events where flt_key=#fltKey# and to_char(sch_date,'DDMONYY')=#fltDate# and flt_type='A' and (WHSE_COMPL_DATE is not null or WHSE_COMPL_TIME is not null)
</select>

<select id="sqlbrkdwnDescComplStatus" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
 select count(1) from cst_subm where bd_complete='Y' and rec_type='BDS' and  flt_key=#fltKey# and to_char(flt_date,'DDMONYY')=#fltDate# and flt_type='A'
</select>

<update id="hht_updateAwbStrgDtlDesktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#damPcsDec#, 0),
			DAM_WT =  NVL(#damWtDec#,0),	
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty> 
		</isEmpty>
		<isNotEmpty property="seqNo">
		seq_no = #seqNo#
		</isNotEmpty>
		
		
				
</update>

<update id="updateAwbInvFrmCreateAWBStrgDesktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 			
			LOCN_WT = '0',	
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="seqNo">
		SEQ_NO = #seqNo#
		</isNotEmpty>
		
				
				
				
</update>

<select id="sqlcheckHawb" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT count(1) FROM  
	HAWB_INVENTORY WHERE 
	SEQ_NO in (SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	<!-- AND AWB_TYPE = #awbType# --> 
	AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')) 
	<isNotEmpty property="hawbNo">
	AND HAWB_NO = #hawbNo#
	</isNotEmpty>
</select>
<!-- Update Damage Cargo Record [Desktop]::Ranjith -->
<!-- Update Damage Cargo Record [HHT]::Ranjith -->
<select id="hhtGetFltPcWtDtl" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
</select>
<select id="mobileGetFltPcWtDtl" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
UNION
SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'N' AND NVL(I.WH_DAM_IND,'N') = 'N'  AND carshp.DAM_PROC_USER is null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
</select>

<select id="hhtGetDamageULDDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
 SELECT 
	 I.ULD_KEY AS uldKey
 FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	 JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
 WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
          (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
          i.awb_no=#awbNo# and i.ULD_KEY LIKE ('%'|| #uldNo# || '%')
          and (i.dam_pcs is null or i.dam_pcs=0) and (i.dam_wt is null or i.dam_wt =0)
</select>
<select id="hhtGetCondList"  parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as oldDamPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lmDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#fltKey#) AND
			damCond.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>

<update id="HHTupdatehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_PCS = NVL(#hseAwbPcs#,0), 
			HAWB_WT = NVL(#hseAwbWt#,0), 
			DAM_PCS = NVL(#hawbPc#,0),
			DAM_WT = NVL(#hawbWt#,0),
			DAM_RMK = #remark#,
			DAM_USER = #userId#,
			DAM_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hawbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>

<!--  Changed for QR
<select id="gethwab_pcs_wt_hht" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		select STRG_PCS hseAwbPcs, STRG_WT hseAwbWt from  HAWB_INVENTORY 
		where AWB_NO = #awbNo# and  AWB_DATE = to_date(#awbDate#, 'DDMONYY') 
		and HAWB_NO = #hawbNo#
</select> -->

<!--  Changed for QR -->
<insert id="HHTinserthwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE, 
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
  DAM_USER, DAM_DATE, TR_TYPE, TR_STATUS,
	CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
	 #hawbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#hawbPc#,0), NVL(#hawbWt#,0), #remark#,'I',
	 #userId#, SYSDATE, 'HA', 'A',    
	#userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>

<delete id="hht_deleteHawbStrgDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
delete from IMP_HAWB_STRG_DTL where FLT_KEY=#fltKey# and to_char(FLT_DATE,'DDMONYY')=#fltDate# and AWB_NO=#awbNo# and AWB_DATE=#awbDate# 
</delete>
<select id="hhtGetHouseDtl"  parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT 
	  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
	  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
	  S.HAWB_NO as hawbNo, MH.HAWb_PCS as hseAwbPcs, MH.HAWB_WT as hseAwbWt, 
	  DAM_PCS as hawbPc, DAM_WT as hawbWt, DAM_RMK as remark
	FROM IMP_HAWB_STRG_DTL S
 	join MAST_HAWB MH on S.AWB_NO = MH.AWB_NO AND S.AWB_DATE = MH.AWB_DATE AND S.HAWB_NO = MH.HAWB_NO  
	join HAWB_INVENTORY M on MH.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND S.FLT_KEY = UPPER(#fltKey#) AND S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	AND S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND M.SEQ_NO=#seqNo# AND S.DAM_USER IS NOT NULL
</select>
<select id="HHTvalidatehawbexistsmaintaindamage" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hawbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>

<update id="hht_updateimpcarshpmaintaindamage1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = #remark#, 
			DAM_REF_NO   = #damRefNo#,
			DAM_DECL_PCS = NVL(DAM_DECL_PCS,0) + NVL(#damPcsDec#, 0),
			DAM_DECL_WT = NVL(DAM_DECL_WT,0) + NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			DAM_PROC_USER = #userId#,  
			DAM_PROC_DATE  =  SYSDATE,
			TR_TYPE = 'MDMB'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 			
 </update>
<update id="hht_updateimpcarawbmaintaindamage1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			WH_RMK = #remark#, 
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE 
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 			
 </update> 
<update id="hht_updateAwbStrgDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#damPcsDec#, 0),
			DAM_WT =  NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE			
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND	
			    <!-- UPPER(AWB_TYPE) = UPPER(#awbType#) AND-->
			    <isNotEmpty property="lspNo">
				LSP_NO	= UPPER(#lspNo#)
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				uld_key	= UPPER(#uldKey#)
				</isNotEmpty>
				
				
</update>
<update id="hht_updateAwbStrgDtlRmk1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		UPDATE IMP_AWB_STRG_DTL set RMK = #awbStrgDtlRmk# Where TR_NO = #awbStrgDtlTrNo#
</update>

<select id="sqlspHaveDmgShpmnt" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where lsp_no=#lspNo# and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y') 
</select>
<select id="sqluldHaveDmgShpmnt" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where uld_key=#uldKey# and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y') 
</select>

<select id="sqlawbLoadedOnULD" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where uld_key=#uldKey# and awb_no=#awbNo#
</select>
<select id="sqlawbLoadedOnLsp" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where lsp_no=#lspNo# and awb_no=#awbNo#
</select>

<!--  Changed for QR -->
<select id="sqlfhlExist" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) 
          from edi_fhl hd
          join edi_fhl_hawb hse on hd.tr_no = hse.tr_no
          where hawb_no=#hawbNo# and awb_no = #awbNo#
</select>

<select id="sqlvalidHawb" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from hawb_inventory where seq_no = (select seq_no from awb_inventory where awb_no=#awbNo# 
	and awb_date=#awbDate# and ((lsp_no=#lspNo# AND ULD_KEY IS NULL) OR (ULD_KEY=#uldKey# AND LSP_NO IS NULL)))
	<isNotEmpty property="hawbNo">
	AND HAWB_NO = #hawbNo#
	</isNotEmpty>
</select>

			
<select id="sqlLocCodeInMHS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from MAST_WH_LOC t1, mast_wh_group t2
	where t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and t1.code=#locCode#
</select>


<insert id="sqlcreateJobOrMovOrder" parameterClass="java.util.HashMap">
Insert into RTRV_MOVE_ORDER 
(FUNC,REF_NO,AWB_NO,CURR_LOCN,
LSP,ULD,PC,WT,TARGET,STATUS,
CR_USER_ID,CR_DATE,LM_USER_ID,
LM_DATE,TYPE,PRIORITY,ACTIVITY,
INV_TYPE,AWB_DATE) 
values (#FUNC#,#REF_NO#,#AWB_NO#,#CURR_LOCN#,
#LSP#,#ULD#,#PC#,#WT#,#TARGET#,#STATUS#,
#CR_USER_ID#,SYSDATE,#LM_USER_ID#,
SYSDATE,#TYPE#,#PRIORITY#,#ACTIVITY#,
#INV_TYPE#,#AWB_DATE#)
</insert>

<update id="sqlupdateJobOrMovOrder" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED',
		LM_USER_ID=#LM_USER_ID#,
		LM_DATE=sysdate
		where (ULD = UPPER(#ULD#) or LSP = UPPER(#LSP#))
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
	]]>
</update>

<update id="updateXTShipmentwithTargetDtls" parameterClass="java.util.HashMap">
	UPDATE xt_imp_car_shp_dtl set TARGET = #target# , TARGET_ID = #messageNo# , lm_user_id = #userId#, lm_date = SYSDATE
	WHERE imp_flt_key = #impFltKey# and imp_flt_date = TO_DATE(#impFltDate#, 'DDMONYY') and awb_no = #awbNumber#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
	<isNotEmpty property="checkInULD">
		AND ULD_KEY = #checkInULD#
	</isNotEmpty> 
	<isEmpty property="checkInULD">
		AND ULD_KEY = 'BULK'
	</isEmpty> 
</update>

<update id="updateXTAWBStorageDtls" parameterClass="java.util.HashMap">
	UPDATE imp_awb_strg_dtl set TARGET_ID = #messageNo# , lm_user_id = #userId#, lm_date = SYSDATE
	WHERE flt_key = #impFltKey# and flt_date = TO_DATE(#impFltDate#, 'DDMONYY') and awb_no = #awbNumber#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  AND loc_code = #currLocn#
	<isNotEmpty property="checkInULD">
		AND chkin_uld_key = #checkInULD#
	</isNotEmpty> 
	<isEmpty property="checkInULD">
		AND chkin_uld_key IS NULL
	</isEmpty> 
	<isNotEmpty property="uldLsp">
		AND (ULD_KEY = #uldLsp# OR lsp_no = #uldLsp#)
	</isNotEmpty>
</update>

<select id="sqlCheckAgentInvUld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ASV_INVENTORY where ULD_KEY = #uldKey# or LSP_NO = #uldKey#
</select>

<select id="sqlCheckPPKuld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and HANDLING_MODE is not null and HANDLING_MODE='PPK'
</select>

<select id="sqlCheckTransituld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and TRANSIT_FLG is not null and TRANSIT_FLG='Y' and HANDLING_MODE is not null and (HANDLING_MODE='PPK' or HANDLING_MODE='NBK')
</select>
<select id="getULDisImportEIC" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and eic_type='EIC' and eic_flg='Y' and flt_type='I'
</select>
<!--  Changed for QR
<select id="sqlCheckbuildUpComplete" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and ULD_FLOW is not null and ULD_FLOW='E'
</select> -->


<select id="sqlCheckBUJobOrderCreated" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT dtl.JO_NO joNo
		FROM EXP_BU_JO_DTL dtl
		join EXP_BU_JO_LOCN locn on dtl.AWB_NO = locn.AWB_NO and dtl.AWB_DATE = locn.AWB_DATE and dtl.JO_NO = locn.JO_NO
		WHERE dtl.AWB_NO = #awbNo# AND dtl.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		<isNotEmpty property="lspNo">
	    	AND locn.LSP = #lspNo#
	    </isNotEmpty>			
		<isNotEmpty property="uldKey">
	    	AND locn.ULD_KEY = #uldKey#
	    </isNotEmpty>			
</select>

		
<delete id="sqlBUJobOrderLocDelete" parameterClass="java.util.HashMap">
		DELETE FROM EXP_BU_JO_LOCN
		WHERE JO_NO = #joNo#
		AND AWB_NO = #awbNo#
		AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		<isNotEmpty property="lspNo">
	    	AND LSP = #lspNo#
	    </isNotEmpty>			
		<isNotEmpty property="uldKey">
	    	AND ULD_KEY = #uldKey#
	    </isNotEmpty>		
</delete>

<update id="sqlBUJobOrderUpdate" parameterClass="java.util.HashMap">
		UPDATE EXP_BU_JO
		SET STATUS = 'Pending',
		RMK = #remark#,
		LM_USER_ID = #lmUserId#,
		LM_DATE = SYSDATE		
		WHERE JO_NO = #joNo#
		AND STATUS = 'Confirmed'		
</update>

<!-- Update Damage Cargo Record [HHT]::Ranjith -->

<!-- added by srinath for Update Constarint HAWB For SRF start 17dec10-->
	<!--  Changed for QR -->
	<select id="getairwaybillinfolist"  parameterClass="cargo.cms.imprt.bo.HABQueryBO" resultClass="cargo.cms.imprt.bo.HABInfoBO">
	<![CDATA[
     
      SELECT 
            B.AWB_NO AS AWBNO,
            SUBSTR(A.AWB_NO,1,3)  awbNoPrefix ,
            SUBSTR(A.AWB_NO,4)  awbNoSuffix ,
            SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
            TO_CHAR (B.AWB_DATE, 'DDMONYY HH24:MI') AS AWBDATE,
            B.FLT_KEY AS FLTKEY, TO_CHAR (B.FLT_DATE, 'DDMONYY') AS FLTDATE,
            C.HAWB_NO AS HAWBNO, 
            C.VER_NO AS VER, 
            E.CDIF_UTL_PCS AS UTL, 
            E.CDIF_PS_PCS AS PS,
            E.CDIF_DT_PCS AS DETN,
            E.CDIF_FOLLOW_ON_PCS AS followOnTruckPcs,
            '0' AS TOTALPCS, 
            '0' AS TOTALWT,
            H.HAWB_PCS AS HAWBPC,
            trim(TO_CHAR(H.HAWB_WT, '9999990D9')) AS HAWBWT, 
            B.CC_CODE AS code,
            DECODE(SH.SRF_NO, NULL, 'N', 'Y') AS disableFlag,
            A.CARR_CODE carrCode,
            C.EXAM_CODE AS examCode,
            C.EXAM_DET_PCS AS hawbDetnPc,
            C.EXAM_REP_PCS AS hawbRelPc,
            '' AS slPc,
            '' as slWt,
            '' delPcs,
            '' delwT
            FROM
            IMP_SRF A
            JOIN IMP_SRF_FLT B ON A.SRF_NO = B.SRF_NO		
            JOIN V_CST_IMP_CC_CODE C ON B.AWB_NO = C.AWB_NO AND B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.FLT_DATE		
           LEFT JOIN ( SELECT AWB_NO,
                              AWB_DATE,
                              HAWB_NO,
                              FLT_KEY, 
                              FLT_DATE,
                              DECODE(HS.HCIR_PCS_TYPE, 'SL', HS.HCIR_PCS, 0) AS SL_PCS,
                              DECODE(HS.HCIR_WT_TYPE, 'SL', HS.HCIR_WT, 0) as SL_WT
                              FROM
                              IMP_HAWB_STRG_DTL HS	
                              WHERE
                              HS.HCIR_PCS_TYPE = 'SL' OR HS.HCIR_WT_TYPE = 'SL') HS ON B.AWB_NO = HS.AWB_NO AND C.HAWB_NO = HS.HAWB_NO AND B.FLT_KEY = HS.FLT_KEY AND B.FLT_DATE = HS.FLT_DATE
           LEFT JOIN IMP_CDIF D ON A.SRF_NO = D.SRF_NO AND D.VOID_USER IS NULL	
           LEFT JOIN IMP_CDIF_HAWB E ON D.CDIF_NO = E.CDIF_NO AND E.HAWB_NO = C.HAWB_NO AND E.AWB_NO = A.AWB_NO
           LEFT JOIN MAST_HAWB H ON H.HAWB_NO = C.HAWB_NO AND H.AWB_NO = A.AWB_NO          
           LEFT JOIN (SELECT SRF_NO, AWB_NO, HAWB_NO, FLT_KEY, FLT_DATE	FROM IMP_SRF_CC_HAWB	
           GROUP BY SRF_NO, AWB_NO, HAWB_NO, FLT_KEY, FLT_DATE) SH ON SH.SRF_NO = A.SRF_NO AND SH.FLT_KEY = B.FLT_KEY AND SH.FLT_DATE = B.FLT_DATE AND SH.HAWB_NO = C.HAWB_NO
           WHERE A.SRF_NO =  #srfActual#
		   AND C.HAWB_NO NOT LIKE '000000000000000000'
		   AND C.CC_CODE NOT IN ('NC')
		   AND HS.AWB_NO IS NULL
	]]>
	</select>
	
	<insert id="saveairwaybillinfo" parameterClass="cargo.cms.imprt.bo.HABInfoBO" >
	INSERT INTO IMP_SRF_CC_HAWB (
	SRF_NO, AWB_NO, AWB_DATE, 
	HAWB_NO, FLT_KEY, 
	FLT_DATE, DELV_PCS, 
	DELV_WT, SL_PCS, SL_WT, 
	VERSION,HAWBTYPE,CR_USER_ID, CR_DATE, LM_USER_ID, 
	LM_DATE , tr_no , doc_Line_no ,CARR_CODE 
	) 
	VALUES ( #srfNo#, #awbNo#, TO_DATE(#awbDate#,'DDMONYY HH24:MI'),#hawbNo#,#fltKey#,TO_DATE(#fltDate#,'DDMONYY HH24:MI'),
		 #hawbDelvPc#, #hawbDelvWt#, #hawbSlPc#, #hawbSlWt#, #ver#,#hawbSlType#, #createdUserId#,
		 SYSDATE, #createdUserId#, SYSDATE,#trNo# , #docLineNo#, #carrCode#)
</insert>
<parameterMap id="hmap" class="map" >
	<parameter property="TRNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>
<procedure id="proc_imp_dec_const_shp_seq" parameterMap="hmap">
	{ call pkg_sub_bd_disc.sub_const_part_shp(?) }
</procedure>	
<!-- added by srinath for Update Constarint HAWB For SRF end-->
 <!-- Exit Check Post:: Starts -->
 <!--  Changed for QR -->
 <select id="get_truck_details" parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">
		select a.awb_no as awbNo, a.dlv_pcs as dlvPcs, a.dlv_wt as dlvWt, b.srf_no as srfNo
		from imp_truck_srf b
		join imp_srf_flt a ON B.SRF_NO = A.SRF_NO
    	JOIN IMP_SRF S ON B.SRF_NO = S.SRF_NO
		WHERE  B.TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP  WHERE TRUCK_NO=#truckNo# AND CLOSED = 'N') and S.VOID_DATE IS NULL 
	</select>
	<select id="getsealnosbytruckno"
		parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">

		select seal_no as sealNo from truck_seal where truck_no = #truckNo#
		
	</select>
	<select id="getsrfpostedStatus"  parameterClass="map"  resultClass="java.lang.String">
		select decode((select count(1) from imp_srf where srf_no=#srfNo# and POST_DATE is not null 
		and post_user is not null and post_time is not null),'0','N', 'Y') from dual 
	</select>
	
	<!--  Changed for QR -->
	<select id="get_uld_details" parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">
		select uld_key as uldNo,
		A.eir_no as eirNo
		from uld_rel_dtl A
		join (select srf_no,eir_no from uld_iss_hd) B
		on A.eir_no = B.eir_no
		and B.srf_no in (select srf_no from imp_truck_srf where trip_id = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))		
	</select>
	<select id="chk_outstnd_charges_for_truck"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from bill_charge_dtl where status='PENDING' and truck_no =#truckNo#
	</select>
	<select id="getEIRCount"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT COUNT(EIR_NO) FROM ULD_ISS_HD WHERE SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))
	</select>
	
	<!--  Changed for QR -->
	<select id="compare_cccodes_for_srf"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from  v_cst_imp_cc_code_awb A
		join (select awb_no,flt_key,flt_date,srf_no,cc_code from imp_srf_flt where srf_no in 
		(select srf_no from imp_truck_srf where trip_id = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))) B
		on A.awb_no = B.awb_no
		and A.flt_key = B.flt_key
		and A.flt_date = B.flt_date
		and A.cc_code = B.cc_code
	</select>
		
	<!--  Changed for QR -->
	<select id="chkForCcCodeConstrained"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CONSTRAINT_CODE WHERE CONSTRAINT='Y' AND 
   		 code in (select A.cc_code from  v_cst_imp_cc_code_awb A
		join (select awb_no,flt_key,flt_date,srf_no,cc_code from imp_srf_flt where srf_no in 
		(SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N'))) B
		on A.awb_no = B.awb_no
		AND A.FLT_KEY = B.FLT_KEY
		and A.flt_date = B.flt_date)
	</select>
	
	<!--  Changed for QR -->
	<update id="do_complete_check_post" parameterClass="map" >
		UPDATE TRUCK_TRIP 
		SET EXIT_IND = 'Y', LM_DATE = SYSDATE, LM_USER_ID = #lmUserId#, CLOSE_USER_ID = #lmUserId#, CLOSE_TIME = SYSDATE
		WHERE TRUCK_NO = #truckNo# and TRIP_ID = (select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N')
	</update>
	
	<!--  Changed for QR -->
	<update id="do_reject_check_post" parameterClass="map" >
		UPDATE TRUCK_TRIP
		SET EXIT_IND = 'N', REJ_RMK = #remarks#, LM_DATE = SYSDATE, LM_USER_ID = #lmUserId#
		WHERE TRUCK_NO = #truckNo# and TRIP_ID = (select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N')
	</update>
<!-- Exit Check Post:: Ends -->

<!-- ##################### Inbound ULD Breakdown start  : Santosh : Start ###############################################-->	
 
 	<select id="getULDForLocation" parameterClass="java.lang.String" resultClass="java.lang.String">
 	SELECT uld.ULD_KEY 
 			FROM ULD_INVENTORY uld
      		join IMP_RAMP_CHK_DTL impDtl on uld.flt_key = impDtl.flt_key and uld.flt_date = impDtl.flt_date and uld.uld_key = impDtl.uld_key and uld.flt_type = 'I'
	WHERE uld.LOC_CODE=#locCode# and rownum=1
 	</select> 	
 	
	<select id="getAWBFFMPcs"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
	select sum(MAN_PCS) as totalPcs
	from EDI_FFM_SHP
	where
		AWB_NO = UPPER(#awbNo#) AND
		FLT_KEY = UPPER(#flightKey#) AND
		FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
	
	<select id="hht_get_old_pc_weight"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	  	    SELECT  shp.MANIFEST_PCS	AS pieces,
		   		   shp.MANIFEST_WT	AS weight,
		   		   shp.DAM_PCS	AS dampieces,
				   shp.DAM_WT 	AS damweight,
				   pkg_common.get_awb_splcodes(shp.AWB_NO, shp.AWB_DATE, awb.AWB_TYPE, ', ') as splCode
		   FROM IMP_CAR_SHP shp
       	   JOIN AWB awb ON awb.AWB_NO = shp.AWB_NO AND awb.awb_date = shp.awb_date
		   WHERE  shp.AWB_NO	  =   #awbNo#  AND
		   		  shp.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND		   		  
		   		  shp.FLT_KEY = UPPER(#flightKey#) AND
		   		  shp.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')		   		
	</select>	
 	
 	<select id="getHawbOrgPcsWt"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT STRG_PCS hseOrgAwbPcs, STRG_WT hseOrgAwbWt
		FROM HAWB_INVENTORY
		WHERE seq_no = (select seq_no from awb_inventory where awb_no=#awbNo#
		 <isNotEmpty property="uldKeyDtl">
      			and  uld_key=#uldKeyDtl#
      	 </isNotEmpty> 
      	  <isNotEmpty property="lspNo">
      			and  lsp_no=#lspNo#
      	 </isNotEmpty>) 
      	  <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
      	 </isNotEmpty>    		
	</select>
	
		
		<insert id="insertLSPInventoryCreateawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locCode#, SYSDATE, 'N', #modUser#, SYSDATE, #modUser#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	
	
	<select id="sqlvalidHawbLSP" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
      select count(1) from hawb_inventory 
      where seq_no = (
      SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#     
     <!-- AND AWB_TYPE = #awbType#-->
     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*'))     
       <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
       </isNotEmpty>      
	</select>	
	
	<select id="sqlvalidHawbULD" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
      select count(1) from hawb_inventory 
      where seq_no = (
      SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#    
     <!-- AND AWB_TYPE = #awbType#-->
     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*'))     
       <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
       </isNotEmpty>      
	</select>	
	
	 <select id="checkBDDiscCompleted"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" resultClass="java.lang.String">
	SELECT COUNT(1) FROM CST_SUBM  where FLT_TYPE = 'A' AND BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')						
	</select>

	
	<select id="getULDBrkFlightDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select	
				dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,	
				dtl.CARR_CODE 										   As carrierCode,
				dtl.FLT_NO 											   AS flightNo,
			    dtl.FLT_KEY                                            AS flightKey,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate,
			    dtl.ULD_KEY                                            AS uldKey				   	    		   
			    FROM IMP_RAMP_CHK_DTL dtl			   
			    where 	
			    <!--
				LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
				FLT_KEY=#flightKey# 
				AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND ULD_KEY=#uldKey#		   
	</select>
	
	
	<select id="getULDBrkFlightDetailsUldInv" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select					
				NVL(IMP_FLT_CARR,CARR_CODE)    									As carrierCode,
			    NVL(IMP_FLT_NO,FLT_NO) 	   											AS flightNo,
			    NVL(IMP_FLT_KEY,FLT_KEY)      										AS flightKey,
			    NVL(TO_CHAR(IMP_FLT_DATE,'DDMONYY'),TO_CHAR(FLT_DATE,'DDMONYY'))    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#		
			<!--
				select					
				IMP_FLT_CARR    									As carrierCode,
			    IMP_FLT_NO	   											AS flightNo,
			    IMP_FLT_KEY      										AS flightKey,
			    TO_CHAR(IMP_FLT_DATE,'DDMONYY')    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#	-->
	</select>
	
	<select id="getULDBrkFlightDetailsUldInv_Exp" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select					
				NVL(CARR_CODE,IMP_FLT_CARR)    									As carrierCode,
			    NVL(FLT_NO,IMP_FLT_NO) 	   											AS flightNo,
			    NVL(FLT_KEY,IMP_FLT_KEY)      										AS flightKey,
			    NVL(TO_CHAR(FLT_DATE,'DDMONYY'),TO_CHAR(IMP_FLT_DATE,'DDMONYY'))    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#	
	</select>
	
 	<!--  Changed for QR -->
 	<select id="getULDBrkDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
		  select
          		dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.CARR_CODE 										   As carrierCode,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			   
			    uld.WH_RMK 											   AS uldInstruction,
			    (SELECT WH_RMK FROM IMP_CAR_AWB car
			    JOIN AWB awb ON awb.AWB_NO = car.AWB_NO 
				AND awb.awb_date = car.awb_date
			    WHERE car.AWB_NO=#awbNo# AND TO_CHAR(car.AWB_DATE,'DDMONYY')=#awbDate#)  AS awbInstruction,
			    uld.HANDLING_MODE									   AS dlvMode,			
			    (select TRF_TYPE from v_ddt_dtl where FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')	 AND ULD_KEY=#uldKey# and rownum = 1)  AS transferType,	    
			    (select TARE_WEIGHT from ULD_TYPE_CARR_TARE_WT 
			    					where ULD_CARR = uldinv.ULD_CARR and ULD_TYPE = uldinv.ULD_TYPE and uldinv.ULD_NO between ULD_NO_FROM and ULD_NO_TO) tareWt	    		   
			    FROM IMP_RAMP_CHK_DTL dtl
			    LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
			    LEFT JOIN uld_inventory uldinv on uldinv.ULD_KEY=dtl.ULD_KEY			    
			    where dtl.FLT_KEY=#flightKey# 
				AND dtl.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND dtl.ULD_KEY=#uldKey#	
	</select>
	
	<select id="getAWBEndrSCCollDetailsHHT" parameterClass="java.util.HashMap"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
	  select    
      awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
      awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
      awb.SPL_CODE9 AS splCode9,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeSCColl1,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeSCColl2,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeSCColl3,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeSCColl4,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeSCColl5,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeSCColl6,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeSCColl7,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeSCColl8,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeSCColl9,
       pkg_common.get_awb_splcodes(AWB_NO, AWB_DATE, AWB_TYPE, ', ') as splCode
      from AWB awb 
      where awb.AWB_NO	  =   #awbNo#  AND
      awb.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
      </select>
      
      
      	<select id="getAWBEndrSCCollDetails" parameterClass="java.util.HashMap"  
		resultClass="cargo.cms.imprt.bo.CarShpBO">		
	  select    
      awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
      awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
      awb.SPL_CODE9 AS splCode9,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeSCColl1,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeSCColl2,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeSCColl3,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeSCColl4,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeSCColl5,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeSCColl6,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeSCColl7,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeSCColl8,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeSCColl9
      from AWB awb 
      where awb.AWB_NO	  =   #awbNo#  AND
      awb.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
      </select>
	
	  <select id="getCntgFlightsForULD"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<!-- 
		select DISTINCT ddt.cntg_flt_key as cngFlightKey, 
		TO_CHAR(ddt.cntg_flt_date,'DDMONYY') as cngFlightDate, 
        (select count(shp1.awb_no) from  DDT_SHP shp1 where shp1.udoc_line_no= ddt.doc_line_no) as totalPcs,
        dtl.trf_wt as totalWt,
        dtl.UNLDG_PT as unloadPoint,
        dtl.QT_BU as qtBuildUp
		FROM DDT_ULD ddt,  DDT_SHP shp, DDT_SHP_TRF_DTL dtl
		where				 
		ddt.ULD_KEY=#PARAM# and
        ddt.DOC_LINE_NO = shp.UDOC_LINE_NO and 
        shp.UDOC_LINE_NO = dtl.SDOC_LINE_NO  		 -->       
                  select SHP_CNTG_FLT_KEY cngFlightKey, 
                  TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') cngFlightDate,
                  SHP_UNLDG_PT unloadPoint,
                  QT_BU qtBuildUp,
                  SUM(SHP_TRF_PC) totalPcs,
                  SUM(SHP_TRF_WT) totalWt                 
                  from v_ddt_dtl
                  where flt_key = #flightKey#
                  AND FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
                  AND SHP_TRF_TYPE IN ('QT','TT','IF')
                  and uld_key = #uldKey# 
                  GROUP BY SHP_CNTG_FLT_KEY,SHP_CNTG_FLT_DATE,SHP_UNLDG_PT,QT_BU	       			    
	</select>
	
	<!--  Changed for QR -->
	<select id="getCntgFlightsForAWB"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">   
       SELECT  dtl.SHP_CNTG_FLT_KEY cngFlightKey, 
        TO_CHAR(dtl.SHP_CNTG_FLT_DATE,'DDMONYY') cngFlightDate,
        dtl.SHP_UNLDG_PT unloadPoint,
        dtl.QT_BU qtBuildUp,
	    PKG_COMMON.get_flt_sta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD') std,
        PKG_COMMON.get_flt_eta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD') etd,
        SUM(dtl.SHP_TRF_PC) totalPcs,
        SUM(dtl.SHP_TRF_WT) totalWt  
    	FROM  V_DDT_DTL dtl
        WHERE dtl.FLT_KEY     = #flightKey#
        AND dtl.FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
	    AND dtl.SHP_TRF_TYPE IN ('QT')
	    AND dtl.AWB_NO=#awbNo#
	    AND dtl.AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
	    group by dtl.SHP_CNTG_FLT_KEY, TO_CHAR(dtl.SHP_CNTG_FLT_DATE,'DDMONYY'), dtl.SHP_UNLDG_PT, dtl.QT_BU, 
	    PKG_COMMON.get_flt_sta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD'), PKG_COMMON.get_flt_eta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD')     
	</select>
	
	<select id="getULDBrkCompleteDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
				select			
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.CARR_CODE 										   As carrierCode,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,			   
			    dtl.ULD_KEY                                            AS uldKey      ,				  
			    dtl.EMPTY_IND                                          AS empty       ,			    
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         
			    FROM IMP_RAMP_CHK_DTL dtl
			    where
			     <!--
				dtl.LOC_CODE = #locCode# AND dtl.ULD_KEY=#uldKey#   -->
				dtl.FLT_KEY=#flightKey# 
				AND dtl.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND dtl.ULD_KEY=#uldKey#			    
	</select>
	
	
	<select id="checkUldCheckedIn" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
		<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
			AND ULD_KEY=#uldKey#
			AND CHKIN_YN = 'Y'
	</select>
	
	
	<select id="checkBreakDownCompleted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
			AND ULD_KEY=#uldKey# 
			AND BRKDN_COMPL_YN = 'Y'
	</select>
	
		<select id="getULDHandlingMode" parameterClass="java.util.HashMap" 
		resultClass="java.lang.String">
		SELECT 
			HANDLING_MODE
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldKey# and
			FLT_KEY=#flightKey# and
			FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')			
	</select>
	
	<select id="checkBreakDownStarted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
			AND ULD_KEY=#uldKey# AND BRKDN_START_DATE is not null			
	</select>
	
	<!--  Changed for QR -->
	<select id="getAWBCountForULDFromShipment"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.Integer">
	   	SELECT COUNT(1)
		  FROM V_FFM_DTL V 		 
		  WHERE
			V.FLT_KEY = #flightKey# AND
			V.FLT_DATE = TO_DATE (#flightDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#    
    </select>
	
	 <select id="getAWBCountForULDFromStorage"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.Integer">
		  select count(AWB_NO) as awbCount  
	  	 FROM (select DISTINCT AWB_NO
      			 FROM  IMP_AWB_STRG_DTL
      	 			where                   
       				CHKIN_ULD_KEY=#uldKey# and       
       				TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and
       				FLT_KEY=#flightKey#)    
    </select>      
  
	<!--  Changed for QR -->
	<select id="getBookingDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.String">
			select	
	  		TO_CHAR(hd.BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_TO,0),'0000')),3,4) as bookingDateTime
 			from IMP_BOOKING hd
 			join IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
 			where status not in  ('CANCEL')
 			and dtl.AWB_NO = #awbNo# 
 			and dtl.FLT_KEY = #flightKey# 
 			and TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#		
    </select>
    
    <update id="doUldBrkComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL SET
		   BRKDN_COMPL_YN   =  #breakdownYN#,
		   BRKDN_COMPL_USER_ID = #modUser#,
		   BRKDN_COMPL_DATE	= SYSDATE,
		   <!-- EMPTY_IND = #emptyInd#,-->
		   BRKDN_COMPL_TIME	= TO_CHAR(SYSDATE,'HH24MI'),
		   TR_TYPE=#trType#
		WHERE
			TR_NO = #trNo# AND
			DOC_LINE_NO =  #docLineNo#
	</update>	

	 <update id="doUldBrkUnComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL SET
		   BRKDN_COMPL_YN   =  #breakdownYN#,
		   BRKDN_COMPL_USER_ID = null,
		   BRKDN_COMPL_DATE	= null,
		   BRKDN_COMPL_TIME	= null,
		   TR_TYPE=#trType#
		WHERE
			TR_NO = #trNo# AND
			DOC_LINE_NO =  #docLineNo#
	</update>	
	
	 <update id="updateInvAfterBDHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set empty_flg=#emptyInd#,
			FLT_NO=NULL,
			FLT_TYPE=NULL,
			FLT_DATE=NULL,
			FLT_KEY=NULL,
			CARR_CODE=NULL,
			transit_flg = decode(#emptyInd#,'Y','N',transit_flg),
			transit_type = decode(#emptyInd#,'Y',null,transit_type)
		 where uld_key = #uldKey#
	</update>	
	
	<select id="hhtcheckAwbInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	  select count(1) from awb
	  join awb_inventory awbInv on awbInv.awb_no = awb.awb_no and  awbInv.awb_date = awb.awb_date
	  where awb.awb_type = 'T' and awbInv.uld_key = #uldKey#
	</select>
	
	<update id="hhtupdateInvAfterCheckAwbInvBDComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set transit_flg = 'N',
			transit_type = null
		 where uld_key = #uldKey#
	</update>
	
	 <update id="updateInvAfterBDUNHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set FLT_NO=IMP_FLT_NO,
			FLT_TYPE='I',
			FLT_DATE=IMP_FLT_DATE,
			FLT_KEY=IMP_FLT_KEY,
			CARR_CODE=IMP_FLT_CARR
		 where uld_key = #uldKey#
	</update>	
	
	
	<select id="get_hht_pcs_wt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT NVL(RECD_PCS,0) AS receivedPieces,
		   NVL(RECD_WT,0) AS receivedWeight ,
		   NVL(MANIFEST_PCS,0) AS  manifPieces,
		   NVL(MANIFEST_WT,0) AS manifWeight,
		   NVL(CAR_CREATED,'N') as carCreated,
		   MINI_SHP as minShpInd
		   FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo#
		   AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		   AND FLT_KEY = #flightKey#
		   AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	
	
	<select id="getAWBDateCarShp" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="java.lang.String">
		SELECT  TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate 
		   FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo#		 
		   AND FLT_KEY = #flightKey#
		   AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')	
	</select>
	
	<insert id="insertimpawbstrgdtlhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	
		   AWB_PFX, 	AWB_NO, 	AWB_DATE, 
		   ULD_KEY,  
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   DAM_IND, TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE,CHKIN_ULD_KEY,
			 INSRT_FROM_IND,LSP_NO,FLT_TYPE,
			 MINI_SHP,ENDORSED_BY,AWB_DEST,ULD_TYPE,ULD_NO, 
			 ULD_CARR,TARGET,DAM_TYPE,BULK_WT,BUP_WT,DAM_PC_DECL,DAM_WT_DECL,DAM_COND,TR_TYPE_EVT,RMK) 
		VALUES ( #trNo#, '1', #carrierCode#,
			TO_DATE(#flightDate#,'DDMONYY'), #flightKey#, 
			#awbPrefix#, #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')),
			#uldKeyDtl#,
			#locCode#, #totalPcs#, #totalWt#,
			#damInd#,
			'AS', 'A', #modUser#,
			sysdate, #modUser#, sysdate,#uldKey#,
			'H',#lspNo#,'I',#minShpInd#,#userName#,#awbDest#,
			#uldType#, #uldNo#,#uldCarr#,#target#,#damType#,#totalWt#,#totalWt#,#dmgDclPcs#,#dmgDclWt#,#damCondConcat#,'CIASH',#remark#)
	</insert>
	
	<update id="imp_createawbstrg_uldbreak_start" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #modUser#,
			BRKDN_START_DATE = sysdate,		
			<!-- 	
			BRKDN_LOCN = #locCode#,	 -->			
			LM_USER_ID	 =#modUser#,
			LM_DATE	 = sysdate 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#			  	
				AND ULD_KEY = #uldKey#				
	</update>	
	
	
	<select id="checkBreakDownNotStarted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
			AND ULD_KEY=#uldKey# 
			AND BRKDN_START_DATE is null
			AND CHKIN_YN = 'Y'
			
	</select>
	
	<insert id="save_imp_awb_uld_brk_hht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
			INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
				SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,TR_TYPE) 
			VALUES('I',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
				nvl(#recdPcsToUpdate#,0),nvl(#recdWtToUpdate#,0),#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode8#,
				#modUser#,SYSDATE,#modUser#,SYSDATE,'B',#carrierCode#,'Y',#trType#)  
		]]>
	</insert>	

	<select id="findRecvdPcsSavedForShpmthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') AND RECD_PCS='0'
	</select>
	
	<!--  Changed for QR -->
	<select id="findBkgRecordWithinXHrshht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
		SELECT 
			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') as schDate, BKG_SLOT_TO as timeTo, BKG_SLOT_FROM as timeFrom 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE A.status not in  ('CANCEL') and 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#flightKey# AND B.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') 
			AND TO_DATE(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' ||trim(to_char(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') <= TO_DATE(#timeTo#, 'DDMONYY HH24MI')
			and to_date(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || trim(to_char(A.BKG_SLOT_FROM, '0000')),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
		]]>
	</select>
	<select id="findTrkRecordWithinXHrshht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
		SELECT 
			TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as schDate, SCH_COLL_TO as timeTo, SCH_COLL_FROM as timeFrom 
		FROM 
			IMP_CAR_AWB A, TRUCK_MANIFEST B, TRUCK_MANIFEST_DTL C 
		WHERE 
			C.TRUCK_MANF_NO=B.TRUCK_MANF_NO AND C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE AND B.AGENT_CODE=A.AGENT_CUST_NO AND A.AWB_NO=#awbNo# AND 
			A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND TO_DATE(B.SCH_COLL_DATE || ' ' || LPAD(B.SCH_COLL_TO,4,0), 'DD-MON-YY HH24MI') <= 
			TO_DATE(#timeTo#, 'DDMONYY HH24MI') AND C.FLT_KEY=#flightKey# AND C.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="findBkgExistsForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">			
			SELECT 
			hd.DEL_ZONE 
			FROM 
			IMP_BOOKING hd JOIN
		      IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
			  WHERE hd.status not in  ('CANCEL') and 
			  dtl.AWB_NO=#awbNo#  
		      AND dtl.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		      AND dtl.FLT_KEY=#flightKey#
		      AND dtl.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY')
		      AND TO_DATE(TO_CHAR(hd.BKG_SLOT_DATE, 'DDMONYY') || TO_CHAR(hd.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') >
		      TO_DATE(TO_CHAR(SYSDATE,'DDMONYY HH24MI'),'DDMONYY HH24MI') 
	</select>
	
	<!--  Changed for QR -->
	<select id="findTrkDockForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
	  <![CDATA[ 
	 
		SELECT custAgtSchCollTD.TRUCK_DOCK  
		FROM IMP_CAR_SHP carShp
			join TRUCK_MANIFEST_DTL trkMnfDtl on trkMnfDtl.awb_no = carShp.awb_no and trkMnfDtl.awb_date = carShp.awb_date and trkMnfDtl.flt_key = carShp.flt_key and trkMnfDtl.flt_date = carShp.flt_date
			join TRUCK_MANIFEST trkMnf on trkMnf.truck_manf_no = trkMnfDtl.truck_manf_no 
			join CUST_AGENT_SCH_COLL_TIME custAgtSchColl on trkMnf.time_slot_tr_no = custAgtSchColl.tr_no
			join CUST_AGENT_SCH_COLL_TRUCK_DOCK custAgtSchCollTD on  custAgtSchCollTD.tr_no = custAgtSchColl.tr_no
		WHERE sysdate < to_date(to_char(SCH_COLL_DATE,'DMONYY')||' '|| TO_CHAR(SCH_COLL_FROM,'0000'),'DDMONYY HH24MI') and custAgtSchColl.purpose = 'CRG'
				AND carShp.AWB_NO=#awbNo# AND carShp.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
				AND carShp.FLT_KEY=#flightKey# AND carShp.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') and ROWNUM=1
				
	  ]]>
	</select>
	
	<select id="findDefTgtForSHCForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT 
			DEFAULT_TARGET 
		FROM 
			MAST_SPL_HAND_CODE A, IMP_CAR_AWB B 
		WHERE (A.CODE=B.SPL_CODE1 OR A.CODE=B.SPL_CODE2 OR A.CODE=B.SPL_CODE3 OR A.CODE=B.SPL_CODE4 OR A.CODE=B.SPL_CODE5 
		OR A.CODE=B.SPL_CODE6 OR A.CODE=B.SPL_CODE7 OR A.CODE=B.SPL_CODE8 OR A.CODE=B.SPL_CODE9) AND B.AWB_NO=#awbNo# 
		AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND DEFAULT_TARGET IS NOT NULL ORDER BY PRIORITY
	</select>
	
	
	<update id="updateAwbInvFrmCreateAWBStrghht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE AWB_INVENTORY 
		SET 			
			LOCN_WT = '0',	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKeyDtl">
				AND ULD_KEY = #uldKeyDtl#
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty>					
		</isEmpty>
		<isNotEmpty property="seqNo">
		SEQ_NO = #seqNo#	
		</isNotEmpty>					
	</update>

	<update id="updateAWBUnknownCarCrthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE AWB SET
		CAR_YN = 'Y',
		MANIFEST_PCS = '0', 
		MANIFEST_WT = '0',
		LM_DATE = SYSDATE,
		TR_TYPE=#trType#,
		LM_USER_ID = #modUser# 
		WHERE
		AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</update>		
	
	<update id="updateCarSHPUnknownCarCrthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CAR_CREATED = 'Y',
			MANIFEST_PCS = '0', 
			MANIFEST_WT = '0',
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>	
	

	
	<update id="updateCarShpMinShipHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_CAR_SHP
		SET    
				MINI_SHP = #minShpInd#,
			    LM_USER_ID =  #modUser#, 
				LM_DATE   =  sysdate,
				TR_TYPE='AWB Storage' 
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#flightKey#) AND
			   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</update>		
	
	<insert id="insertimpcarawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		INSERT INTO IMP_CAR_AWB (
		   AWB_NO,    	AWB_DATE,    AWB_PRFX, AWB_ORIGIN,  AWB_DEST, PPK_TYPE, 
		   CR_USER_ID,  CR_DATE,    LM_USER_ID, 
		   LM_DATE,TR_STATUS,CONSOLE_IND, AWB_PCS,AWB_WT,BULK_PCS,BULK_WT,CATALOG, CURR_CODE) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#, #awbOrigin#, #awbDest#, nvl(#awbPPKType#, 'B'),
				 #modUser#, SYSDATE, #modUser#,SYSDATE,'A',#consolInd#,#totalPcs#,#totalWt#,#totalPcs#,#totalWt#,#catalog#, #currencyCode#)
	</insert>
	
	<update id="updateimpcarshphht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_CAR_SHP
	SET    RECD_PCS	  =	 #totalPcs#,
		   RECD_WT	  =  #totalWt#,
		    LM_USER_ID =  #modUser#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')

	</update>	   
	
	<!--  Changed for QR -->
		<insert id="insertimpcarshphht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"> 
	INSERT INTO IMP_CAR_SHP (
	   AWB_NO, AWB_DATE, AWB_PRFX, PPK_TYPE,
	   CARR_CODE, FLT_DATE, 
	   FLT_KEY, CR_USER_ID, CR_DATE, 
	   LM_USER_ID, LM_DATE, TR_STATUS,
	   FLT_TYPE,MINI_SHP
		) 
	VALUES (#awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,nvl(#awbPPKType#, 'B'),
				#carrierCode#, TO_DATE(#flightDate#,'DDMONYY'),
				#flightKey#, #modUser#, SYSDATE ,
			 #modUser#, SYSDATE,'A',			 
			 'I',#minShpInd#)	
	</insert>	
	
	<update id="updateimpcarshphhtdamage" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_CAR_SHP
	SET   	   
		    DAM_RMK = #remark#, 
			DAM_REF_NO   = #damRefNo#,
			DAM_DECL_PCS = DAM_DECL_PCS + NVL(#dmgDclPcs#, 0),
			DAM_DECL_WT =  DAM_DECL_WT + NVL(#dmgDclWt#,0),	
			DAM_PROC_DATE = SYSDATE,
			DAM_PROC_USER = #modUser#,
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE		   
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</update>

	<update id="updateawbinvcreateawbstrgdamage" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#dmgDclPcs#, 0),
			DAM_WT =  NVL(#dmgDclWt#,0),	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
				<isNotEmpty property="locCode">
				and LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKeyDtl">
				and ULD_KEY = #uldKeyDtl# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				 and LSP_NO = #lspNo# 
				</isNotEmpty>				
		</isEmpty>
		<isNotEmpty property="seqNo">
		seq_no = #seqNo#	
		</isNotEmpty>							
	</update>		
		
	<select id="checkawbexistsinimpcarshphht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="java.lang.String">
	SELECT count(1)	
	FROM IMP_CAR_SHP 	
	WHERE AWB_NO = UPPER(#awbNo#) AND
	  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
	  FLT_KEY = UPPER(#flightKey#) AND
	  FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>	
	
	<select id="checkawbexistsinimpcarawbhht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="java.lang.String">		
	SELECT count(1)	
	FROM IMP_CAR_AWB 	
	WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="validatehhtuldkeyinffm" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="java.lang.Integer">	
		select count(1) 
		FROM IMP_RAMP_CHK_DTL
		WHERE 
		CARR_CODE = #carrierCode# AND
		FLT_NO = #flightNo# AND
		FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		ULD_KEY = #uldKey#
	</select>			
	
	<!--  Changed for QR -->
	<select id="getAWBDetailsFromCarAWB"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT car.AWB_ORIGIN as awbOrigin,
		car.AWB_DEST as awbDest, 
		car.PPK_TYPE as awbPPKType
		FROM IMP_CAR_AWB car
		JOIN AWB awb ON awb.AWB_NO = car.AWB_NO AND awb.awb_date = car.awb_date 
		where 
		car.AWB_NO = #awbNo# and car.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>	
		
	<select id="getAWBInvDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT inv.AWB_NO awbNo, TO_CHAR(inv.AWB_DATE,'DDMONYY')  as awbDate, 
		awb.AWB_TYPE as awbType
		FROM AWB_INVENTORY inv
		JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO AND awb.awb_date = inv.awb_date
		where 
		inv.AWB_NO = #awbNo# and
		inv.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
		inv.FLT_KEY = #flightKey# and
		inv.ULD_KEY = #uldKey#		
	</select>
	
	<select id="getAWBType"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<select id="getAWBTypeDesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<select id="getAwbType_with_Map" parameterClass="map" resultClass="java.lang.String">
		select  AWB_TYPE awbType from awb where awb_no=#awbNo# and  awb_date = #awbDate#
	</select>
	
	<select id="getAWBTypeDesktop1"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<!--  Changed for QR -->
	<select id="getAWBDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT awb.LOCKED_YN AS awbLockedYN, 
		lok.MISS_YN as awbBlacklistedYN,
		awb.AWB_CLOSED_YN as awbClosedYN,
		awb.CATALOG AS awbCatalog,
		awb.PPK_TYPE awbPPKType,
    	carawb.WH_RMK as awbInstruction
		FROM AWB awb
		LEFT join AWB_LOCK lok ON lok.AWB_NO = awb.AWB_NO and lok.AWB_DATE = awb.AWB_DATE
    	LEFT JOIN IMP_CAR_AWB carawb ON carawb.AWB_NO = awb.AWB_NO and carawb.AWB_DATE = awb.AWB_DATE     	
		WHERE 		
		awb.AWB_NO = #awbNo#
		and awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="getHawbCountDamAwb"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">	
		select count(1) 
		FROM MAST_HAWB
		WHERE AWB_NO = #awbNo#		
		AND HAWB_NO = #houseAWBNo#
	</select>
	
	<select id="getTarmacCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
	<![CDATA[				
	select count(1)
        from (select  tt_cnt, qt_cnt, trf_pcs
              from (select flt_key, flt_date, awb_no, awb_date, sum(case when shp_trf_type = 'TT' or trf_type = 'IF' then 1 else 0 end) tt_cnt,
                        sum(case when shp_trf_type = 'IF' and cntg_flt_key is null then 1 else 0 end) if_bulk_cnt,
                        sum(case when shp_trf_type in ('QT') then 1 else 0 end) qt_cnt, sum(shp_trf_pc) trf_pcs
                    FROM v_ddt_dtl t
                    where FLT_KEY=#fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
                                and AWB_DATE =TO_DATE(#awbDate#,'DDMONYY')  AND awb_no = #awbNo#
                    group by flt_key, flt_date, awb_no, awb_date) d
        join imp_car_shp s on d.flt_key = s.flt_key and d.flt_date = s.flt_date and d.awb_no = s.awb_no and d.awb_date = s.awb_date
        where tt_cnt > 0 and if_bulk_cnt = 0 and qt_cnt = 0 and d.trf_pcs = s.manifest_pcs + s.cir_pcs)
        	]]>
	</select>
	
	
	<select id="getForAWBTrf"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	<![CDATA[				
	select count(1)
        from (select  tt_cnt, qt_cnt, trf_pcs
              from (select flt_key, flt_date, awb_no, awb_date, sum(case when shp_trf_type = 'TT' or trf_type = 'IF'  then 1 else 0 end) tt_cnt,
                        sum(case when shp_trf_type = 'IF' and cntg_flt_key is null then 1 else 0 end) if_bulk_cnt,
                        sum(case when shp_trf_type in ('QT') then 1 else 0 end) qt_cnt, sum(shp_trf_pc) trf_pcs
                    FROM v_ddt_dtl t
                    where FLT_KEY=#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
                                and AWB_DATE =TO_DATE(#awbDate#,'DDMONYY')  AND awb_no = #awbNo#
                    group by flt_key, flt_date, awb_no, awb_date) d
        join imp_car_shp s on d.flt_key = s.flt_key and d.flt_date = s.flt_date and d.awb_no = s.awb_no and d.awb_date = s.awb_date
        where tt_cnt > 0 and if_bulk_cnt = 0 and qt_cnt = 0 and d.trf_pcs = s.manifest_pcs + s.cir_pcs)
        	]]>
	</select>
	
	<select id="checkCargoIrregularity"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	select count(1) FROM IMP_CAR_SHP  WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND CIR_PROC_USER IS NOT NULL
    </select>     
	
	
	<insert id="insuldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_AWB_STRG_DAM_COND
		  (AWB_NO, 
		   AWB_DATE, FLT_KEY, FLT_DATE, 
		   DAM_COND, DAM_PCS, DAM_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#awbNo#,
		   #awbDate#, #flightKey#, #flightDate#,
		   #damConditionCode#, #pieces#, '0',
		   #modUser#, SYSDATE, #modUser#,
		   SYSDATE  
	)	  
	</insert>	
	
	<delete id="deluldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</delete>	
	
	
	<select id="checkCreateAwbDamCondExists" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>	
	
	<select id="seluldbrkstrgdamcond"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as damPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lastModDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#flightKey#) AND
			damCond.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>


	<update id="upduldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_AWB_STRG_DAM_COND
	SET 
		DAM_PCS = DAM_PCS + NVL(#pieces#,0),
		LM_USER_ID = #modUser#,
		LM_DATE = SYSDATE
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>	
	
	
	
	<select id="checkCreateAwbHawbExists"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM HAWB_INVENTORY
        WHERE SEQ_NO = #seqNo#
        AND HAWB_NO = #houseAWBNo#       
	</select>

	
	
	<select id="checkCreateAwbHawbLocExists"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_HAWB_STRG_DTL hawb
		JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
		AND awb.awb_date = hawb.awb_date
		AND awb.awb_type = #awbType# 
		where hawb.FLT_KEY=#flightKey# and 
		hawb.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and 			
		hawb.HAWB_NO = #houseAWBNo#	     
	</select>	

	
	<insert id="insuldbrkstrghousedetailsinv" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO HAWB_INVENTORY
		  (SEQ_NO, 
		   HAWB_NO, STRG_PCS, STRG_WT, 		  
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#seqNo#,#houseAWBNo#,NVL(#houseAWBPcs#,0),NVL(#houseAWBWt#,0),
		   #modUser#, SYSDATE, #modUser#, SYSDATE  
	)	  
	</insert>
	
	<update id="updhawbinvforcreateawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE HAWB_INVENTORY
	SET 
		STRG_PCS = STRG_PCS + NVL(#houseAWBPcs#,0),
		STRG_WT = STRG_WT + NVL(#houseAWBWt#,0),
		LM_USER_ID = #modUser#,
		LM_DATE = SYSDATE
	WHERE 	
		 SEQ_NO = #seqNo#
         AND HAWB_NO = #houseAWBNo#  		
	</update>
	
<insert id="insuldbrkstrghousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, HAWB_PCS, HAWB_WT, 
	  HAWB_BRKDN_PCS,HAWB_BRKDN_WT,
	  FLT_TYPE, TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#flightDate#,'DDMONYY'), #carrierCode#, #awbPrefix#,
		 #flightKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #houseAWBNo#, 
		 NVL((select hawb.HAWB_PCS from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#houseAWBNo#),'0'),
		  NVL((select hawb.HAWB_WT from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#houseAWBNo#),'0'),
		  NVL(#houseAWBPcs#,0), NVL(#houseAWBWt#,0),
		 'I', 'AS', 'A',    
		#modUser#, SYSDATE, #modUser#, SYSDATE
	)	
	</insert>
	
	<insert id="insuldbrkstrgdamhousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
	  TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#flightDate#,'DDMONYY'), #carrierCode#, #awbPrefix#,
		 #flightKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #houseAWBNo#, NVL(#houseAWBDamPcs#,0), NVL(#houseAWBDamWt#,0), #remark#,'I',
		 'AS', 'A',    
		#modUser#, SYSDATE, #modUser#, SYSDATE
	)  
	</insert>	
	
	<select id="createAWBHawbStrgDtlExists" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">		
		SELECT count(1)
			FROM IMP_HAWB_STRG_DTL 
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  		
	</select> 
	
	 <update id="upduldbrkstrghousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_BRKDN_PCS = HAWB_BRKDN_PCS + NVL(#houseAWBPcs#,0), 
			HAWB_BRKDN_WT = HAWB_BRKDN_WT + NVL(#houseAWBWt#,0), 						
			DAM_RMK = #remark#,		
			DAM_USER = #modUser#,	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>

    <update id="upduldbrkstrgdamhousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 			
			DAM_PCS = DAM_PCS + NVL(#houseAWBDamPcs#,0),
			DAM_WT = DAM_WT + NVL(#houseAWBDamWt#,0),
			DAM_RMK = #remark#,			
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	
	<insert id="insuldbrkstrghousedetailsinvDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO HAWB_INVENTORY
		  (SEQ_NO, 
		   HAWB_NO, STRG_PCS, STRG_WT, 		  
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#seqNo#,#hseAwbNo#,NVL(#hseAwbPcs#,0),NVL(#hseAwbWt#,0),
		   #userID#, SYSDATE, #userID#, SYSDATE  
	)	  
	</insert>
	
	<update id="updhawbinvforcreateawbdesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	UPDATE HAWB_INVENTORY
	SET 
		STRG_PCS = STRG_PCS + NVL(#hseAwbPcs#,0),
		STRG_WT = STRG_WT + NVL(#hseAwbWt#,0),
		LM_USER_ID = #userID#,
		LM_DATE = SYSDATE
	WHERE 	
		 SEQ_NO = #seqNo#
         AND HAWB_NO = #hseAwbNo#  		
	</update>
	
	<select id="checkCreateAwbHawbExistsdesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM HAWB_INVENTORY
        WHERE SEQ_NO = #seqNo#
        AND HAWB_NO = #hseAwbNo#       
	</select>
	
	<!--  Changed for QR -->
	<select id="checkCreateAwbHawbLocExistsdesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_HAWB_STRG_DTL hawb
		JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
		AND awb.awb_date = hawb.awb_date
		where hawb.FLT_KEY=#fltKey# and 
		hawb.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and 		
		hawb.HAWB_NO = #hseAwbNo#	     
	</select>	
	
	 <update id="upduldbrkstrgdamhousedetailsdesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_BRKDN_PCS = HAWB_BRKDN_PCS + NVL(#hseAwbPcs#,0), 
			HAWB_BRKDN_WT = HAWB_BRKDN_WT + NVL(#hseAwbWt#,0), 
			DAM_PCS = '0',
			DAM_WT = '0',
			DAM_RMK = '',			
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	
	
	<insert id="insuldbrkstrgdamhousedetailsDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, HAWB_PCS, HAWB_WT, 
	  HAWB_BRKDN_PCS,HAWB_BRKDN_WT,
	  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
	  TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
		 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #hseAwbNo#,
		  NVL((select hawb.HAWB_PCS from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#hseAwbNo#),'0'),
		  NVL((select hawb.HAWB_WT from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#hseAwbNo#),'0'),	 
		  NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
		 '0', '0', '','I',
		 'AS', 'A',    
		#userID#, SYSDATE, #userID#, SYSDATE
	)  
	</insert>	
		
	<delete id="createAWBDeleteHawbStrgDtl" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		delete from IMP_HAWB_STRG_DTL hawb
		where hawb.FLT_KEY=#flightKey# and 
		hawb.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and	
		exists (select null
				       from   awb
				       where  awb_no = hawb.awb_no
				       and    awb_date = hawb.awb_date
					   and    awb_type = #awbType#)  		
	</delete>	
	
	<select id="getCargoCountForLSPorULD"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) 
		FROM ASV_INVENTORY
		WHERE LSP_NO = #lspULD#		
		OR ULD_KEY = #lspULD#
	</select>
	
	<select id="sqlAlwdSHPCountonLSP" parameterClass="java.lang.String" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code=#PARAM#
	</select>
	
	
	<select id="checkCreateAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM awb_inventory
        WHERE flt_key = #flightKey#
        AND flt_date = TO_DATE(#flightDate#,'DDMONYY')
        AND awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
        AND locn_wt = 0
	</select>
	
	
	<select id="getCreateAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT seq_no seqNo, locn_pcs locnPcs, locn_wt locnWt
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#	   
         <!-- AND AWB_TYPE = #awbType# -->
	     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
	     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
	     AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*')	
	     AND FLT_TYPE  = 'I' 		  
	     AND SRF_NO IS NULL 
	     AND TRM_NO IS NULL 
	     AND CDIF_NO IS NULL    
    </select>      
   
	 <update id="updateCreateAWBPcsWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE awb_inventory SET locn_wt = #locnWt# WHERE seq_no = #seqNo#
	</update>
	
	<update id="updateCreateAWBDamType" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE awb_inventory 
            SET DAM_PCS = NVL(#dmgDclPcs#, 0),
                  DAM_WT =  NVL(#dmgDclWt#,0),  
                  LM_USER_ID = #modUser#,
                  LM_DATE = SYSDATE,
                  DAM_TYPE = #damType# 
                  WHERE seq_no = #seqNo#
	</update>
	
	<select id="getCreateAwbSumRecvPcWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) receivedPieces, SUM(LOCN_WT) receivedWeight FROM AWB_INVENTORY
			WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="getCreateAwbMainfstPCWT"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT car.RECD_PCS receivedPieces, car.RECD_WT receivedWeight, 
		car.MANIFEST_PCS manifPieces, car.MANIFEST_WT manifWeight
		FROM IMP_CAR_SHP car
		JOIN AWB awb ON awb.AWB_NO = car.AWB_NO 
		AND awb.awb_date = car.awb_date
		where 		
		car.AWB_NO = #awbNo# and
		car.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and			
		car.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
		car.FLT_KEY = #flightKey# and		
		car.FLT_TYPE = 'I' and
		car.CAR_CREATED = 'Y'		
	 </select>	
	 
	 <update id="updatecreateawblsplocation" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE LSP_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		LM_DATE = SYSDATE,
		LM_USER_ID = #modUser#
		WHERE LSP_NO = #lspNo# 	
	</update>
	
	<insert id="sqlLSPMovementLog" parameterClass="map">
		INSERT INTO LSP_MOV(SEQ_NO,	TR_TYPE, MOV_DATE,DOC_LINE_NO,	LSP_NO,
		ORG_LOC_CODE,	DEST_LOC_CODE,	STRG_DATE,
		CR_USER_ID,	CR_DATE,	LM_USER_ID,	LM_DATE,	EVENT_ID)
		values (lsp_mov_seq.nextval,#trType#,sysdate,#docLineNo#,#lspNo#,
		#orgLoc#,#destLoc#,sysdate,
		#crUserId#,sysdate,#lmUserId#,sysdate,#eventId#)
	</insert>

	
	<update id="updatecreateawbuldlocation" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE ULD_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>		
		EMPTY_FLG = 'N',
		ULD_FLOW = 'I',
		LM_DATE = SYSDATE,
		LM_USER_ID = #modUser#
		WHERE ULD_KEY = #uldKeyDtl#				
	</update>	
	
<!--  Changed for QR
	<select id="hhtCreateAWBGetHouseDtl"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT 
	  TO_CHAR(FLT_DATE, 'DDMONYY') as flightDate, 
	  FLT_KEY as flightKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
	  S.HAWB_NO as houseAWBNo, M.STRG_PCS as houseAWBPcs, M.STRG_WT as houseAWBWt, 
	  DAM_PCS as houseAWBDamPcs, DAM_WT as houseAWBDamWt, DAM_RMK as remark
	FROM IMP_HAWB_STRG_DTL S
	 join  HAWB_INVENTORY M on S.HAWB_NO = M.HAWB_NO
	WHERE 	
		S.AWB_NO = UPPER(#awbNo#) AND
		S.FLT_KEY = UPPER(#flightKey#) AND
		S.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
		M.SEQ_NO=#seqNo#		
</select>	 -->

	<select id="getCreateAwbSumDamPCWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
			SELECT SUM(DAM_PCS) dampieces, SUM(DAM_WT) damweight FROM AWB_INVENTORY
			WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
	</select>
	
	
	<select id="selcreateawbdamagedetails" 
	parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   awb.AWB_TYPE as awbType,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.DAM_PCS, 0) as damPcs, 
		   NVL(I.DAM_WT, 0) as damweight, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKeyDtl,
       	   i.seq_no seqNo,		   
		   decode(carshp.DAM_PROC_USER, null, NVL(I.DAM_PCS, 0),carshp.DAM_DECL_PCS) as dmgDclPcs, 
		   decode(carshp.DAM_PROC_USER, null, NVL(I.DAM_WT, 0),carshp.DAM_DECL_WT) as dmgDclWt,
		   carshp.FLT_KEY as flightKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as flightDate,
		   carshp.DAM_RMK as remark
			FROM IMP_CAR_AWB carawb
		    JOIN IMP_CAR_SHP carshp  ON carshp.AWB_NO = carawb.AWB_NO
		    AND carshp.AWB_DATE = carawb.AWB_DATE		   
        JOIN AWB awb ON awb.AWB_NO = carshp.AWB_NO AND awb.awb_date = carshp.awb_date
		    JOIN  AWB_INVENTORY I
			   ON carshp.AWB_NO = I.AWB_NO AND
				carshp.AWB_DATE = I.AWB_DATE AND
				carshp.FLT_KEY = I.FLT_KEY AND			
				carshp.FLT_DATE = I.FLT_DATE		
			  AND (NVL(I.DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null) 
	          AND i.awb_no=#awbNo# 	    
            AND i.awb_date = TO_DATE(#awbDate#,'DDMONYY')      			
	      AND i.FLT_KEY=#flightKey#
	      AND i.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
	      AND i.seq_no=#seqNo#
	       <isNotEmpty property="uldKeyDtl">
      			AND  i.uld_key=#uldKeyDtl#
      	 	</isNotEmpty> 
      	  	<isNotEmpty property="lspNo">
      			AND  i.lsp_no=#lspNo#
      	 	</isNotEmpty>   			
	</select>	
	
	<select id="getAWBCRAWBStrgDeskDetails"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">	
		SELECT awb.LOCKED_YN AS awbLockedYN, 
		lok.MISS_YN as awbBlacklistedYN,
		awb.AWB_CLOSED_YN as awbClosedYN,
		awb.CATALOG AS awbCatalog,
		awb.PPK_TYPE awbPPKType
		FROM AWB awb
		LEFT join AWB_LOCK lok ON lok.AWB_NO = awb.AWB_NO and lok.AWB_DATE = awb.AWB_DATE
		WHERE 
		awb.AWB_NO = #awbNo#
		and awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		and awb.AWB_TYPE = #awbType#
	</select>
	
	<!--  Changed for QR
	<select id="getCRAWBStrgDeskAWBTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select DTL.TRF_TYPE
	    FROM DDT_SHP_TRF_DTL DTL
	    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
	    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	    where DTL.TRF_TYPE = 'TT' AND shp.awb_no = #awbNo#			
	</select> -->
	
	<!--  Changed for QR
	<select id="checkCRAWBStrgDeskCargoIrregularity"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
	<![CDATA[
	select count(1)
    FROM DDT_SHP_TRF_DTL DTL
    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    where DTL.TRF_TYPE = 'TT' AND shp.awb_no IN (    
    select  c.awb_no 
	from Imp_CAR_SHP c
	where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND c.CIR_PROC_USER IS NULL
	AND c.Flt_KEY = #fltKey# and c.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	AND not exists (select null from IMP_CAR_AWB where awb_no = c.awb_no and awb_date = c.awb_date and catalog = 'TA'))	
    ]]>
    </select>     -->  
    
     <select id="checkCRAWBStrgDeskAWBForUnknown"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
		SELECT COUNT(1) FROM IMP_CAR_SHP 
		WHERE 
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
		FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')	AND
		(FFM_FLG = 'Y' OR (CAR_CREATED = 'N' AND FFM_FLG='N'))						
	</select> 
	
	
	 <select id="checkAWBForUnknown"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">			
		SELECT COUNT(1) FROM IMP_CAR_SHP 
		WHERE 
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
		FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')	AND
		(FFM_FLG = 'Y' OR (CAR_CREATED = 'N' AND FFM_FLG='N'))								
	</select>
	
	
	<select id="checkCRAWBStrgDeskUldCheckedIn" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.Integer">			
			SELECT COUNT(1)  
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and FLT_KEY = #fltKey# and ULD_KEY=#uldKey#
	</select>
	
	<select id="checkCRAWBStrgDeskBreakDownCompleted" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			BRKDN_COMPL_YN = 'Y' AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and FLT_KEY = #fltKey# and ULD_KEY=#uldKey#
	</select>
	
	<select id="getCRAWBStrgDeskULDHandlingMode" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.String">
		SELECT 
		HANDLING_MODE
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldKey# AND
			FLT_KEY=#fltKey# AND
			FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<select id="getCRAWBStrgDeskAWBType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>

	<select id="getExportAWBCnt"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT count(*) FROM AWB where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and awb_type = 'E' 	
	</select>
	
	<select id="getExportAWBCntHHT"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT count(*) FROM AWB where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and awb_type = 'E' 	
	</select>
	
	
	 <select id="getFltOrig"  parameterClass="map" resultClass="java.lang.String">
		select ORIG  from FLT_OPR WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#				
   	</select>  	   	
   	
    <select id="sqlCheckShcLockValue"  parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from AWB 
		where AWB_NO = #awbNo#
		  and AWB_DATE = #awbDate#
		  and (NVL(SHCLOCK_IND,'N') = 'Y'  	
		  or NVL(FINALLOCK_IND,'N') = 'Y')
   	</select>  	
   
   	 
   	 <update id="updateAWBSHCLockInd"  parameterClass="map">
		update AWB
		set SHCLOCK_IND = 