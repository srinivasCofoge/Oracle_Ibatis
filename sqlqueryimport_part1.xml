<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ImportModule">
	
	<!-- ImportDlvModule_ConfirmBypassRelease [Query added by Srinivas] -->
	<select id="impGetDirectTowList" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select CARR_CODE fltCarr, flt_no fltNo, f.flt_Key fltKey, 
			to_char(f.sch_Date,'DDMONYY') fltDate,
			PKG_COMMON.get_flt_ata(f.FLT_KEY, f.SCH_DATE, 'A')  ata,
			lpad(SCH_time, 4, 0)  sta,
			shp.exp_shp expShpmnt,
			nvl(srf.cfm_shp, 0) cnfrmShpMnt
			from flt_opr f 
			join (select flt_key, flt_date, count(1) exp_shp 
		 	from imp_car_awb a 
		 	join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date and a.BYPASS_REL = 'Y'
		 	join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
		 	group by flt_key, flt_date) shp
		 	on f.flt_key = shp.flt_key and f.sch_date = shp.flt_date
			left join (select flt_key, flt_date, count(1) cfm_shp 
		 	from imp_srf s 
		 	join imp_srf_flt sf on s.srf_no = sf.srf_no 
		 	join imp_car_awb a on a.awb_no = s.awb_no and a.awb_date = s.awb_date and a.BYPASS_REL = 'Y'
		 	join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
		 	where post_date is not null
		 	group by flt_key, flt_date) srf on f.flt_key = srf.flt_key and f.sch_date = srf.flt_date
			where f.flt_type = 'A' and
			f.FLT_KEY = nvl(#fltKey#, f.FLT_KEY) and
			f.sch_date = to_date(#fltDate#,'DDMONYY')
			<isNotEmpty property="fltCarr">
				AND	f.CARR_CODE = #fltCarr#
			</isNotEmpty>
			<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( f.CARR_CODE = #loginCarrier# OR  f.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	  </isNotEmpty>
           </isEmpty>			
	</select>
	
	<select id="Imp_SrfGetHighestSeverityCCcode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CC_CODE FROM (SELECT T1.CC_CODE FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 
		WHERE t1.cc_code = t2.code AND awb_no = #PARAM# AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
		ORDER BY recv_date DESC, priority DESC) where rownum = 1
	</select>
	
	<select id="ccCodeChangedAfterSeverityCC" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT  COUNT(1)
	        FROM IMP_SRF A
	        LEFT JOIN ( SELECT CC_CODE,SRF_NO FROM (SELECT T1.CC_CODE,SRF.SRF_NO FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 ,IMP_SRF SRF
                      WHERE T1.CC_CODE = T2.CODE AND T1.AWB_NO =SRF.AWB_NO AND SRF.SRF_NO=#srfNo#  AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
                      ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1) B on A.SRF_NO = B.SRF_NO
	        WHERE A.SRF_NO=#srfNo# AND (NVL(B.CC_CODE,'*') = NVL(A.AWB_CC_CODE,'*') OR nvl(B.CC_CODE,'NC') = 'NC')
	</select>
	
	<select id="ImpDHLDirectTowBOH" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">	
			select (select nvl(imp_srf_post_yn,'N') from mast_constraint_code where code = A.conCode) as ccPostSRFInd , A.* from 
				(SELECT	a.AWB_NO awbNo, 
				SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisplay,
				to_char(a.awb_date,'DDMONYY') awbDate, 
				s.MANIFEST_PCS maniPcs,   
				s.MANIFEST_WT maniWt, 
				a.AWB_ORIGIN org, 
				a.AWB_DEST dest, a.AWB_PCS awbPcs, a.AWB_WT awbWt, 
				pkg_common.get_awb_splcodes(a.AWB_NO, a.AWB_DATE, 'I') splCode,
				a.CONTENT cont,
				nvl((select 'Y' from imp_srf sr
				join imp_srf_flt sf on sr.srf_no = sf.srf_no
				where sr.status = 'POSTED' and sr.awb_no = a.awb_no and sr.awb_date = a.awb_date 
				and sf.flt_key = s.flt_key and sf.flt_date = s.flt_date and rownum = 1), 'N') relInd,
				s.recd_pcs invPcs,
				s.recd_wt invWt,
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE v.flt_key = s.flt_key and v.flt_date = s.flt_date AND V.AWB_NO = s.AWB_NO 
				 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS conCode
				FROM imp_car_awb a 
				join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date			
				join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
				where s.flt_key = #fltKey# and s.flt_date = to_date(#fltDate#,'DDMONYY')
				and a.BYPASS_REL = 'Y') A
	</select>
	
	<parameterMap id="imp_dhl_direct_tow_map" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>                  
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>              
	<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>             
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 
	<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="USERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="SRFNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>		

	<procedure id="imp_dhl_direct_tow"  parameterMap="imp_dhl_direct_tow_map" >
		{? = call pkg_dhl_direct_tow.FUN_CFM_CARGO_REL(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="CCmap" class="map" >
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CC" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CTMREFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="impCheckCCCode" parameterMap="CCmap" >
		{call prc_get_cc_code(?,?,?,?,?)}
	</procedure>
	
	<select id="checkAWBClosed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select count(1) from AWB where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND AWB_CLOSED_YN = 'Y'					
	</select>
	
	<select id="chkShipBrkDown"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select count(1) from AWB_INVENTORY where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')				
	</select>
	
	<select id="getCatalog"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select CATALOG from imp_car_awb where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ECT_HANDLER in ('DHL', 'DH*')					
	</select>
	
	<select id="getCatalogDtls"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select  catalog as catalog, awb_pcs as awbPcs, awb_wt as awbWt FROM IMP_CAR_AWB where awb_no =#awbNo#  and awb_date =to_date(#awbDate#,'DDMONYY')					
	</select>
	
	<select id="chkCARCreated"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) 
		FROM IMP_CAR_SHP 
		where flt_key =#fltKey# and flt_date =to_date(#fltDate#,'DDMONYY') and awb_no =#awbNo# and CAR_CREATED = 'Y'					
	</select>

<!-- 	pushpa -->
		<select  id="retireiveCSD" parameterClass="cargo.cms.imprt.bo.RetrieveCSDBO" resultClass="cargo.cms.imprt.bo.RetrieveCSDBO">
		<![CDATA[
    	SELECT A.LSP_NO AS csd ,
       A.ULD_KEY AS uldKey,
       A.LOC_CODE    AS loc ,
       A.awb_no      AS awbNo,
       TO_char(A.awb_date,'DDMONYY') as awbDate,
       A.locn_pcs as locnPcs,
       A.locn_wt as locnWt,
       DECODE((select count(1) from MAST_WH_LOC t1, mast_wh_group t2 where t1.wh_group = t2.WH_GROUP and t2.wh_type = 'MHS' and t1.code=A.LOC_CODE),'0','Y','N') AS mhcsInd,
       DECODE((select NVL(Count(1),'0') from uld_inventory where uld_key=A.ULD_KEY and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')),'0','N','Y') as uldLock,
       DECODE((select NVL(Count(1),'0') from lsp_inventory where lsp_no=A.LSP_NO and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')),'0','N','Y') AS lspLock,
       (SELECT TARGET FROM RTRV_MOVE_ORDER WHERE ((STATUS <>'COMPLETED' AND STATUS <> 'CANCELLED') OR STATUS IS NULL)	AND (LSP = UPPER(A.LSP_NO)	OR ULD = UPPER(A.ULD_KEY))) as existStat,
       (case when (SELECT COUNT(1) FROM AWB_INVENTORY C WHERE NVL(C.FLT_TYPE,'A') <> 'E' AND (C.ULD_KEY = A.ULD_KEY OR C.LSP_NO = A.LSP_NO)) > 1 then 'Y' else 'N' end) as mixInd
	FROM awb_inventory A, awb B
	WHERE B.awb_no = A.awb_no and B.awb_date = A.awb_date and B.awb_closed_yn = 'N' and A.awb_no=#awbNo# AND NVL(A.FLT_TYPE,'A') <> 'E'
	]]>
	
	<isEqual property="inclULD" compareValue="N">
				AND	A.ULD_KEY IS NULL
	</isEqual>
	order by lsp_no,uld_key asc
    	</select>

	<update id="updateCfmRlsSeqNo" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE  IMP_CAR_SHP SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		CFM_RLS = #cfmRlsSeqNo# 
		WHERE AWB_NO=#awbNo# AND AWB_DATE =to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY')
	</update>
	
	<select id="getCfmRlsSeqNo"  parameterClass="map"  resultClass="java.lang.Integer" >
			 select CONFRIM_RELEASE_SEQ.NEXTVAL from dual
   	</select>
   	
   	<select id="getBillChrgDtl"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE SRF_NO=(SELECT SRF_NO FROM IMP_CAR_SHP  WHERE AWB_NO= #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY') AND CFM_RLS = #cfmRlsSeqNo#) AND STATUS='PENDING'				
	</select>
	<select id="chkConstrained"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and CONSTRAINT='Y'				
	</select>
	<select id="getSRFForDHL"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		SELECT SRF_NO FROM IMP_CAR_SHP  WHERE AWB_NO= #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY') AND CFM_RLS = #cfmRlsSeqNo#				
	</select>
	<update id="updateImpSRFAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF_AWB_INVENTORY SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		DLV_PCS = LOCN_PCS,
		DLV_WT = LOCN_WT		
		WHERE srf_no = #srfNo#
	</update>
	<update id="updateImpSRFFlt" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF_FLT SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		INV_PCS = MANIFEST_PCS,
		INV_WT = MANIFEST_WT,
		DLV_PCS = MANIFEST_PCS,
		DLV_WT = MANIFEST_WT 
		WHERE srf_no =  #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="DHLPostSRF" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		POST_DATE = TO_char(SYSDATE,'DDMONYY'),
		POST_TIME =TO_Char(SYSDATE,'HH24MI'),
		POST_USER = #userId#,
		STATUS ='POSTED'
		WHERE srf_no =  #srfNo#
	</update>
	
	<update id="updateImpSrf" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF SET 
	    SRF_PCS = (SELECT SUM(INV_PCS) FROM IMP_SRF_FLT WHERE SRF_NO=#srfNo#),
	    SRF_WT =(SELECT SUM(INV_WT) FROM IMP_SRF_FLT WHERE SRF_NO=#srfNo#),
	    LM_USER_ID=#userId#,
	    LM_DATE = SYSDATE
	    WHERE SRF_NO = #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="updateImpCarShpAfterByPass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
			UPDATE IMP_CAR_SHP
			SET   RECD_PCS	  =	manifest_pcs,
		    RECD_WT	  =  manifest_wt,
		    LM_USER_ID =  #userId#, 
			LM_DATE   =  sysdate
			WHERE  AWB_NO	  =   #awbNo#  AND
		    AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND
		    FLT_KEY = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<!--  Changed for QR -->
	<insert id="insertAwbInventoryForConfirmBypass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		INSERT INTO awb_inventory (seq_no,awb_no,awb_date,flt_key,flt_date,flt_type,carr_code,loc_code,locn_pcs,locn_wt,cr_user_id,cr_date,lm_user_id,lm_date) 
		VALUES (AWB_INV_SEQ.NEXTVAL,#awbNo#,#awbDate#,#fltKey#,#fltDate#,'I',substr(#fltKey#, 0, 2),#locCode#,
  		(SELECT MANIFEST_PCS FROM IMP_CAR_SHP WHERE AWB_NO	= #awbNo# AND AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND  
  			FLT_KEY = UPPER(#fltKey#) AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')),
  		(SELECT MANIFEST_WT FROM IMP_CAR_SHP WHERE AWB_NO =  #awbNo#  AND  AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = UPPER(#fltKey#) 
  			AND  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')),#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<delete id="deletetAwbInventoryFromConfirmBypass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
			delete awb_inventory 
			WHERE  AWB_NO	  =   #awbNo#  AND
		    AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND
		    UPPER(FLT_KEY) = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</delete>
	
	<select id="getAgentDetailsForPosting" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO"  resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select s.agent_id as agentId,(select code_desc from cust_company where code = s.agent_id)  as agentName,s.charge_status as status  
		from imp_srf s where srf_no = #srfNo#
	</select>
	
	<select id="chkPostSrfAllowed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and imp_srf_post_yn='Y'				
	</select>
	
	<select id="chkSrfAllowed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and IMP_SRF_ISS_YN='Y'				
	</select>
	
	<!--  Changed for QR -->
	<select id="chkDIRForConfirmByPassRelease"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select doc_disc from imp_car_shp where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')
		AND flt_key=#FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY')			
	</select>
	
	<!--  Changed for QR -->
	<select id="chkCIRForConfirmByPassRelease"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select cir_pcs from imp_car_shp where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')
		AND flt_key=#FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY')			
	</select>
	
	<!-- ImportDlvModule_ConfirmBypassRelease [Query ended by Srinivas] -->	
		
	<!-- ImportDlvModule_AssignCheckerSRFDetails [Query added by Srinivas] -->
	
	<select id="getSRFDetails"  parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="cargo.cms.imprt.bo.AsgnChkSrfBO">
		SELECT 
		ISF.AWB_NO AS awbNo,
		to_char(ISF.AWB_DATE,'DDMONYY')AS awbDate,
		T.TRUCK_NO AS truckNo,
		T.trip_id AS tripId,
		ISF.SRF_NO AS srfNo,
		ISF.SRF_PCS AS srfPcs,
		ISF.SRF_WT AS srfWt,
		ISF.COLL_NAME AS collName,
		ISF.COLL_HKID AS collHkid 
		FROM IMP_SRF ISF 
		LEFT JOIN IMP_TRUCK_SRF ITS on ITS.SRF_NO = ISF.SRF_NO
		LEFT JOIN TRUCK_TRIP T ON T.TRIP_ID = ITS.TRIP_ID and CLOSED = 'N'
		WHERE
		ISF.SRF_NO = NVL(#srfNo#, ISF.SRF_NO)
		and NVL(T.TRUCK_NO, '*') = NVL(#truckNo#, NVL(T.TRUCK_NO, '*'))
		and ((ISF.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
			and ISF.AGENT_ID = #loginCustNo#)
			OR 
			exists (SELECT null FROM CUST_AGENT_AUTH_REP 
					WHERE CUST_NO = ISF.AGENT_ID and ISF.AGENT_ID = #loginCustNo# AND AUTH_REP_ID =(SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)))
	</select>
	
	<select id="getHkidForPerson" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.String">			
		select AUTH_REP_ID as authRepId from CUST_AGENT_AUTH_REP 
		where AUTH_REP_NAME =  #newCollName# AND CUST_NO = (SELECT CUST_NO FROM SEC_USER WHERE CODE = #loginUser#) and rownum = 1
	</select>
	
	<select id="fetchSrfDtlsTCStatus" parameterClass="map" resultClass="java.lang.String">
		select TC_IND from MAINTAIN_TC WHERE FUNCTION_NAME = #functionName# AND TC_ID = (select MAX(TC_ID) from MAINTAIN_TC where FUNCTION_NAME = #functionName#)
	</select>
	  
	<!--  Changed for QR -->
  	<select id="checkAuthPerson" parameterClass="map" resultClass="java.lang.String">
		SELECT count(1) from IMP_SRF ISF where ISF.SRF_NO = #srfNo# and  
			(ISF.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
			OR 
			exists (SELECT null FROM CUST_AGENT_AUTH_REP 
					WHERE CUST_NO = ISF.AGENT_ID AND AUTH_REP_ID =(SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)))
	</select>
	
	<!--  Changed for QR
	<select id="checkLoginUser" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP
    	INNER JOIN IMP_SRF ISF ON ISF.AGENT_ID = CUST_AGENT_AUTH_REP.CUST_NO OR ISF.AUTH_REP_ID = CUST_AGENT_AUTH_REP.AUTH_REP_ID
    	WHERE CUST_AGENT_AUTH_REP.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
	</select> -->
	    
	<select id="checkSRFExp"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[ SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  SRF_EXPY_DATE < sysdate	]]>				
	</select>
	
	<select id="chkCollPersonBlackListed"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from cust_agent_auth_rep where black_listed = 'Y' and auth_rep_name = #newCollName#			
	</select>
	
	
	<select id="checkSRFVerified"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  VERIFIED = 'Y'					
	</select>
		
	<select id="chkAssgnCompl" parameterClass="java.lang.String" resultClass="java.lang.String">			
		SELECT COUNT(1) FROM  IMP_TRUCK_SRF WHERE  ASSG_COMP = 'Y' AND SRF_NO = #srfNo# 
	</select>
	
	<select id="getBookHrs" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.String">			
		SELECT to_char(IB.BKG_SLOT_DATE,'DDMONYY HH24MI') FROM IMP_BOOKING IB 
    	INNER JOIN IMP_BOOKING_DTL IBD ON IB.BOOKING_NO =IBD.BOOKING_NO AND IBD.AWB_NO = #awbNo# AND IBD.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND IBD.SRF_NO = #srfNo#
   		WHERE  #newTruckNo# IN (TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,TRUCK6)
	</select>
	
	<select id="getPlusXHrs" parameterClass="java.lang.String" resultClass="java.lang.String">			
		 select to_char((to_date(#bkDate#,'DDMONYY HH24MI') + (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'ASGN_CHKER_BOOK')/24 ),'DDMONYY HH24MI') as plusXHrs from dual
	</select>
	
	<select id="chkBkHrs" parameterClass="map" resultClass="java.lang.String">			
		SELECT count(1) FROM dual WHERE SYSDATE BETWEEN TO_DATE(#bkDate#,'DDMONYY HH24MI')  
    	AND TO_DATE(#plusXHrs#,'DDMONYY HH24MI') 
	</select>
	
	<!--  Changed for QR -->
		<update id="updateSRFDetails" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO">	
				UPDATE IMP_SRF 
					SET 
					COLL_NAME = NVL(#newCollName#,COLL_NAME),
					COLL_HKID = NVL(#newCollHkid#,COLL_HKID),
          			TRUCK_NO  = NVL(#newTruckNo#,TRUCK_NO),
					LM_DATE   = SYSDATE,
					LM_USER_ID =  #loginUser#
				WHERE SRF_NO = UPPER(#srfNo#)
	</update>
		 
 	<delete id="deleteTruck" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		DELETE IMP_TRUCK_SRF  WHERE SRF_NO = #srfNo# AND TRIP_ID = #tripId#
	</delete>
	
	<delete id="deleteTruckOnSRF" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		DELETE IMP_TRUCK_SRF  WHERE SRF_NO = #srfNo#
	</delete>
	
	<insert id="insertUpdatedTruck" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		 INSERT INTO IMP_TRUCK_SRF (
    	 TRIP_ID,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
    	 values ((select t.trip_id FROM IMP_SRF ISF 
    	 inner join truck_trip t on t.truck_no = isf.truck_no 
    	 WHERE ISF.SRF_NO = #srfNo# AND CLOSED = 'N'),
   		 #srfNo#,
  		 #loginUser#,
    	 sysdate,
    	 #loginUser#,
    	 sysdate)
	</insert>
		
	<!-- ImportDlvModule_AssignCheckerSRFDetails [Query ended by Srinivas] -->
	
	
	<!-- ImportDlvModule_REAssignCheckerSRFDetails [Query added by Srinivas] -->
	
	<select id="getSRFList"  parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="cargo.cms.imprt.bo.AsgnChkSrfBO">
		SELECT distinct
          ISF.AWB_NO AS awbNo,
          to_char(ISF.AWB_DATE,'DDMONYY')AS awbDate,
          T.TRUCK_NO AS truckNo,
          T.trip_id as tripId,
          ISF.SRF_NO AS srfNo,
          ISF.SRF_PCS AS srfPcs,
          ISF.SRF_WT AS srfWt,
          ISF.COLL_NAME AS collName,
          ISF.COLL_HKID AS collHkid 
          FROM IMP_SRF ISF 
          left JOIN IMP_TRUCK_SRF ITS on ITS.SRF_NO = ISF.SRF_NO
          left JOIN TRUCK_TRIP T ON T.TRIP_ID = ITS.TRIP_ID and CLOSED = 'N'
          WHERE
          ISF.SRF_NO = NVL(#srfNo#, ISF.SRF_NO)
          AND NVL(T.TRUCK_NO, '*') = NVL(#truckNo#, NVL(T.TRUCK_NO, '*'))
	
	</select>
		
	<select id="chkSRFExp"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[ SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  SRF_EXPY_DATE < sysdate	]]>				
	</select>
	
	<select id="checkSRFPosted"  parameterClass="java.lang.String" resultClass="java.lang.String">
		  SELECT count(1) from IMP_SRF where SRF_NO = #srfNo# AND STATUS = 'POSTED'					
	</select>
	
	<update id="updSRFDetails" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO">	
				UPDATE IMP_SRF 
					SET 
          			TRUCK_NO  = #newTruckNo#,
					LM_DATE   = SYSDATE,
					LM_USER_ID =  #loginUser#
				WHERE SRF_NO = #srfNo#
	</update>
	<select id="chksrfprinted" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.Integer">			
		 select count(1) from imp_srf where srf_no=#srfNo# and PRINT_IND = 'Y'
	</select>
	<select id="chkValidTrk"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) from truck_trip WHERE TRUCK_NO=#truckNo# and closed='N'					
	</select>
	
	<select id="chkSRFAssignedToTrk"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRIP_ID IN 
		(SELECT TRIP_ID FROM IMP_TRUCK_SRF WHERE SRF_NO=#srfNo#)
		and CLOSED = 'N'					
	</select>
		
	<!-- ImportDlvModule_REAssignCheckerSRFDetails [Query ended by Srinivas] -->
	
	
	
	<!-- ImportDlvModule_NoBreakInventory [Query added by Srinivas] -->
	
	<select id="checkUldKeyForInv"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from uld_inventory where ULD_KEY = #uldKey#				
	</select>
	
	<select id="checkUldKeyForNoBrk"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from uld_inventory where ULD_KEY = #uldKey# and HANDLING_MODE = 'NBK'					
	</select>
	
	<select id="fetchFltDtls"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InventoryUpdateBO">
		select ULD_KEY uldKey,FLT_KEY as fltKey, to_char(FLT_DATE,'DDMONYY') as fltDate,LOC_CODE locCode from uld_inventory where ULD_KEY = #uldKey#					
	</select>
	
			<!-- changed on 16MAY11 FOR uat bug #993 -->	
	<select id="fetchInvDtls"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InventoryUpdateBO">
		select AWB_NO as awbNo,to_char(AWB_DATE,'DDMONYY') as awbDate,LOCN_PCS as locPcs,  LOCN_WT locWt,SEQ_NO as seqNo,FLT_KEY as fltKeyList,
		to_char(FLT_DATE,'DDMONYY') as fltDateList,FLT_TYPE as fltTypeList from AWB_INVENTORY where ULD_KEY = #uldKey#	 and SRF_NO is null					
	</select>
	
	<update id="updateInventoryAWb" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE AWB_INVENTORY 
					SET 
					LOCN_PCS = NVL(#recdPcs#,0),
					LOCN_WT =  NVL(#recdWt#,0),
					LM_DATE =   SYSDATE,
					LM_USER_ID = #lmUserId#,
					REF_AWB_EVENT = 'NBULD'
				WHERE 	
				SEQ_NO=#seqNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="updateInventory" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE IMP_CAR_SHP 
					SET 
					RECD_PCS =NVL(RECD_PCS,0)-NVL(#locPcs#,0)+NVL(#recdPcs#,0),
					RECD_WT =  NVL(RECD_WT,0)-NVL(#locWt#,0)+NVL(#recdWt#,0),
					NO_BRK_YN = 'Y',
					LM_DATE =   SYSDATE, 
					LM_USER_ID = #lmUserId#
				WHERE 	
				AWB_NO = UPPER(#awbNo#) AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
				and FLT_KEY=#fltKeyList# and FLT_DATE = #fltDateList#
	</update>
	
	<!--  Changed for QR -->	
	<update id="updateLock" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE AWB 
					SET 
					LOCKED_YN = 'Y',
					LM_USER_ID = #lmUserId#,
					LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#) AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</update>	

	<update id="insertNbkEvents" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , 'NBKUPD', (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = 'NBKUPD'), #fltKeyList#,  TO_DATE(#fltDateList#,'DDMONYY'), 
			  #fltTypeList#, AWB_event_SEQ.nextval
			, #uldKey#, nvl(#recdPcs#,0),nvl(#recdWt#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
	</update>	
	
	<!-- ImportDlvModule_NoBreakInventory [Query ended by Srinivas] -->
	
	<!-- ImportDocModule_CustomerInteraction [Query added by Srinivas] -->
	
		<select id="checkAwnNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT COUNT(1) FROM AWB  where AWB_NO = #awbNo#					
		</select>
	
		<select id="customerInteractionDtls" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			select 
				 cust.awb_no AS awbNo,
				 to_char(cust.awb_date,'DDMONYY') as awbDate,
         		 cust.status as status,
         		 cust.contact_no as contNumber,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		 	 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 cust.follow_up_action AS actionReq,
    			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
    			 cust.CR_USER_ID AS createdBy,
    			 cust.comp_by AS complBy,
    			 TO_CHAR(cust.comp_date,'DDMONYY') AS complDate,
     			 cust.remarks AS remarks    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo# 
      			 <isNotEmpty property="awbDate">
      			 AND cust.AWB_DATE = #awbDate# 
      			 </isNotEmpty>
      			 <isNotEmpty property="status">
      			 		AND cust.STATUS = #status#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND to_date(to_char(cust.int_date,'DDMONYY HH24MI'),'DDMONYY HH24MI') between to_Date(#arrDateHm#,'DDMONYY HH24MI') and to_Date(#arrDateToHm#,'DDMONYY HH24MI')
						</isNotEmpty>
      			 </isNotEmpty>
      			 <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                        </isNotEmpty>
                        <isEmpty property="sortOrder.sortField">
                        contDate
                        </isEmpty>
            </dynamic>   
      			  
			</select>
			<select id="customerInteractionDtlsCOUNT" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="java.lang.Integer">
			select 
				 count(*)    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo# 
      			 <isNotEmpty property="status">
      			 		AND cust.STATUS = #status#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND to_date(to_char(cust.int_date,'DDMONYY HH24MI'),'DDMONYY HH24MI') between to_Date(#arrDateHm#,'DDMONYY HH24MI') and to_Date(#arrDateToHm#,'DDMONYY HH24MI')
						</isNotEmpty>
      			 </isNotEmpty> 
			</select>
			
			<select id="custIntDtlsUpdated" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			select 
				 cust.awb_no AS awbNo,
				 to_char(cust.awb_date,'DDMONYY') as awbDate,
         		 cust.status as status,
         		 cust.contact_no as contNumber,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		     (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 cust.follow_up_action AS actionReq,
    			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
    			 cust.CR_USER_ID AS createdBy,
    			 cust.comp_by AS complBy,
    			 TO_CHAR(cust.comp_date,'DDMONYY') AS complDate,
     			 cust.remarks AS remarks    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo#
      			 <isNotEmpty property="awbDate">
      			 AND cust.AWB_DATE = #awbDate#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND cust.int_date between to_Date(#arrDateHm#,'DDMONYY HH24MI') and SYSDATE
						</isNotEmpty>
      			 </isNotEmpty>
      			 <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>   
			</select>
			<select id="custIntDtlsUpdatedCOUNT" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="java.lang.Integer">
			select 
				 count(*)   
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo#
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND cust.int_date between to_Date(#arrDateHm#,'DDMONYY HH24MI') and SYSDATE
						</isNotEmpty>
      			 </isNotEmpty>
			</select>
			
			<insert id="updateCustInter" parameterClass="cargo.cms.imprt.bo.CustInterUpdateBO">
				INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,AWB_DATE,STATUS,CONTACT_NO,TR_TYPE)
				VALUES (UPPER(#awbNo#),#purpose#, #interactMode#, #contName#,to_date(#custDateHm#,'DDMONYY HH24MI'),to_date(#follDateToHm#,'DDMONYY HH24MI'),#fallowUpAction#, #remarks#,SYSDATE,SYSDATE,#crUserId#,#lmUserId#,#awbDate#,#status#,#contNumber#,'CUINT')  
		 	</insert>
		 		
		<select id="getHrsMins"  parameterClass="map"  resultClass="java.lang.String" >
			  SELECT UPPER(TO_CHAR(SYSDATE,'HH24MI')) FROM DUAL
   		</select>
   			
		<select id="imp_getdateAndTime"  parameterClass="map"  resultClass="java.lang.String" >
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY HH24MI')) FROM DUAL
   		</select>	
	
		<!--  Changed for QR -->
   		<select id="customerPendingAction" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			
			select
			     cust.awb_no AS awbNo,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		 	 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
     			 TO_CHAR(cust.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
     			 cust.REMARKS AS remarks,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.follow_up_action AND CODE_TYPE = 'FOLLOW_UP_ACTION') AS fallowUpActionDesc,
     			 cust.follow_up_action AS fallowUpAction
           		 FROM CUST_INTERACTION cust
           		 WHERE
           		 (cust.FOLLOW_UP_DATE &gt;= TO_DATE(#fallowUpDate#||'0000','DDMONYYHH24MI') AND cust.FOLLOW_UP_DATE &lt;= TO_DATE(#fallowUpDate#||'2359','DDMONYYHH24MI'))
           		 AND COMP_DATE IS NULL
      			 <isNotEmpty property="fallowUpAction">
      			 		AND cust.FOLLOW_UP_ACTION = #fallowUpAction#
      			 </isNotEmpty>
      			 <isNotEmpty property="purpose">
      			 		AND cust.int_purpose = #purpose#
      			 </isNotEmpty>
      			 ORDER BY fallowUpDate
			</select>
			
			<!--  Changed for QR -->
			<update id="updateCustInterPend" parameterClass="map">	
				UPDATE CUST_INTERACTION 
					SET 
					REMARKS =	#newremarks#,
      				LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#)  AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
			</update>
			
			<!--  Changed for QR -->
			<update id="updateAsCompl" parameterClass="map">	
				UPDATE CUST_INTERACTION 
					SET 
					REMARKS =	#newremarks#,
      				COMP_DATE =   SYSDATE,
      				COMP_BY =  #complBy#,
      				LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#)  AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
			</update>
		<!-- ImportDocModule_CustomerInteraction [Query Ended by Srinivas] -->

<!-- Maintain CIR starts  [Srinivas] -->
<select id="getShipmentIrrList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
					 resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		
		SELECT       
				carawb.AWB_NO as awbNo,
				carawb.AWB_PRFX as awbPrefix,
			    carawb.AWB_PCS as awbPcs,   
				carawb.AWB_WT as awbWt,
				carawb.AWB_DEST as awbDest,
				carawb.CONTENT as content,      
				carawb.CATALOG as catalog,     
				carawb.AWB_CLOSED as awbClosed,
			    carawb.PPK_TYPE as ppkType,
			    carshp.PPK_TYPE as manPpkType,
			    carshp.DAM_PCS as damPcs,       
				carshp.DAM_WT as damWt,      
				carshp.MANIFEST_PCS as manifestPcs,
			    carshp.MANIFEST_WT as manifestWt,        
				(carshp.RECD_PCS+nvl(tt_pcs,0)) as recdPcs,      
				(carshp.RECD_WT+nvl(tt_wt,0)) as recdWt, 
				TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,  
				TO_CHAR(carshp.LM_DATE, 'DDMONYY HH24:MI:SS') as lmDate,      
				case when CIR_PROC_USER is not null then CIR_PCS else abs((carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS) end as cirPcs,     
				case when CIR_PROC_USER is not null then CIR_PCS_TYPE else case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS > 0 then 'SP' else case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS < 0 then 'SL' else null end end end as cirPcsType,        
				case when CIR_PROC_USER is not null then CIR_WT else abs((carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT) end as cirWt,     
				case when CIR_PROC_USER is not null then CIR_WT_TYPE else case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT > 0 then 'SP' else case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT < 0 then 'SL' else null end end end as cirWtType,     
			    (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS as actCirPcs,     
				case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS > 0 then 'SP' else 'SL' end as actCirPcsType,        
				(carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT as actCirWt,     
				case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT > 0 then 'SP' else 'SL' end as actCirWtType,      
				CIR_BULK_WT as cirBulkWt,     
				CIR_BUP_WT as cirBupWt, 
				CIR_RMK as cirRmk, 
				CIR_RMK as oldCirRmk,    
				CIR_PROC_USER as cirProcUser,        
				TO_CHAR(carshp.CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,        
				ca.HDLG_AGENT as accsHandler,        
				carawb.CONSOLE_IND as cnsl,         
				carshp.DAM_REF_NO as damRefNo,       
				carshp.FLT_KEY as fltKey,       
				to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,   
				carawb.PPK_TYPE as ppkType  ,
				CASE WHEN ABS(MANIFEST_PCS - (carshp.RECD_PCS+nvl(tt_pcs,0))) != CIR_PCS AND CIR_PROC_USER is not null AND  CIR_PROC_DATE is not null THEN 'R' ELSE 'B' END AS pcDiff ,
  				CASE WHEN ABS(MANIFEST_WT - (carshp.RECD_WT+nvl(tt_wt,0))) != CIR_WT AND CIR_PROC_USER is not null AND  CIR_PROC_DATE is not null THEN 'R' ELSE 'B' END AS wtDiff,
				PKG_COMMON.get_flt_ata(carshp.FLT_KEY, carshp.FLT_DATE, 'A') AS actTime,
				(SELECT uld.handling_mode from uld_inventory uld,awb_inventory inv where carawb.awb_no=inv.awb_no and carawb.awb_date=inv.awb_date and inv.uld_key=uld.uld_key and uld.handling_mode='NBK' and rownum=1) noBreakSts,
       			decode((select COUNT(1) from v_ddt_dtl where awb_no=carawb.AWB_NO and awb_date=carawb.awb_date and flt_key=#fltKey# and 
       			 flt_date=TO_DATE(#fltDate#,'DDMONYY') and shp_trf_type in ('TT','IF')),0,'','TT') AS trfType,
       			(SELECT BD_COMPLETE FROM CST_SUBM  where BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND 
          			FLT_KEY = carshp.FLT_KEY AND FLT_DATE = carshp.FLT_DATE	AND FLT_TYPE = 'I' and send_status='A' and rownum = 1) AS bdComplete  
				FROM IMP_CAR_AWB carawb
				JOIN IMP_CAR_SHP carshp ON carshp.AWB_NO = carawb.AWB_NO AND carshp.AWB_DATE = carawb.AWB_DATE
				LEFT JOIN CST_AWB CA ON carshp.AWB_NO = CA.AWB_NO AND carshp.AWB_DATE = CA.AWB_DATE AND carshp.FLT_KEY = CA.FLT_KEY AND carshp.FLT_DATE = CA.FLT_DATE
				LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
				WHERE BYPASS_REL = 'N' and  (
				(carshp.RECD_PCS+nvl(tt_pcs,0)) != MANIFEST_PCS 
				or (carshp.RECD_WT+nvl(tt_wt,0)) != MANIFEST_WT 
				or CIR_PROC_USER is not null  
				or exists (select null from IMP_HAWB_STRG_DTL where AWB_NO = carshp.AWB_NO AND AWB_DATE = carshp.AWB_DATE AND FLT_DATE = carshp.FLT_DATE AND  FLT_KEY = carshp.FLT_KEY  
        						AND  (HAWB_BRKDN_PCS != HAWB_PCS or HAWB_BRKDN_WT != HAWB_WT)
        						AND  not exists (
		                         select null from v_ddt_dtl  where shp_trf_type = 'TT'  
		                         AND AWB_NO = carshp.AWB_NO AND AWB_DATE = carshp.AWB_DATE AND FLT_DATE = carshp.FLT_DATE AND  FLT_KEY = carshp.FLT_KEY) ) 
        			) 
        			AND	(carshp.CAR_CREATED = 'Y' or (carshp.RECD_WT+nvl(tt_wt,0)) > 0) and 
					carshp.FLT_KEY = #fltKey# AND  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			]]>	
			<dynamic>
				<isNotEmpty prepend="AND" property="awbNo">
					carshp.AWB_NO = #awbNoDisp#
				</isNotEmpty>
			</dynamic>
			ORDER BY carshp.AWB_NO					
	</select>
	
	<insert id="updateBatchInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
				INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,AWB_DATE,STATUS,CONTACT_NO,TR_TYPE)
				VALUES (UPPER(#awbNo#),'','Ph', #contName#,to_date(#custDateHm#,'DDMONYY HH24MI'),'','', #remarks#,SYSDATE,SYSDATE,#createdUserId#,#createdUserId#,#awbDate#,#status#,#contNumber#,'CUINT')  
</insert>
	
<insert id="updateBatchContactInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
UPDATE CUST_CONTACT SET
				Email1= #email1#,Email2 = #email2# ,Email3 = #email3# ,Email4 = #email4# ,Email5 = #email5# ,
						fax1 = #fax1# ,fax2 = #fax2# ,fax3 = #fax3# ,fax4 = #fax4# ,fax5 = #fax5#,
						 LM_USER_ID = #createdUserId# ,LM_DATE = sysdate 
						WHERE CUST_NO = #customerNo#  and CONTACT_TYPE = #type#	
</insert>

<insert id="insertBatchContactInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3, FAX4, FAX5, 
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values((SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName# AND ROWNUM=1),#type#,#email1#,#email2#,#email3#,#email4#,#email5#,
				#fax1#,#fax2#,#fax3#,#fax4#,#fax5#,#createdUserId#,sysdate,#createdUserId#,sysdate)
</insert>

<insert id="updateNotificationInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
UPDATE IMP_CAR_SHP SET NOA_AWB_IND = 'Y',NOTF_AWB_SENT_DATE = SYSDATE, NOTF_AWB_SENT_TIME=TO_CHAR(SYSDATE,'HH24MI'),LM_USER_ID=#createdUserId#,LM_DATE=SYSDATE,TR_TYPE='STAN' WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND FLT_KEY=#printfltKey# AND FLT_DATE=#printfltDate#
</insert>
	
	<select id="checkForTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	  select COUNT(1) from v_ddt_dtl where flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and (shp_trf_type='TT' or trf_type='IF')					
	</select>
	
	<select id="checkAccsCompl"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM CST_SUBM  where BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	AND FLT_TYPE = 'I' and SEND_STATUS = 'A'					
	</select>
	
	<!--  Changed for QR -->
	<select id="checkForNBK"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select COUNT(1) from imp_car_shp shp 
		join awb_inventory inv on shp.awb_no=inv.awb_no and shp.awb_date=inv.awb_date and shp.flt_key = inv.flt_key and shp.flt_date= inv.flt_date			
		join uld_inventory uld on inv.uld_key=uld.uld_key and uld.handling_mode='NBK'
		where shp.flt_key = #fltKey# and shp.flt_date= TO_DATE(#fltDate#,'DDMONYY') 					
	</select>
	
	<select id="getAwbDateFromAwb"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(awb_date,'DDMONYY') as awbDate
           from (select awb_date from   awb  where  awb_no = #awbNo# and awb_closed_yn = 'N' order by cr_date desc)
           where rownum = 1
	</select>	

	<!--  Changed for QR -->	
	<select id="chkShpDlvlAwb"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		
		SELECT NVL(count(1),0)
			FROM IMP_SRF s
			JOIN IMP_SRF_FLT sf on sf.SRF_NO = s.SRF_NO
			WHERE	s.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND
			s.AWB_NO	 = #awbNoDisp#  AND
			sf.FLT_KEY	 = #fltKey# AND
			sf.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		<![CDATA[
				((s.SRF_EXPY_DATE >= sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED')
		]]>	
			
	</select>
	
	<select id="chkAwbKnown"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	  SELECT COUNT(1) FROM IMP_CAR_SHP ICS where FFM_FLG='N' and
	   car_created='N' and ICS.AWB_NO = UPPER(#awbNo#) and 
	   awb_date= #awbDate# and flt_key = #fltKey# and flt_date= #fltDate#	
	</select>
		
	<!--  Changed for QR -->
	<select id="checkCarCreated"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM IMP_CAR_SHP ICS where FFM_FLG='Y' and
	  	 car_created='N' and ICS.AWB_NO = UPPER(#awbNo#) and 
	  	 awb_date= #awbDate# and flt_key = #fltKey# and flt_date= #fltDate#
	</select>
	
	<!--  Changed for QR -->
	<update id="updateCar" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
			SET
			CAR_CREATED = 'Y'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = #fltDate# 
	</update>
	
	<!--  Changed for QR -->
	<update id="updateCarAwbCatalog" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_AWB 
			SET CATALOG = NVL(CATALOG,'IG')
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND AWB_DATE = #awbDate#
	</update>
	
	<!--  Changed for QR -->
		<update id="updateCirAwbCatalog" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB 
			SET CATALOG = NVL(CATALOG,'IG')
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND AWB_DATE = #awbDate#
	</update>
	
	<!--  Changed for QR -->
	<update id="updatePcWt" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
			SET
			MANIFEST_PCS = '0',
			MANIFEST_WT = '0'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
		    FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</update>
	
<!--  Changed for QR -->	
<select id="getHawbCirlist"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
SELECT 
  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
  S.HAWB_NO as hseAwbNo, S.HAWB_PCS as hseAwbPcs, S.HAWB_WT as hseAwbWt, 
  S.HAWB_PCS as hseAwbPcsHidden, S.HAWB_WT as hseAwbWtHidden, 
  HCIR_PCS as hcirPcs, HCIR_PCS as oldHcirPcs,HCIR_PCS_TYPE as hcirPcsType, HCIR_WT as hcirWt, 
  HCIR_WT_TYPE as hcirWtType, 
  HCIR_RMK as hcirRmk, HCIR_RMK as oldHcirRmk,HCIR_USER as hcirUser, TO_CHAR(HCIR_DATE, 'DDMONYY HH24:MI') as hcirDate,
  SEC_CHECK as SC, HAWB_BRKDN_PCS as hawbBrkdnPcs, HAWB_BRKDN_WT as hawbBrkdnWt, 
  CASE WHEN ABS(S.HAWB_PCS  - S.HAWB_BRKDN_PCS) != S.HCIR_PCS  THEN 'R'  ELSE 'B'  END AS hpcDiff ,
  CASE  WHEN ABS(S.HCIR_WT - S.HAWB_BRKDN_WT) != S.HCIR_WT   THEN 'R'  ELSE 'B'  END AS hwtDiff,	
  'false' as newRecord
FROM IMP_HAWB_STRG_DTL S
LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND
	S.FLT_KEY = UPPER(#fltKey#) AND
	S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
	S.HCIR_USER IS NOT NULL
</select>


<select id="getHeaderForMaintainHouseCIR"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
	 <![CDATA[
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_DEST as awbDest,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   DECODE(CIR_PCS,0,abs(carshp.RECD_PCS - carshp.MANIFEST_PCS),CIR_PCS) as cirPcs,  
      	   DECODE(CIR_WT,0,abs(carshp.RECD_WT - carshp.MANIFEST_WT),CIR_WT) as cirWt,
       	   DECODE(CIR_PCS_TYPE,NULL,(case when carshp.RECD_WT - carshp.MANIFEST_WT > 0 then 'SP' when carshp.RECD_WT - carshp.MANIFEST_WT < 0 then 'SL' else null end),CIR_PCS_TYPE) as cirPcsType,  
       	   DECODE(CIR_WT_TYPE,NULL,(case when carshp.RECD_WT - carshp.MANIFEST_WT > 0 then 'SP' when carshp.RECD_WT - carshp.MANIFEST_WT < 0 then 'SL' else null end),CIR_WT_TYPE) as cirWtType, 
			CIR_BULK_WT as cirBulkWt, 
			CIR_BUP_WT as cirBupWt, 
			CIR_RMK as cirRmk, 
			CIR_PROC_USER as cirProcUser, 
		    TO_CHAR(CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,
		    ca.HDLG_AGENT as accsHandler, 
		    carawb.CONSOLE_IND as cnsl,		
		    carshp.DAM_REF_NO as damRefNo,
		    carshp.FLT_KEY as fltKey,
		    to_char(carshp.FLT_DATE,'DDMONYY') as fltDate, 
			H.HAWB_PCS totalHawbPcs,
			H.HAWB_WT totalHawbWt
	FROM IMP_CAR_AWB carawb
	JOIN IMP_CAR_SHP carshp ON carshp.AWB_NO = carawb.AWB_NO AND carshp.AWB_DATE = carawb.AWB_DATE
	LEFT JOIN CST_AWB CA ON carshp.AWB_NO = CA.AWB_NO AND carshp.AWB_DATE = CA.AWB_DATE AND carshp.FLT_KEY = CA.FLT_KEY AND carshp.FLT_DATE = CA.FLT_DATE
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, SUM(HAWB_PCS) HAWB_PCS, SUM(HAWB_WT) HAWB_WT
		 	  FROM MAST_HAWB GROUP BY AWB_NO, AWB_DATE) H 
		ON H.AWB_NO = carawb.AWB_NO AND H.AWB_DATE = carawb.AWB_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  carshp.AWB_NO = #awbNo# AND
		  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
		]]>
</select>	

<select id="imp_getHawbCirPcsWt"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
	<![CDATA[
		SELECT HAWB_NO hseAwbNo , HAWB_PCS hseAwbPcsHidden, HAWB_WT hseAwbWtHidden
		FROM MAST_HAWB A 
		WHERE A.AWB_NO = #awbNo#
		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	]]>
</select>
	
	<select id="fetchHelpListData"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
		select mh.HAWB_PCS hseAwbPcs,
               mh.HAWB_WT hseAwbWt,
               NVL(bd.BD_PCS,'0') hawbBrkdnPcs,
               NVL(bd.BD_WT,'0') hawbBrkdnWt
               from mast_hawb mh
               LEFT JOIN (SELECT AWB_NO AWB_NO, AWB_DATE AWB_DATE, HAWB_NO HAWB_NO , SUM(NVL(HAWB_BRKDN_PCS,0)) BD_PCS, SUM(NVL(HAWB_BRKDN_WT,0)) BD_WT
               					 FROM IMP_HAWB_STRG_DTL WHERE FLT_KEY = #fltKey#  AND FLT_DATE = #fltDate# group by AWB_NO, AWB_DATE, HAWB_NO)bd
                ON  mh.awb_no = bd.awb_no and mh.awb_date = bd.awb_date and mh.hawb_no = bd.hawb_no		
               WHERE mh.AWB_NO = #awbNo# and mh.AWB_DATE = #awbDate# AND mh.HAWB_NO = #hawbNo# 
	</select>

	<!--  Changed for QR -->
	<select id="getHawbCirlistDisc"  parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
 		<![CDATA[
 			select a.* from 
	     		(SELECT 
	  				ABS (SUM(S.HAWB_PCS) - SUM(S.HAWB_BRKDN_PCS)) AS totPcs,
	  				ABS (SUM(S.HAWB_WT) - SUM(S.HAWB_BRKDN_WT)) AS totWt,
	  				CASE WHEN (SUM(S.HAWB_BRKDN_PCS) - SUM(S.HAWB_PCS)) > 0  THEN 'SP' ELSE  CASE  WHEN (SUM(S.HAWB_BRKDN_PCS) - SUM(S.HAWB_PCS)) < 0   THEN 'SL'  ELSE NULL  END  END AS totPcsType,
	  				CASE WHEN (SUM(S.HAWB_BRKDN_WT) - SUM(S.HAWB_WT)) > 0  THEN 'SP' ELSE  CASE  WHEN (SUM(S.HAWB_BRKDN_WT) - SUM(S.HAWB_WT)) < 0   THEN 'SL'  ELSE NULL  END  END AS totWtType
	  				FROM IMP_HAWB_STRG_DTL S
  		  	 	WHERE NOT(s.FLT_KEY = UPPER(#fltKey#) and s.flt_date = #fltDate#) AND HAWB_NO = #hseAwbNo# and awb_no = #awbNo# and awb_Date = #awbDate#) a
         	where totPcs > 0 or totWt > 0
  		]]> 
	</select>

	<update id="deleteimpcarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CIR_PCS = '0', 
			CIR_PCS_TYPE = '', 
		    CIR_WT = '0', 
			CIR_WT_TYPE = '', 
			CIR_BULK_WT = '0', 
			CIR_BUP_WT = '0', 
			cir_if_bulk_pcs = '0', 
			cir_if_bulk_wt = '0',  
			CIR_RMK = '', 
			CIR_PROC_USER = '', 
		    CIR_PROC_DATE = '',
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
<update id="deletehwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
		  HCIR_PCS = 0, 
		  HCIR_PCS_TYPE = '', 
		  HCIR_WT = 0,  
		  HCIR_WT_TYPE = '', 
		  HCIR_RMK = '', 
		  HCIR_USER = '', 
		  HCIR_DATE = '',
		  SEC_CHECK = 'N', 
		  HAWB_BRKDN_PCS = 0, 
		  HAWB_BRKDN_WT =0, 	
		  LM_USER_ID = #userId#,
		  LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>	

<select id="validatehawbexistsmaintaincir" 
	parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>	


<update id="updatehwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
		  HAWB_PCS = NVL(#hseAwbPcs#,0), 
		  HAWB_WT = NVL(#hseAwbWt#,0), 
		  HCIR_PCS = NVL(#hcirPcs#,0), 
		  HCIR_PCS_TYPE = #hcirPcsType#, 
		  HCIR_WT = NVL(#hcirWt#,0),  
		  HCIR_WT_TYPE = #hcirWtType#, 
		  HCIR_RMK = #hcirRmk#, 
		  HCIR_USER = #userId#, 
		  HCIR_DATE = SYSDATE,
		  SEC_CHECK = #sc#, 
		  HAWB_BRKDN_PCS = NVL(#hawbBrkdnPcs#,0), 
		  HAWB_BRKDN_WT = NVL(#hawbBrkdnWt#,0), 	
		  LM_USER_ID = #userId#,
		  LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND UPPER(AWB_DATE) = TO_DATE(#awbDate#,'DDMONYY') 
</update>	


<insert id="inserthwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE, 
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  HCIR_PCS, HCIR_PCS_TYPE, HCIR_WT, 
  HCIR_WT_TYPE, 
  HCIR_RMK, HCIR_USER, HCIR_DATE,
  SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT, 	
  TR_TYPE, TR_STATUS,
  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)

VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',
	 #hseAwbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#hcirPcs#,0), #hcirPcsType#, NVL(#hcirWt#,0),
	 #hcirWtType#, 
     #hcirRmk#, #userId#, SYSDATE, 
	 #sc#, NVL(#hawbBrkdnPcs#,0), NVL(#hawbBrkdnWt#,0),
	 'HA', 'A',    
	 #userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>		
	
	<update id="updatecarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 			
			CIR_PCS = NVL(#cirPcs#,'0'), 
			CIR_PCS_TYPE = #cirPcsType#, 
		    CIR_WT = NVL(#cirWt#,'0'), 
			CIR_WT_TYPE = #cirWtType#, 
			CIR_PROC_USER = #userId#, 
			CIR_PROC_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
	
	<select id="getCirOnOtherList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
			   carawb.AWB_NO as awbNo,
			   carawb.AWB_PRFX as awbPrefix,
			   carawb.AWB_PCS as awbPcs,
			   carawb.AWB_WT as awbWt,
			   carawb.AWB_DEST as awbDest,
			   carawb.CONTENT as content,
			   carawb.CATALOG as catalog,
			   carawb.AWB_CLOSED as awbClosed,
			   carawb.PPK_TYPE as ppkType,
			   carshp.DAM_PCS as damPcs, 
			   carshp.DAM_WT as damWt, 
			   carshp.MANIFEST_PCS as manifestPcs,  
			   carshp.MANIFEST_WT as manifestWt,  
			   carshp.RECD_PCS as recdPcs,
			   carshp.RECD_WT as recdWt,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
				
				CIR_PCS as cirPcs, 
				CIR_PCS_TYPE as cirPcsType, 
				CIR_WT as cirWt, 
				CIR_WT_TYPE as cirWtType, 
				CIR_BULK_WT as cirBulkWt, 
				CIR_BUP_WT as cirBupWt, 
				CIR_RMK as cirRmk, 
				CIR_PROC_USER as cirProcUser, 
				TO_CHAR(carshp.CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,
	
				carawb.ACCS_HANDLER as accsHandler, 
				NVL(carawb.CONSOLE_IND,'N') as cnsl,		
				carshp.FLT_KEY as fltKey,
				to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
				PKG_COMMON.get_flt_ata(carshp.FLT_KEY, carshp.FLT_DATE, 'A') AS actTime,
				(SELECT  TR_NO 
					FROM FLT_OPR
					WHERE 
					  FLT_KEY = #fltKey# AND	
					  TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#
					  AND FLT_TYPE = 'A'	
				) as trNo 
				
		FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
		
		WHERE not(UPPER(carshp.FLT_KEY) = UPPER(#fltKey#) AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')) AND
			  carshp.AWB_NO = carawb.AWB_NO AND 
			  carshp.AWB_DATE = carawb.AWB_DATE AND
			   carshp.CIR_PROC_USER IS NOT NULL AND
			  carshp.AWB_NO = #awbNo# AND
			  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
	
	
<update id="updateimpcarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	

		UPDATE IMP_CAR_SHP 
		SET 
			CIR_PCS = NVL(#cirPcs#,'0'), 
			CIR_PCS_TYPE = #cirPcsType#, 
		    CIR_WT = NVL(#cirWt#,'0'), 
			CIR_WT_TYPE = #cirWtType#, 
			CIR_BULK_WT = DECODE(#manPpkType#,'B', NVL(#cirWt#,'0'), 'M', NVL(#cirBulkWt#,'0'), 'P', 0, NVL(#cirWt#,'0')), 
			CIR_BUP_WT = DECODE(#manPpkType#,'B', 0, 'M', NVL(#cirBupWt#,'0'), 'P', NVL(#cirWt#,'0')), 
			CIR_RMK = #cirRmk#, 
			CIR_PROC_USER = #userId#, 
		    CIR_PROC_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCIR'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') = #lmDate# 
	</update>
	
		<select id="getIFBulkCIRPCWT"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.util.HashMap">
		 <![CDATA[
			SELECT  (nvl(ddt.tt_pcs,0) - carshp.RECD_PCS) as PCS,  
       				(nvl(ddt.tt_wt,0) - carshp.RECD_WT) as WT
				FROM IMP_CAR_SHP carshp 				
				LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'IF' and uld_key is NULL) GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
				WHERE ( (nvl(ddt.tt_pcs,0) - carshp.RECD_PCS) > 0 OR (nvl(ddt.tt_wt,0) - carshp.RECD_WT) > 0) 
        		AND carshp.AWB_NO =  #awbNo# AND carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
				AND carshp.FLT_KEY = #fltKey# AND carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			 ]]>
		 </select>
		 
		 <update id="updateIFCIRPCWt" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		 		UPDATE imp_car_shp set cir_if_bulk_pcs = #ifCIRPcs#, cir_if_bulk_wt = #ifCIRWt#, LM_USER_ID = #userId#, LM_DATE = SYSDATE where  AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
					AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		</update>

<!-- Maintain CIR ends  [Srinivas] -->	
 
<!-- delete car queries added by Kamakhya -->
 
<select id="imp_checkAwbNoCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from AWB where AWB_NO = #awbNo#
		]]>
	</select>
	
<parameterMap id="dateMap" class="map" >
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="VAL" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>
	
<parameterMap id="fltCloseMap" class="map" >	
	<parameter property="fltkey" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="flightDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>
	
<parameterMap id="hmGenerateNumberMap" class="map" >
		<parameter property="NUMBER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>

<procedure id="imp_car_getAwbDatePkgExisting" parameterMap="dateMap" >
	{? = call PKG_IMP.FUN_GET_AWBDATE_EXISTING(?,?,?)}
</procedure>
<procedure id="generateNewNumber" parameterMap="hmGenerateNumberMap" >
		{? = call FUN_GET_TR_NO(?)}
</procedure>
	 
<procedure id="call_fun_validate_flt_close" parameterMap="fltCloseMap" >
	{call PKG_IMP.PROC_VALIDATE_FLT_CLOSE(?,?)}
</procedure>
	 
 <delete id="delete_CAR_physical" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
<![CDATA[

DELETE
		FROM IMP_CAR_SHP  
		WHERE	TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey# AND
				FLT_DATE = TO_DATE(#fltDate#)
]]>
</delete>

<!--  Changed for QR -->
<delete id="delete_CAR_physical_From_Awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
<![CDATA[
 DELETE FROM IMP_CAR_AWB WHERE	AWB_DATE = #awbDate# AND AWB_NO	 = #awbNo# 			
]]>
</delete>

<!--  Changed for QR -->
<delete id="delete_From_IMPCARCHRGITM" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
DELETE FROM IMP_CAR_CHRG_ITM    WHERE AWB_DATE = #awbDate# AND AWB_NO = #awbNo# 
</delete>

<select id="validate_car_delete"  parameterClass="map"  resultClass="java.lang.Integer">
			<![CDATA[
			SELECT NVL(count(1),0)
				FROM IMP_CAR_SHP A , IMP_CAR_AWB B
			WHERE A.AWB_NO     = B.AWB_NO AND
				A.AWB_DATE   = B.AWB_DATE AND 
				A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
				A.AWB_NO	 = #AWBNO#  AND
				A.FLT_KEY	 =#FLTKEY# AND
				A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
				(FFM_FLG = 'Y'  OR RECD_PCS	> 0)  AND CATALOG NOT IN ('IO', 'TM')
		]]>
 </select>

<select id="validate_flight_close"  parameterClass="map"  resultClass="java.lang.Integer">
	SELECT  COUNT(1)
	FROM   FLT_OPR_EVENTS 
	WHERE  FLT_KEY	= #FLTKEY# 
		   AND SCH_DATE	= TO_DATE(#FLTDATE#,'DDMONYY') 
		   AND FLT_TYPE = 'A'
		   AND FLT_CLS_DATE IS NOT NULL
 </select>
<select id="validate_proc_user"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_CAR_SHP 
	WHERE	AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		AWB_NO	 = #AWBNO#  AND
		FLT_KEY	 =#FLTKEY# AND
		FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND
		DIR_PROC_USER != null 
 </select>

<select id="validate_cir_proc_user"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_CAR_SHP 
	WHERE	AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		AWB_NO	 = #AWBNO#  AND
		FLT_KEY	 =#FLTKEY# AND
		FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND
		CIR_PROC_USER != null 
 </select>
 <select id="validate_dir_proc_date"  parameterClass="map"  resultClass="java.lang.Integer">
 SELECT COUNT(1)  FROM IMP_CAR_SHP   WHERE AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  
  AND   AWB_NO  = #AWBNO#  AND   FLT_KEY  =#FLTKEY# AND  
        FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND   DIR_PROC_Date is not null 
 </select>
 
 
 <select id="validate_srf"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_SRF s
	JOIN IMP_SRF_FLT sf on sf.SRF_NO = s.SRF_NO
	WHERE	s.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		s.AWB_NO	 = #AWBNO#  AND
		sf.FLT_KEY	 =#FLTKEY# AND
		sf.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
	 	<![CDATA[
		((s.SRF_EXPY_DATE >= sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED')
		]]>
 </select>
 <select id="validate_damage"  parameterClass="map"  resultClass="java.lang.String">
	 SELECT NVL(count(1),0)
	 FROM IMP_CAR_SHP A , IMP_CAR_AWB B
	 WHERE	A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND
		A.AWB_NO	 = #AWBNO#  AND
		A.FLT_KEY	 = #FLTKEY#  AND
		A.FLT_DATE   = TO_DATE(#FLTDATE#,'DDMONYY')   AND
		A.AWB_NO     = B.AWB_NO AND
		A.AWB_DATE   = B.AWB_DATE AND
		B.CATALOG IN ('IG','IU','IS','IO','TG','TI','TM') AND
		DAM_PROC_USER is not null
 </select>
 
 <!--  Changed for QR -->
 <select id="validate_CarShipment"  parameterClass="map"  resultClass="java.lang.Integer">
   SELECT COUNT(1)    FROM IMP_CAR_SHP   WHERE  AWB_NO = #AWBNO# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 
 <select id="get_gt_cms_list_delete_record"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
select COLUMN_1 as awbNo, COLUMN_2 as awbDate, COLUMN_3 as fltKey, COLUMN_4 as fltDate, COLUMN_5 oldStatus, COLUMN_6 newStatus, COLUMN_7 AS ffmFlag
        from   gt_cms g
		where COLUMN_6 = 'DEL'
 </select>
 
 <select id="validate_CarIMPXPSOBCMAIL"  parameterClass="map"  resultClass="java.lang.Integer">
 SELECT COUNT(1)    FROM IMP_XPS_OBC_MAIL   WHERE AWB_NO    =#AWBNO#    AND
    AWB_DATE  = TO_DATE(#AWBDATE#,'DDMONYY') AND
    FLT_KEY   = #FLTKEY#  AND    FLT_DATE  = TO_DATE(#FLTDATE#,'DDMONYY') AND
    FLT_TYPE  = 'I'
 </select>
 <select id="checkInventoryhaveimpfltdtlsornot"  parameterClass="map"  resultClass="java.lang.Integer">
 	SELECT count(1) FROM AWB_INVENTORY WHERE (FLT_TYPE IS NULL OR FLT_TYPE !='I') AND AWB_NO=#AWBNO# AND AWB_DATE=TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 
 <select id="validate_buildUpCompl"  parameterClass="map"  resultClass="java.lang.Integer">
 	SELECT COUNT(1)    FROM EXP_PMANIFEST_ULD_AWB   WHERE AWB_NO    =#AWBNO#    AND
    AWB_DATE  = TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 <update id="update_IPMXPSOBCMAILOnDeletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
   UPDATE IMP_XPS_OBC_MAIL
    SET AWB_NO   = NULL,    AWB_DATE = NULL, MBLE_CAR_IND = 'N'    WHERE AWB_NO    = #awbNo#   AND    AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND    FLT_KEY   = #fltKey#  AND    FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
    FLT_TYPE  = 'I'
 </update>
 <delete id="delete_From_AWBINVENTORY" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
 </delete>
  <delete id="delete_From_AWBINVENTORY_TMCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 		DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') 
 </delete>
 

  <delete id="delete_From_AWBINVENTORY_TMCAR_HAWB" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
 		DELETE FROM HAWB_INVENTORY WHERE SEQ_NO IN (select seq_no from awb_inventory where AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY')) 
 </delete>
 
 
  <delete id="delete_From_AWBINVENTORY_PAWBTMCARTMCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 		DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY   = #fltKey#  AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE  = 'I'
 </delete>
 

  <delete id="delete_From_AWBINVENTORY_PAWBTMCAR_HAWB" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
 		DELETE FROM HAWB_INVENTORY WHERE SEQ_NO IN (select seq_no from awb_inventory where AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY   = #fltKey#  AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE  = 'I') 
 </delete>
 
 
  <delete id="deleteAwbForAwbInventory" parameterClass="java.lang.String" > 
 DELETE FROM AWB_INVENTORY WHERE SEQ_NO = #PARAM#
 </delete>
 <!--	 if > 0; error:: document complete is declared.	-->
 <select id="doccmpldec"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #fltdate#
		and DOC_COMPL_DATE is not null and FLT_TYPE = 'A' 
		AND FLT_KEY = #fltkey# 
	</select>
 
 
 <select id="validate_ffm"  parameterClass="map"  resultClass="java.lang.String">
		SELECT NVL(count(1),0)
			FROM IMP_CAR_SHP A , IMP_CAR_AWB B
		   WHERE A.AWB_NO     = B.AWB_NO AND
			A.AWB_DATE   = B.AWB_DATE AND 
			A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
			A.AWB_NO	 = #AWBNO#  AND
			A.FLT_KEY	 =#FLTKEY# AND
			A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')
			AND FFM_FLG	= 'Y' AND CATALOG NOT IN ('IO', 'TM')
	 </select>
	 <select id="validate_rec_pcs"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(count(1),0)
				FROM IMP_CAR_SHP A , IMP_CAR_AWB B
			    WHERE A.AWB_NO     = B.AWB_NO AND
				A.AWB_DATE   = B.AWB_DATE AND 
				A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
				A.AWB_NO	 = #AWBNO#  AND
				A.FLT_KEY	 =#FLTKEY# AND
				A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND	
				RECD_PCS > 0  AND CATALOG NOT IN ('IO', 'TM')
		]]>
	 </select>
	
  <select id="validate_trm"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0) 
	FROM IMP_TRM_HD A, IMP_TRM_DTL B
	WHERE B.AWB_NO = #AWBNO# AND 
		B.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND 
		A.TRM_NO=B.TRM_NO AND
		A.TRM_TYPE = B.TRM_TYPE 
		AND A.VOID_DATE IS NULL
 </select>
<!-- <select id="validate_FFM_CarFromEDIFFMSHP"  parameterClass="map" resultClass="java.lang.Integer"> 
   
 	SELECT NVL(count(1),0)  
 	FROM IMP_CAR_SHP A
 	LEFT JOIN AWB_INVENTORY B ON A.AWB_NO= B.AWB_NO AND A.AWB_DATE =B.AWB_DATE 
 	LEFT JOIN EDI_FFM_SHP C ON C.AWB_NO= A.AWB_NO AND C.AWB_DATE =A.AWB_DATE
 	WHERE A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND  
 	A.AWB_NO  = #AWBNO#  AND  A.FLT_KEY  = #FLTKEY# AND  A.FLT_DATE   =TO_DATE(#FLTDATE#,'DDMONYY') 
    AND A.CAR_CREATED='Y'  AND (B.CATALOG IN ('IG','IU','IS','IO','TG','TI','TM')
    OR C.AWB_NO=#AWBNO#)
      </select> -->
      
      
      
  <select id="validate_FFM_CarFromEDIFFMSHP"  parameterClass="map" resultClass="java.lang.Integer"> 
 	SELECT NVL(count(1),0)  
 	FROM IMP_CAR_SHP A
 	where A.AWB_NO  = #AWBNO#  AND  A.FLT_KEY  = #FLTKEY# AND  A.FLT_DATE   =TO_DATE(#FLTDATE#,'DDMONYY')  AND NVL(UPPER(A.FFM_FLG),'N') = 'Y'
  </select>
  
 <select id="get_delete_car_list"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	SELECT
		A.AWB_PCS AS awbPieces, 
		TRIM(TO_CHAR(NVL(A.AWB_WT,0), '9999990D9')) AS awbWeight, 
		A.CONTENT AS content, 
		A.SPL_CODE1 AS splCode1, 
		A.SPL_CODE2 AS splCode2, 
		A.SPL_CODE3 AS splCode3, 
		A.SPL_CODE4 AS splCode4, 
		A.SPL_CODE5 AS splCode5, 
		A.SPL_CODE6 AS splCode6, 
		A.SPL_CODE7 AS splCode7, 
		A.SPL_CODE8 AS splCode8,
		A.SPL_CODE9 AS splCode9,
		A.AWB_NO AS awbNo,
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
		B.FLT_KEY AS fltKey,
		TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate,
		B.MANIFEST_PCS AS manifestPcs, 
		TRIM(TO_CHAR(NVL(B.MANIFEST_WT,0), '9999990D9')) AS manifestWt, 
		B.RECD_PCS AS recdPcs, 
		TRIM(TO_CHAR(NVL(B.RECD_WT,0), '9999990D9')) AS recdWt, 
		pkg_common.get_flt_ata(c.flt_key, c.sch_date,'A','DD') AS ata,
		A.CATALOG catalog,TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModifiedDate
	FROM IMP_CAR_AWB A, IMP_CAR_SHP B, FLT_OPR C
	WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# AND
		A.AWB_DATE 	 = B.AWB_DATE  AND
		A.AWB_NO	 = B.AWB_NO	   AND
		B.FLT_KEY	 = C.FLT_KEY   AND
		B.FLT_DATE 	 = C.SCH_DATE  AND
		B.CAR_CREATED = 'Y' AND 
		C.FLT_TYPE = 'A'	
 </select>
 
 <!--  Changed for QR -->
<update id="delete_CAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	  UPDATE IMP_CAR_SHP SET 	
			CAR_CREATED	= 'N',
			<isEqual property="updBDPcWt" compareValue="Y">
		    	RECD_PCS = RECD_PCS-#manifestPcs#, 
				RECD_WT = RECD_WT-#manifestWt# ,
		    </isEqual>
			LM_USER_ID	= #lmUserId#   , 
			LM_DATE		= SYSDATE
	 WHERE	AWB_DATE = #awbDate#  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey#  AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
</update>
<select id="get_gt_cms_list"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
    select COLUMN_1 as awbNo, COLUMN_2 as awbDate, 
               COLUMN_3 as fltKey, 
               COLUMN_4 as fltDate, 
               COLUMN_5 as oldStatus,
               COLUMN_6 as newStatus,
               a.catalog catalog, s.manifest_pcs pcs, s.manifest_wt wt, s.lm_user_id userId, s.lm_date lmDate
        from   gt_cms g
        join imp_car_awb a on a.awb_no = g.column_1 and a.awb_date = g.column_2
        join imp_car_shp s on s.awb_no = g.column_1 and s.awb_date = g.column_2
                           and s.flt_key = g.column_3 and s.flt_date = g.column_4
    
 </select>

 <select id="get_gt_cms_catalog_DDCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
     select decode((select catalog from IMP_CAR_AWB a where a.awb_no = g.column_1 and a.awb_date = g.column_2), 'IO', 'DDCAR', 'TM', 'DDCAR', 'IU', 'DDCAR', 'DCAR') from GT_CMS g
 </select>

 <select id="get_gt_cms_catalog_CDTMCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
     select decode((select catalog from IMP_CAR_AWB a where a.awb_no = g.column_1 and a.awb_date = g.column_2),'IO', 'CDIOCAR', 'TM', 'CDTMCAR', 'CCAR') from GT_CMS g
 </select>
<!-- START - Queries added for DDS_IMP_RAMP_Check-inInbULD functionlity-->
<!-- Query for Create Check-in Inbound ULD Starts -->
		<select id="imp_uld_checkin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
			SELECT *
			   FROM
			  (SELECT dtl.CARR_CODE                                    AS carrierCode ,
				( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.FLT_KEY=b.FLT_KEY
        		AND a.FLT_DATE=b.FLT_DATE
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    dtl.LOC_CODE                                           AS locCode,
			    dtl.DAM_IND											   AS damInd      ,
			    dtl.EMPTY_IND                                          AS empty       ,
			    dtl.EIC_IND                                            AS eic         ,
			    dtl.HT                                           	   AS ht          ,
			    dtl.CONTR                                            AS contour     ,
			    dtl.RMK                                                AS remark      ,
			    dtl.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    inb.FFM_IND                                            AS ffmInd      ,
			    inb.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,			  				    	    
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         ,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,			   	 
				m.h_cont_ind as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampCompleteStatus,				    
			    NVL(dtl.CHKIN_YN,'N') AS actualCheckIn           ,
			    dtl.CHKIN_YN          AS checkInStatus           ,
			   <!--  ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) AS serialNo, -->
			    dtl.SURPLUS_IND AS surPlusInd,
				uld.HANDLING_MODE									   AS handlingMode,
				uld.TRANSIT_IND 									   AS transitInd,	
			  NULL                             AS defContr, 
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='N'  THEN '2'
		        ELSE CASE  WHEN  dtl.EIC_IND='Y'  THEN '3'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='Y'  THEN '4'
		        END END END END as displayOrder,
            nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
            DOLLYDTL.reject_rmk as rejectRmk
			   	FROM IMP_RAMP_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
        		LEFT JOIN IMP_RAMP_INB_CHK_DTL inb on inb.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND inb.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.FLT_KEY = DTL.FLT_KEY AND dollydtl.flt_date=DTL.FLT_DATE AND DOLLYDTL.ULD_KEY = DTL.ULD_KEY
        	    WHERE				  
			   	dtl.FLT_NO    = #flightNo#
			  	AND dtl.CARR_CODE = upper(#carrierCode#)
			  	AND TO_CHAR(dtl.FLT_DATE,'DDMONYY') = #flightDate#			  	

			UNION ALL
			   
			    SELECT 
          dtl.CARR_CODE                                    AS carrierCode ,
          ( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    ''			                                           AS locCode     ,
			    chk.DAM_IND											   AS damInd      ,
			    chk.EMPTY_IND                                          AS empty       ,
			    chk.EIC_IND                                            AS eic         ,
			    chk.HT                                           	   AS ht          ,
         		case when (uld.handling_mode in('NBK','PPK') 
         			and (select count(1) from v_ddt_dtl v join awb a on a.awb_no=v.awb_no and a.awb_date=v.awb_date where v.flt_key=dtl.flt_key 
         					and v.flt_date=dtl.flt_date and v.uld_key=dtl.uld_key and a.awb_type='T')>0) 
         		then  NVL(edi.cntr,chk.CONTR)  else chk.CONTR end AS contour,			   
			    dtl.RMK                                                AS remark      ,
			    chk.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		       AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    dtl.FFM_IND                                            AS ffmInd      ,
			    dtl.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,		    						
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,				
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				   	 
				m.h_cont_ind 											as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  					AS rampCompleteStatus,		
			    NVL(chk.CHKIN_YN,'N') 									AS actualCheckIn,
			    chk.CHKIN_YN          									AS checkInStatus,
			    chk.SURPLUS_IND          								AS surPlusInd,
				uld.HANDLING_MODE									    AS handlingMode,
				uld.TRANSIT_IND 									    AS transitInd,				
				edi.CNTR                                                AS defContr,	
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
	            ELSE CASE  WHEN  chk.EMPTY_IND='N'  THEN '2'
	            ELSE CASE  WHEN  chk.EIC_IND='Y'  THEN '3'
	            ELSE CASE  WHEN  chk.EMPTY_IND='Y'  THEN '4'
	            END END END END as displayOrder,
              nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
            DOLLYDTL.reject_rmk as rejectRmk
			    FROM IMP_RAMP_INB_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
				LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(chk.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND chk.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(edi.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND edi.ULD_KEY=dtl.ULD_KEY 				   
        LEFT JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.FLT_KEY = DTL.FLT_KEY AND dollydtl.flt_date=DTL.FLT_DATE AND DOLLYDTL.ULD_KEY = DTL.ULD_KEY
        
			    WHERE 		  
			    dtl.ULD_KEY NOT IN
			    (SELECT ULD_KEY
			     FROM IMP_RAMP_CHK_DTL
			     WHERE TR_NO = dtl.TR_NO
			     AND CHKIN_YN  = 'Y'
			    )
			    AND dtl.FLT_NO    = #flightNo#
			    AND dtl.CARR_CODE = upper(#carrierCode#)
			    AND TO_CHAR(dtl.FLT_DATE,'DDMONYY')  = #flightDate#	
			    
			         UNION ALL
   SELECT F.CARR_CODE AS carrierCode ,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd a,
          imp_ramp_dolly_dtl b
        WHERE b.uld_key= B.ULD_KEY
        AND a.ho_no   IS NOT NULL
        AND a.dolly_id =b.dolly_id
        AND a.flt_key  = B.FLT_KEY
        AND a.flt_date =B.FLT_DATE )>0
      THEN 'Y'
      ELSE 'N'
    END )                                       AS handoverInd,
    (select tr_no from IMP_RAMP_CHK_HD HD where HD.FLT_KEY = b.flt_key and HD.flt_date = b.flt_date and rownum=1)                                    AS trNo ,
    dtl.DOC_LINE_NO                           AS docLineNo ,
    F.FLT_NO                                  AS flightNo ,
    F.FLT_KEY                                 AS flightKey ,
    TO_CHAR(F.SCH_DATE,'DDMONYY')             AS flightDate ,
    b.ULD_KEY                                 AS uldKey ,
    INV.LOC_CODE                                AS locCode,
    B.DAM_IND                                 AS damInd ,
    B.EMPTY_IND                               AS empty ,
    B.EIC_IND                                 AS eic ,
    dtl.HT                                      AS ht ,
    dtl.CONTR                                   AS contour ,
    dtl.RMK                                     AS remark ,
    dtl.RHO_STAFF                               AS rhoStaffId,
    TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
    (SELECT MAX(ULD_IMAGE_NAME)
    FROM ULD_IMAGE
    WHERE ULD_KEY=B.ULD_KEY
    )                                                             AS transactionId,
    'N'                                                           AS updateRecord,
    inb.FFM_IND                                                   AS ffmInd ,
    inb.CPM_IND                                                   AS cpmInd ,
    PKG_IMP.fun_get_ho_area(B.FLT_KEY,B.FLT_DATE,B.ULD_KEY) AS plannedHoAreaFFMCPM,
    (SELECT TRF_TYPE
    FROM v_ddt_DTL
    WHERE FLT_KEY = F.FLT_KEY
    AND FLT_DATE  = B.FLT_DATE
    AND ULD_KEY   = B.ULD_KEY
    AND rowNum    = 1
    )                                                           AS transferType,
    PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A','DD') AS ata ,
    (SELECT CODE_DESC
    FROM MAST_CODE_DTL
    WHERE CODE   = f.WTHR_COND
    AND CODE_TYPE='WTH_CONDN'
    )                                     AS weatherCondition,
    null                         AS hcontainer,
    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N') AS rampCompleteStatus,
    'N'                AS actualCheckIn ,
    'N'                          AS checkInStatus ,
    'N'                      AS surPlusInd,
    uld.HANDLING_MODE                     AS handlingMode,
    uld.TRANSIT_IND                       AS transitInd,
    NULL                                  AS defContr,
    null AS displayOrder,
    nvl(b.reject_ind,'N') as rejectInd,
            b.reject_rmk as rejectRmk   
     FROM imp_ramp_dolly_hd a
  LEFT JOIN imp_ramp_dolly_dtl b
  ON b.flt_key  =a.flt_key
  AND b.flt_date=a.flt_date
  AND b.dolly_id=a.dolly_id
  LEFT JOIN ULD_INVENTORY INV
  ON INV.ULD_KEY=B.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON dtl.flt_key= b.flt_key
  and dtl.FLT_DATE=b.flt_date
  and dtl.uld_key=b.uld_key
   AND dtl.CHKIN_YN='N'
   left JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = a.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(a.FLT_DATE,'DDMONYY')
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.flt_key                  = a.flt_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL inb
  ON inb.FLT_KEY                      = b.FLT_KEY
  AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND inb.ULD_KEY                     = b.ULD_KEY
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      =b.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND uld.ULD_KEY                     =b.ULD_KEY
  WHERE a.FLT_key                   = #carrierCode#||#flightNo# 
  AND TO_CHAR(a.FLT_DATE,'DDMONYY') = #flightDate#
  AND NOT EXISTS(SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY=B.ULD_KEY
  AND FLT_KEY=B.FLT_KEY
  AND FLT_DATE=B.FLT_DATE)
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=B.ULD_KEY
    AND FLT_KEY  =B.FLT_KEY
    AND FLT_DATE =B.FLT_DATE
    ) 
   AND a.ho_no                      IS NOT NULL
			     
			  )	          
      order by displayOrder,uldKey 
	</select>
	
		<select id="culd_get_flt_details"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">			  
	SELECT	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,
	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition
      FROM FLT_OPR f WHERE f.FLT_TYPE='A' AND
			  f.CARR_CODE=#carrierCode# AND
			  f.FLT_NO =#flightNo# AND
			  TO_CHAR(f.SCH_DATE,'DDMONYY') = #flightDate#
	</select>
	
	<select id="validatewhsecompldate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT WHSE_COMPL_DATE as whseCompldate FROM FLT_OPR_EVENTS WHERE 
			CARR_CODE = UPPER(#carrCode#) AND 
			SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND 
			FLT_TYPE = UPPER(#fltType#) 
			AND FLT_NO = UPPER(#fltNo#)
			AND WHSE_COMPL_DATE IS NOT NULL
	</select>	
	
	<select id="imp_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE 
		<isEmpty property="fltKey">
			CARR_CODE = #carrierCode# AND FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="fltKey">
			FLT_KEY = #fltKey# 
		</isNotEmpty>
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE='A'
   	</select>
   	
   	<!--  Changed for QR -->
   	<!-- 	<select id="imp_fltKey_validate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND FLT_TYPE='A'
   	</select> -->
   	
   	<select id="imp_fltDate_validate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE SCH_DATE= TO_DATE( #fltDate#, 'DDMONYY') AND FLT_TYPE='A'
   	</select>
   	
   	<select id="imp_fltchkin_validate"  parameterClass="map"  resultClass="java.lang.Integer">
			SELECT NVL(count(1),0)
			FROM FLT_OPR_EVENTS 
			WHERE RAMP_COMPL_YN	= 'Y' AND
				  FLT_KEY 		= #flightKey# AND
				  SCH_DATE 		= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE = 'A'
	</select>
	
	<insert id="imp_uld_checkin_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		INSERT INTO IMP_RAMP_CHK_DTL 
			(TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, 
			 CARR_CODE, DAM_IND, EMPTY_IND, EIC_IND, SURPLUS_IND, LOC_CODE, TR_STATUS, 
			 CR_USER_ID, CR_DATE, LM_USER_ID,  LM_DATE, CHKIN_YN,CHKIN_DATE, ULD_OWNER_ID, CFM_STATUS,RMK , INSRT_FROM_IND,HT,HT_IND,CONTR,RHO_STAFF,TR_TYPE,TRANSFER_TYPE) 
		VALUES 
			( #trNo#, #docLineNo#,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#,#uldCarr#,#uldKey#,
			 #carrierCode#,#damInd#,#empty#,#eic#, #surPlusInd#, #locCode#,'N',
			 #crUser#,sysdate,#lmUser#,sysdate,'Y',sysdate, #owner#, 'CONFIRMED',#remark# ,  decode(upper(#insrtFromInd#),'HHT','H',#insrtFromInd#),#ht#,DECODE(#ht#,NULL,'N','Y'),#contour#,#rhoStaffId#,'IR',#transferType#)
	</insert>
	
		<insert id="imp_uld_service_err_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		insert into SERVICE_ERR_LOG(TR_NO,TR_TYPE,DOC_LINE_NO,TR_DATE,OWNER_ID,CARR_CODE,FLT_NO,FLT_DATE,FLT_KEY,FLT_TYPE,ERR_REASON,SVC_USER_ID,SVC_DATE,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #trNo#, 
		 <isNotEmpty property="transferType">
		 #transferType#,
		 </isNotEmpty>
		 <isEmpty property="transferType">
		 'IR',
		 </isEmpty>	
		SERVICE_ERR_LOG_DLN_SEQ.nextval,sysdate,#owner#,#carrierCode#,#flightNo#,#flightDate#, #flightKey#, #flightType#,#errReason#,'','',#uldType#,#uldNo#,#uldCarr#,#uldKey#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>

       <insert id="imp_uld_service_err_ins_checklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		insert into SERVICE_ERR_LOG(TR_NO,TR_TYPE,DOC_LINE_NO,TR_DATE,OWNER_ID,CARR_CODE,FLT_NO,FLT_DATE,FLT_KEY,FLT_TYPE,ERR_REASON,SVC_USER_ID,SVC_DATE,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values (#trNo#, 
		 <isNotEmpty property="transferType">
		 #transferType#,
		 </isNotEmpty>
		 <isEmpty property="transferType">
		 'IR',
		 </isEmpty>	
		SERVICE_ERR_LOG_DLN_SEQ.nextval,sysdate,#uldCarr#,#carrierCode#,#flightNo#,#flightDate#, #flightKey#, 'I','Duplicate ULD found in Inventory against Transfer check list.',#lmUserId#,sysdate,
		#uldType#,#uldNo#,#uldCarr#,#uldKey#,#lmUserId#,sysdate,#lmUserId#,sysdate)
	</insert>		
	
	<update id="imp_uld_checkin_upd" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		UPDATE IMP_RAMP_CHK_DTL	SET
			IMP_RAMP_CHK_DTL.TRANSFER_TYPE = #transferType#,  
			IMP_RAMP_CHK_DTL.CHKIN_YN =#checkInStatus#,				
			IMP_RAMP_CHK_DTL.DAM_IND	=#damInd#	,
			IMP_RAMP_CHK_DTL.EMPTY_IND	 =#empty#	 ,
			IMP_RAMP_CHK_DTL.EIC_IND	 =#eic#	 ,
			IMP_RAMP_CHK_DTL.LM_USER_ID	 =#lmUser#	 ,
			IMP_RAMP_CHK_DTL.LM_DATE	 = sysdate ,
			IMP_RAMP_CHK_DTL.RMK	 = #remark# ,
			IMP_RAMP_CHK_DTL.CHKIN_DATE = CASE WHEN NVL(#checkInStatus#, 'N') = 'N' THEN NULL ELSE sysdate END , 
			IMP_RAMP_CHK_DTL.CFM_STATUS	= CASE WHEN NVL(#checkInStatus#, 'N') = 'N' THEN NULL ELSE 'UNCONFIRMED' END ,
			IMP_RAMP_CHK_DTL.INSRT_FROM_IND = decode(upper(#insrtFromInd#),'HHT','H',#insrtFromInd#),
			IMP_RAMP_CHK_DTL.HT	=#ht#,
			IMP_RAMP_CHK_DTL.CONTR	 =#contour#
		WHERE IMP_RAMP_CHK_DTL.TR_NO	 =#trNo#  AND
			IMP_RAMP_CHK_DTL.DOC_LINE_NO	 =#docLineNo# AND 
			TO_CHAR(IMP_RAMP_CHK_DTL.LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>
	
	<delete id="Imp_deleteCheckInData" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >	
		DELETE FROM	IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</delete>

	<select id="imp_uncheckIn_check_toppalletexists"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select COUNT(1) FROM ULD_INVENTORY
		WHERE  
		BASE_PLT = #uldKey# and
		EIC_FLG = 'Y'		
	</select>

	<!--  Changed for QR
	<select id="warehouse_location_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM MAST_WH_LOC_CODE WHERE CODE=upper(#CODE#) AND WH_LOC=#WH_DST#
   	</select> 
   	
   	<select id="get_imp_cfm_status"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from IMP_RAMP_CHK_DTL where uld_key= #uldKey# and 
		flt_key = #flightKey#  and FLT_DATE = to_date(#flightDate#,'DDMONYY') 
		and cfm_status = 'CONFIRMED'
		<![CDATA[
			and length(uld_key) >= 9
			]]>
	</select> -->
	
	<!-- Changed for QR -->
	<select id="imp_uncheckIn_BT_Import"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select  count(1) from imp_awb_strg_dtl where CHKIN_ULD_KEY = #uldKey# and flt_key = #flightKey# and flt_date = #flightDate#
	</select>
	
	<!-- Changed for QR
	<select id="imp_uncheckIn_BT_Export"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from awb_inventory inv
		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
		AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
		AND awb.awb_type = 'E'    
		where inv.uld_key = #uldKey# 		
	</select> -->
	
	<!-- Changed for QR
	<select id="imp_unconfirmedlist_hht"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		<![CDATA[
		SELECT IMP_RAMP_CHK_HD.TR_NO AS trNo ,
		   IMP_RAMP_CHK_DTL.DOC_LINE_NO AS docLineNo ,	
		   IMP_RAMP_CHK_HD.CARR_CODE AS carrierCode ,
		   IMP_RAMP_CHK_HD.FLT_NO AS flightNo , 
		   IMP_RAMP_CHK_HD.FLT_KEY AS flightKey,	
		   TO_CHAR(IMP_RAMP_CHK_DTL.FLT_DATE,'DDMONYY') AS flightDate,  
		   IMP_RAMP_CHK_DTL.ULD_KEY AS uldKey , 		   
		   IMP_RAMP_CHK_DTL.LOC_CODE AS wareHouseLoc,  
		   IMP_RAMP_CHK_DTL.DAM_IND AS damInd, 
		   IMP_RAMP_CHK_DTL.EMPTY_IND AS empty, 
		   IMP_RAMP_CHK_DTL.EIC_IND AS eic,
		   IMP_RAMP_CHK_DTL.CHKIN_YN AS checkInStatus,	
		   TO_CHAR(IMP_RAMP_CHK_DTL.CHKIN_DATE,'DDMONYY') AS checkInDate, 
		   IMP_RAMP_CHK_DTL.SURPLUS_IND AS surplus, 
		   IMP_RAMP_CHK_DTL.CFM_STATUS AS cfm,
		   IMP_RAMP_CHK_DTL.RMK AS remark,
		   PKG_COMMON.get_flt_ata(FLT_OPR.FLT_KEY, FLT_OPR.SCH_DATE, 'A')  AS ata,
		   (SELECT WTHR_COND
			       FROM FLT_OPR
			      WHERE FLT_NO = #flightNo#
			    AND CARR_CODE   = upper(#carrierCode#)
			    AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			    AND FLT_TYPE='A'
			    )   AS weatherCondition,	
		   'N' AS newRecord,
		   ROW_NUMBER() OVER (ORDER BY IMP_RAMP_CHK_HD.TR_NO ) serialNo
		FROM IMP_RAMP_CHK_HD,  
		   IMP_RAMP_CHK_DTL, 
		   FLT_OPR
		WHERE IMP_RAMP_CHK_HD.FLT_NO 	= #flightNo#  AND 
		   IMP_RAMP_CHK_HD.CARR_CODE		= upper( #carrierCode#) AND
		   IMP_RAMP_CHK_HD.FLT_DATE 		=  TO_DATE( #flightDate#, 'DDMONYY') AND
		   IMP_RAMP_CHK_HD.TR_NO		=  IMP_RAMP_CHK_DTL.TR_NO AND
		   IMP_RAMP_CHK_DTL.CFM_STATUS   =  'UNCONFIRMED'      AND
   		   IMP_RAMP_CHK_DTL.CHKIN_YN            =  'Y'     AND
		   FLT_OPR.CARR_CODE			=  IMP_RAMP_CHK_HD.CARR_CODE	AND
		   FLT_OPR.FLT_NO			=  IMP_RAMP_CHK_HD.FLT_NO 		AND
		   FLT_OPR.SCH_DATE			=  IMP_RAMP_CHK_HD.FLT_DATE		AND
		   FLT_OPR.FLT_TYPE = 'A' AND
		   LENGTH(IMP_RAMP_CHK_DTL.ULD_KEY) >= 9
		ORDER BY IMP_RAMP_CHK_DTL.ULD_KEY
	]]>	
	</select>	-->
	
	<select id="imp_hht_inboundUld_detail" parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
	SELECT 
	   IMP_RAMP_CHK_DTL.FLT_KEY AS flightKey,
	   TO_CHAR(IMP_RAMP_CHK_DTL.FLT_DATE,'DDMONYY') AS flightDate,	   
	   IMP_RAMP_CHK_DTL.LOC_CODE AS wareHouseLoc,
	   IMP_RAMP_CHK_DTL.EMPTY_IND AS empty,
	   IMP_RAMP_CHK_DTL.EIC_IND AS eic,
	   IMP_RAMP_CHK_DTL.RMK AS remark,
	   DECODE(IMP_RAMP_CHK_DTL.DAM_IND,'DAM','Y','N') AS damInd,
	   IMP_RAMP_CHK_DTL.SURPLUS_IND	AS surPlusInd,
       IMP_RAMP_CHK_DTL.ULD_KEY AS uldKey,
	   TO_CHAR(IMP_RAMP_CHK_DTL.CHKIN_DATE,'DDMONYY')AS checkInDate,
	   IMP_RAMP_CHK_DTL.CHKIN_YN AS checkInStatus,	
	   IMP_RAMP_CHK_DTL.TR_NO AS trNo,
	   IMP_RAMP_CHK_DTL.DOC_LINE_NO AS docLineNo,
	   IMP_RAMP_CHK_DTL.CARR_CODE AS carrierCode,
	   IMP_RAMP_CHK_DTL.FLT_NO AS flightNo,
		IMP_RAMP_CHK_DTL.ULD_OWNER_ID as uldOwnerId,
	  <!-- SUBSTR(TRIM(TO_CHAR(NVL(FLT_OPR.ACT_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(FLT_OPR.ACT_TIME,0),'0000')),3,4) AS ata-->
	   PKG_COMMON.get_flt_ata(IMP_RAMP_CHK_DTL.FLT_KEY, IMP_RAMP_CHK_DTL.FLT_DATE, 'A', 'DD') as ata
	FROM IMP_RAMP_CHK_DTL
	WHERE
	 IMP_RAMP_CHK_DTL.TR_NO = #trNo# AND
	 IMP_RAMP_CHK_DTL.DOC_LINE_NO = #docLineNo# 
	<!-- FLT_OPR.FLT_NO = IMP_RAMP_CHK_DTL .FLT_NO AND 
	 FLT_OPR.SCH_DATE = IMP_RAMP_CHK_DTL .FLT_DATE AND
	 FLT_OPR.FLT_TYPE	= 'A' -->
	</select>
	
	<!--  Changed for QR -->
	<update id="HHTConfirmupdaterampchkdtl" parameterClass="cargo.cms.imprt.bo.CheckListBO">	
		UPDATE IMP_RAMP_CHK_DTL 
		SET CFM_STATUS = 'CONFIRMED' , LM_USER_ID = #lmUserId# , LM_DATE = sysdate , INSRT_FROM_IND = 'H'
		WHERE   
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		   ULD_KEY = UPPER(#uldKey#)
	</update>

	<insert id="HHTConfirminsertrampchkdtl" parameterClass="cargo.cms.imprt.bo.CheckListBO">	
		INSERT INTO IMP_CFM_ULD (TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, CARR_CODE, 
			SURPLUS_IND, DAM_IND, EMPTY_IND, EIC_IND, LOC_CODE, RMK, ULD_OWNER_ID, TR_TYPE, TR_STATUS, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,INSRT_FROM_IND)
		VALUES( #trNo#, nvl((select max(DOC_LINE_NO) from IMP_CFM_ULD where tr_no = #trNo#), 0) + 1,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#,#uldCarr#,#uldKey#,
			#carrierCode#,#surPlusInd#,#damInd#,#empty#,#eic#, #wareHouseLoc#,#remark#, NVL(#carrierCode#, FUN_GET_ULD_OWNER(#uldKey#)),'CU','N',
			#lmUserId#,sysdate,#lmUserId#,sysdate,'H')  
	</insert>
	
	<!--  Changed for QR
	<select id="imp_get_location_list"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM MAST_WH_LOC_CODE WHERE WH_LOC=#WH_DST#
	</select> -->
	
	<select id="chkFfmProcessed"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from edi_ffm_msg a,edi_ffm_uld b where a.tr_no=b.tr_no 
	and a.flt_key=#flightKey# and a.flt_date = #fltDate# and b.uld_key = #uldKey# and a.ffm_status ='P'
	</select>
	
	<!-- End - Queries added for DDS_IMP_RAMP_Check-inInbULD functionlity-->
	
	
			<!-- Query for Enquire Check-in Inbound ULD Desktop Starts-->
	<select id="imp_enq_checkin_uld"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
	  SELECT DISTINCT A.FLT_KEY   AS flightKey,
	  A.FLT_NO                      AS flightNo ,
	  A.CARR_CODE                   AS carrierCode ,
	  TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
	  B.ULD_KEY                     AS uldKey,
	  B.LOC_CODE                    AS wareHouseLoc,
	  B.EIC_IND                     AS eic,
	  B.EMPTY_IND                   AS empty,
	  B.SURPLUS_IND                 AS surplus,
	  B.RMK                         AS damageRemark,
	  B.TR_NO                       AS trNo,
	  B.DOC_LINE_NO                 AS docLineNo,
	  C.ORIG                        AS ladingPoint,
	  C.DEST                        AS unladingPoint,
	  B.DAM_IND                     AS damage,
	  TO_CHAR(CHKIN_DATE,'DDMONYY HH24:MI') as checkInTime,
	  G.RAMP_COMPL_YN               AS rampComplStatus,
	  DECODE(E.FFM_IND,'Y',E.FFM_IND,'N')  AS ffmInd,
      DECODE(E.CPM_IND,'Y',E.CPM_IND,'N')  AS cpmInd,	     
	  H.WH_RMK              AS bdInstruction,	
	   (select WH_AREA 
	      from MAST_WH_GROUP whg
	      join MAST_WH_LOC whl on whl.WH_GROUP = whg.WH_GROUP
	      where whl.CODE = B.LOC_CODE) as hoArea,	
	  PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY) as plannedHandOverZone,  												            
      CASE WHEN ((select WH_AREA 
	      from MAST_WH_GROUP whg
	      join MAST_WH_LOC whl on whl.WH_GROUP = whg.WH_GROUP
	      where whl.CODE = B.LOC_CODE)=PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY)) THEN 'N' ELSE 'Y' END AS hoDesc,						 		
	  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = c.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition, 	  
	  D.CODE_DESC                                        AS owner,
	  C.ACFT_REG_NO                                      AS regn,
	  PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A', 'DD') AS ata,
	  (select TRF_TYPE || decode(brk_bulk,'Y', '+'||'BB') from v_ddt_dtl F 
              where  F.ULD_KEY=B.ULD_KEY AND F.FLT_Key=B.FLT_KEY AND F.FLT_DATE=B.FLT_DATE and rownum =1) trfType,
	  CASE WHEN (m.h_cont_ind='Y') THEN '1' ELSE '2' END as displayOrder
	FROM IMP_RAMP_CHK_HD A
	JOIN   IMP_RAMP_CHK_DTL B ON  B.TR_NO=A.TR_NO AND B.FLT_KEY  = A.FLT_KEY AND TO_CHAR(B.FLT_DATE,'DDMONYY')  = TO_CHAR(A.FLT_DATE,'DDMONYY')
	JOIN  FLT_OPR C ON  C.FLT_KEY   = A.FLT_KEY AND TO_CHAR(C.SCH_DATE,'DDMONYY')  =TO_CHAR(A.FLT_DATE,'DDMONYY') and C.FLT_TYPE  = 'A'
	JOIN MAST_CARRIER D ON D.CODE=C.CARR_CODE
	left join MAST_ULD_TYPE m  on m.code = B.uld_type
	LEFT JOIN IMP_RAMP_INB_CHK_DTL E ON E.TR_NO=B.TR_NO AND E.FLT_KEY=C.FLT_KEY AND TO_CHAR(E.FLT_DATE,'DDMONYY')=TO_CHAR(C.SCH_DATE,'DDMONYY') 
	AND E.ULD_KEY= B.ULD_KEY	
	LEFT JOIN IMP_ULD_LIST H ON H.FLT_KEY=B.FLT_KEY AND TO_CHAR(H.FLT_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY') AND H.ULD_KEY=B.ULD_KEY
	LEFT JOIN flt_opr_events G ON G.FLT_KEY=B.FLT_KEY AND TO_CHAR(G.SCH_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY')	
	WHERE A.FLT_NO  = #flightNo#
	AND A.CARR_CODE = upper( #carrierCode#)
	AND TO_CHAR(A.FLT_DATE,'DDMONYY')  = #flightDate#
	AND B.CHKIN_YN  = 'Y'
	AND C.FLT_TYPE  = 'A'
	order by displayOrder, uldKey
	
</select>


<!-- Query for Enquire Check-in Inbound ULD HHT Starts-->
<!--  Changed for QR -->
<select id="imp_enq_checkin_uld_hht"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
 SELECT  A.FLT_KEY AS flightKey,
			A.FLT_NO AS flightNo , 
			A.CARR_CODE AS carrierCode ,
			TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
			B.ULD_KEY AS uldKey,			
			'' AS wareHouseDst,
			B.LOC_CODE AS wareHouseLoc,
			B.EIC_IND AS eic,
			B.EMPTY_IND AS empty,			
			B.DAM_IND AS condition,
			G.RAMP_COMPL_YN               AS rampComplStatus,
			B.SURPLUS_IND AS surplus,
			B.DAM_RMK AS damageRemark,
			B.TR_NO AS trNo,
			B.DOC_LINE_NO AS docLineNo,
			C.ORIG AS ladingPoint, 				 
		    PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY) as plannedHandOverZone, 		    
			C.DEST AS unladingPoint, 
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = C.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				
			D.CODE_DESC AS owner,
			C.ACFT_REG_NO AS regn,
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A', 'DD') AS ata,
			CASE WHEN (m.h_cont_ind='Y') THEN '1' ELSE '2' END as displayOrder	 
		FROM IMP_RAMP_CHK_HD A
		JOIN IMP_RAMP_CHK_DTL B ON  B.TR_NO=A.TR_NO AND B.FLT_KEY  = A.FLT_KEY AND TO_CHAR(B.FLT_DATE,'DDMONYY')  = TO_CHAR(A.FLT_DATE,'DDMONYY')
		JOIN  FLT_OPR C ON  C.FLT_KEY   = A.FLT_KEY AND TO_CHAR(C.SCH_DATE,'DDMONYY')  =TO_CHAR(A.FLT_DATE,'DDMONYY') and C.FLT_TYPE  = 'A'
		JOIN MAST_CARRIER D ON D.CODE=C.CARR_CODE
		left join MAST_ULD_TYPE m  on m.code = B.uld_type
		LEFT JOIN IMP_ULD_LIST H ON H.FLT_KEY=B.FLT_KEY AND TO_CHAR(H.FLT_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY') AND H.ULD_KEY=B.ULD_KEY
		LEFT JOIN flt_opr_events G ON G.FLT_KEY=B.FLT_KEY AND TO_CHAR(G.SCH_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY')
		WHERE A.FLT_NO  = #flightNo#
	AND A.CARR_CODE = upper( #carrierCode#)
	AND TO_CHAR(A.FLT_DATE,'DDMONYY')  = TO_DATE(#flightDate#,'DDMONYY')
	AND B.CHKIN_YN  = 'Y'
	AND C.FLT_TYPE  = 'A'
	order by displayOrder, uldKey		  
</select>

<!--  Changed for QR -->
<select id="uld_loaded_ffm_towed_chkd_uld_list"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">	
 	<![CDATA[
	 	select a.ULD_TYPE uldType, ((c.QTY)||(c.ALLOT_TYPE)) uldAllot,d.ULD_TYPE chkdinuld, a.flt_key
		from imp_ramp_inb_chk_dtl a  
		left join ddt_msg m on m.flt_key= a.flt_key  and m.flt_date=a.flt_date and m.ddt_status='P' 
		left join ddt_uld b on m.tr_no = b.tr_no and a.uld_key= b.uld_key 
		left join IMP_CFM_ULD_TOWED_DTL c on c.flt_key= a.flt_key  and c.flt_date=a.flt_date
		left join imp_ramp_chk_dtl d on d.flt_key= c.flt_key  and d.flt_date=c.flt_date
		and a.empty_ind = 'N' 
		and  a.ffm_ind ='Y'
		and b.trf_type not in ('TT','IF')
		where a.flt_date=TO_DATE(#flightDate#,'DDMONYY')
		and a.flt_key=#flightKey# 
  ]]>
</select>	

<!--  Changed for QR -->
	<select id="imp_enq_checkin_uld_uld_type_summary"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">	
 	<![CDATA[
 SELECT ((a.QTY) ||(a.ALLOT_TYPE))  uldTowedConfirm,
        (( SELECT NVL(COUNT(1),0) FROM imp_ramp_chk_dtl a 
        							join uld_group_type b on b.uld_type=a.uld_type )
        	|| (SELECT COUNT(1)  FROM uld_group_type b,mast_uld_allot_group c  WHERE b.uld_group = c.uld_group)) actualChkinULD,
  ((SELECT NVL(COUNT(1),0) FROM imp_ramp_inb_chk_dtl a
  								JOIN ddt_msg m ON a.flt_key = m.flt_key and a.flt_date = m.flt_date and m.ddt_status='P' 
  								JOIN ddt_uld b ON b.tr_no = m.tr_no and a.uld_key = b.uld_key AND a.empty_ind = 'N' AND a.ffm_ind ='Y'  
  													AND b.trf_type NOT IN ('TT','IF') 
  	 						WHERE a.uld_type=#uldType#)
  	 	||(SELECT tab2.uld_allot FROM uld_group_type tab1,mast_uld_allot_group tab2 WHERE tab1.uld_group = tab2.uld_group AND tab1.uld_type =#uldType#)) ffmULD
 FROM IMP_CFM_ULD_TOWED_DTL a
 WHERE a.flt_key =upper(#flightKey#) AND a.flt_date=#flightDate#	
  ]]>
  </select>
		<!-- Query for Enquire Check-in Inbound ULD Ends-->	
	<!-- START - Queries added for DDS_IMP_RAMP_DeclareRamp Complete functionlity-->
	<select id="imp_declramp_searchbydate"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
	  SELECT distinct B.FLT_KEY flightNo,
	  #flightDate# as fltDateShow,
	  (select count(dolly_id) from imp_ramp_dolly_hd where flt_key=B.FLT_KEY  and flt_date =B.SCH_DATE) as   towUnloaded,
	  (select count(uld_key) from imp_ramp_dolly_dtl where flt_key=B.FLT_KEY and flt_date =B.SCH_DATE) as   uldUnloaded,
	  (SELECT COUNT(d.uld_key)
	  FROM imp_ramp_dolly_hd h, imp_ramp_dolly_dtl d
	  WHERE h.ho_no  IS NOT NULL
	  AND h.dolly_id IS NOT NULL
	  and h.dolly_id=d.dolly_id and h.flt_key=d.flt_key
	  and h.flt_date=d.flt_date
	  AND h.flt_key   =B.FLT_KEY
	  AND h.flt_date  =B.SCH_DATE) as uldHandover,
	  (select count(1) from imp_ramp_chk_dtl where  flt_key=B.FLT_KEY and flt_date =A.FLT_DATE and chkin_yn='Y') as checkincount,
	  TO_CHAR(B.SCH_DATE,'DDMONYY')flightDate,
	  B.TR_NO tr_No,
	  PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE,'A','DD') ata,  
	  case when (select count(1) from tow_order_in t1 where t1.flt_key=B.flt_key and to_Char(t1.flt_date,'DDMONYY') = to_Char(B.sch_date,'DDMONYY')) > 0
	  then 'Y' else 'N' end as towOrderInd,
	   LTRIM(RTRIM(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY') ||' '|| 
	  SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| 
	  SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':')) AS chkInCompDate,
	  E.RAMP_COMPL_USER_ID AS chkInCompId, 
	  C.LM_USER_ID AS fltHdlgDataGenId, 
		  ( case when  (SELECT COUNT(d.uld_key)
  FROM imp_ramp_dolly_hd h, imp_ramp_dolly_dtl d
  WHERE h.ho_no  IS NOT NULL
  AND h.dolly_id IS NOT NULL
  and h.dolly_id=d.dolly_id and h.flt_key=d.flt_key
  and h.flt_date=d.flt_date
  AND h.flt_key   =B.FLT_KEY
  AND h.flt_date  =B.SCH_DATE)!=(SELECT COUNT(1)
	  FROM imp_ramp_chk_dtl
	  WHERE flt_key=B.FLT_KEY
	  AND flt_date =B.SCH_DATE
	  AND chkin_yn ='Y')
	  then 'RED' else null end) as fltpageInd,
	  TO_CHAR(C.LM_DATE,'DDMONYY') AS fltHdlgDataGenDate,
	  (SUBSTR(TRIM(TO_CHAR(NVL(b.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(b.SCH_TIME,0),'0000')),3,4))	as std,
	  (SELECT TO_CHAR(MIN(TOW_IN_TIME), 'HH24:MI') FROM TOW_ORDER_IN_RECORD REC WHERE REC.FLT_KEY = B.FLT_KEY AND REC.FLT_DATE = B.SCH_DATE) firstInTime,
	  (SELECT TO_CHAR(MAX(TOW_IN_TIME), 'HH24:MI') FROM TOW_ORDER_IN_RECORD REC WHERE REC.FLT_KEY = B.FLT_KEY AND REC.FLT_DATE = B.SCH_DATE) lastInTime,
	  (SELECT COUNT(dolly_id)
  FROM imp_ramp_dolly_hd
  WHERE flt_key=B.FLT_KEY
  AND flt_date =B.SCH_DATE
  and ho_no is not null) towCount
	  FROM  FLT_OPR B  
	  INNER JOIN FLT_OPR_EVENTS E ON B.FLT_KEY = E.FLT_KEY AND B.SCH_DATE = E.SCH_DATE AND B.FLT_TYPE = E.FLT_TYPE
	  LEFT JOIN IMP_RAMP_CHK_HD A ON B.FLT_KEY = A.FLT_KEY AND B.SCH_DATE = A.FLT_DATE AND B.FLT_TYPE = 'A'
	  LEFT  JOIN IMP_CFM_ULD_TOWED T ON   T.FLT_KEY = A.FLT_KEY AND T.FLT_DATE = A.FLT_DATE
	  LEFT JOIN IMP_FLT_HAND_SUMMARY C ON C.FLT_KEY = A.FLT_KEY AND C.FLT_DATE = A.FLT_DATE AND C.REP_MODULE = 'IR'
	   WHERE to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi')  
	            BETWEEN TO_DATE(#startTime#,'DDMONYYHH24mi') AND TO_DATE(#endTime#,'DDMONYYHH24mi')
	   AND B.FLT_TYPE = 'A'  
	   <isNotEmpty property="loginCustCode">
		    	AND B.RHO_ID = #loginCustCode# 
	  </isNotEmpty> 
	  <isNotEmpty property="flightKey">
		    	AND B.FLT_KEY = #flightKey#  
	  </isNotEmpty> 
	   <isNotEmpty property="fltType">
		    	AND B.CGO_ACFT_TYPE= #fltType#  
	  </isNotEmpty> 
	   <isNotEmpty property="rhoUser">
		    	AND B.RHO_ID= (select cc.CODE from CUST_COMPANY cc where cc.CODE_DESC = #rhoUser#)  
	  </isNotEmpty> 
	  
	  <isEmpty property="flightKey">
	        <isNotEmpty property="carrierCode">
	           	AND B.CARR_CODE = #carrierCode#  
	        </isNotEmpty>
	        <isNotEmpty property="flightNo">
	        	   AND B.FLT_NO = #flightNo#  
	        </isNotEmpty>
	   </isEmpty>
     <dynamic prepend="ORDER BY ">
         <isNotEmpty property="sortOrder.sortField">
           $sortOrder.sortField$
         </isNotEmpty>
         <isEmpty property="sortOrder.sortField">
          ata,std
         </isEmpty>
	 </dynamic>
</select>

<select id="imp_declramp_searchbydateCOUNT"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
  SELECT COUNT(1)
  FROM  FLT_OPR B  
  INNER JOIN FLT_OPR_EVENTS E ON B.FLT_KEY = E.FLT_KEY AND B.SCH_DATE = E.SCH_DATE AND B.FLT_TYPE = E.FLT_TYPE
  LEFT JOIN IMP_RAMP_CHK_HD A ON B.FLT_KEY = A.FLT_KEY AND B.SCH_DATE = A.FLT_DATE AND B.FLT_TYPE = 'A'
  LEFT  JOIN IMP_CFM_ULD_TOWED T ON   T.FLT_KEY = A.FLT_KEY AND T.FLT_DATE = A.FLT_DATE
  LEFT JOIN IMP_FLT_HAND_SUMMARY C ON C.FLT_KEY = A.FLT_KEY AND C.FLT_DATE = A.FLT_DATE AND C.REP_MODULE = 'IR'
   WHERE to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi')  
            BETWEEN TO_DATE(#startTime#,'DDMONYYHH24mi') AND TO_DATE(#endTime#,'DDMONYYHH24mi')
   AND 
  B.FLT_TYPE = 'A'   
  <isNotEmpty property="flightKey">
	    	AND B.FLT_KEY = #flightKey#  
  </isNotEmpty> 
  <isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND B.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND B.FLT_NO = #flightNo#  
        </isNotEmpty>
   </isEmpty>
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlDeclareLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
<![CDATA[	
       select (COUNT(ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) ffmULD,INB.flt_key flightNo, TO_CHAR(INB.flt_date,'DDMONYY') flightDate
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status='P' 
  		 LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' and (b.trf_type is null or b.trf_type NOT IN ('TT','IF') )
]]>
         <isNotEmpty property="flightKey">
	    AND INB.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND INB.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND INB.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
         and to_char(INB.flt_date,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYY')
         GROUP BY ALLOTGROUP_1.ULD_ALLOT,INB.flt_key,INB.flt_date order by ALLOTGROUP_1.ULD_ALLOT

</select>

<select id="sqlDeclareLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
      select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY||'BULK') bulkqty,
    HD.flt_key flightNo,TO_CHAR(HD.flt_date,'DDMONYY')
    flightDate 
    from IMP_CFM_ULD_TOWED HD 
    left join IMP_CFM_ULD_TOWED_DTL DTL on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date and nvl(DTL.EMPTY,'N')='N' 
    where 'XXX' = 'XXX'
           <isNotEmpty property="flightKey">
	    AND HD.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
        AND substr(HD.FLT_KEY, 0,(select LENGTH(#carrierCode#) from dual))= #carrierCode#
        </isNotEmpty>
        <isNotEmpty property="flightNo">
		 AND substr(HD.flt_key,( select (length(HD.flt_key)-length(#flightNo#)+1) from dual),length(#flightNo#))= #flightNo#
        </isNotEmpty>
  		 </isEmpty>
  		  and to_char(HD.flt_date,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYY')
    order by DTL.ALLOT_TYPE
 </select>
	
	<select id="sqlDeclareLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
          select * from ( select COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT AS actualChkinULD,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where to_char(RAMPCHK.FLT_DATE,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYYHH24mi')
      <isNotEmpty property="flightKey">
	    AND RAMPCHK.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND RAMPCHK.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND RAMPCHK.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
  		 <![CDATA[
  		 AND MULD.H_CONT_IND <> 'Y' AND
  		  MULD.BT_IND <> 'Y' AND
  		   NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
  		  
  		  ]]>
  		 GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date
   union all          
       select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where to_char(RAMPCHK.FLT_DATE,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYYHH24mi')
      <isNotEmpty property="flightKey">
	    AND RAMPCHK.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND RAMPCHK.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND RAMPCHK.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
  		  and (MULD.H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y')
  		   and NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
  		 GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
         order by I.sortingOrder
	</select>
	
		
   	<select id="Ramp_Date_Time_Comparision"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[		
		SELECT TO_CHAR(TO_DATE(#endDate#,'DDMONYY HH24:MI') - TO_DATE(#startDate#,'DDMONYY HH24:MI')) DAYDIFF FROM DUAL
		]]>
   	</select> 
      <select id="imp_declramp_search_header"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
			
		SELECT E.RAMP_COMPL_YN rampStatus,
  rtrim(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY')
  ||' '
  || SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)
  || ':'
  || SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':') AS chkInCompDate,
  E.RAMP_COMPL_USER_ID                                        AS chkInCompId,
   PKG_COMMON.get_flt_ata(D.FLT_KEY, D.SCH_DATE,'A','DD') ata ,
   D.FLT_KEY                     AS flightKey,
  TO_CHAR(D.SCH_DATE,'DDMONYY') AS flightDate

FROM FLT_OPR D
JOIN FLT_OPR_EVENTS E
ON D.FLT_KEY                      = E.FLT_KEY
AND D.SCH_DATE                    = E.SCH_DATE
WHERE  D.FLT_KEY  = upper(#flightKey#) AND
TO_CHAR(D.SCH_DATE,'DDMONYY') = #flightDate#
AND D.FLT_TYPE                    = 'A'
		
   	</select> 	
		<select id="imp_declramp_search"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
	
	SELECT A.TR_NO AS trNo, 
			D.FLT_KEY AS flightNo , 
			D.TR_NO as tr_No,
			D.CARR_CODE AS carrierCode ,
			A.DOC_LINE_NO AS docLine, 
			A.ULD_KEY AS uldKey,
		    A.DAM_IND As damInd,
			A.EMPTY_IND AS empty, 
			A.EIC_IND AS eic,
			A.LOC_CODE AS wareHouseLoc, 
			TO_CHAR(A.CHKIN_DATE,'DDMONYY HH24:MI') AS chkInDate, 
			A.RMK AS remark,
			E.RAMP_COMPL_YN rampStatus,
			D.FLT_KEY AS	flightKey,
			TO_CHAR(D.SCH_DATE,'DDMONYY') AS flightDate,	
		    rtrim(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY') ||' '|| SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':') AS chkInCompDate,
		    E.RAMP_COMPL_USER_ID AS chkInCompId, 
		    A.CFM_STATUS AS uldLocCfm,
		    PKG_COMMON.get_flt_ata(D.FLT_KEY, D.SCH_DATE,'A','DD') ata ,
		    (CASE WHEN 
		      (SELECT to_char(a.hover_date,'DDMONYY HH24:MI')
			  FROM imp_ramp_dolly_hd a,
			    imp_ramp_dolly_dtl b
			  WHERE b.uld_key= A.ULD_KEY
			  AND a.dolly_id =b.dolly_id
			  AND a.flt_key  =E.FLT_KEY
			  AND a.flt_date =E.SCH_DATE
			  ) IS NOT NULL THEN (SELECT to_char(a.hover_date,'DDMONYY HH24:MI')
			  FROM imp_ramp_dolly_hd a,
			    imp_ramp_dolly_dtl b
			  WHERE b.uld_key= A.ULD_KEY
			  AND a.dolly_id =b.dolly_id
			  AND a.flt_key  =E.FLT_KEY
			  AND a.flt_date =E.SCH_DATE
			  ) ELSE TO_CHAR(A.CHKIN_DATE,'DDMONYY HH24:MI') END)    AS handoverDate,
			  CASE
		    WHEN (SELECT COUNT(1)
		      FROM imp_ramp_dolly_hd hd,
		        imp_ramp_dolly_dtl dtl
		      WHERE hd.ho_no IS NOT NULL
		      AND not exists(select 1 from imp_ramp_chk_dtl chk
		      where dtl.flt_key=chk.flt_key
		      and dtl.flt_date=chk.flt_date
		      and dtl.uld_key=chk.uld_key)
		      AND hd.flt_key  =dtl.flt_key
		      AND hd.dolly_id =dtl.dolly_id
		      AND hd.flt_date =dtl.flt_date
		      AND a.flt_key   =dtl.flt_key
		      AND a.flt_date  =dtl.flt_date
		      AND a.uld_key   = dtl.ULD_KEY )>0
		    THEN 'YELLOW'
		    ELSE NULL
		  END AS uldwithoutchkin,
		    (SELECT TO_CHAR(U.FST_MHCS_ETRY_TIME,'DDMONYY HH24:MI')
			  FROM imp_ramp_chk_dtl U 
			  WHERE U.uld_key= a.ULD_KEY
			  AND u.flt_key  =E.FLT_KEY
			  AND u.flt_date =E.SCH_DATE
			  ) AS mhsDate          
		FROM   FLT_OPR D 
		JOIN FLT_OPR_EVENTS E ON D.FLT_KEY = E.FLT_KEY AND D.SCH_DATE = E.SCH_DATE AND D.FLT_TYPE = E.FLT_TYPE
		left join IMP_RAMP_CHK_HD B on B.FLT_KEY = D.FLT_KEY AND B.FLT_DATE = D.SCH_DATE
		left join IMP_RAMP_CHK_DTL A on B.TR_NO = A.TR_NO and (SURPLUS_IND = 'N' or (SURPLUS_IND = 'Y' and CHKIN_YN = 'Y'))
		WHERE  D.FLT_KEY  = upper(#flightKey#) AND
		    TO_CHAR(D.SCH_DATE,'DDMONYY') = #flightDate#
		    AND   D.FLT_TYPE = 'A' AND (NVL (a.chkin_yn, 'N') = 'Y' OR a.tr_no IS NULL) 
		    UNION ALL
SELECT null                           AS trNo,
  T.FLT_KEY                               AS flightNo ,
  null                              AS tr_No,
  NULL                             AS carrierCode ,
  NULL                           AS docLine,
  T.ULD_KEY                               AS uldKey,
  T.DAM_IND                               AS damInd,
  T.EMPTY_IND                             AS empty,
  T.EIC_IND                               AS eic,
  NULL                              AS wareHouseLoc,
  null AS chkInDate,
null                               AS remark,
NULL rampStatus,
  T.FLT_KEY                     AS flightKey,
  TO_CHAR(T.FLT_DATE,'DDMONYY') AS flightDate,
 NULL AS chkInCompDate,
  NULL                                       AS chkInCompId,
 null                                               AS uldLocCfm,
  PKG_COMMON.get_flt_ata(H.FLT_KEY, H.FLT_DATE,'A','DD') ata, 
  TO_CHAR(h.hover_date,'DDMONYY HH24:MI') AS handoverDate,
    CASE
    WHEN (SELECT COUNT(1)
      FROM imp_ramp_dolly_hd hd,
        imp_ramp_dolly_dtl dtl
      WHERE hd.ho_no IS NOT NULL
       AND not exists(select 1 from imp_ramp_chk_dtl chk
      where dtl.flt_key=chk.flt_key
      and dtl.flt_date=chk.flt_date
      and dtl.uld_key=chk.uld_key)
      AND hd.flt_key  =dtl.flt_key
      AND hd.dolly_id =dtl.dolly_id
      AND hd.flt_date =dtl.flt_date
      AND T.flt_key   =dtl.flt_key
      AND T.flt_date  =dtl.flt_date
      AND T.uld_key   = dtl.ULD_KEY )>0
    THEN 'YELLOW'
    ELSE NULL
  END AS uldwithoutchkin,
	   (SELECT TO_CHAR(U.FST_MHCS_ETRY_TIME,'DDMONYY HH24:MI')
  FROM imp_ramp_chk_dtl U 
  WHERE U.uld_key= t.ULD_KEY
  AND u.flt_key  =h.FLT_KEY
  AND u.flt_date =h.flt_DATE
  ) AS mhsDate
	FROM
  IMP_RAMP_DOLLY_HD H

	LEFT JOIN IMP_RAMP_DOLLY_DTL T
	ON T.FLT_KEY   = H.FLT_KEY
	AND T.FLT_DATE = H.FLT_DATE
	AND T.DOLLY_ID=H.DOLLY_ID 
	WHERE H.FLT_KEY                   = upper(#flightKey#)
	AND TO_CHAR(H.FLT_DATE,'DDMONYY') = #flightDate#
	AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_CHK_DTL
    WHERE ULD_KEY=T.ULD_KEY
    AND FLT_KEY  =T.FLT_KEY
    AND FLT_DATE =T.FLT_DATE
    ) 
  
		   	ORDER BY uldKey
	</select>
	
	<!-- added for check in uld summary starts -->
	<!--  Changed for QR -->
	<select id="imp_declramp_summary"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
 	<![CDATA[
		 SELECT ((a.QTY) ||(a.ALLOT_TYPE))  uldTowedConfirm,
		        (( SELECT NVL(COUNT(1),0) FROM imp_ramp_chk_dtl a 
		        						 join uld_group_type b on b.uld_type=a.uld_type )
		        	|| (SELECT COUNT(1)  FROM uld_group_type b,mast_uld_allot_group c  WHERE b.uld_group = c.uld_group)) actualChkinULD,
		  ( (SELECT NVL(COUNT(1),0) FROM imp_ramp_inb_chk_dtl a 
		                JOIN ddt_msg m ON a.flt_key = m.flt_key and a.flt_date = m.flt_date and m.ddt_status='P' 
		  							JOIN ddt_uld b  ON b.tr_no = m.tr_no and a.uld_key = b.uld_key AND a.empty_ind   = 'N' AND a.ffm_ind ='Y'  AND b.trf_type not in ('TT','IF')  
		      WHERE a.uld_type=#uldType#)||(SELECT tab2.uld_allot FROM uld_group_type tab1,mast_uld_allot_group tab2 WHERE tab1.uld_group = tab2.uld_group AND tab1.uld_type =#uldType#)) ffmULD
		  
		   FROM IMP_CFM_ULD_TOWED_DTL a
		  WHERE a.flt_key =upper(#flightKey#) AND a.flt_date=#flightDate#	
	  ]]>
	</select>
	<!-- added for check in uld summary ends -->
		<update id="imp_declramp_complete" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE IMP_RAMP_CHK_HD SET 
			CHKIN_COMPLETE	   = 'Y', 
			LM_USER_ID		   = #crUserId#, 
			COMPL_USER_ID	   = #crUserId#, 
			LM_DATE			   = sysdate, 
			COMPL_DATE		   = sysdate
		WHERE FLT_KEY		   =  upper(#flightKey#)	
			  AND FLT_DATE	   =   #flightDate# 
	</update>
		<update id="imp_declramp_complete_flt_event" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE FLT_OPR_EVENTS SET 
		RAMP_COMPL_YN = 'Y' , 
		RAMP_COMPL_DATE =  SYSDATE , 
		RAMP_COMPL_TIME = TO_CHAR(SYSDATE,'HH24MI') , 
		RAMP_COMPL_USER_ID = #crUserId#,
		LM_USER_ID  = #crUserId#, 
		LM_DATE = sysdate,
		TR_TYPE = #trtype#
		where FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'A'
	</update>
	<update id="imp_declramp_unclose" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE IMP_RAMP_CHK_HD 
			SET 
			CHKIN_COMPLETE	   = 'N', 
			LM_USER_ID		   = #crUserId#, 
			LM_DATE			   = sysdate ,
			COMPL_DATE		   = null
		WHERE FLT_KEY		   =  upper(#flightKey#)	
			  AND FLT_DATE	   =   #flightDate# 
	</update>
		<update id="imp_declramp_unclose_flt_event" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE FLT_OPR_EVENTS SET 
		RAMP_COMPL_YN = 'N' , 
		RAMP_COMPL_DATE = null ,
		RAMP_COMPL_TIME = null , 
		RAMP_COMPL_USER_ID = null,
		LM_USER_ID  = #crUserId#, 
		LM_DATE = sysdate,
		TR_TYPE = #trtype#
		where FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'A'
	</update>
		<select id="imp_declramp_already_comp"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0)FROM FLT_OPR_EVENTS WHERE FLT_KEY  = upper(#flightKey#) AND 
		SCH_DATE	=  TO_DATE( #flightDate#, 'DDMONYY') AND RAMP_COMPL_YN ='Y' AND FLT_TYPE = 'A'
	</select>
	<select id="imp_declramp_unclose_validate"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR_EVENTS WHERE RAMP_COMPL_YN = 'N' AND			
			FLT_KEY		   =  upper(#flightKey#)	AND
			SCH_DATE		   =   TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE = 'A'
	</select>
	<!-- END - Queries added for DDS_IMP_RAMP_DeclareRamp Complete functionlity-->
<!--Declare Document Complete Starts here  -->

	<select id="decdocumentcomplete" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT evnt.TR_NO fltEventTrNo, 
		flt.CARR_CODE flightKey,
		flt.FLT_KEY flightNoKey, TO_CHAR(flt.SCH_DATE,'DDMONYY') flightDate,  
		flt.ACT_TIME  ata, 
   		<!-- ltrim(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4), ':') as ataTime, -->
   		PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A','DD') AS ataTime ,	
		NVL(shp.ManfShp, 0) noOfManfShpm, 
		NVL(shp.CARShp, 0) noOfShpmCAR,  NVL(shp.mtnCAR, 0) mtnCAR,NVL(shp.DIRShp, 0) noOfDIRShpm, NVL(shp.mtnDIR, 0) mtnDIR,  NVL(shp.CIR_Pcs, 0) noOfCIRShpm,  
		TO_CHAR(evnt.DOC_COMPL_DATE,'DDMONYY') docComplDate,		
		evnt.DOC_COMPL_Time docComplTime,		
   		ltrim(SUBSTR(TRIM(TO_CHAR(evnt.DOC_COMPL_Time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(evnt.DOC_COMPL_Time,'0000')),3,4), ':') as docComplTimeDisp,		
		evnt.DOC_COMPL_USER_ID docComplStaffID,TO_CHAR(fltrpt.LM_DATE ,'ddMONYY HH24:MI') AS fltHdlgDataGenDate, TO_CHAR(evnt.LM_DATE, 'ddMMYY HH24:MI:SS') as lmDate,
		CASE WHEN evnt.DOC_ARR_DATE  is null THEN 'N' ELSE 'Y' END AS docrecvInd
		FROM FLT_OPR flt 		 
		JOIN FLT_OPR_EVENTS evnt ON 
			evnt.FLT_KEY = flt.FLT_KEY AND 
			evnt.SCH_DATE = flt.SCH_DATE AND 
			evnt.FLT_TYPE = 'A'		
		LEFT JOIN (SELECT count(1) as CARShp, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 	
			   SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' and MANIFEST_PCS > 0 THEN 1 ELSE 0 END) AS ManfShp, 
			   SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS mtnCAR,	
			   SUM(CASE WHEN DOC_DISC IS NOT NULL  THEN 1 ELSE 0 END) AS DIRShp,
			   SUM(CASE WHEN DIR_PROC_USER IS NOT NULL  THEN 1 ELSE 0 END) AS mtnDIR,	
			   SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR_Pcs 
			   FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp 
		 ON flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND
			flt.FLT_TYPE = 'A'	
		LEFT JOIN IMP_FLT_HAND_SUMMARY fltrpt ON 
			fltrpt.FLT_KEY = flt.FLT_KEY AND 
			fltrpt.FLT_DATE = flt.SCH_DATE AND 
			fltrpt.Rep_Module = 'ID' 				
		WHERE   
			flt.SCH_DATE = TO_DATE(#flightDate#, 'ddmonyy')		
			AND	flt.FLT_TYPE = 'A'
		<isNotEmpty property="flightKey">
			AND	flt.CARR_CODE = #flightKey#
		</isNotEmpty>
		<isNotEmpty property="flightNo">
			AND	flt.FLT_NO = #flightNo#
		</isNotEmpty>
		<isNotEmpty property="flightNoKey">
			AND	flt.FLT_KEY = #flightNoKey#
		</isNotEmpty>
		<isEmpty property="flightKey">
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>		
		ORDER BY flt.FLT_KEY ,flt.SCH_DATE 	, flt.ACT_TIME
	</select>
	
	<!-- Err if count > 0, 'DIR is not maintained' -->
	<!--  Changed for QR -->
<select id="imp_DecDocCompl_DIRisnotmaintained"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">	
	   select count(1) from IMP_CAR_SHP s
		JOIN (select awb_No , awb_date from IMP_CAR_AWB
		where awb_dest='HKG') a
		On a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE
		where s.FLT_KEY = #flightNoKey# and s.FLT_DATE = #flightDate# 
    and (s.Doc_Disc = 'FDAW' OR s.Doc_Disc = 'MSAW' OR s.Doc_Disc = 'MSCN'  OR s.Doc_Disc = 'FDCN')
    and s.DIR_PROC_USER is null
</select>
	
<!-- Err if count > 0, 'CAR not created for all consignments' -->
<!--  Changed for QR -->
<select id="imp_DecDocCompl_CARnotcreatedforallconsignments"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">
		select count(1)  
		from Imp_CAR_SHP shp JOIN  IMP_CAR_AWB awb
		ON awb.AWB_NO=shp.AWB_NO and awb.AWB_DATE=shp.AWB_DATE   
		where shp.CAR_Created = 'N'   and shp.Flt_Key = #flightNoKey# and shp.Flt_Date = #flightDate# And awb.Catalog not like 'T%' and (awb.awb_dest='HKG')
</select>
<select id="imp_DecDocCompl_epdephforallconsignments"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">
SELECT COUNT(1)
FROM Imp_CAR_SHP shp
JOIN IMP_CAR_AWB awb
ON awb.AWB_NO    =shp.AWB_NO
AND awb.AWB_DATE =shp.AWB_DATE
WHERE 'EPH' IN (awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9)
AND 'EPD' IN (awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9)
AND shp.Flt_Key  = #flightNoKey#
AND shp.Flt_Date = #flightDate#
</select>	
<update id="updateddcnull" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		UPDATE FLT_OPR_EVENTS SET 
		DOC_COMPL_DATE = null , 
		DOC_COMPL_TIME = null , 
		DOC_COMPL_USER_ID = null,
		DOC_COMPL_YN='N',
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate,
		TR_TYPE='DDOCU'
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>

<update id="updateddc" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		UPDATE FLT_OPR_EVENTS SET 
		DOC_COMPL_DATE = SYSDATE , 
		DOC_COMPL_TIME = TO_CHAR(SYSDATE,'HH24MI') , 
		DOC_COMPL_YN='Y',
		DOC_COMPL_USER_ID = #lmUserId# ,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate,
		TR_TYPE='DDOCC'
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>
	
<select id="checkcartranshipment" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
	select a.awb_No awbNo,to_char(a.awb_date,'DDMONYY') awbDate,#flightNoKey# as flightNoKey,#flightDate# as flightDate from IMP_CAR_SHP s
		JOIN (select awb_No , awb_date from IMP_CAR_AWB
		where awb_origin!='HKG' and awb_dest!='HKG') a
		On a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE
		where s.FLT_KEY = #flightNoKey# and s.FLT_DATE = #flightDate# 
</select>

<!--  Changed for QR 
<update id="updatecartranshipmentawb" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
	update AWB a set a.CAR_YN='Y' 
     where (select count(1) from IMP_CAR_SHP s
		 where a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE and s.FLT_KEY =#flightNoKey# and s.FLT_DATE = #flightDate#)>0
</update> -->

<update id="updatecartranshipment" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
	 UPDATE Imp_CAR_SHP SET 
     CAR_Created='Y' 
     where  FLT_KEY = #flightNoKey# and FLT_DATE = #flightDate#  and AWB_NO = #awbNo# and to_char(AWB_DATE,'DDMONYY') = #awbDate#
</update>

<select id="gmtsysdate" parameterClass="map" resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE  - 1/3,'DDHH24MI') FROM DUAL
</select>
	
<select id="getBasePortForSendFad" parameterClass="map" resultClass="java.lang.String">
		SELECT BASE_PORT FROM SYS_PARAM
	</select>	

<select id="getSitaAddress" parameterClass="cargo.cms.imprt.bo.TrackingBO" resultClass="cargo.cms.imprt.bo.SitaAddressBO">			
	<![CDATA[
	SELECT DISTINCT D.SITA_ADDR sitaAddress
	FROM CUST_AIRL_SITA_CIMP_MSG M
	JOIN CUST_AIRL_SITA_CIMP_DTL D ON M.TR_NO = D.TR_NO
	WHERE CARR_CODE = #carrCode# AND MSG_TYPE = #status#
	AND (FLT_KEY = nvl(#fltKey#, 'ZZZ99999') or FLT_KEY = 'ZZZ99999')
	]]>
</select>

<select id="getOriginAddress" resultClass="java.lang.String" parameterClass="java.lang.String">			
	SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'SITA_ORI_ADD'
</select>


<select id="aatcarrhand"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CARRIER WHERE CODE = #PARAM# AND OWNED_CARR = 'Y'
</select>

<select id="carrierCheck"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CARRIER WHERE CODE = #PARAM#
</select>

<select id="fltNoCheck"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1) FROM FLT_OPR WHERE CARR_CODE = #fltcarrier# and  FLT_NO=#fltno#
</select>

<!--  Changed for QR -->
<select id="fltStatus"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1)	
	FROM FLT_OPR_EVENTS  
	WHERE FLT_KEY = #fltNoKey# AND FLT_CLS_YN = 'Y' AND FLT_TYPE = 'A' AND sch_date between #FromDate# AND #ToDate# 
</select>


	<select id="validate_uld_notin_aatinventory" parameterClass="map" resultClass="java.lang.String" >
	 <![CDATA[
		SELECT nvl(count(1),0) FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# AND CFM_STATUS != 'UNCONFIRMED' AND length(ULD_KEY) >= 9
	]]>
	</select>
	
<!--Declare Document Complete Ends here  -->	
<!-- Maintain CAR Queries Start -->
<select id="checkImpCARAWBExists" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
</select>
<select id="imp_car_getFwbCnsgn"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.String">
	select csgne_name fwbCnsgnName from edi_fwb WHERE awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and rownum=1
</select>

	<select id="check_RUN_CODE_VALUE"  parameterClass="map" resultClass="java.lang.String">	
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE like #RULE_CODE# and RULE_VALUE = #RULE_VALUE# and rownum = 1
	</select>

<!--  Changed for QR -->
<select id="imp_car_getmnfstdtls"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		select sum(manifest_pcs) manifestPcs,sum(manifest_wt) manifestWt 
		from imp_car_shp
        where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') 
        AND not (flt_key = #fltKey# AND flt_date = TO_DATE(#fltDate#,'DDMONYY'))
        AND CAR_CREATED = 'Y'
    </select>
<select id="checkAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM awb_inventory
        WHERE flt_key = #fltKey#
        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
        AND awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
        AND locn_wt = 0
	</select>
	
	<select id="getAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT seq_no seqNo, locn_pcs locnPcs, locn_wt locnWt  FROM awb_inventory
               WHERE flt_key = #fltKey#
		        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		        AND awb_no = #awbNo#
		        AND awb_date = TO_DATE(#awbDate#,'DDMONYY') AND locn_wt = 0
    </select>
	<select id="imp_car_getSumRecvPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND locn_wt != 0
		]]>
	</select>
	<select id="imp_car_getSumRecvPcWt_TS" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND locn_wt != 0
		]]>
	</select>
	 <update id="updateAWBPcsWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE awb_inventory SET locn_wt = round(nvl(#locnWt#,0),2) WHERE seq_no = #seqNo#
	</update>
<parameterMap id="FSUAwdMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuAwd" parameterMap="FSUAwdMap" >
	{call PKG_FSU.FSU_AWD(?,?,?)}
</procedure>
<parameterMap id="FSUAwrMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuAwr" parameterMap="FSUAwrMap" >
	{call PKG_FSU.FSU_AWR(?,?,?,?,?)}
</procedure>

<select id="imp_flt_finalize_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM flt_opr_events FLT,IMP_CAR_SHP SHP WHERE 
		 FLT.FLT_KEY = #fltKey#  
		AND FLT.SCH_DATE= TO_DATE( #fltDate#, 'DDMONYY') AND FLT.FLT_TYPE='A'
		AND FLT.ffm_final_date is not null
		AND FLT.FLT_KEY = SHP.FLT_KEY
		AND FLT.SCH_DATE = SHP.FLT_DATE
		AND SHP.AWB_NO=#awbNo#
	</select>


<select id="getMappingcustMaster"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT code FROM cust_company WHERE CODE_DESC = #consgName#
</select>

<select id="getMatchAliasMappingCompany"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT code_desc FROM cust_company WHERE code IN (
		      SELECT cust_no FROM CUST_AGENT_ALIAS WHERE ALIAS_NAME = #consgName#
		      AND EXISTS (SELECT code FROM cust_company WHERE code=cust_no AND cons_yn='Y')
		) AND rownum = 1
</select>
	
<select id="get_car_list" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO" >	
		  SELECT 
			A.AWB_NO AS awbNo, 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE,'DDMONYY')  AS awbDate, 
			A.AWB_PRFX AS awbPrefix , 
			A.CARR_CODE AS carrCode, 
			TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
			A.FLT_KEY AS fltKey, 
			B.AWB_PCS AS awbPieces, 
			B.AWB_WT AS awbWeight,
			A.MANIFEST_PCS AS manifestPcs, 
			A.MANIFEST_WT AS manifestWt, 
			A.CAR_CREATED AS carCreated, 
			B.AWB_ORIGIN AS awbOrigin, 
			B.AWB_DEST AS awbDestination, 
			B.CONTENT AS content,  
			B.CHRG_MODE AS chargeMode, 
			<!-- ELIGIBILITY_STATUS AS eligibilityStatus, -->
			B.PRINT_EAWB_IND AS printEawbSrf , 
			(SELECT DECODE(COUNT(1),0,'Y','N') FROM MAST_CARRIER carrier where nvl(allow_esrf,'N') = 'Y' and carrier.code = AWB.carr_code) as disableEAWB,
			(SELECT DECODE(COUNT(1),0,'N','Y')  FROM  cust_company where code_desc = B.APPNTD_AGENT and nvl(allow_esrf_aa,'N') = 'Y') as esrfAgentYN,
			B.SPL_CODE1 AS splCode1, B.SPL_CODE2 AS splCode2, B.SPL_CODE3 AS splCode3, 
			B.SPL_CODE4 AS splCode4, B.SPL_CODE5 AS splCode5, B.SPL_CODE6 AS splCode6,
			B.SPL_CODE7 AS splCode7, B.SPL_CODE8 AS splCode8,B.SPL_CODE9 AS splCode9,
			A.NOA_IND AS noaInd,AGENT_CUST_NO AS agentId,
			B.APPNTD_AGENT as agentName,
			B.CATALOG catalog,
			AWB.AWB_TYPE as awbType,
			FWB.csgne_name as fwbConsignee,
			DECODE(FWB.AWB_NO,'','N',NULL,'N','Y') as fwbreceived,
			B.csgne_name consgName,
			(SELECT FUN_GET_ESRF_STATUS(A.AWB_NO,A.AWB_DATE) as eligibilityStatus from DUAL)as eligibilityStatus 
		FROM   IMP_CAR_SHP A
           JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
           JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN (SELECT MAX(to_number(TR_NO)) TR_NO,AWB_NO,AWB_DATE FROM edi_fwb G GROUP by AWB_NO,AWB_DATE) EDIFWB ON EDIFWB.AWB_NO = A.AWB_NO AND EDIFWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN EDI_FWB FWB ON FWB.TR_NO = EDIFWB.TR_NO
		WHERE A.FLT_KEY  = #fltKey#   AND
			A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') 
			<isNotEmpty property="eligibilityStatus" prepend="AND">
             	(SELECT FUN_GET_ESRF_STATUS(A.AWB_NO,A.AWB_DATE) as eligibilityStatus from DUAL) = #eligibilityStatus#
           </isNotEmpty>
           <isEqual property="esrfAgentYN" compareValue="Y" prepend="AND">
             	(SELECT DECODE(COUNT(1),0,'N','Y')  FROM  cust_company where code_desc = B.APPNTD_AGENT and nvl(allow_esrf_aa,'N') = 'Y') = #esrfAgentYN#
           </isEqual>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             A.AWB_NO ASC
           </isEmpty>
        </dynamic>
	</select>
	
	<select id="get_car_listCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer" >	
		  SELECT COUNT(1) as totalRowCount
		FROM   IMP_CAR_SHP A
           JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
           JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN (SELECT MAX(to_number(TR_NO)) TR_NO,AWB_NO,AWB_DATE FROM edi_fwb G GROUP by AWB_NO,AWB_DATE) EDIFWB ON EDIFWB.AWB_NO = A.AWB_NO AND EDIFWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN EDI_FWB FWB ON FWB.TR_NO = EDIFWB.TR_NO
		WHERE A.FLT_KEY  = #fltKey#   AND
			A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	<select id="validate_awb_onload" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" 			resultClass="java.lang.String">
		SELECT NVL(count(1),0) FROM  IMP_CAR_SHP A, IMP_CAR_AWB B 
		WHERE	B.CATALOG = 'IO' AND A.AWB_NO    = B.AWB_NO AND 
				A.AWB_DATE  = B.AWB_DATE AND A.FLT_KEY   = #fltKey#   AND 
				A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND B.AWB_NO = #awbNo# 
	</select>
	<parameterMap id="dateMapCreate" class="map" >
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="REUSEYN" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
    </parameterMap>
	<procedure id="imp_car_getAwbDatePkgCreate" parameterMap="dateMapCreate" >
		{? = call PKG_IMP.FUN_GET_AWBDATE_CREATE(?,?,?,?)}
	</procedure>	
	<select id="get_car_detail" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	  SELECT
		A.AWB_NO AS awbNo, 
		TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
		A.AWB_PRFX AS awbPrefix, 
		SUBSTR(A.AWB_NO,4)  awbSuffix , 
		A.AWB_ORIGIN AS awbOrigin,
		A.AWB_DEST AS awbDestination, 
		Decode(A.AWB_PCS,'0','',A.AWB_PCS) AS awbPieces, 
		Decode(A.AWB_WT,'0','',A.AWB_WT) AS awbWeight,
		A.CATALOG AS catalog,
		(SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			   THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			            ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB B WHERE B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,		
		A.CATALOG AS oldCatalog,
		A.CONTENT AS content,
		A.TARMAC_YN AS tarmacInd, 
		A.INTERFACE_YN AS interfaceInd, 
		A.SPL_CODE1 AS splCode1, A.SPL_CODE2 AS splCode2, A.SPL_CODE3 AS splCode3, 
		A.SPL_CODE4 AS splCode4, A.SPL_CODE5 AS splCode5, A.SPL_CODE6 AS splCode6,
		A.SPL_CODE7 AS splCode7, A.SPL_CODE8 AS splCode8,A.SPL_CODE9 AS splCode9,
		A.CNS_CUST_NO AS consigneeCode, 
		A.CSGNE_NAME AS consigneeName,
		A.CSGNE_NAME AS dummyConsigneeName,
		A.APPNTD_AGENT AS appointedAgent,
		AGENT_CUST_NO AS appointedAgentCode,
		Decode(nvl(A.ECT_HANDLER,''),'N','CPCT',A.ECT_HANDLER) AS ectHandler , 
		nvl(ca.HDLG_AGENT, 'CPCT') AS accsHandler, 
		m.CODE_DESC AS relInd, 
		A.BANK_ENDOS AS bankEndos, 
		A.BANK_TYPE AS bankType, 
		(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = b.AWB_NO AND V.FLT_KEY = b.FLT_KEY AND V.FLT_DATE = b.FLT_DATE 
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS ccCode,   
	    DECODE((select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1),null,
		a.AIRLN_RMK, (select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1)) awbRemark,
		DECODE((select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1),null,
		a.AIRLN_RMK, (select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1)) oldAwbRemark, 
		NVL(A.CURR_CODE,A.DECLN_CURR_CODE) AS currencyCode, 
		A.CC_FEE AS ccFee, 
		A.DISB_FEE AS disburse, 
		A.DOC_CHRG AS docCharge,
		A.TTL_CC AS totalCC , 
		A.CC_PP_TOTAL_CHRG AS totalPrepaid, 
		A.CC_CC_TOTAL_CHRG AS totalCollect,
		A.TML_CHRG AS tcFee,         
		A.CHRG_MODE AS chargeMode, 
		A.EXCH_RATE AS exchangeRate, 
		A.FORGN_UNIT AS foreignUnit,  
		A.PPK_TYPE AS ppkTypeAwb,
		A.PPK_TYPE AS oldppkTypeAwb,
		A.BULK_PCS AS bulkPcsAwb, 
		A.BULK_WT AS bulkWtAwb, 
		A.BUP_PCS AS bupPcsAwb, 
		A.BUP_WT AS bupWtAwb,	
		B.PPK_TYPE AS ppkType,
		B.PPK_TYPE AS oldppkType,
		A.FREIGHT AS freightageFor,
		A.FREIGHT_LOCL AS freightageHKG,
		B.CARR_CODE AS carrCode,	
		SUBSTR(TRIM(B.FLT_KEY),LENGTH(B.CARR_CODE)+1,LENGTH(B.FLT_KEY)) AS flightNo,
		B.FLT_KEY AS  fltKey,
		TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate,
		B.MANIFEST_PCS AS manifestPcs, 
		B.MANIFEST_WT AS manifestWt, 
		B.BULK_PCS AS bulkPcs, 
		B.BULK_WT AS bulkWt, 
		B.BUP_PCS AS bupPcs, 
		B.BUP_WT AS bupWt,
		B.BULK_PCS AS oldBulkPcs, 
		B.BULK_WT AS oldBulkWt, 
		B.BUP_PCS AS oldBupPcs, 
		B.BUP_WT AS oldBupWt,
		NVL(B.FFM_FLG,'N') AS ffmFlag, 
		B.CNTG_FLT_CARR AS conFltCarr,  
		B.CNTG_FLT_NO AS conFltNo, 
		TO_CHAR(B.CNTG_FLT_DATE,'DDMONYY') AS conFltDate, 
		B.CNTG_FLT_TIME AS conFltTime, 
		B.CNTG_FLT_DEST AS conFltDest,
		B.LDG_POINT AS ldgPt,
		B.DIR_RMK AS dirRemark,
		B.DIR_RMK AS oldDirRemark,
		B.DOC_DISC AS docDisc,
		B.DOC_DISC AS docDiscOld,
		B.CAR_CREATED AS carCreated,
		B.RECD_PCS As recdPcs, 
		B.RECD_WT recdWt,
		PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A') AS ata,
	    A.CSGNE_ADDR1 as consAddrOne,
	    A.CSGNE_ADDR2 as consAddrTwo,
	    A.CSGNE_ADDR3 as consAddrThree,
	    A.CSGNE_ADDR4 as consAddrFour,
	    A.CSGNE_ADDR5 as consAddrFive,
	    A.CSGNE_PIN_CODE as consPin,
	    decode(A.SAVE_YN,'N',(decode(A.CSGNE_PLACE,'','Hong Kong',A.CSGNE_PLACE)),A.CSGNE_PLACE) as consCity,
	    decode(A.SAVE_YN,'N',(decode(A.CSGNE_CTRY_CODE,'','HK',A.CSGNE_CTRY_CODE)),A.CSGNE_CTRY_CODE) as consCountry,
	    A.SHPR_ADD1 as  shprAddrOne,
	    A.SHPR_ADD2 as  shprAddrTwo,
	    A.SHPR_ADD3 as  shprAddrThree,
	    A.SHPR_ADD4 as  shprAddrFour,
	    A.SHPR_ADD5 as  shprAddrFive,
	    decode(A.SAVE_YN,'N',(decode(A.SHPR_CTRY_CODE,'','HK',A.SHPR_CTRY_CODE)),A.SHPR_CTRY_CODE) as shprCountry,
	    A.SHPR_PIN_CODE as shprPin,
	    decode(A.SAVE_YN,'N',(decode(A.SHPR_PLACE,'','Hong Kong',A.SHPR_PLACE)),A.SHPR_PLACE) as shprCity,
	    A.SHPR_NAME as shprName,
	    A.EMAIL1 as  contactEmail1,
		A.EMAIL2 as  contactEmail2,
		A.EMAIL3 as  contactEmail3,
		A.EMAIL4 as  contactEmail4,
		A.EMAIL5 as  contactEmail5,
		A.FAX1 as  contactFax1,
		A.FAX2 as  contactFax2,
		A.FAX3 as  contactFax3,
		A.MOBILE1 as  contactMobileNo1,
		A.MOBILE2 as  contactMobileNo2,
		A.MOBILE3 as  contactMobileNo3,
		A.VAL_FOR_SCH_COLL as oldSchlCollection,
		A.ALLOW_PACCO as allowPACCO,
		B.MINI_SHP as miniShipment,
		A.DOC_CHK_REQ as docCheckReqd,
		A.DOC_CHK_COMP as docCheck,
		A.BYPASS_REL as byPassRelInd,
		A.HOUSE_FLG as oldHouseFlg,
		awb.IMPCAR_YN as intelliCheckInd ,
		A.CONSOLE_IND as consolInd,
		A.WH_RMK as whRemarks,
		A.HANDL_SERVICE_YN as oldHandledByAgtSrvInd,
		A.REL_IND as relInd,
		(select 'Y' from cust_undertaking where carr_code=B.CARR_CODE and agent_code=AGENT_CUST_NO and 
		TO_CHAR(A.AWB_DATE,'DDMONYY') BETWEEN eff_from and eff_to) as licenseUT,
		A.lock_ind as locked,
		A.lock_ind as oldLocked,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE1),0,'N','Y') as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE2),0,'N','Y') as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE3),0,'N','Y') as shcVal3, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE4),0,'N','Y') as shcVal4, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE5),0,'N','Y') as shcVal5, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE6),0,'N','Y') as shcVal6, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE7),0,'N','Y') as shcVal7, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE8),0,'N','Y') as shcVal8, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE9),0,'N','Y') as shcVal9,
		A.SAVE_YN saveYN,
		A.DOC_DLV docDiv,
		A.BYPASS_REL byPassReleaseIndYN,
		A.DOC_DLV docDlvYN,  
		A.VAL_FOR_SCH_COLL valForScheduleColYN,
		A.DOC_CHK_REQ as documentChkReqdYN,
		A.DOC_CHK_COMP as documentChkComplYN,
		A.HOUSE_FLG as houseFLgYN,  
		A.HANDL_SERVICE_YN as hadldByAgtSrvsYN,
		null ppAmt1,
	    null ppAmt2,
	    null ppAmt3,
	    null ppAmt4,
	    null ppAmt5,
	    null ccAmt1,
	    null ccAmt2,
	    null ccAmt3,
	    null ccAmt4,
	    null ccAmt5,
	    nvl(A.SHPR_STATE_PROVINCE,(select Shpr_State_Province FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) shpState,
	    nvl(A.CSGNE_STATE_PROVINCE,(select CSGNE_STATE_PROVINCE FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')))  cnsgnState,
	    awb.BLDUP_BULK_PCS bldUpBlkPcs,
	    awb.BLDUP_BULK_WT bldUpBlkWt,
	    A.GEN_STRG_CHRG_YN generalStorageCharge,
	    (SELECT FUN_GET_ESRF_STATUS(a.AWB_NO,a.AWB_DATE) from DUAL) as pEligibilityStatus,
	    eligibility_status as oldEligibilityStatus,
	    eligibility_check as eligibilityCheck   		
	  FROM IMP_CAR_AWB A
	  left join IMP_CAR_SHP b on A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
		   and B.FLT_KEY   = #fltKey# and B.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
	  left join FLT_OPR flt_opr on B.FLT_KEY = flt_opr.flt_key and B.FLT_date = flt_opr.sch_date AND flt_opr.FLT_TYPE = 'A'
	  LEFT JOIN CST_AWB CA ON b.AWB_NO = CA.AWB_NO AND b.FLT_KEY = CA.FLT_KEY AND b.FLT_DATE = CA.FLT_DATE
	  left join Mast_Code_Dtl m on m.CODE = ca.REL_IND and CODE_TYPE = 'ACCS_REL_IND'
	  left join AWB awb on A.AWB_NO = awb.AWB_NO AND A.AWB_DATE = awb.AWB_DATE 
	  where  A.AWB_NO = #awbNo# AND
	  A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	  UNION 
     SELECT
		EDI.AWB_NO AS awbNo, 
		TO_CHAR(EDI.AWB_DATE,'DDMONYY') AS awbDate,
		'' awbPrefix, 
		''  awbSuffix , 
		EDI.ORG AS awbOrigin,
		EDI.DES AS awbDestination, 
		Decode(EDI.PCS,'0','',EDI.PCS) AS awbPieces, 
		Decode(EDI.WGT,'0','',EDI.WGT) AS awbWeight,
		(SELECT CATALOG FROM AWB WHERE AWB_NO = EDI.AWB_NO AND AWB_DATE = EDI.AWB_DATE AND ROWNUM = 1) catalog,
		(SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			   THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			            ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB B WHERE B.AWB_NO=EDI.AWB_NO AND B.AWB_DATE=EDI.AWB_DATE) as cargoType,			
		'' oldCatalog,
		(select RATE_GOODS_NATR from EDI_FWB_CHR_RATE where tr_no=EDI.TR_NO AND RATE_GOODS_DATA_I='C' AND ROWNUM=1) content,
		'' tarmacInd, 
		'' interfaceInd, 
		EDI.SPH_SPL_CODE1 AS splCode1, EDI.SPH_SPL_CODE2 AS splCode2, EDI.SPH_SPL_CODE3 AS splCode3, 
		EDI.SPH_SPL_CODE4 AS splCode4, EDI.SPH_SPL_CODE5 AS splCode5, EDI.SPH_SPL_CODE6 AS splCode6,
		EDI.SPH_SPL_CODE7 AS splCode7, EDI.SPH_SPL_CODE8 AS splCode8,EDI.SPH_SPL_CODE9 AS splCode9,
		'' consigneeCode, 
		EDI.CSGNE_NAME AS consigneeName,
		EDI.CSGNE_NAME AS dummyConsigneeName,
		( FUN_GET_APPT_AGENT(EDI.CSGNE_NAME,EDI.AWB_NO,EDI.AWB_DATE) ) AS appointedAgent,
		'' AS appointedAgentCode,
		'' AS ectHandler , 
		'' AS accsHandler, 
		'' AS relInd, 
		'' AS bankEndos, 
		'' AS bankType, 
		'' AS ccCode,   
	   DECODE((select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')),null,
		(select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1), (select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))) awbRemark,
		DECODE((select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')),null,
		(select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1), (select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))) oldAwbRemark,  
		NVL(CVD_ISO_CURR_CODE,'') currencyCode,  
		null ccFee, 
		null disburse, 
		null docCharge,
		null totalCC , 
		null totalPrepaid, 
		null totalCollect,
		null tcFee,         
		'' chargeMode, 
		null exchangeRate, 
		null foreignUnit,  
		'' ppkTypeAwb,
		'' oldppkTypeAwb,
		null bulkPcsAwb, 
		null bulkWtAwb, 
		null bupPcsAwb, 
		null bupWtAwb,	
		'' AS ppkType,
		'' AS oldppkType,
		null freightageFor,
		null freightageHKG,
		'' carrCode,	
		'' flightNo,
		'' fltKey,
		'' fltDate,
		null manifestPcs, 
		null manifestWt, 
		null bulkPcs, 
		null bulkWt, 
		null bupPcs, 
		null bupWt,
		null oldBulkPcs, 
		null oldBulkWt, 
		null oldBupPcs, 
		null oldBupWt,
		'' ffmFlag, 
		'' conFltCarr,  
		'' conFltNo, 
		'' conFltDate, 
		null conFltTime, 
		'' conFltDest,
		'' ldgPt,
		'' dirRemark,
		'' oldDirRemark,
		'' docDisc,
		'' docDiscOld,
		'' carCreated,
		null recdPcs, 
		null recdWt,
		'' ata,
	    EDI.CSGNE_ADDR as consAddrOne,
	    EDI.CSGNE_ADDR2 AS consAddrTwo,
	    ''  consAddrThree,
	    ''  consAddrFour,
	    ''  consAddrFive,
	    EDI.CSGNE_PIN_CODE consPin,
	    decode(EDI.CSGNE_PLACE,'','Hong Kong',EDI.CSGNE_PLACE) as consCity,
	    decode(EDI.CSGNE_CTRY_CODE,'','HK',EDI.CSGNE_CTRY_CODE) as consCountry,
	    EDI.SHPR_ADDR shprAddrOne,
	    EDI.SHPR_ADDR2 AS  shprAddrTwo,
	    ''   shprAddrThree,
	    ''   shprAddrFour,
	    ''   shprAddrFive,
	    decode(EDI.SHPR_CTRY_CODE,'','HK',EDI.SHPR_CTRY_CODE) as shprCountry,
	    EDI.SHPR_PIN_CODE shprPin,
	    decode(EDI.SHPR_PLACE,'','Hong Kong',EDI.SHPR_PLACE) as shprCity,
	    EDI.SHPR_NAME  shprName,
	    ''  contactEmail1,
		'' contactEmail2,
		''  contactEmail3,
		''  contactEmail4,
		''  contactEmail5,
		'' contactFax1,
		'' contactFax2,
		'' contactFax3,
		''  contactMobileNo1,
		''  contactMobileNo2,
		'' contactMobileNo3,
		'' oldSchlCollection,
		'' allowPACCO,
		'' miniShipment,
		'' docCheckReqd,
		'' docCheck,
		'' byPassRelInd,
		'' oldHouseFlg,
		'' intelliCheckInd ,
		'' consolInd,
		(select AWB_RMK from awb where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) whRemarks,
		'' oldHandledByAgtSrvInd,
		'' relInd,
		'' licenseUT,
		'' locked,
		'' as oldLocked,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE1),0,'N','Y') as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE2),0,'N','Y') as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE3),0,'N','Y') as shcVal3, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE4),0,'N','Y') as shcVal4, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE5),0,'N','Y') as shcVal5, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE6),0,'N','Y') as shcVal6, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE7),0,'N','Y') as shcVal7, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE8),0,'N','Y') as shcVal8, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE9),0,'N','Y') as shcVal9,
		'' saveYN,
		'' docDiv,
		'' byPassReleaseIndYN,
		'' docDlvYN,  
		'' valForScheduleColYN,
		'' documentChkReqdYN,
		'' documentChkComplYN,
		'' houseFLgYN,  
		'' hadldByAgtSrvsYN,
		DECODE(EDI.PPD_TOTAL_WT_AMT,0,'',EDI.PPD_TOTAL_WT_AMT) ppAmt1,
	    DECODE(EDI.PPD_VALUE_VC_AMT,0,'',EDI.PPD_VALUE_VC_AMT) ppAmt2,
	    DECODE(EDI.PPD_TAXES_TX_AMT,0,'',EDI.PPD_TAXES_TX_AMT) ppAmt3,
	    DECODE(EDI.PPD_TOTAL_OA_AMT,0,'',EDI.PPD_TOTAL_OA_AMT) ppAmt4,
	    DECODE(EDI.PPD_TOTAL_OC_AMT,0,'',EDI.PPD_TOTAL_OC_AMT) ppAmt5,
	    DECODE(EDI.COL_TOTAL_WT_AMT,0,'',EDI.COL_TOTAL_WT_AMT) ccAmt1,
	    DECODE(EDI.COL_VALUE_VC_AMT,0,'',EDI.COL_VALUE_VC_AMT) ccAmt2,
	    DECODE(EDI.COL_TAXES_TX_AMT,0,'',EDI.COL_TAXES_TX_AMT) ccAmt3,
	    DECODE(EDI.COL_TOTAL_OA_AMT,0,'',EDI.COL_TOTAL_OA_AMT) ccAmt4,
	    DECODE(EDI.COL_TOTAL_OC_AMT,0,'',EDI.COL_TOTAL_OC_AMT) ccAmt5,
	    EDI.SHPR_STATE_PROVINCE shpState,
	    EDI.CSGNE_STATE_PROVINCE cnsgnState,
	    null bldUpBlkPcs,
	    null bldUpBlkWt,
	    NULL generalStorageCharge,
	    (SELECT FUN_GET_ESRF_STATUS(EDI.AWB_NO,EDI.AWB_DATE)  from DUAL) as pEligibilityStatus,
	    '' as oldEligibilityStatus,
	    '' as eligibilityCheck        	   		
	  FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND
	  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND not exists (select 1 from imp_car_shp where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
   </select>
  <select id="get_awb_rmk_impcar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
   	select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1
   </select>
    <select id="get_car_edi_awb_cont_info" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
    SELECT distinct contId,contName,contType,docLineNo from (
    	select contact.cont_id contId,substr(contact.cont_name,0,15) contName,contact.cont_type contType,DOC_LINE_NO docLineNo FROM CAR_AWB_CONTACT_INFO contact WHERE contact.AWB_NO = #awbNo# AND
	  	contact.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
    	UNION 
   		select contact.cont_id contId,substr(contact.cont_name,0,15) contName,contact.cont_type contType, null docLineNo FROM v_edi_fwb EDI,EDI_FWB_CONTACT contact WHERE EDI.AWB_NO = #awbNo# AND
	  	EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND EDI.tr_no=contact.tr_no AND (contact.CONT_TYPE='SHP' OR contact.CONT_TYPE='CNE') AND 
    	not exists (select 1 from CAR_AWB_CONTACT_INFO where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) order by contType desc,docLineNo
    </select>
    <insert id="insertAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
    	insert into CAR_AWB_CONTACT_INFO 
			(AWB_NO,AWB_DATE,DOC_LINE_NO,CONT_ID,CONT_NAME,CONT_TYPE)
		values
			(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#docLineNo#,#contId#,#contName#,#contType#)
    </insert>
    <update id="updateAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
    	update CAR_AWB_CONTACT_INFO set CONT_ID=#contId#,CONT_NAME=#contName#,CONT_TYPE=#contType# 
    	where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND DOC_LINE_NO=#docLineNo#
    </update>
    <select id="getMaxDocLineNoAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		SELECT NVL(MAX(DOC_LINE_NO)+1,1) FROM CAR_AWB_CONTACT_INFO WHERE AWB_NO =#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   	</select>
	 <select id="get_car_charge" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.CarItemChargeBO">
		    SELECT COLL_CHARGE_DESC AS itemCode, DECODE(PP_AMT,0,'',PP_AMT) AS ppAmt, DECODE(CC_AMT,0,'',CC_AMT) AS ccAmt 
		FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =#awbNo# AND	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   </select>
	<delete id="delete_car_charge" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		DELETE FROM IMP_CAR_CHRG_ITM  WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   </delete>
	<select id="get_actual_consignee"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.ConsigneeBO">
		<![CDATA[
			SELECT C.CODE AS consCode, C.CODE_DESC AS consName FROM CUST_AGENT_ALIAS A 
			JOIN CUST_COMPANY C ON C.CODE = A.CUST_NO WHERE A.ALIAS_NAME = #dummyConsigneeName#
			]]>
   </select>
	 <select id="countCheckForAWBPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select count(1) from cst_awb where awb_no = #awbNo# and flt_key = #fltKey# and flt_date = #fltDate#
   </select>
	 <select id="get_ata_for_maintain_car" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	   SELECT PKG_COMMON.get_flt_ata(#fltKey#, #fltDate#, 'A') AS ata from DUAL
   </select>	
	 <select id="imp_mcar_cataloglist"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CatalogBO">
		SELECT CODE AS catalogCode,CODE_DESC AS catalogName FROM MAST_CODE_DTL 
		WHERE CODE_TYPE = 'CATALOG' AND CODE IN ('IG','IS','TG','TR') 
		order by CODE
	</select>
	<select id="mainatin_car_validate_1" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(count(1),0) 
			FROM IMP_CAR_SHP 
			WHERE AWB_NO=#AWBNO# AND 
				AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND
				RECD_PCS > 0 AND 
				RECD_WT > 0
		]]>
	</select>
	 <update id="update_imp_car_shp" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_SHP SET
			MANIFEST_PCS  =  NVL(#manifestPcs#,0), 
			MANIFEST_WT  =  NVL(#manifestWt#,0), 
			PPK_TYPE   = #ppkType#, 
			BULK_PCS   = nvl(#bulkPcs#,0), 
			BULK_WT   = nvl(#bulkWt#,0), 
			BUP_PCS   = nvl(#bupPcs#, 0),
			BUP_WT   = nvl(#bupWt#, 0),
			LDG_POINT  = NVL(#ldgPt#,0),
			DIR_RMK   = #dirRemark#,
			DOC_DISC   = #docDisc# ,
			CNTG_FLT_CARR = #conFltCarr#,  
			CNTG_FLT_NO  = #conFltNo#, 
			CNTG_FLT_DATE = #conFltDate#, 
			CNTG_FLT_TIME = #conFltTime#, 
			CNTG_FLT_DEST = #conFltDest#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			RECD_PCS = #recdPcs#, 
		   	RECD_WT  = #recdWt#,
		   	SCH_COLL_YN = NVL(#schlCollection#,'N'),
		   	AIRL_RMK = #awbRemark#,
		   	CAR_CREATED = DECODE(CAR_CREATED,'Y','Y',#cfmIndicator#),
		   	TR_TYPE=#trtype#,
		   	SAVE_YN='Y',
		   	LIC_YN=#licenseUT#
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_KEY  = #fltKey#
	</update>
	<update id="update_imp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_AWB SET
			AWB_DEST     = #awbDestination#, 
			AWB_ORIGIN     = #awbOrigin#, 
			AWB_PCS      = nvl(#awbPieces#,0),  
			AWB_WT      = nvl(#awbWeight#,0), 
			CONTENT      = #content#,
			CATALOG      = #catalog#,
			SPL_CODE1     = #splCode1#, 
			SPL_CODE2     = #splCode2#, 
			SPL_CODE3     = #splCode3#,  
			SPL_CODE4     = #splCode4#,  
			SPL_CODE5     = #splCode5#,  
			SPL_CODE6     = #splCode6#,  
			SPL_CODE7     = #splCode7#,  
			SPL_CODE8     = #splCode8#, 
			SPL_CODE9     = #splCode9#, 
			CSGNE_NAME     = #consigneeName#,
			CNS_CUST_NO     = #consigneeCode#,
			APPNTD_AGENT    = #appointedAgent#,
			AGENT_CUST_NO  = #appointedAgentCode#,
	 		ECT_HANDLER     = #ectHandler#,
			FWB_CNS_AS_ALIAS   = NVL(#fwbAlias#,'N'),  
			BANK_ENDOS     = #bankEndos#,
			BANK_TYPE     = #bankType#,    
			AIRLN_RMK      = #awbRemark#,
			CURR_CODE     = #currencyCode#, 
			EXCH_RATE     = #exchangeRate#,
			DISB_FEE     = #disburse#, 
			DOC_CHRG     = #docCharge#,  
			CC_FEE      = #ccFee#, 
			TML_CHRG      = #tcFee#,
			TTL_CC      = #totalCC#, 
			CC_PP_TOTAL_CHRG   = #totalPrepaid#, 
			CC_CC_TOTAL_CHRG   = #totalCollect#, 
			CHRG_MODE     = #chargeMode#,
			FREIGHT = nvl(#freightageFor#,0),
			FREIGHT_LOCL = nvl(#freightageHKG#,0),
			PPK_TYPE = #ppkTypeAwb#,
			BULK_PCS = nvl(#bulkPcsAwb#,0),
			BULK_WT  = nvl(#bulkWtAwb#,0),
			BUP_PCS  = nvl(#bupPcsAwb#,0),
			BUP_WT = nvl(#bupWtAwb#,0), 
			CONSOLE_IND = #consolInd#,
			CSGNE_ADDR1 = #consAddrOne#,	
			CSGNE_ADDR2 = #consAddrTwo#,	
			CSGNE_ADDR3 = #consAddrThree#,	
			CSGNE_ADDR4 = #consAddrFour#,	
			CSGNE_ADDR5 = #consAddrFive#,
			CSGNE_PLACE = #consCity#,	
			CSGNE_PIN_CODE = #consPin#,	
			CSGNE_CTRY_CODE = #consCountry#,
			AGENT_ADDR1 = #apptdAgtAddrOne#,	
			AGENT_ADDR2 = #apptdAgtAddrTwo#,	
			AGENT_ADDR3 = #apptdAgtAddrThree#,	
			AGENT_ADDR4 = #apptdAgtAddrFour#,	
			AGENT_ADDR5 = #apptdAgtAddrFive#,	
			AGENT_PLACE = #appCity#,	
			AGENT_PIN_CODE = #appPin#,	
			AGENT_CTRY_CODE = #appCountry#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			VAL_FOR_SCH_COLL = NVL(#schlCollection#,'N'),
			DOC_CHK_REQ = NVL(#docCheckReqd#,'N'),
			DOC_CHK_COMP =NVL(#docCheck#,'N'),
			ALLOW_PACCO = NVL(#allowPACCO#,'N'),
			HOUSE_FLG = NVL(#houseFlg#,'N'),
			BYPASS_REL = NVL(#byPassRelInd#,'N'),
			SHPR_NAME = #shprName#,
			SHPR_ADD1 = #shprAddrOne#,	
			SHPR_ADD2 = #shprAddrTwo#,	
			SHPR_ADD3 = #shprAddrThree#,	
			SHPR_ADD4 = #shprAddrFour#,	
			SHPR_ADD5 = #shprAddrFive#,
			SHPR_PLACE = #shprCity#,
			SHPR_CTRY_CODE = #shprCountry#,
			SHPR_PIN_CODE =#shprPin#,
			EMAIL1 = #contactEmail1#,
			EMAIL2 = #contactEmail2#,
			EMAIL3 = #contactEmail3#,
			EMAIL4 = #contactEmail4#,
			EMAIL5 = #contactEmail5#,
			FAX1 = #contactFax1#,
			FAX2 = #contactFax2#,
			FAX3 = #contactFax3#,
			MOBILE1 = #contactMobileNo1#,
			MOBILE2 = #contactMobileNo2#,
			MOBILE3 = #contactMobileNo3#,
			LOCK_IND = NVL(#locked#,'N'),
			HANDL_SERVICE_YN = NVL(#handledByAgtSrvInd#,'N'),
			DOC_DLV = NVL(#docDiv#,'N'),
			TR_TYPE='ACAR' ,
			SAVE_YN='Y' ,
			SHPR_STATE_PROVINCE = #shpState#,
			CSGNE_STATE_PROVINCE = #cnsgnState#,
			<isEqual property="cEligibilityStatusInd" compareValue="Y">
			ELIGIBILITY_STATUS =#eligibilityStatus#,
			</isEqual>
			ELIGIBILITY_CHECK = #eligibilityCheck#,
			GEN_STRG_CHRG_YN = NVL(#generalStorageCharge#, 'N')
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	<update id="update_imp_car_charge" parameterClass="cargo.cms.imprt.bo.CarItemChargeBO">
		UPDATE IMP_CAR_CHRG_ITM SET
			PP_AMT       = #ppAmt#, 
			CC_AMT       = #ccAmt#, 
			LM_USER_ID   = #lmUserId#, 
			LM_DATE      = SYSDATE
		WHERE AWB_NO     = #awbNo#  AND
			AWB_DATE     = TO_DATE(#awbDate#,'DDMONYY')  AND
			COLL_CHARGE_DESC     = #itemCode#
	</update>
	<select id="check_splcode"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT LOCK_YN FROM MAST_SPL_HAND_CODE WHERE CODE = UPPER(#CODE#)
			]]>
	 </select>
	 <select id="check_splcode_car"  parameterClass="cargo.cms.imprt.bo.InBoundULDListBO"  resultClass="java.lang.Integer">
			SELECT count(1) FROM IMP_CAR_AWB AWB,IMP_CAR_SHP SHP WHERE AWB.AWB_NO  = #awbNo# 
			AND AWB.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND SHP.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND SHP.FLT_KEY  = #flightKey# AND AWB.AWB_NO = SHP.AWB_NO AND AWB.AWB_DATE= SHP.AWB_DATE 
			<isNotEmpty prepend="AND" property="shc1" >
				SPL_CODE1 = UPPER(#shc1#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc2" >
				SPL_CODE2 = UPPER(#shc2#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc3" >
				SPL_CODE3 = UPPER(#shc3#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc4" >
				SPL_CODE4 = UPPER(#shc4#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc5" >
				SPL_CODE5 = UPPER(#shc5#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc6" >
				SPL_CODE6 = UPPER(#shc6#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc7" >
				SPL_CODE7 = UPPER(#shc7#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc8" >
				SPL_CODE8 = UPPER(#shc8#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc9" >
				SPL_CODE9 = UPPER(#shc9#) 
			</isNotEmpty>
			
			
	 </select>
	 <select id="check_currency"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(count(1)) FROM MAST_CURRENCY WHERE CODE = UPPER(#CODE#)
		]]>
	 </select>
	 <select id="check_carrier_code"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(count(1)) FROM MAST_CARRIER WHERE CODE = UPPER(#CODE#)
		]]>
	 </select>
	 <select id="check_awb_alias"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT NVL(count(1),0) FROM CUST_AGENT_ALIAS WHERE ALIAS_NAME=#ALIASNAME#
		]]>
  </select>
	<select id="check_consignee"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#CONSNAME# AND CONS_YN='Y'
	]]>
  </select>
	<select id="check_agent"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#AGENTNAME# AND AGENT_YN='Y'
	]]>
  </select>
	<insert id="save_imp_car_shp_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,TR_TYPE,SAVE_YN,LIC_YN)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#manifestPcs#,0), NVL(#manifestWt#,0), 
		NVL(#manifestPcs#,0), NVL(#manifestWt#,0), 'B', #lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ldgPt#,#docDisc#,#cfmIndicator#,#dirRemark#,#trtype#,'Y',#licenseUT#)	
 </insert>
 <insert id="save_imp_car_shp" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, MANIFEST_PCS, 
			MANIFEST_WT,BULK_PCS ,BULK_WT ,BUP_PCS ,BUP_WT,	LDG_POINT ,DIR_RMK ,
			DOC_DISC ,CNTG_FLT_CARR,CNTG_FLT_NO,CNTG_FLT_DATE,CNTG_FLT_TIME , 
			CNTG_FLT_DEST,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,SCH_COLL_YN,
			AIRL_RMK,WH_RMK,AGENT_ID,CAR_CREATED,TR_TYPE,SAVE_YN,LIC_YN)
		VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#, 											#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,nvl(#manifestPcs#,0),								nvl(#manifestWt#,0),nvl(#bulkPcs#,0),nvl(#bulkWt#,0),nvl(#bupPcs#,0),
		nvl(#bupWt#,0), #ldgPt#,#dirRemark#,#docDisc#,#conFltCarr#,#conFltNo#,
		TO_DATE(#conFltDate#,'DDMONYY'),#conFltTime#,#conFltDest#,
		#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ppkType#,#schlCollection#,
		#awbRemark#,#whRemarks#,#appointedAgentCode#,#cfmIndicator#,#trtype#,'Y',#licenseUT#)		
	]]>
 </insert>
 <insert id="save_imp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_DEST,AWB_ORIGIN,AWB_PCS,AWB_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			CNS_CUST_NO, CSGNE_NAME, APPNTD_AGENT, AGENT_CUST_NO,
			ECT_HANDLER,FWB_CNS_AS_ALIAS,BANK_ENDOS,BANK_TYPE,   
			AIRLN_RMK,CURR_CODE,EXCH_RATE,DISB_FEE,DOC_CHRG,CC_FEE,TML_CHRG,
			TTL_CC,CC_CC_TOTAL_CHRG,CC_PP_TOTAL_CHRG,CHRG_MODE,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,
			BULK_PCS,BULK_WT,BUP_PCS,BUP_WT, FREIGHT,FREIGHT_LOCL,CONSOLE_IND,
			CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
			AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE, AGENT_PIN_CODE,
			VAL_FOR_SCH_COLL,DOC_CHK_REQ,DOC_CHK_COMP,ALLOW_PACCO,HOUSE_FLG,BYPASS_REL,
			SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,
			EMAIL1,EMAIL2,EMAIL3,EMAIL4,EMAIL5,FAX1,FAX2,FAX3,MOBILE1,MOBILE2,MOBILE3,LOCK_IND,HANDL_SERVICE_YN,doc_dlv,TR_TYPE,SAVE_YN,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE,
			GEN_STRG_CHRG_YN, ELIGIBILITY_STATUS, ELIGIBILITY_CHECK) 
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#awbDestination#,#awbOrigin#, 
			nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#consigneeCode#, #consigneeName#, #appointedAgent#,#appointedAgentCode#,
			#ectHandler#,#fwbAlias#,#bankEndos#,#bankType#,#awbRemark#,#currencyCode#,#exchangeRate#,
			#disburse#,#docCharge#,#ccFee#,#tcFee#,#totalCC#,#totalCollect#,#totalPrepaid#,
			#chargeMode#,#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ppkTypeAwb#,
			NVL(#bulkPcsAwb#,0),NVL(#bulkWtAwb#,0),NVL(#bupPcsAwb#,0),NVL(#bupWtAwb#,0),nvl(#freightageFor#,0),nvl(#freightageHKG#,0),
			decode((select 1 from mast_code_dtl where code = #content# and code_type='CONSOLIDATION'),'1','Y','N'),
			#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
			#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,
			#schlCollection#,#docCheckReqd#,#docCheck#,#allowPACCO#,#houseFlg#,#byPassRelInd#,#shprAddrOne#,#shprAddrTwo#,	
			#shprAddrThree#,#shprAddrFour#,#shprAddrFive#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
			#contactEmail1#,#contactEmail2#,#contactEmail3#,#contactEmail4#,#contactEmail5#,#contactFax1#,#contactFax2#,#contactFax3#,#contactMobileNo1#,
			#contactMobileNo2#,#contactMobileNo3#,#locked#,#handledByAgtSrvInd#,#docDiv#,'CCAR','Y',#whRemarks#,#shpState#,#cnsgnState#,
			#generalStorageCharge#, #eligibilityStatus#, #eligibilityCheck#)  
	]]>
</insert>	
<insert id="save_imp_car_awb_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,SAVE_YN,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #awbDestination#,#awbOrigin#, 
		nvl(#awbPieces#,0),nvl(#awbWeight#,0),nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#awbRemark#,#ccFee#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,'A',
		decode((select 1 from mast_code_dtl where code = #content# and code_type='CONSOLIDATION'),'1','Y','N'),
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,'CCAR','Y',#whRemarks#,#shpState#,#cnsgnState#) 
 </insert>
 <insert id="save_imp_car_charge" parameterClass="cargo.cms.imprt.bo.CarItemChargeBO">
	<![CDATA[
		INSERT INTO	 IMP_CAR_CHRG_ITM (AWB_NO,AWB_DATE,COLL_CHARGE_DESC,
			PP_AMT,CC_AMT,LM_USER_ID,LM_DATE)
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#itemCode#,#ppAmt#, 
			#ccAmt#,#lmUserId#,SYSDATE)
	]]>
</insert>	
<select id="exchange_rate"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
<![CDATA[
	SELECT  NVL(EXCH_RATE / NVL(FORGN_UNIT, 1),0)  
	  from (SELECT  NVL(EXCH_RATE ,0) EXCH_RATE, NVL(FORGN_UNIT,0) FORGN_UNIT, dense_rank() over (partition by CURR_CODE order by EFF_DATE desc) rank
      FROM  MAST_CURR_EXRATE 
      WHERE CURR_CODE = #currencyCode# and nvl(CARR_CODE, nvl(#carrCode#, '*')) = nvl(#carrCode#, '*')
      AND TO_DATE(TO_CHAR(EFF_DATE, 'DDMONYY HH24MI'), 'DDMONYY HH24MI') <= TO_DATE((SELECT DECODE(ACT_DATE, NULL, TO_CHAR(SCH_DATE, 'DDMONYY')||' '||LPAD(SCH_TIME, 4, '0'), TO_CHAR(ACT_DATE, 'DDMONYY')||' '||LPAD(ACT_TIME, 4, '0')) T 
                                          FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A' ), 'DDMONYY HH24MI')
      ) a
      where rank = 1 and rownum = 1
	]]>
</select>
<!--  SRF for lock; err if count > 0 ; err msg = 'AWB is locked' -->
	<select id="imp_checkAwbIsLocked"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from AWB 
		where AWB_NO = #AWBNO# and AWB_DATE = #AWBDATE# and locked_yn = 'Y' and rownum = 1
		]]>
	</select>
	
	<!--  Changed for QR 
	<select id="imp_checkUldIsLocked"  parameterClass="map" resultClass="java.lang.String">
		select uld_key from uld_inventory where locked='Y' and uld_key in (
		select uld_key from awb_inventory where awb_no=#AWBNO# and awb_date= #AWBDATE# and rownum=1)
	</select> -->
	
	<!--  Changed for QR
	<select id="imp_checkLspIsLocked"  parameterClass="map" resultClass="java.lang.String">
		select lsp_no from lsp_inventory where locked='Y' and (
		lsp_no in (select lsp_no from awb_inventory where awb_no=#AWBNO# and awb_date= #AWBDATE# and rownum=1))
	</select> -->
	
	
<select id="imp_mcar_get_revenue" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.ItemRevenueBO">
		SELECT ITM_CODE AS itemCode,ITM_CODE_SFX AS itemSuffix,ITM_DESC AS itemDesc 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE IN ('FCIMFC','DBIMPO','CCIMPO'
		<dynamic>
			<isNotEmpty prepend="," property="terminalChargeCodeOne">
				 #terminalChargeCodeOne#
			</isNotEmpty>
			<isNotEmpty prepend="," property="terminalChargeCodeTwo">
				 #terminalChargeCodeTwo#
			</isNotEmpty>
			<isNotEmpty prepend="," property="documentChargeCode">
				#documentChargeCode#
			</isNotEmpty>
			<isNotEmpty prepend="," property="bankEndosChargeCode">
				#bankEndosChargeCode#
			</isNotEmpty>
			
		</dynamic>
		)
	</select>
	<delete id="imp_mcar_delete_revenue" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		<![CDATA[
			DELETE
			FROM IMP_CHRG_ITM_REV_AWB 
			WHERE	TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY')  AND
				AWB_NO	 = #awbNo#  
		]]>
	</delete>
	<insert id="imp_mcar_insert_revenue" parameterClass="cargo.cms.imprt.bo.ItemRevenueBO">
		INSERT INTO IMP_CHRG_ITM_REV_AWB 
			(AWB_NO,AWB_DATE,REV_IND,ITM_CODE,ITM_CODE_SFX, ITM_DESC,CHRG_AMT,PAYMENT_MODE,
			PAYER_AC_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#revenueInd#,#itemCode#,#itemSuffix#,
			#itemDesc#,#chargeAmt#,	#paymentMode#,#payerAccNo#,	#crUserId#,SYSDATE,#lmUserId#,SYSDATE)
	</insert>
	<select id="check_loading_point"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
		SELECT count(1) FROM FLT_OPR_LEG 
		WHERE FLT_KEY = #FLIGHTKEY# AND SCH_DATE = TO_DATE(#FLIGHTDATE#,'DDMONYY') 
			AND FLT_TYPE = 'A'  
			AND   BRD_POINT=#LOADINGPT#	
			AND LEG_ORD <= 	(SELECT MIN(LEG_ORD) FROM FLT_OPR_LEG 
			WHERE FLT_KEY = #FLIGHTKEY# 
			AND SCH_DATE = TO_DATE(#FLIGHTDATE#,'DDMONYY') AND OFF_POINT = 'HKG')
			]]>
	 </select>
 <delete id="imp_gt_srf_charges_delete" parameterClass="map" >  
    	DELETE FROM GT_SRF_CHARGES WHERE AWB_NO = #AWBNO# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')
	</delete>
	<select id="check_shp_count"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_KEY  = #fltKey#
	</select>
	<update id="update_imp_car_awb_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		 update IMP_CAR_AWB set AWB_PRFX = #awbPrefix# , AWB_DEST =  #awbDestination# , AWB_ORIGIN = #awbOrigin# ,
		 AWB_PCS = nvl(#awbPieces#,0) , AWB_WT = nvl(#awbWeight#,0) , CONTENT =#content# ,
		 SPL_CODE1 =#splCode1# ,SPL_CODE2 =#splCode2#,SPL_CODE3 = #splCode3#,  
		 SPL_CODE4 = #splCode4#, SPL_CODE5 = #splCode5# ,SPL_CODE6 = #splCode7# ,SPL_CODE7 = #splCode8# ,
		 SPL_CODE8 = #splCode8# ,SPL_CODE9 = #splCode9# , CNS_CUST_NO =  #consigneeCode#,CSGNE_NAME  = #consigneeName# ,
		 APPNTD_AGENT = #appointedAgent# ,AGENT_CUST_NO = #appointedAgentCode# , AIRLN_RMK =#awbRemark# ,
		 LM_USER_ID  = #lmUserId#, LM_DATE = SYSDATE, TR_STATUS = 'E', CATALOG =#catalog# , CONSOLE_IND = #consolInd#,
		CSGNE_ADDR1 = #consAddrOne#,	
		CSGNE_ADDR2 = #consAddrTwo#,	
		CSGNE_ADDR3 = #consAddrThree#,	
		CSGNE_ADDR4 = #consAddrFour#,	
		CSGNE_ADDR5 = #consAddrFive#,
		CSGNE_PLACE = #consCity#,	
		CSGNE_PIN_CODE = #consPin#,	
		CSGNE_CTRY_CODE = #consCountry#,
		AGENT_ADDR1 = #apptdAgtAddrOne#,	
		AGENT_ADDR2 = #apptdAgtAddrTwo#,	
		AGENT_ADDR3 = #apptdAgtAddrThree#,	
		AGENT_ADDR4 = #apptdAgtAddrFour#,	
		AGENT_ADDR5 = #apptdAgtAddrFive#,	
		AGENT_PLACE = #appCity#,	
		AGENT_PIN_CODE = #appPin#,	
		AGENT_CTRY_CODE = #appCountry#,
		ECT_HANDLER = #ectHandler#,
		TR_TYPE='ACAR',
		HOUSE_FLG = nvl(#houseFLgYN#,'N'),
		SAVE_YN='Y' ,
		LOCK_IND = #locked#
		 Where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="update_imp_car_shp_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		 update IMP_CAR_SHP set AWB_PRFX = #awbPrefix# , CAR_CREATED = 'Y',
		 BULK_PCS  = NVL(#manifestPcs#-nvl(#bupPcs#,0),0), BULK_WT = NVL(#manifestWt#-nvl(#bupWt#,0),0),BUP_PCS = nvl(#bupPcs#, 0),BUP_WT = nvl(#bupWt#, 0),
		 MANIFEST_PCS = NVL(#manifestPcs#,0) , MANIFEST_WT = NVL(#manifestWt#,0), LM_USER_ID = #lmUserId# , 
		 LM_DATE = SYSDATE , TR_STATUS = 'E' , LDG_POINT = #ldgPt#,RECD_PCS = #recdPcs#, RECD_WT  = #recdWt# ,DOC_DISC = #docDisc#,DIR_RMK   = #dirRemark#,TR_TYPE=#trtype# ,SAVE_YN='Y' ,LIC_YN=#licenseUT#
		 Where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')AND 
	 	 Flt_KEY = #fltKey# and FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	<select id="get_car_awb_count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_AWB where AWB_NO = #awbNo# 
	</select>
	<select id="imp_car_gt_srf_charges"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT 
			ITM_CODE itemCode, ITM_CODE_SFX itemSuffix,  AMT chargeAmt
			FROM GT_SRF_CHARGES
			WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 		
			AND CHRG_TYPE = #chrgType# 
		]]>
	</select>
	<select id="Imp_car_getConsolValue"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1) 
			FROM MAST_HAWB A
			WHERE A.AWB_NO = #awbNo#
			AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	<parameterMap id="MapPrcStrgWoCar" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANPCS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="MANWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="INVCNT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>		
	</parameterMap>
	
	<procedure id="imp_car_callPrcStrgWoCar" parameterMap="MapPrcStrgWoCar" >
		{call PKG_IMP.PRC_STRG_WO_CAR(?,?,?,?,?,?,?)}
	</procedure>
	<select id="imp_car_getRecvPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<select id="imp_car_getRecvPcWtOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(RECD_PCS) recdPcs, SUM(RECD_WT) recdWt FROM imp_car_shp WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<select id="imp_car_getRecvPcWt_TS" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		]]>
	</select>
	<select id="getAta" parameterClass="map" resultClass="java.lang.String">
			select PKG_COMMON.get_flt_ata(#FLTKEY#, #FLTDATE#, 'A', 'DD') AS ata from dual
	</select>
	<insert id="imp_insertAWBEvents" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , #eventId#, (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #eventId#), #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPieces#,0),nvl(#awbWeight#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
		]]>
	</insert>
	<insert id="imp_insertAWBEventsIU" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,'ADIUCAR', 'Amend Dummy IU CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPieces#,0), nvl(#awbWeight#,0), #lmUserId#,  sysdate, #lmUserId#,  sysdate)
		]]>
	</insert>
	<insert id="imp_car_insertAWBrmk" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			insert into awb_rmk (SEQ_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, FLT_TYPE, RMK_TYPE, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
			(awb_rmk_seq.nextval, #awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 'I','IMP_CAR',#awbRemark#,#lmUserId#,sysdate,#lmUserId#,sysdate)
		]]>
	</insert>
	<parameterMap id="chrgMap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="PMODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="BANKENDO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ECT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBBULKWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBBUPWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANBULKWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANBUPWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="SPL" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="PTAG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="insert_gt_srf_charges" parameterMap="chrgMap" >
		{call prc_srf_car_charges(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="map" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="modify_SC" parameterMap="map" >
		{call PKG_CALCULATE.MODIFY_STORAGE_CHRG(?,?,?)}
	</procedure>
	
	<select id="get_car_shp_count" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP where Flt_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO =  #awbNo# 
	</select>
	<select id="exchange_rate_for_forgnUnit"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
		      select EXCH_RATE exchangeRate, FORGN_UNIT foreignUnit
		      from (SELECT  NVL(EXCH_RATE ,0) EXCH_RATE, NVL(FORGN_UNIT,0) FORGN_UNIT, dense_rank() over (partition by CURR_CODE order by EFF_DATE desc) rank
		      FROM  MAST_CURR_EXRATE 
		      WHERE CURR_CODE = #currencyCode# and nvl(CARR_CODE, nvl(#carrCode#, '*')) = nvl(#carrCode#, '*')
		      AND TO_DATE(TO_CHAR(EFF_DATE, 'DDMONYY HH24MI'), 'DDMONYY HH24MI') <= TO_DATE((SELECT DECODE(ACT_DATE, NULL, TO_CHAR(SCH_DATE, 'DDMONYY')||' '||LPAD(SCH_TIME, 4, '0'), TO_CHAR(ACT_DATE, 'DDMONYY')||' '||LPAD(ACT_TIME, 4, '0')) T 
              FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A' ), 'DDMONYY HH24MI')
		      ) a
		      where rank = 1 and rownum = 1
		]]>
	</select>
	<select id="getawbprefix" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT CODE as awbPrefix FROM MAST_AWB_PREFIX WHERE 
			CARR_CODE = UPPER(#carrCode#) and def_yn='Y'
	</select>
	<parameterMap id="hmGenerateDummyAWBNoMap" class="map" >
		<parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<!--	<parameter property="awbPrefix" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>-->
		<parameter property="awbType" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="generatedummyawbno" parameterMap="hmGenerateDummyAWBNoMap" >
		{? = call FUN_GEN_DUMMY_AWB(?)}
	</procedure>
	<procedure id="generatetmawbno" parameterMap="hmGenerateDummyAWBNoMap" >
		{? = call FUN_TM_AWB(?)}
	</procedure>
	
	<!--  Changed for QR -->
	<select id="fetchLicenseList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT LICENSE AS license FROM CST_LICENSE WHERE AWB_NO=#awbNo# AND (HAWB_NO='000000000000000000')
	</select>
	
	<!--  Changed for QR -->
	<select id="fetchPermitList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT PERMIT AS permit FROM CST_PERMIT WHERE AWB_NO=#awbNo# AND (HAWB_NO='000000000000000000')	
	</select>
	<select id="imp_AddrInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		SELECT CODE apptdAgtCode , ADD1 apptdAgtAddrOne , ADD2 apptdAgtAddrTwo, ADD3 apptdAgtAddrThree, 
		ADD4 apptdAgtAddrFour, ADD5 apptdAgtAddrFive , CITY city , PIN_CODE pin , CTRY_CODE country FROM CUST_COMPANY WHERE CODE_DESC = #apptdAgt# 	
		<isNotEmpty prepend="AND" property="consYN" >
			CONS_YN='Y' 
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="agentYN" >
			AGENT_YN='Y'
		</isNotEmpty> 
	</select>
	<select id="imp_maintaincar_cnslist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE codeId , CODE_DESC codeDesc FROM CUST_COMPANY WHERE CONS_YN = 'Y'
		AND ACTIVE = 'Y'
		<dynamic prepend="AND">
			<isNotEmpty property="codeDesc">
				 CODE_DESC LIKE #codeDesc#
			</isNotEmpty>
		</dynamic>
		Order By CODE_DESC 
	</select>
	<select id="imp_maintaincar_agentlist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE CODEID , CODE_DESC CODEDESC FROM CUST_COMPANY WHERE AGENT_YN = 'Y' 
		AND ACTIVE = 'Y' AND CODE IN 
		Decode((SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO in (SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') 
		between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#) AND 
		to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND 
		to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY')),null,
		(SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') 
		between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#),
    	(SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO in (SELECT AGENT_ID FROM CUST_APP_AGENT WHERE 
    	CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#) 
    	AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY')))
		Order BY CODE_DESC
	</select>
	<select id="imp_maintaincar_masteragentlist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE CODEID , CODE_DESC CODEDESC FROM CUST_COMPANY WHERE AGENT_YN = 'Y' AND ACTIVE = 'Y' Order BY CODE_DESC
	</select>
	<insert id="imp_mcar_save_fwb_alias" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		INSERT INTO CUST_AGENT_ALIAS (CUST_NO,ALIAS_NAME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES
		(#consigneeCode#,#fwbCnsgnName#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE)
	</insert>
	<select id="fetchCustDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT allow_pacco AS AllowPACCO,HNDL_BY_AGT_SRV_YN as handledByAgtSrvInd,HSE_LVL_HNDL_YN as houseFlg, 
		(select 'Y' from cust_agent_sch_coll_time where TO_DATE(#awbDate#,'DDMONYY') BETWEEN eff_from and eff_to 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CUST_NO=#appointedAgentCode# and rownum=1
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>  ) as schlCollection
		FROM CUST_COMPANY WHERE CODE=#appointedAgentCode#
	</select>
	<select id="fetchLicUTDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.String">
		select 'Y' as licenseUT from cust_undertaking where carr_code=#carrCode# and 
		TRUNC(SYSDATE) BETWEEN eff_from and eff_to
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				agent_code=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				agent_code in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic> 
		AND NOT EXISTS (SELECT NULL FROM IMP_CAR_SHP A,IMP_CAR_AWB B WHERE A.AWB_NO=B.AWB_NO AND A.AWB_DATE=B.AWB_DATE AND  
		A.AWB_NO = #awbNo# AND A.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND A.SAVE_YN='Y' 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic> )
		UNION
		SELECT A.LIC_YN as licenseUT FROM IMP_CAR_SHP A,IMP_CAR_AWB B WHERE A.AWB_NO=B.AWB_NO AND A.AWB_DATE=B.AWB_DATE AND  
		A.AWB_NO = #awbNo# AND A.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND A.SAVE_YN='Y'  
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>
	</select>
	<select id="fetchAgtDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT CODE as appointedAgentCode,CODE_DESC as appointedAgent,allow_pacco AS AllowPACCO,HNDL_BY_AGT_SRV_YN as handledByAgtSrvInd,HSE_LVL_HNDL_YN as houseFlg, AGENT_YN agentYN,
		(select 'Y' from cust_agent_sch_coll_time where TO_DATE(#awbDate#,'DDMONYY') BETWEEN eff_from and eff_to 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>  ) as schlCollection
		 FROM CUST_COMPANY WHERE 1=1 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CODE=#appointedAgentCode#
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				UPPER(CODE_DESC)=UPPER(#appointedAgent#)
			</isEmpty>
		</dynamic>
	</select>
	
	<select id="validateforTM"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_shp a,imp_car_awb b where a.flt_key=#fltKey# and a.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') 
		AND b.CATALOG='TM' AND b.AWB_DEST=#awbDestination# AND A.awb_no = b.awb_no AND A.awb_no!=#awbNo#
	</select>
	
	<update id="updateExportCarDetails" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE EXP_CAR SET
			CSGNE_NAME  = #consigneeName#,
			CSGNE_ADDR = #consAddrOne#,	
			CSGNE_ADDR2 = #consAddrTwo#,	
			CSGNE_ADDR3 = #consAddrThree#,	
			CSGNE_ADDR4 = #consAddrFour#,	
			CSGNE_PLACE = #consCity#,	
			CSGNE_PIN_CODE = #consPin#,	
			CSGNE_CTRY_CODE = #consCountry#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			SHPR_NAME = #shprName#,
			SHPR_ADDR = #shprAddrOne#,	
			SHPR_ADDR2 = #shprAddrTwo#,	
			SHPR_ADDR3 = #shprAddrThree#,	
			SHPR_ADDR4 = #shprAddrFour#,	
			SHPR_PLACE = #shprCity#,
			SHPR_CTRY_CODE = #shprCountry#,
			SHPR_PIN_CODE =#shprPin#,
			DEST = #awbDestination#,
			ORIGIN = #awbOrigin#,
			LOCK_IND = #locked#,
			PCS      = nvl(#awbPieces#,0),  
			WT      = nvl(#awbWeight#,0), 
			CONTENT      = #content#,
			CATALOG      = #catalog#,
			SPL_CODE1     = #splCode1#, 
			SPL_CODE2     = #splCode2#, 
			SPL_CODE3     = #splCode3#,  
			SPL_CODE4     = #splCode4#,  
			SPL_CODE5     = #splCode5#,  
			SPL_CODE6     = #splCode6#,  
			SPL_CODE7     = #splCode7#,  
			SPL_CODE8     = #splCode8#, 
			SPL_CODE9     = #splCode9#,
			AIRL_RMK = #awbRemark# ,
			SHPR_STATE_PROVINCE = #shpState#,
			CSGNE_STATE_PROVINCE = #cnsgnState#,
			TR_TYPE = 'DUMMY',
			AGENT_CODE = #appointedAgentCode#,
			AGENT_NAME = #appointedAgent#  
			WHERE  AWB_NO   = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<!--  Changed for QR -->
	<select id="validateBooking"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM IMP_BOOKING bkghd
	    join IMP_BOOKING_DTL bkgdtl on bkghd.BOOKING_NO = bkgdtl.BOOKING_NO  
	    WHERE bkghd.STATUS = 'ISSUED' and bkgdtl.AWB_NO = #awbNo# AND bkgdtl.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
          		and bkgdtl.flt_key = #fltKey# and bkgdtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')  
	</select>
	
	<select id="getFinaliseLockInd"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and (nvl(CCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(DCLOCK_IND,'N') = 'Y')
	</select>	
	
	<insert id="save_imp_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,FINALLOCK_IND,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,EXP_AWB_LOCK,ACCEPT_MODE,CNSL_IND,AIRLN_RMK) 
		VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
			nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#whRemarks#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,#ppkTypeAwb#,#carrCode#,#carCreated#,#awbOrigin#,#awbDestination#,#appointedAgentCode#,#consigneeCode#,
			#appointedAgent#,#shprName#,#finaliseLockInd#,nvl(#awbPieces#,0),nvl(#awbWeight#,0),
			DECODE(#awbType#,'T',NVL(#awbPieces#,0),0),DECODE(#awbType#,'T',NVL(#awbWeight#,0),0),#trtype#,#locked#,DECODE(#awbType#,'T','TRN',null),#consolInd#,#awbRemark#)  
	]]>
	</insert>
	<select id="chkAwbSHCLock"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select COUNT(1) from awb a where a.awb_no=#AWB_NO# AND a.AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY') and NVL(SHCLOCK_IND,'N') = 'Y' 
	</select>
	<update id="update_imp_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			UPDATE AWB SET 
				BLDUP_BULK_PCS = nvl(#bldUpBlkPcs#,BLDUP_BULK_PCS),	
				BLDUP_BULK_WT = nvl(#bldUpBlkWt#,BLDUP_BULK_WT),	
				CONTENT = #content#,	
				CATALOG = #catalog#,	
				SPL_CODE1 = #splCode1#,
				SPL_CODE2 = #splCode2#,	
				SPL_CODE3 = #splCode3#,	
				SPL_CODE4 = #splCode4#,
				SPL_CODE5 =  #splCode5#, 
				SPL_CODE6  = #splCode6#,
				SPL_CODE7 = #splCode7#,
				SPL_CODE8 = #splCode8#,	
				SPL_CODE9 = #splCode9#,	
				AWB_RMK = #whRemarks#,	
				LM_USER_ID = #lmUserId#,	
				LM_DATE = SYSDATE,
				ORIG = #awbOrigin#,
				DEST = #awbDestination#,
				AGENT_CODE = #appointedAgentCode#,
				SHPR_CODE = #consigneeCode#,
				AWB_TYPE = #awbType#,
				SHCLOCK_IND = #shcLockInd#,
				SHIPPER_NAME = #shprName#,
				AGENT_NAME = #appointedAgent# ,
				FINALLOCK_IND = #finaliseLockInd#,
				PCS = nvl(#awbPieces#,0),
    			WT = nvl(#awbWeight#,0) ,
    			CAR_YN = DECODE(#awbType#,'T','Y',CAR_YN) ,
    			NON_PMAN_PCS = DECODE(#awbType#,'T',NVL(#awbPieces#,0)-PMAN_PCS,NON_PMAN_PCS), 
    			NON_PMAN_WT = DECODE(#awbType#,'T',NVL(#awbWeight#,0)-PMAN_WT,NON_PMAN_WT),
    			TR_TYPE =#trtype#  ,
    			EXP_AWB_LOCK = #locked#,
    			HOUSE_FLG = nvl(#houseFLgYN#,#houseFlg#),
    			ACCEPT_MODE = DECODE(#awbType#,'T',DECODE(accept_mode,'TIT',accept_mode,'TRN'),null) ,
    			AIRLN_RMK = #awbRemark# ,
    			CNSL_IND = #consolInd#   
				WHERE  AWB_NO   = #awbNo#
				AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	<select id="sqlValidateCnsgnCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(1) as count FROM CUST_COMPANY WHERE CODE =UPPER(#PARAM#) AND CONS_YN = 'Y' AND ACTIVE = 'Y'
		]]>
   	</select>
   	<select id="sqlValidateAgtCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(1) as count FROM CUST_COMPANY WHERE CODE =UPPER(#PARAM#) AND AGENT_YN = 'Y' AND ACTIVE = 'Y'
		]]>
   	</select>
   	<select id="sqlValidateCountry"  parameterClass="java.lang.String" resultClass="java.lang.Integer">	
		SELECT count(1) FROM MAST_COUNTRY WHERE CODE = UPPER(#PARAM#)		
	</select>
	<select id="sqlValidateCity"  parameterClass="java.lang.String" resultClass="java.lang.Integer">	
		SELECT count(1) FROM MAST_CITY WHERE CODE_DESC = UPPER(#PARAM#)		
	</select>
	<select id="validateSRFIssued"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
	  <![CDATA[
		SELECT COUNT(1) FROM IMP_SRF T WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND (STATUS  ='ISSUED' AND sysdate  < srf_expy_date 
              OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) )
          ]]> 
	</select>
	
	<!--  Changed for QR -->
	<select id="validateTruckManifest"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) from truck_manifest hd
	    join TRUCK_MANIFEST_DTL dtl on hd.truck_manf_no = dtl.truck_manf_no
	    where to_date(((to_char(sch_coll_date,'DDMONYY'))||to_char(sch_coll_to,'0000')),'DDMONYYHH24MI')>to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')  
	          and dtl.AWB_NO = #awbNo# AND dtl.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
			  and dtl.flt_key = #fltKey# and dtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</select>
	
	<!--  Changed for QR 
	<update id="update_mail_tags" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		update IMP_XPS_OBC_MAIL set awb_no = #awbNo#,AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') 
		where flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') 
		and dest=#awbDestination# and catalog='TM' and awb_no is null
	</update>-->
	<select id="validateAwbMissing"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_LOCK WHERE AWB_NO = #awbNo# AND MISS_YN='Y'
	</select>
	<insert id="save_gt_cms" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO GT_CMS
	 		(COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6)
	 VALUES
	 	   (#awbNo#, #awbDate#, #fltKey#, #fltDate#, '', #carCreated#)
	</insert>
	<insert id="save_exp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE,AGENT_NAME) 
	      VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#awbOrigin#,#awbDestination#, 
				nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
				#consigneeName#, #appointedAgentCode#,
				#ectHandler#,#awbRemark#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,
				#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consCity#,#consCountry#,#consPin#,
				#shprAddrOne#,#shprAddrTwo#,	
				#shprAddrThree#,#shprAddrFour#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
				#locked#,#carrCode#,'TRN',#whRemarks#,#shpState#,#cnsgnState#,#appointedAgent#) 
		]]>
	</insert>	
	<select id="checkExpCarCount"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(1) as count FROM EXP_CAR WHERE  AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
		]]>
   	</select>
   	
   	 <select id="sqlvalidatelocnuldInventory" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	 	select count(1) from 
	 	MAST_WH_LOC t1, mast_wh_group t2 where t1.wh_group = t2.WH_GROUP and t2.wh_type = 'MHS'
    	 AND t1.CODE = (select loc_code from uld_inventory where uld_key = #PARAM#)
	</select>
   	
   	<delete id="delete_exp_car" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		DELETE from EXP_CAR	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<!--  Changed for QR -->
	<select id="checkAWBExistsImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM AWB_OWNER 
		WHERE CARR_CODE = #carrCode# and awb_no=#awbNo# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
	</select>
	<insert id="insertImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#carrCode#,#awbPieces#,#awbWeight#,#lmUserId#,sysdate,#lmUserId#,sysdate,null,null)
	</insert>
	
	<!--  Changed for QR -->
	<update id="updateImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE AWB_OWNER SET PCS=#awbPieces#,WT=#awbWeight#,LM_USER_ID=#lmUserId#,LM_DATE=sysdate WHERE CARR_CODE = #carrCode# and awb_no=#awbNo# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
	</update>
	<delete id="delete_exp_car_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		DELETE from AWB_OWNER	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
	</delete>
<!-- Maintain CAR Queries End -->

	<!--  Changed for QR -->
	<insert id="imp_uld_checkin_inventory_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >	
			INSERT INTO uld_inventory(
			CFM_STATUS,
		    uld_key     ,
		    uld_type    ,
		    uld_no      ,
		    uld_carr    ,
		    loc_code    ,
		    DAM_IND     ,
		    SER_IND ,
		    owner_id    ,
		    gen_rmk     ,
		    eic_flg     ,
		    empty_flg   ,
		    STRG_DATE   ,
		    LM_USER_ID  ,
		    LM_DATE     ,
		    CONTR_CODE  ,
		    REF_TR_DATE ,
		    REF_TR_EVENT,
		    REF_RMK,
		    OWNED_INV,
		    REF_TR_NO,
		    REF_TR_TYPE,
		    REF_IN_CARR,
		    REF_OUT_CARR,
		    REF_DOC_LINE_NO,		    
		    OFLD_FLG,		    
		    BB_IND,
		    MIX_PPK_IND,
		    DG_IND,
		    HANDLING_MODE,		
		    TRANSIT_FLG,		  
		    SOURCE_CODE,
		    AGENT_ID,		    
			ASV_INV,
			LOCKED,
			LOCK_RQS,
			AGENT_INV,
			TARGET,
			TR_TYPE,
			TARE_WEIGHT,
			FIRST_WT,
			PARENT_OWNER,
			ENTRY_TIME				
			 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
			 	,EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG,
				BASE_PLT
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">
				,EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG,
				BASE_PLT
			</isEmpty>	
			<isEmpty property="transferType">		
					,CARR_CODE,
				    FLT_NO, 
					FLT_TYPE, 
					FLT_DATE, 
					FLT_KEY,		
					IMP_FLT_CARR,
				    IMP_FLT_DATE,
				    IMP_FLT_KEY,
				    IMP_FLT_NO,
				    FINAL_WEIGHT,
					DOUBLE_WGT_RSLT,							
					X_RAY_RES,	X_RAY_REQ,						
					ULD_FLOW			
			</isEmpty>			
		    <isNotEmpty property="transferType">		
				<isNotEqual property="transferType" compareValue="IF">
					,CARR_CODE,
				    FLT_NO, 
					FLT_TYPE, 
					FLT_DATE, 
					FLT_KEY,	
					IMP_FLT_CARR,
				    IMP_FLT_DATE,
				    IMP_FLT_KEY,
				    IMP_FLT_NO,							
					ULD_FLOW
				</isNotEqual>
			</isNotEmpty>									
		  ) VALUES (
		    'CONFIRMED',
		    #uldKey#      ,
		    #uldType#     ,
		    #uldNo#       ,
		    #uldCarr# ,
		    #locCode#,
		    #damInd#      ,
		    DECODE (NVL(#damInd#,'N'),'N','Y','Y','N'),
		    #carrierCode#,
		  #remark# ,
		  nvl(#eic#,'N')    ,
		  #empty#  ,
		  SYSDATE  ,
		  #crUser# ,
		  SYSDATE  ,
		  #contour#,
		  SYSDATE  ,
		  'CHK' ,
		  #remark#,
		  'Y',
		  ULD_TR_SEQ.NEXTVAL,
		  'IR',
		  '',
		  null,			
			 <isNotEmpty property="docLineNo"> 
			#docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			 '1',
		</isEmpty>		 
		  'N',
		 
		  'N',
		  'N',
		  'N',
		  #handlingMode#,	 
		  #transitInd#,					 
		  #source#,
		  #agentName#,		  
			'N',
			'N',
			'N',
			'N',
			null,
		  #trtype#,
		  #tareWeight#,	
		  #firstWeight#,	 
		  #carrierCode#,
		  sysdate
		   <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,'EIC', 
				'Y'
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,null, 
				null,
				'N',
				null
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">			 		
				,null, 
				null,
				'N',
				null 
			</isEmpty>	
			
			<isEmpty property="transferType">	
					,#carrierCode#,
					#flightNo#,	
					'I',
					#flightDate#,
					#flightKey#,				
					#carrierCode#,
				    #flightDate#,
				    #flightKey#,
				    #flightNo#,	
				     null,
		  			 null,				
		  			 null,null,		
		  			 'I'		
			</isEmpty>			  
		  <isNotEmpty property="transferType"> 				
				<isNotEqual property="transferType" compareValue="IF">
					,#carrierCode#,
					#flightNo#,	
					'I',
					#flightDate#,
					#flightKey#,	
					#carrierCode#,
				    #flightDate#,
				    #flightKey#,
				    #flightNo#,					
		  			 'I'
				</isNotEqual>
			</isNotEmpty>		  		  
		  )			 		 
	</insert>	
	
	<update id="sqlRemoveBasePltAsc" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		BASE_PLT=NULL,		
		EIC_FLG='N', 		
		EIC_TYPE=NULL
		WHERE BASE_PLT = #uldKey# 	
	</update>	
	
	<update id="imp_uld_checkin_flightNotFound_upd" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		LM_DATE=SYSDATE,		
		LM_USER_ID=#lmUser#, 		
		LOC_CODE=#locCode#,
		CFM_STATUS='CONFIRMED', 
		OWNED_INV = 'Y',				
		GEN_RMK	 = #remark#, 
		RESV_RMK = null, 
		DAM_IND = #damInd#,
		SER_IND = DECODE (NVL(#damInd#,'N'),'N','Y','Y','N'),
		DAM_RMK	 = null,		
		EMPTY_FLG = #empty#,
		EIC_FLG = nvl(#eic#,'N'),
		AGENT_INV = 'N',
		AGENT_ID = #agentName#,
		SOURCE_CODE = #source#,	
		STRG_DATE=sysdate,
		RHO_STAFF = #rhoStaffId#,
		<isNotEmpty property="owner"> 	
			OWNER_ID=#owner#,
			PARENT_OWNER=#owner#, 
		</isNotEmpty>		
		<isEmpty property="owner"> 	
			OWNER_ID=#carrierCode#,
			PARENT_OWNER=#carrierCode#, 
		</isEmpty>				 
		REF_TR_NO = #uldNo#,
		REF_TR_TYPE = 'IR',			 
		REF_TR_DATE = SYSDATE, 		
		REF_TR_EVENT = 'CHK', 
			 <isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>			
			BASE_PLT = null,
			EIC_UNLDG_PT = null,
		 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">
				EIC_TYPE = 'EIC', 
				BASE_PAL_FLG = 'Y',				
				</isEqual>
				<isEqual property="eic" compareValue="N">					
					EIC_TYPE = null, 
					BASE_PAL_FLG = 'N',
				</isEqual>
		</isNotEmpty>
		<isEmpty property="eic"> 			
			EIC_TYPE = null, 
			BASE_PAL_FLG = 'N',
		</isEmpty>	
		ASV_INV = 'N',	
		TARE_WEIGHT=#tareWeight#,		
		<isEmpty property="transferType">
			FLT_NO = #flightNo#, 
			FLT_TYPE = 'I', 
			FLT_DATE = #flightDate#, 
			FLT_KEY = #flightKey#,
			IMP_FLT_CARR = #carrierCode#,
			IMP_FLT_DATE = #flightDate#,
			IMP_FLT_KEY = #flightKey#,
			IMP_FLT_NO = #flightNo#,
			ULD_FLOW  = 'I',
			GROSS_WEIGHT='0',		
			FIRST_WT=#firstWeight#, 
			SECOND_WT='', 
			THIRD_WT='', 	
			CONTR_CODE= #contour#,
			FINAL_WEIGHT = null,
			DOUBLE_WGT_RSLT = null,
			X_RAY_RES = null,X_RAY_REQ=null,  
			TRANSIT_TYPE = null,
		</isEmpty>	
				  
		<isNotEmpty property="transferType"> 				
			<isNotEqual property="transferType" compareValue="IF">
				<isNotEqual property="transferType" compareValue="LD">
					FLT_NO = #flightNo#, 
					FLT_TYPE = 'I', 
					FLT_DATE = #flightDate#, 
					FLT_KEY = #flightKey#,
					IMP_FLT_CARR = #carrierCode#,
					IMP_FLT_DATE = #flightDate#,
					IMP_FLT_KEY = #flightKey#,
					IMP_FLT_NO = #flightNo#,
					ULD_FLOW  = 'I',
				</isNotEqual>
				<isEqual property="transferType" compareValue="LD">
					FLT_NO = #flightNo#, 
					FLT_TYPE = 'I', 
					FLT_DATE = #flightDate#, 
					FLT_KEY = #flightKey#,
					IMP_FLT_CARR = #carrierCode#,
					IMP_FLT_DATE = #flightDate#,
					IMP_FLT_KEY = #flightKey#,
					IMP_FLT_NO = #flightNo#,
					ULD_FLOW  = 'I',
					GROSS_WEIGHT='0',		
					FIRST_WT=#firstWeight#, 
					SECOND_WT='', 
					THIRD_WT='', 
					FINAL_WEIGHT = null,
					DOUBLE_WGT_RSLT = null,	
					X_RAY_RES = null,X_RAY_REQ=null,  				
				</isEqual>
			</isNotEqual>
			<isEqual property="transferType" compareValue="IF">
				IMP_FLT_CARR = #carrierCode#,
				IMP_FLT_DATE = #flightDate#,
				IMP_FLT_KEY = #flightKey#,
				IMP_FLT_NO = #flightNo#,				
			</isEqual>
			CONTR_CODE= #contour#,
		</isNotEmpty>							
		TARGET=null, 				
		REF_WT='', 		
		OFLD_FLG='N',
		BB_IND='N',
		LOCKED = 'N',
		LOCK_RQS = 'N',	
		PPK_IND='N',		
		MIX_PPK_IND='N',
		MAN_WT_IND  = 'N',
		man_wt_ind2 = 'N',
		man_wt_ind3 = 'N',
		HANDLING_MODE=#handlingMode#,	
		TRANSIT_FLG = #transitInd#,		
		DG_IND='N',
		RESV_FLG = 'N',
		TR_TYPE =#trtype#,
		ENTRY_TIME = sysdate		
		WHERE ULD_KEY=#uldKey# 	
	</update>	

<update id="imp_uld_checkin_inventory_del" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		LM_DATE=SYSDATE,
		LM_USER_ID=#lmUser#,
		CFM_STATUS='REMOVED', 
		LOC_CODE=NULL,
		
		GEN_RMK	 = #remark#, 
		RESV_RMK	 = null, 
		DAM_IND = 'N',
		DAM_RMK	 = null,
		EMPTY_FLG = 'Y',
		EIC_FLG = 'N',
		BASE_PLT = null,	
		EIC_UNLDG_PT = null,			
		EIC_TYPE = null, 
		BASE_PAL_FLG = 'N',
		AGENT_INV = 'N',
		AGENT_ID = NULL,
		OWNED_INV = 'N',	
		REF_TR_NO = #uldNo#,
		REF_TR_TYPE = 'IR',
		REF_TR_DATE = SYSDATE, 		
		REF_TR_EVENT = 'UNCHK', 
		<isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>			 		
		
		ASV_INV = 'N',	
		<isEmpty property="transferType">				
			FLT_NO = null, 
			FLT_TYPE = null, 
			FLT_DATE = null, 
			FLT_KEY = null,
			IMP_FLT_CARR='',
			IMP_FLT_DATE='',
			IMP_FLT_KEY='',
			IMP_FLT_NO='', 			
			ULD_FLOW = 'I',
			GROSS_WEIGHT = '0',
			FIRST_WT='', 
			SECOND_WT='', 
			THIRD_WT='',
			TARE_WEIGHT=0,
			CONTR_CODE=null,
			FINAL_WEIGHT = null,
			DOUBLE_WGT_RSLT = null,
			X_RAY_RES = null,X_RAY_REQ=null, 
			TRANSIT_TYPE = null,
		</isEmpty>	
		<isNotEmpty property="transferType"> 				
			<isNotEqual property="transferType" compareValue="IF">
				FLT_NO = null, 
				FLT_TYPE = null, 
				FLT_DATE = null, 
				FLT_KEY = null,
				IMP_FLT_CARR='',
				IMP_FLT_DATE='',
				IMP_FLT_KEY='',
				IMP_FLT_NO='', 
				ULD_FLOW = 'I',
			</isNotEqual>
		</isNotEmpty>			
		TARGET=null,		 
		REF_WT='', 		
		OFLD_FLG='N',		
		BB_IND='N',
		MIX_PPK_IND='N',
		PPK_IND='N',
		DG_IND='N',
		LOCKED = 'N',
		LOCK_RQS = 'N',
		HANDLING_MODE=null,		
		TR_TYPE =#trtype#,
		RESV_FLG = 'N',
		ULDENTRY_MSG_RCVD_YN = 'N'			
		WHERE ULD_KEY=#uldKey# 			
	</update>	
	
	<insert id="imp_uld_checkin_empty_flightNotFound_ins" parameterClass="java.util.HashMap">
		insert into uld_inventory(
			uld_key,
			uld_type,
			uld_no,
			uld_carr,
			loc_code,
			DAM_IND,
			owner_id,
			source_code,			
			eic_flg,
			empty_flg,
			STRG_DATE,
			PPK_IND,
			LM_USER_ID,
			LM_DATE,
			AGENT_INV,
			CFM_STATUS,
			RESV_FLG,
			OWNED_INV,
			CONTR_CODE,
			REF_TR_NO, 
			REF_TR_TYPE, 
			REF_TR_DATE, 
			REF_IN_CARR, 
			REF_OUT_CARR, 
			REF_DOC_LINE_NO, 
			REF_LOC_FROM, 
			REF_TR_EVENT, 
			AGENT_ID,			
			SER_IND,
			ENTRY_TIME	
			
			 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,BASE_PLT,		
				EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">
				,BASE_PLT,		
				EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG
			</isEmpty>				
			,OFLD_FLG,
			BB_IND,
			MIX_PPK_IND,
			DG_IND,
			HANDLING_MODE,			
			ASV_INV,
			LOCKED,
			LOCK_RQS,
			TARGET,
			tare_weight,
		    gross_weight,
		  	TR_TYPE,
		  	PARENT_OWNER,
		  	FINAL_WEIGHT,
		  	DOUBLE_WGT_RSLT	,
		  	X_RAY_RES,X_RAY_REQ 
			) 
			values (
			#uld_key#,
			#uld_type#,
			#uld_no#,
			#uld_carr#,
			#loc_code#,
			#condn_code#,
			#owner_id#,
			#source_code#,			
			nvl(#eic_flg#,'N'),
			#empty_flg#,
			SYSDATE,
			#PPK_IND#,
			#LM_USER_ID#,
			SYSDATE,
			'N',
			#CFM_STATUS#,
			#RESV_FLG#,
			'Y',
			null,
			ULD_TR_SEQ.NEXTVAL,
			'EU',
			SYSDATE,
			'',
			null,
			<isNotEmpty property="docLineNo"> 
			#docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			 '1',
		</isEmpty>	
			#loc_code#,
			'INSERT',
		#AGENT_ID#,
		#ser_ind#,
		sysdate
		
		   <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,'EIC', 
				'Y'
				</isEqual>
				<isEqual property="eic" compareValue="N">	
				,#BASE_PLT#,
				null,	
				null, 
				'N'
				</isEqual>
			</isNotEmpty>
			 <isEmpty property="eic">			 		
				,#BASE_PLT#,
				null,	
				null, 
				'N'
			</isEmpty>	
			,'N',
			'N',
		'N',
		'N',
		#HANDLING_MODE#,		
		'N',
		'N',
		'N',
		null,
		#TARE_WEIGHT#,
		#GROSS_WEIGHT#,
		#TR_TYPE#,
		#owner_id#,
		null,
		null,null,null  
		)
	</insert>
	
	  <update id="imp_uld_checkin_empty_flightNotFound_upd" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET 
		uld_type=#uld_type#, 
		uld_no=#uld_no#, 
		uld_carr=#uld_carr#, 
		FLT_NO = null, 
		FLT_TYPE = null, 
		FLT_DATE = null, 
		FLT_KEY = null,
		loc_code=#loc_code#, 
		DAM_IND=#condn_code#, 
		owner_id=#owner_id#, 
		PARENT_OWNER=#owner_id#, 
		source_code=#source_code#, 		
		eic_flg=nvl(#eic_flg#,'N'), 
		empty_flg=#empty_flg#, 
		tare_weight = #TARE_WEIGHT#,
		gross_weight = #GROSS_WEIGHT#,
		CONTR_CODE = #CONTR_CODE#,
		STRG_DATE=sysdate, 
		PPK_IND=#PPK_IND#, 
		LM_USER_ID=#LM_USER_ID#, 
		LM_DATE=sysdate, 
		AGENT_INV='N',
		OWNED_INV='Y',
		AGENT_ID =null, 
		CFM_STATUS=#CFM_STATUS#, 
		REF_TR_NO = ULD_TR_SEQ.NEXTVAL,		
		 <isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>		
		REF_TR_TYPE = 'EU',
		REF_TR_DATE = SYSDATE, 
		REF_OUT_CARR = '', 
		REF_TR_EVENT = 'UPDATE', 		 
		BASE_PLT     = #BASE_PLT#,
		SER_IND=#ser_ind#,
		RESV_FLG = 'N',
		RESV_DATE='', 
		RESV_RMK='', 
		RMV_RMK='', 
		IMP_FLT_CARR='',
		IMP_FLT_DATE='',
		IMP_FLT_KEY='',
		IMP_FLT_NO='', 
		TARGET=null, 
		FIRST_WT='', 
		SECOND_WT='', 
		THIRD_WT='', 
		REF_WT='', 
		ULD_FLOW='' ,
		 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				EIC_TYPE = 'EIC', 
				BASE_PAL_FLG = 'Y',
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				EIC_TYPE = null, 
				BASE_PAL_FLG = 'N',
				</isEqual>
		</isNotEmpty>			
		ASV_INV='N',
		OFLD_FLG='N',		
		BB_IND='N',
		MIX_PPK_IND='N',
		DG_IND='N',
		LOCKED = 'N',
	  	LOCK_RQS = 'N',
		HANDLING_MODE=#HANDLING_MODE#,	
		TRANSIT_FLG=#TRANSIT_FLG#,			
		TRANSIT_TYPE=null,
		TR_TYPE = #TR_TYPE#,
		FINAL_WEIGHT = null,
		DOUBLE_WGT_RSLT= null,
		X_RAY_RES = null, X_RAY_REQ = null, ENTRY_TIME = sysdate , GEN_RMK = '' 
		WHERE ULD_KEY = #uld_key#
	</update>
	
	<select id="sqlGetCheckinULDTareWeight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		SELECT TARE_WEIGHT as tareWeight
			 FROM ULD_TYPE_CARR_TARE_WT
			  where ULD_TYPE=UPPER(#uldType#) and ULD_CARR=UPPER(#uldCarr#) 
		 and UPPER(#uldNo#) between ULD_NO_FROM and ULD_NO_TO
   	</select>
	
	<select id="check_ULDUsed_inDownSreamProcess" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="java.lang.String">				
		SELECT ULD_FLOW FROM ULD_INVENTORY where ULD_KEY = #uldKey# 
	</select>
	
	<!-- Inbound Tow Order (B) -->
	<select id="sqlGetTowOrderInFlights" parameterClass="cargo.cms.imprt.bo.SearchTowOrderBO" resultClass="cargo.cms.imprt.bo.TowOrderFlightBO">
		<![CDATA[
	    SELECT FLTNO fltNo, FLTKEY fltKey, FLTDATE fltDate, CARRCODE carrCode, RHOID rhoId, ACFTTYPE acftType,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  + (nvl((select rule_value from cmsrules where rule_code='AUTO_TOW_ORDER_MIN'),0)/24/60), 'DDMONYY HH24:MI')  AS estTime,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  - (CUTOFF/(24 * 60)), 'DDMONYY HH24:MI') AS cutoffTime,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  - (EXTCUTOFF/(24 * 60)), 'DDMONYY HH24:MI') AS extCutoffTime,
	    TO_CHAR(SYSDATE, 'DDMONYY HH24:MI') AS currentTime
	    FROM
	    (
	    SELECT EVENT.FLT_NO FLTNO, EVENT.FLT_KEY FLTKEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY') FLTDATE,
			EVENT.CARR_CODE CARRCODE , TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY') ESTDATE,
			SUBSTR(TRIM(TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000')),1,2)
				|| NVL2(NVL(FLT.EST_TIME, FLT.SCH_TIME), ':', '')
				|| SUBSTR(TRIM(TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000')),3,4) ESTTIME,
			FLT.RHO_ID RHOID,
	      	CUT.ACFT_TYPE ACFTTYPE,
	      	CUT.CUTOFF_TIME CUTOFF,
	      	CUT.EXT_CUTOFF_TIME EXTCUTOFF,
	      	(SELECT COUNT(TO_NO) FROM TOW_ORDER_IN TOW WHERE TOW.FLT_KEY = FLT.FLT_KEY AND TOW.FLT_DATE = FLT.SCH_DATE) TOWS
		FROM FLT_OPR FLT
	    JOIN IMP_RAMP_CUTOFF CUT
	    ON FLT.CARR_CODE = CUT.CARR_CODE AND FLT.CGO_ACFT_TYPE = CUT.ACFT_TYPE    
	    JOIN FLT_OPR_EVENTS EVENT
	    ON FLT.TR_NO = EVENT.TR_NO
		LEFT OUTER JOIN CUST_COMPANY AGT
		ON EVENT.CARR_CODE = AGT.CARR_CODE
		WHERE FLT.FLT_TYPE = 'A' AND NVL(FLT.STATUS, ' ') <> 'X' 
		AND NVL(EVENT.TO_GEN, 'N') = 'N' AND FLT.RHO_ID IS NOT NULL
		AND (TO_DATE(TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY')) = TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'))
     			OR TO_DATE(TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY')) = TO_DATE(TO_CHAR(SYSDATE + 1, 'DDMONYY')))
	    )
	    WHERE TOWS = 0
	    ]]>
	</select>
	<select id="sqlGetTowOrderDefHOArea" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT rule_value value FROM cmsrules WHERE rule_code = #PARAM#
	</select>
	<select id="sqlGetTowInExistForFlt" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT COUNT(TO_NO) FROM TOW_ORDER_IN TOW 
		 WHERE TOW.FLT_KEY = UPPER(#fltKey#) AND TO_CHAR(TOW.FLT_DATE, 'DDMONYY') = UPPER(#fltDate#)
	</select>
	<select id="sqlGetTowOrderInCutoffTime" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT nvl(CUTOFF_TIME,0) cutoff
		   FROM IMP_RAMP_CUTOFF
		  WHERE carr_code = #carrCode# AND acft_type     = #acftType#
	</select>
	<select id="sqlGetTowOrderInMailFax" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.EMailFaxAddressBO">
		SELECT EMAIL1 AS emailAddress1 ,EMAIL2 AS emailAddress2 , 
		EMAIL3 AS emailAddress3 , EMAIL4 AS emailAddress4 , 
		EMAIL5 AS emailAddress5 , 
		FAX1 AS faxNumber1 ,FAX2 AS faxNumber2 ,
		FAX3 AS faxNumber3
		FROM CUST_COMPANY WHERE CODE = (SELECT MAX(RHO_ID) FROM TOW_ORDER_IN WHERE TO_NO = #PARAM#)
	</select>
	<select id="sqlGetTowOrderInCutoffTimeExt" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT nvl(ext_cutoff_time,0) cutoff
		   FROM IMP_RAMP_CUTOFF
		  WHERE carr_code = #carrCode#
		AND acft_type     = #acftType#
	</select>
	<parameterMap class="java.util.Map" id="sqlParamTowOrderInULD">
		<parameter property="returnArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="uldKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="hoArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="transferGrp" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="sqlProcTowOrderInULD" parameterMap="sqlParamTowOrderInULD">
		{ ? = call PKG_IMP.FUN_GET_ULD_HO_AREA_TRF_GRP(?, ?, ?, ?, ?) }
	</procedure>
	
	<!--  Changed for QR -->
	<select id="sqlGetTowOrderInULDHOAreas" parameterClass="java.util.Map" 
resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">

         SELECT IUL.ULD_KEY uldKey,  '' awbNo, AREA.AIR_SIDE airSide,
                    IUL.TRANSFER_TYPE transferType,IUL.TRANSIT_IND transitInd,
           			CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(CNTG_FLT_DATE, 'DDMONYY')CNTGFLTDATE, TRF_TYPE || decode(BRK_BULK,'Y',' + BB',null) trfType,
           (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
           			FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC) 
           			WHERE ULD_KEY = IUL.ULD_KEY AND FLT_KEY = IUL.FLT_KEY AND FLT_DATE = IUL.FLT_DATE AND ROWNUM &lt;= 9) shcs
         FROM IMP_ULD_LIST IUL
         	JOIN FLT_OPR FLT ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
         	JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO
         	JOIN ULD_GROUP_TYPE uldType on uldType.ULD_TYPE = substr(IUL.uld_key,0,3) 
         	JOIN MAST_ULD_GROUP uldGrp on uldGrp.ULD_GROUP = uldType.ULD_GROUP
         	LEFT OUTER JOIN MAST_WH_AREA AREA ON AREA.WH_AREA = NVL(NVL(IUL.MANUAL_HDLY_AREA,IUL.SYSTEM_HDLY_AREA), FLT.FLT_MODULE1)
         	LEFT OUTER JOIN DDT_MSG MSG
           		ON IUL.FLT_KEY   = MSG.FLT_KEY AND IUL.FLT_DATE = MSG.FLT_DATE  and MSG.ddt_status='P' and FLTEV.ddt_finalise_date is not null
         	LEFT OUTER JOIN DDT_ULD ULD
         		ON IUL.ULD_KEY = ULD.ULD_KEY AND MSG.TR_NO = ULD.TR_NO
         WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
         and not exists (select null from EDI_CPM_DTL ecd 
                where ecd.ULD_KEY = IUL.ULD_KEY AND ecd.FLT_KEY=IUL.FLT_KEY AND ecd.FLT_DATE=IUL.FLT_DATE and ecd.LOAD_TYPE = 'X' and uldType.ULD_TYPE != 'RKN' and uldGrp.PLT_CNT_SIZE = 'Half size' and rownum =1 ) 
		<isNotEmpty property="uldKey">
		          AND IUL.ULD_KEY = #uldKey#
		</isNotEmpty> 
</select>
<select id="sqlGetTowOrderInULDHOAreas_Trn" parameterClass="java.util.Map" resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">
		SELECT IUL.ULD_KEY uldKey,  '' awbNo, AREA.AIR_SIDE airSide,
                    IUL.TRANSFER_TYPE transferType,IUL.TRANSIT_IND transitInd,
           			CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(CNTG_FLT_DATE, 'DDMONYY')CNTGFLTDATE, TRF_TYPE || decode(BRK_BULK,'Y',' + BB',null) trfType,
           (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
           			FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC) 
           			WHERE ULD_KEY = IUL.ULD_KEY AND FLT_KEY = IUL.FLT_KEY AND FLT_DATE = IUL.FLT_DATE AND ROWNUM &lt;= 9) shcs
         FROM IMP_ULD_LIST IUL 
         	JOIN IMP_RAMP_INB_CHK_DTL RICD ON RICD.FLT_KEY   = IUL.FLT_KEY AND RICD.FLT_DATE = IUL.FLT_DATE AND RICD.ULD_KEY= IUL.ULD_KEY 
         	JOIN FLT_OPR FLT ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
         	JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO
         	JOIN ULD_GROUP_TYPE uldType on uldType.ULD_TYPE = substr(IUL.uld_key,0,3) 
         	JOIN MAST_ULD_GROUP uldGrp on uldGrp.ULD_GROUP = uldType.ULD_GROUP
         	LEFT OUTER JOIN MAST_WH_AREA AREA ON AREA.WH_AREA = NVL(NVL(IUL.MANUAL_HDLY_AREA,IUL.SYSTEM_HDLY_AREA), FLT.FLT_MODULE1)
         	LEFT OUTER JOIN DDT_MSG MSG
           		ON IUL.FLT_KEY   = MSG.FLT_KEY AND IUL.FLT_DATE = MSG.FLT_DATE  and MSG.ddt_status='P' and FLTEV.ddt_finalise_date is not null 
         	LEFT OUTER JOIN DDT_ULD ULD
         		ON IUL.ULD_KEY = ULD.ULD_KEY AND MSG.TR_NO = ULD.TR_NO
         WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND RICD.FFM_IND='Y'
         and not exists (select null from EDI_CPM_DTL ecd 
                where ecd.ULD_KEY = IUL.ULD_KEY AND ecd.FLT_KEY=IUL.FLT_KEY AND ecd.FLT_DATE=IUL.FLT_DATE and ecd.LOAD_TYPE = 'X' and uldGrp.PLT_CNT_SIZE = 'Half size' and rownum =1 ) 
		<isNotEmpty property="uldKey">
		          AND IUL.ULD_KEY = #uldKey#
		</isNotEmpty> 
		UNION
		SELECT ULD_KEY AS uldKey,'' awbNo, null airSide,null transferType,null transitInd,null CNTGFLTKEY, null CNTGFLTDATE, null trfType,
        null shcs 
		FROM EDI_CPM_DTL DTL
    	where FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')  AND DTL.ULD_KEY IS NOT NULL AND 
    	not exists (select null FROM  TRN_FFM_MSG TFM	JOIN TRN_FFM_ULD TFU ON TFM.TR_NO=TFU.TR_NO AND TFM.FFM_STATUS = 'P' WHERE TFU.ULD_KEY=DTL.ULD_KEY AND TFM.FLT_KEY = DTL.FLT_KEY AND TFM.FLT_DATE = DTL.FLT_DATE )
    	AND not exists (select null FROM  EDI_FFM_MSG TFM	JOIN EDI_FFM_ULD TFU ON TFM.TR_NO=TFU.TR_NO AND TFM.FFM_STATUS = 'P' WHERE TFU.ULD_KEY=DTL.ULD_KEY AND TFM.FLT_KEY = DTL.FLT_KEY AND TFM.FLT_DATE = DTL.FLT_DATE ) 
    	and not ((nvl(load_type,'*') = 'M' and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_TM !='CPCT') > 0  )
		  OR ((nvl(load_type,'*') = 'Q' and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_COUR !='CPCT') > 0  ))
          OR ((nvl(load_type,'*') not in ('M','Q') and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_OTH !='CPCT') > 0  )))
	     <isNotEmpty property="uldKey">
	             AND DTL.ULD_KEY = #uldKey#
		</isNotEmpty>	 
</select>
			
	
	<parameterMap class="java.util.Map" id="sqlParamTowOrderInAWB">
		<parameter property="returnArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="hoArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="transferGrp" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="sqlProcTowOrderInAWB" parameterMap="sqlParamTowOrderInAWB">
		{ ? = call PKG_IMP.FUN_GET_AWB_HO_AREA_TRF_GRP(?, ?, ?, ?, ?) }
	</procedure>
	
	<!--  Changed for QR -->
	<select id="sqlGetTowOrderInBulkshipAreas" parameterClass="java.util.Map" resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">
		SELECT '' uldKey, FFM.AWB_NO awbNo, '' hoArea, DDT.SHP_TRF_TYPE transferType,
		  'N' transitInd, DDT.SHP_CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(DDT.SHP_CNTG_FLT_DATE, 'DDMONYY') CNTGFLTDATE, DDT.SHP_TRF_TYPE  trfType,
		  (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
	    	FROM (SELECT DISTINCT SHC, FLT_KEY, AWB_NO, AWB_DATE,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = FFM.AWB_NO AND AWB_DATE = FFM.AWB_DATE AND FLT_KEY = FFM.FLT_KEY AND FLT_DATE = FFM.FLT_DATE AND ROWNUM &lt;= 9) shcs		  		    
		   FROM
		  (SELECT SHP.AWB_NO, SHP.AWB_DATE, MSG.FLT_KEY, MSG.FLT_DATE, MSG.CARR_CODE
		     FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP, EDI_FFM_ULD ULD
		    WHERE 
		    MSG.TR_NO = SHP.TR_NO AND MSG.TR_NO = ULD.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		    AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
		  ) FFM 
		  JOIN FLT_OPR FLT ON FFM.FLT_KEY   = FLT.FLT_KEY AND FFM.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
      	  JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO   
		  LEFT JOIN (select flt_key, flt_date, awb_no, SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE
			   from   (select flt_key, flt_date, awb_no, SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE, 
			         dense_rank() over (partition by flt_key, flt_date, awb_no order by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE) rank 
			     from  V_UNFIN_DDT_DTL 
			     where ULD_KEY IS NULL) 
			 where rank = 1) DDT ON FFM.FLT_KEY = DDT.FLT_KEY AND FFM.FLT_DATE = DDT.FLT_DATE AND FFM.AWB_NO = DDT.AWB_NO and FLTEV.ddt_finalise_date is not null
		  LEFT JOIN IMP_CAR_SHP CSHP ON FFM.FLT_KEY = CSHP.FLT_KEY AND FFM.FLT_DATE = CSHP.FLT_DATE AND CSHP.AWB_NO = FFM.AWB_NO
		  LEFT JOIN IMP_CAR_AWB CAWB ON CSHP.AWB_NO = CAWB.AWB_NO AND CSHP.AWB_DATE = CAWB.AWB_DATE
		WHERE
		FFM.FLT_KEY = #fltKey# AND FFM.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="awbNo">
			AND FFM.AWB_NO = #awbNo#
		</isNotEmpty>
	</select>
	<insert id="sqlInsertTowOrderInHdr" parameterClass="cargo.cms.imprt.bo.InboundTowOrderBO">
		INSERT INTO TOW_ORDER_IN
		(
		TO_NO, RHO_ID ,VER_NO ,FLT_KEY,FLT_DATE ,HANDLING_STAFF_NAME,HANDLING_STAFF_ID,NOTF_SEND_DATE ,
		REM_1_DATE ,REM_2_DATE ,ACK_DATE ,CR_USER_ID ,CR_DATE,LM_USER_ID ,LM_DATE,FLT_TYPE
		)
		VALUES
		(
		#toNo#, #rhoId#, #verNo#, #fltKey# ,#fltDate#, #handlingStaffName#, #handlingStaffId#, 
		#notfSendDate# , #rem1Date# ,
		#rem2Date#, #ackDate#, #crUserId#, SYSDATE, #lmUserId# , SYSDATE, #fltType#
		)
	</insert>
	<insert id="sqlInsertTowOrderInDtl" parameterClass="cargo.cms.imprt.bo.InboundTowOrderDetailBO">
		INSERT INTO TOW_ORDER_IN_DTL
		(
		TO_NO, ULD_KEY, AWB_NO, HO_AREA, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE, CNTG_FLT_KEY, CNTG_FLT_DATE, TRF_TYPE, TRNS_GRP, SHCS
		)
		values(
		#toNo#, #uldKey#, #awbNo#, #hoArea#, #crUserId#,
		SYSDATE, #lmUserId#, SYSDATE, #cntgFltKey#, #cntgFltDate#, #trfType#, #trnsGrp#, #shcs#
		)
	</insert>
	<update id="sqlUpdateFlightEventToGen" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO">
		UPDATE FLT_OPR_EVENTS EVENT
		SET TO_GEN  = 'Y'
		WHERE EVENT.FLT_KEY = #fltKey#	AND EVENT.SCH_DATE = #fltDate# AND EVENT.FLT_TYPE = 'A'
	</update>		
	<!-- Inbound Tow Order (E) -->
	
	<select id="imp_checkedInOtherFlight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT COUNT(1)
   		FROM uld_inventory
  		WHERE uld_key      = #uldKey#
  		AND LOC_CODE IS NOT NULL   
		AND CFM_STATUS NOT  IN ('RELEASED','RESERVED')
		AND NOT (flt_key     = #flightKey#
		AND FLT_DATE         = #flightDate#)
		AND flt_type = 'I' and flt_key is not null	
	]]>
	</select>

        <select id="imp_chk_agent"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT NVL(count(1),0) FROM ULD_INVENTORY WHERE   ULD_KEY =  #uldKey# AND AGENT_INV  ='Y' AND length(ULD_KEY) >= 9
	]]>
	</select>

        <select id="imp_getflight_ata"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(SCH_TIME,0) FROM FLT_OPR WHERE CARR_CODE = upper(#CARR_CODE#) AND FLT_NO = upper(#FLT_NO#) AND SCH_DATE = TO_DATE( #FLT_DATE#, 'DDMONYY') AND FLT_TYPE = 'A'
   	</select>

   	<select id ="imp_get_ramp_trno" parameterClass="map" resultClass="java.lang.String">
		SELECT TR_NO FROM IMP_RAMP_CHK_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>

	<select id ="imp_uld_validations" parameterClass="map" resultClass="java.lang.String">
		SELECT  nvl(count(1),0)
		FROM ULD_GROUP_CARR
		WHERE CARR_CODE=#carrCode# 
			AND ULD_TYPE=#uldType# 
		<dynamic>
			<isNotEmpty property="basePal">
				 AND BASE_PAL_FLG=#basePal#
		     </isNotEmpty>
		</dynamic> 
	</select>

	<select id="get_max_docline_chk_dtl"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(MAX(DOC_LINE_NO),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo#		
	</select>

     <select id="imp_chk_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
	 	SELECT TRF_TYPE FROM ddt_uld WHERE cntg_flt_key=#flightKey# and cntg_flt_date=TO_DATE(#flightDate#,'DDMONYY') and uld_key=#uldKey#
	</select>
	
	<select id="imp_chk_inb_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
	 	SELECT TRANSFER_TYPE FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY=#flightKey# and TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and ULD_KEY=#uldKey#
	</select>

      <select id="imp_hht_getUld" parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
	SELECT 
	   FLT_KEY AS flightKey,
	   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,	  
	   '' AS wareHouseDst,
	   LOC_CODE AS wareHouseLoc,
	   EMPTY_IND AS empty,
	   EIC_IND AS eic,	   
	   DAM_IND AS condition,
	   RMK AS damageRemark,
	   ULD_KEY as uldKey	
	FROM IMP_RAMP_CHK_DTL 
	WHERE
	 TR_NO = #trNo# AND
	 DOC_LINE_NO = #docLineNo# AND
	 ULD_KEY = #uldKey#
	</select>

	<select id="imp_checkin_validate" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.String">		
		SELECT NVL(CHKIN_YN,'N') FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey#
	</select>

	<update id="updateStatusandChkinFltDtls-Checkin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
	UPDATE ULD_REL_DTL A
		SET A.STATUS    = 'RETURNED',
  		A.RET_DATE    = SYSDATE,
  		A.RET_USER    = #lmUser#,
  		CHK_IN_FLT_KEY = #flightKey#,
  		CHK_IN_FLT_DATE = #flightDate#,
  		tr_type_evt = 'REURF'
		WHERE A.ULD_KEY = #uldKey#
		AND A.STATUS    = 'RELEASED'
		AND A.TR_NO    IN
  (SELECT MAX(TO_NUMBER(B.TR_NO)) FROM ULD_REL_DTL B WHERE B.ULD_KEY = #uldKey#)
  	</update>
	<update id="updateStatusandChkinFltDtls-UnCheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
	UPDATE uld_rel_dtl a
		SET a.status    = 'RELEASED',
  		a.ret_date    = '',
  		a.ret_user    = '',
   		CHK_IN_FLT_KEY = '',
  		CHK_IN_FLT_DATE = '',
  		tr_type_evt = 'REURF'
		WHERE a.uld_key =  #uldKey#
		AND a.status    = 'RETURNED'
		AND a.CHK_IN_FLT_KEY = #flightKey#
		AND a.CHK_IN_FLT_DATE = #flightDate#
		AND a.tr_no    IN
  		(SELECT MAX (to_number(b.tr_no)) FROM uld_rel_dtl b WHERE b.uld_key =  #uldKey#)
  	</update>
  	<update id="updateagentinven-UnCheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
  	UPDATE ULD_INVENTORY SET AGENT_INV='Y' WHERE ULD_KEY=#uldKey#
  	</update>

<!--  Changed for QR -->
<select id="imp_uld_checkin_hht"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	
SELECT * 
	FROM (
		 SELECT  dtl.CARR_CODE AS carrierCode ,	    
			dtl.TR_NO AS trNo , 			
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey ,			
			dtl.LOC_CODE AS locCode, 
			<!-- dtl.LOC_CODE	AS plannedHoAreaFFMCPM,-->	
			PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,	
            (select TD.HO_AREA FROM TOW_ORDER_IN_DTL TD  JOIN TOW_ORDER_IN TH ON TD.TO_NO = TH.TO_NO  WHERE TH.FLT_KEY = dtl.FLT_KEY  AND TH.FLT_DATE = dtl.FLT_DATE  AND TD.ULD_KEY = dtl.ULD_KEY) towHoArea,
			dtl.DAM_IND AS damInd, 
			dtl.EMPTY_IND AS empty, 
			dtl.HT  AS ht,
			dtl.CONTR AS contour,
			dtl.EIC_IND AS eic, 
			dtl.RMK AS remark,
			dtl.TRANSFER_TYPE AS transferType,
			dtl.RHO_STAFF AS rhoStaffId,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
			TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,			
			NVL(dtl.CHKIN_YN,'N') AS actualCheckIn,
			dtl.CHKIN_YN AS checkInStatus,	
      		m.h_cont_ind AS hcontainer,
			dtl.SURPLUS_IND surPlusInd,
			uld.HANDLING_MODE									   AS handlingMode,
					uld.TRANSIT_IND 									   AS transitInd,
					 edi.CNTR                             AS defContr,
			(SELECT MAX(ULD_IMAGE_NAME) FROM ULD_IMAGE where uld_key=#uldNo#) as transactionId					 			
		FROM    	
		IMP_RAMP_CHK_DTL dtl
      	join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and f.SCH_DATE = dtl.FLT_DATE   
      	join FLT_OPR_EVENTS fo on fo.FLT_TYPE  = 'A' and fo.FLT_KEY = dtl.FLT_KEY and fo.SCH_DATE = dtl.FLT_DATE and fo.FLT_CLS_YN='N'
      	left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND edi.FLT_DATE = dtl.FLT_DATE AND edi.ULD_KEY=dtl.ULD_KEY
      	WHERE							
			 dtl.loc_code=#locCode# AND
			 (dtl.uld_no=#uldNo# or dtl.uld_key=#uldNo#)	
			
		UNION ALL			
		
		SELECT  dtl.CARR_CODE AS carrierCode ,		    
			dtl.TR_NO AS trNo ,
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey , 		
			#locCode#	 AS locCode, 
				<!-- dtl.LOC_CODE	AS plannedHoAreaFFMCPM,-->
			PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,
       		(select TD.HO_AREA FROM TOW_ORDER_IN_DTL TD  JOIN TOW_ORDER_IN TH ON TD.TO_NO = TH.TO_NO  WHERE TH.FLT_KEY = dtl.FLT_KEY  AND TH.FLT_DATE = dtl.FLT_DATE  AND TD.ULD_KEY = dtl.ULD_KEY) towHoArea,
	     	chk.DAM_IND											                       AS damInd      ,
	      	chk.EMPTY_IND                                          AS empty       ,      
	      	chk.HT                                           	     AS ht          ,
	      	chk.CONTR                                              AS contour     ,
	      	chk.EIC_IND                                            AS eic         ,
	      	dtl.RMK                                                AS remark      ,
	      	dtl.TRANSFER_TYPE										 AS transferType,
      		chk.RHO_STAFF 										                     AS rhoStaffId,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,	
			TO_CHAR(chk.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,				
			NVL(chk.CHKIN_YN,'N') 																AS actualCheckIn           ,
      		chk.CHKIN_YN          																AS checkInStatus           ,
       		m.h_cont_ind AS hcontainer,
      		chk.SURPLUS_IND          															AS surPlusInd,
					uld.HANDLING_MODE									   AS handlingMode,
					uld.TRANSIT_IND 									   AS transitInd,
					 edi.CNTR                             AS defContr,
			(SELECT MAX(ULD_IMAGE_NAME) FROM ULD_IMAGE where uld_key=#uldNo#) as transactionId
		FROM
			IMP_RAMP_INB_CHK_DTL dtl
      join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and f.SCH_DATE = dtl.FLT_DATE
      join FLT_OPR_EVENTS fo on fo.FLT_TYPE  = 'A' and fo.FLT_KEY = dtl.FLT_KEY and fo.SCH_DATE = dtl.FLT_DATE and fo.FLT_CLS_YN='N'
      LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND chk.FLT_DATE = dtl.FLT_DATE AND chk.ULD_KEY = dtl.ULD_KEY
      left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
	  LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
	  LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND edi.FLT_DATE = dtl.FLT_DATE AND edi.ULD_KEY=dtl.ULD_KEY
      WHERE				
			  (dtl.uld_no=#uldNo# or dtl.uld_key=#uldNo#)
			  AND NVL(CHK.CHKIN_YN,'N') = 'N'	
	)  
 order by uldKey
	</select>

	<select id="imp_chk_dup_uld"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">		
		SELECT SUM(C) C
		FROM (SELECT NVL(count(1),0) C FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY = #uldKey# AND FLT_KEY =#flightKey# AND FLT_DATE =TO_DATE(#flightDate#,'DDMONYY')
			  UNION ALL
			  SELECT NVL(count(1),0) C FROM IMP_RAMP_INB_CHK_DTL WHERE ULD_KEY = #uldKey# AND FLT_KEY =#flightKey# AND FLT_DATE =TO_DATE(#flightDate#,'DDMONYY'))
	</select>

	<!--  Changed for QR -->
	<insert id="imp_insert_header" parameterClass="map" >		
		INSERT INTO IMP_RAMP_CHK_HD	(TR_NO,FLT_NO,FLT_DATE,FLT_ATA,CARR_CODE,FLT_KEY,CHKIN_COMPLETE,TR_TYPE,TR_STATUS,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
		VALUES (#trNo#,#flightNo#,TO_DATE(#flightDate#,'ddmonyy'),#ata#,#carrierCode#,#flightKey#,'N',#transferType#,'N',
			#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,'I')
	</insert>

        <select id="imp_check_docline_exist"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey#
		<!--SELECT MAX(DOC_LINE_NO) FROM IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#-->
	</select>

	<select id="delete_uld_checkin_hht"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
		 SELECT  dtl.CARR_CODE AS carrierCode ,
			dtl.TR_NO AS trNo ,
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey ,
			dtl.ULD_NO as 	uldNo,		
			ui.LOC_CODE AS locCode, 			
			dtl.EMPTY_IND AS empty, 
			dtl.EIC_IND AS eic, 
			dtl.RMK AS remark,
			dtl.TRANSFER_TYPE  AS	transferType,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
			TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				
			NVL(dtl.CHKIN_YN,'N') AS actualCheckIn,
			dtl.CHKIN_YN AS checkInStatus,
			ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) serialNo,
			SURPLUS_IND surPlusInd
		FROM
			IMP_RAMP_CHK_DTL dtl
			left join ULD_INVENTORY ui on ui.uld_key = dtl.ULD_KEY,
			FLT_OPR f
		WHERE			 
			 f.FLT_KEY = dtl.FLT_KEY AND 
			 f.SCH_DATE = dtl.FLT_DATE AND
			 f.FLT_TYPE	= 'A' AND
			 dtl.FLT_NO =  #flightNo#  AND 
			 dtl.CARR_CODE = upper(#carrierCode#) AND 
			 dtl.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
		ORDER BY dtl.ULD_KEY
	</select>
		

      <select id="imp_hht_createUlddetail" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	SELECT 
	   DTL.FLT_KEY AS flightKey,
	   TO_CHAR(DTL.FLT_DATE,'DDMONYY') AS flightDate,	  
	   DTL.LOC_CODE AS locCode,
	   DTL.EMPTY_IND AS empty,
	   DTL.EIC_IND AS eic,
	   DTL.RMK AS remark,
	   DTL.TRANSFER_TYPE  AS	transferType,
	   DTL.DAM_IND AS damInd,
	   DTL.SURPLUS_IND	AS surPlusInd,
       DTL.ULD_KEY AS uldKey,
	   TO_CHAR(DTL.CHKIN_DATE,'DDMONYY')AS checkInDate,
	   DTL.CHKIN_YN AS checkInStatus,	
	   DTL.TR_NO AS trNo,		 
	   DTL.ULD_NO AS uldNo,		 
	   DTL.DOC_LINE_NO AS docLineNo,
	   DTL.CARR_CODE AS carrierCode,
	   DTL.FLT_NO AS flightNo,
	   TO_CHAR(DTL.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
	   PKG_COMMON.get_flt_ata(FLR.FLT_KEY, FLR.SCH_DATE, 'A') AS ata
	FROM IMP_RAMP_CHK_DTL DTL, FLT_OPR FLR,IMP_RAMP_CHK_HD HD
	WHERE
	 DTL.TR_NO = #trNo# AND
	 DTL.DOC_LINE_NO = #docLineNo# AND
	 DTL.TR_NO = HD.TR_NO AND
	 FLR.FLT_KEY = HD.FLT_KEY AND 
	 FLR.SCH_DATE = HD.FLT_DATE AND
	 FLR.FLT_TYPE	= 'A' 
	</select>

	<update id="upd_deleteCheckInData" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE IMP_RAMP_CHK_DTL SET CHKIN_YN='N' , LM_USER_ID = #crUser# , LM_DATE = sysdate WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>

	<!--  Changed for QR 
    <select id="imp_chk_flt_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">	
		select flt_type from flt_opr where FLT_KEY=#flightKey# and SCH_DATE=#flightDate#
	</select> -->

	<!--  Changed for QR -->
	<select id="checkIfRampDtlExists"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select DOC_LINE_NO from imp_ramp_chk_dtl 
		where tr_no=(select tr_no from imp_ramp_chk_hd where flt_key=#flightKey# and flt_date=#flightDate#) and uld_key=#uldKey#
	</select>
	
	<!--  Changed for QR -->
	<select id="checkIfRampHeaderExists"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select tr_no from imp_ramp_chk_hd where flt_key=#flightKey# and flt_date=#flightDate# 
	</select>
	
	<!--  Changed for QR
	<update id="imp_upd_export_flight" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		update EXP_PMANIFEST_ULD set READY_DISP='Y',READY_WH = 'Y',
		EMPTY_YN = #empty#			
		where FLT_KEY=#expFltKey# and FLT_DATE=#expFltDate# and ULD_BT_NO=#uldKey#
	</update> -->

	<select id="imp_CountdtllistHeader" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		<!--SELECT COUNT(1) from IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# -->
		SELECT SUM(C) C
		FROM (SELECT COUNT(1) C from IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo#
			  UNION ALL
			  SELECT COUNT(1) C from IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#)
	</select>

	<delete id="imp_delchecklistHeader" parameterClass="map">
		DELETE IMP_RAMP_CHK_HD	WHERE TR_NO = #trNo# 
	</delete>

	<select id="imp_check_breakdown_start" parameterClass="map" resultClass="java.lang.Integer" >	
		select count(1) from imp_ramp_chk_dtl where uld_key=#ULD_KEY# and FLT_KEY=#FLT_KEY# and FLT_DATE=#FLT_DATE# 
		and BRKDN_START_DATE is not null and empty_ind='N'
	</select>

	<select id="imp_uld_validate_inventory"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey#		
   	</select>
   	
   	<select id="imp_lsp_validate_inventory"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from LSP_INVENTORY where LSP_NO = #lspNo#
   	</select>  
   	
   	<!--  Changed for QR -->
   	<select id="getLocCodeFromInvForLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select LOC_CODE from LSP_INVENTORY where LSP_NO = #lspNo# 
   	</select>    	

   	<select id="get_uldininventory_count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and (OWNED_INV='Y' or loc_code is not null)
	</select>
	
	
	<select id="get_uldininventory_IFcount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and TRANSIT_TYPE = 'IF'
	</select>
	
	
	<!--  Changed for QR -->
	<select id="getRHOoftheflightforreturnmail" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=OPR.RHO_ID) FROM FLT_OPR OPR WHERE OPR.RHO_ID IS NOT NULL
		AND OPR.FLT_TYPE = 'A' AND OPR.FLT_KEY = #FLT_KEY# AND OPR.SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')			
		]]>
	</select>
	<select id="getconfiguredreturnmail" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT EMAIL_IDS from MAST_DMG_RTNULD_EMAILS WHERE RHO=#param#			
		]]>
	</select>
	<select id="getLocCodeFromInvForULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		select LOC_CODE from ULD_INVENTORY where ULD_KEY = #uldKey#
	</select>
	
	<select id="getUldDamInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select NVL(dam_ind,'N') from ULD_INVENTORY where ULD_KEY = #uldKey#
	</select>
	
	<select id="imp_flt_validate_inventory"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"   resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and FLT_NO=#flightNo# and FLT_DATE=#flightDate#		
   	</select>
	
	<select id="checkEmptyFromInvForULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		select EMPTY_FLG from ULD_INVENTORY where ULD_KEY = #uldKey# and rownum=1
	</select>
	
	<!--  Changed for QR -->
	<select id="checkEmptyFromInvForLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select EMPTY_FLG from LSP_INVENTORY where LSP_NO = #lspNo#
   	</select>	
   	
   	<update id="updateLocCodeULDInv" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		TR_TYPE = #trtype#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeinULDInv" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		TR_TYPE = #trtype#,
		OWNED_INV= NVL(#ownedInv#,OWNED_INV),
		CFM_STATUS= NVL(#cfmStatus#,CFM_STATUS),		
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
	   	<isEqual property="ownedInv" compareValue="Y">		
 			,ENTRY_TIME = sysdate
		</isEqual>
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeLSPInv" parameterClass="map">
		UPDATE LSP_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE 
		where LSP_NO = #lspNo#
	</update>		
	

	<!-- added by Kamakhya on 26-AUG-10  for Maintain DIR Starts Here for Iteration 2 -->
	<insert id="imp_insertAWBEventsForEventLog" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , 'ACAR', 'Amend CAR', #flightNoKey#,  TO_DATE(#flightDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPc#,0),nvl(#awbWt#,0) ,'ADMIN1',  sysdate, 'ADMIN1',  sysdate)
		]]>
	</insert>
	
	<!--  Changed for QR -->
	<select id="FlightDIRSummaryList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT 
		shp.FLT_KEY flightNoKey, 
		shp.FLT_DATE flightDate,
		flt.CARR_CODE  flightKey,
		pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A','DD') AS ata,
		pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A','DD') AS ataTime, 
		shp.FDAW fdaw, 
		shp.MSAW msaw,
		shp.FDAV fdav, 
		shp.MSAV msav,		
		(select TO_CHAR(COUNT(1),'0')   from Imp_CAR_SHP    where (Doc_Disc = 'FDAW' OR Doc_Disc = 'MSAW'  
                          OR Doc_Disc = 'MSCN'  OR Doc_Disc = 'FDCN') and DIR_PROC_USER is null  
                          and Flt_Key =shp.FLT_KEY  and Flt_Date = shp.FLT_DATE) AS dirProcUser
		FROM 
			(SELECT 
			FLT_KEY, 
			TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) as FDAV, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
			
			FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp
		 	JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A' 		           		
			<isNotEmpty property="carrCode">
				AND	flt.CARR_CODE = #carrCode#
			</isNotEmpty>		
			<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
					AND	(flt.CARR_CODE = #loginCarrier#
					OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
					WHERE GRP_CARR_CODE	= #loginCarrier#))							
				</isNotEmpty>
			</isEmpty>  
		WHERE 
		  ( FDAW > 0 or MSAW > 0 OR FDAV  > 0 OR MSAV > 0 ) AND 
		    shp.FLT_DATE = #flightDate# 
		    
		<isNotEmpty property="flightNoKey">
			AND	shp.FLT_KEY = #flightNoKey#
		</isNotEmpty>
	</select>
	
	<!--  Modified for View Dir Summary List -->
	<!--  Changed for QR -->	
	<select id="ViewFltDIRSummaryList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
          SELECT 
          SHP.FLT_KEY as flightNoKey,
          SHP.CARR_CODE as flightKey,
          TO_CHAR(SHP.FLT_DATE,'DDMONYY') AS flightDate,
          pkg_common.get_flt_ata(SHP.FLT_KEY, TO_CHAR(SHP.FLT_DATE,'DDMONYY'),'A') AS ata, 
            SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),0,2)|| ':'|| 
          SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),3,4) as ataTime,   
              SHP.FDAW fdaw,
              SHP.MSAW msaw,
              SHP.FDAV fdav,
              SHP.MSAV msav,
              SHP.FLT_DATE as fltDate,
        (case
         when (select COUNT(1) from Imp_CAR_SHP where DIR_PROC_USER is null and doc_disc is not null and Flt_Key = SHP.FLT_KEY  and Flt_Date = SHP.FLT_DATE ) >= 1
         then 'N'
         else 'Y'       
         end) as dirmaintain,
       (case
         when (select COUNT(1) from Imp_CAR_SHP where Flt_Key = SHP.FLT_KEY and Flt_Date = SHP.FLT_DATE AND send_fad_date is null and doc_disc is not null) >= 1
         then 'N'
         else 'Y'
         end) AS sentfad
      FROM
          (SELECT FLT_KEY,CARR_CODE, FLT_DATE, 
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) AS FDAV,
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
                  FROM IMP_CAR_SHP s WHERE FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo# 
                  AND exists (SELECT null FROM FLT_OPR_EVENTS WHERE FLT_KEY=s.FLT_KEY and sch_date = s.flt_date and flt_type='A' AND FLT_CLS_YN != 'Y')
                  GROUP BY FLT_KEY, FLT_DATE,CARR_CODE) SHP, FLT_OPR flt
           WHERE
      flt.FLT_TYPE = 'A' and
      flt.FLT_KEY = SHP.FLT_KEY AND
      flt.sch_DATE = SHP.FLT_DATE     
		<isNotEmpty property="flightNoKey">
			AND SHP.FLT_KEY = NVL(#flightNoKey#,SHP.FLT_KEY) 
		</isNotEmpty>
		<isEmpty property="flightNoKey">
			<isNotEmpty property="loginCarrier">
				AND	(SHP.CARR_CODE = #loginCarrier#
				OR SHP.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>      
      AND SHP.FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo#
      AND ( SHP.FDAW > 0 or SHP.MSAW > 0 or SHP.FDAV > 0 or SHP.MSAV > 0)      
          <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>        
      </select>

	<!--  Changed for QR -->	
	<select id="ViewFltDIRSummaryListCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) AS totalRowCount FROM 
	      (SELECT SHP.FLT_KEY as flightNoKey,
          TO_CHAR(SHP.FLT_DATE,'DDMONYY') AS flightDate,
          pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') AS ata, 
   	      SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),0,2)|| ':'|| 
          SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),3,4) as ataTime,	
		  SHP.FDAW fdaw,
		  SHP.MSAW msaw,
		  SHP.FDAV fdav,
		  SHP.MSAV msav,
		  SHP.FLT_DATE as fltDate,
         (case
         when (select COUNT(1) from Imp_CAR_SHP where DIR_PROC_USER is null and Flt_Key = #flightNoKey# and Flt_Date BETWEEN #flightDateFrom# AND #flightDateTo#) >= 1
         then 'N'
         else 'Y'       
         end) as dirmaintain,
      (case
      when (select COUNT(1) from Imp_CAR_SHP where Flt_Key = #flightNoKey# and Flt_Date BETWEEN #flightDateFrom# AND #flightDateTo# AND send_fad_date is null and doc_disc is not null) >= 1
       then 'N'
       else 'Y'
       end) AS sentfad

      FROM
          (SELECT FLT_KEY,CARR_CODE, FLT_DATE, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) AS FDAV,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
			FROM IMP_CAR_SHP WHERE FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo# AND exists 
                  (SELECT null FROM FLT_OPR_EVENTS WHERE FLT_KEY=NVL(#flightNoKey#,FLT_KEY) AND FLT_CLS_YN != 'Y' 
                  AND sch_date between #flightDateFrom# AND #flightDateTo# and flt_type='A') 
			GROUP BY FLT_KEY, FLT_DATE,CARR_CODE) SHP, FLT_OPR flt
     WHERE
      flt.FLT_TYPE = 'A' and
      flt.FLT_KEY = SHP.FLT_KEY AND
      flt.sch_DATE = SHP.FLT_DATE  and
      SHP.FLT_KEY = NVL(#flightNoKey#,SHP.FLT_KEY) AND
      SHP.FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo#
      AND ( SHP.FDAW > 0 or SHP.MSAW > 0 or SHP.FDAV > 0 or SHP.MSAV > 0) 
        )
 	</select>
	<!--  Modified on 07-sep-10 for View Discrepancy Shipment List -->
	<select id="DiscrepancyShipmentList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		  SELECT 
			SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
			shp.AWB_No awbNo, 
			TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
			car.AWB_DEST dest, 
			DOC_DISC docDisc, 
			mcd.CODE_DESC dirAction, 
			DIR_ACTION_RMK dirActionRemarks, 
			DIR_PROC_USER dirProcUser, 
			to_char(DIR_PROC_DATE, 'DDMONYY HH24:MI:SS') dirProcDate,
			shp.LM_USER_ID lmUserId,
			to_char(shp.LM_DATE, 'ddMMYY hh24:mi') lmDate,
			
			Decode(shp.send_fad_date,null,'N','Y') AS sentfad
						 
		FROM IMP_CAR_SHP shp 
		LEFT JOIN MAST_CODE_DTL mcd on DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate# 
		 AND DOC_DISC in ('FDAW', 'MSAW','FDCN','MSCN') Order By shp.AWB_No
	</select>
	
	<select id="fltclosedcheck"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr_events 
	where FLT_TYPE = 'A' and SCH_DATE = TO_DATE(#fltdate#,'DDMONYY') and FLT_CLS_DATE is not null 	
	AND FLT_KEY = #fltkey#
	</select>
	
	<select id="validateDocComplViewDir"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #flightDate#
		and DOC_COMPL_DATE is not null 
		and DOC_COMPL_YN = 'Y'
		and FLT_TYPE = 'A' 
		AND FLT_KEY = #flightKey# 
	</select>
	<select id="validateFlightKeyForViewDir"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from FLT_OPR_EVENTS 
			WHERE SCH_DATE BETWEEN #fltDtFrom# AND #fltDtTo# 
			and FLT_KEY= #fltKey# and FLT_TYPE = 'A' 
	</select>
	
	<select id="fltWhComplcheck"  parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from flt_opr_events where flt_key=#fltkey# and sch_date = TO_DATE(#fltdate#,'DDMONYY') and flt_type='A' 
	and (WHSE_COMPL_DATE is not null or WHSE_COMPL_TIME is not null)
	</select>
	
	<!--  Changed for QR -->
	<select id="DiscrepancyShipmentbo" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT 
			SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
			shp.AWB_No awbNo, 
			to_char(shp.AWB_DATE, 'DDMONYY') awbDate, 
			car.AWB_DEST dest, 
			DOC_DISC docDisc, 
			DIR_ACTION dirAction, 
			DIR_ACTION_RMK dirActionRemarks, 
			DIR_PROC_USER dirProcUser, 
			to_char(DIR_PROC_DATE, 'DDMONYY HH24:MI:SS') dirProcDate,
			shp.LM_USER_ID lmUserId,
			to_char(shp.LM_DATE, 'ddMMYY hh24:mi') lmDate			 
		FROM IMP_CAR_SHP shp 
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate# AND 
		shp.AWB_NO = #awbNo# AND
		shp.AWB_DATE  = #awbDate# AND
		car.AWB_DEST = #dest# AND
		DOC_DISC = #docDisc#  Order By shp.AWB_No
	</select>
	<update id="updateDiscShpList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	IMP_CAR_SHP SET 		
		DIR_ACTION = #dirAction# , 
		DIR_ACTION_RMK = #dirActionRemarks#, 
		DIR_PROC_USER = #lmUserId# ,
		DIR_PROC_DATE = SYSDATE ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE ,
		TR_TYPE='MDIR' 
		WHERE AWB_NO = #awbNo# AND 
		to_char(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		to_char(FLT_DATE, 'DDMONYY') = #flightDate# 	
	</update>
	
	<!--  Changed for QR 
	<update id="updateAWBEventsList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	AWB_EVENTS SET 			 
		CR_USER_ID = #lmUserId# ,
		CR_DATE = SYSDATE       ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE 
		WHERE AWB_NO = #awbNo# AND 
		to_char(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		to_char(FLT_DATE, 'DDMONYY') = #flightDate# 	
	</update> -->
	
	<!--  Changed for QR -->
	<update id="deleteDiscShpList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	IMP_CAR_SHP SET 
		DIR_RMK = NULL , 
		DIR_ACTION = NULL , 
		DIR_ACTION_RMK = NULL, 
		DIR_PROC_USER = NULL ,
		DIR_PROC_DATE = NULL ,
		DOC_DISC = NULL ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE,
		TR_TYPE='MDIR'
		WHERE AWB_NO = #awbNo# AND 
		AWB_DATE = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		FLT_DATE = #flightDate# 
	</update>
	
	<!--  Maintain DIR Ends Here for Iteration 2 -->
	
	
	<!-- Inbound Doc Arrival Time Started -->
<select id="inbdocarrivaltime" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO" resultClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
SELECT  evnt.TR_NO fltEventTrNo,flt.FLT_KEY fltKey, TO_CHAR(flt.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(flt.FLT_KEY, flt.SCH_DATE, 'A') as sta,
		PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A','DD') AS ata ,	
		TO_CHAR(evnt.DOC_ARR_DATE ,'ddMONYY HH24:MI') AS docArrTime, evnt.DOC_ARR_USER_ID AS docUserId,
		evnt.NO_OF_PACKS AS pouch,	evnt.DOC_COMPL_YN AS docComplYN ,
		TO_CHAR(evnt.LM_DATE, 'ddMMYY HH24:MI:SS') as lmDate
FROM    FLT_OPR flt	JOIN FLT_OPR_EVENTS evnt ON 
		evnt.FLT_KEY = flt.FLT_KEY AND 	evnt.SCH_DATE = flt.SCH_DATE 
		AND evnt.FLT_TYPE = 'A'		
WHERE to_date((to_char(flt.sch_date,'DDMONYY')||to_char(flt.SCH_TIME,'0000')),'DDMONYYHH24mi')  
            BETWEEN TO_DATE(#inbDocArrTimeFromDateTime#,'DDMONYYHH24mi') AND TO_DATE(#inbDocArrTimeToDateTime#,'DDMONYYHH24mi')           
<!-- WHERE   <![CDATA[ flt.SCH_DATE >= TO_DATE(#inbDocArrTimeFromDateTime#, 'ddMMYY HH24:MI:SS') and flt.SCH_DATE <= TO_DATE(#inbDocArrTimeToDateTime#, 'ddMMYY HH24:MI:SS') 	  ]]>-->
		AND	flt.FLT_TYPE = 'A'
		<isNotEmpty property="carrCode">
			AND	flt.CARR_CODE = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="fltNo">
			AND	flt.FLT_NO = #fltNo#
		</isNotEmpty>
		<isNotEmpty property="fltKey">
			AND	flt.FLT_KEY = #fltKey#
		</isNotEmpty> 
		ORDER BY flt.SCH_DATE,sta,flt.FLT_KEY 
</select>
	
<update id="revertdocarrival" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
		UPDATE FLT_OPR_EVENTS SET 
		NO_OF_PACKS = null , 
		DOC_ARR_USER_ID = null  , 
		DOC_ARR_DATE = null,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>
<update id="savetdocarrival" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
		UPDATE FLT_OPR_EVENTS SET 
		NO_OF_PACKS = #pouch# , 
		DOC_ARR_USER_ID = #lmUserId# , 
		DOC_ARR_DATE = sysdate,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>

<select id="sqlCheckATA"  parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr
	where FLT_TYPE = 'A' and SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') 	
	AND FLT_KEY = #fltKey# and ACT_DATE is null and ACT_TIME is null 
</select>
	
<!-- Inbound Doc Arrival Time Ended -->
<!-- Confirm Inbound Uld starts-->
<!--  Changed for QR -->
	<select id="selectATAWeather" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
		select
		 (select code_desc from mast_code_dtl where code = A.WTHR_COND and code_type='WTH_CONDN') wthrcond,
		 PKG_COMMON.get_flt_ata(A.FLT_KEY, A.SCH_DATE,'A','DD') ataTime	
		 FROM FLT_OPR A where  FLT_KEY=#FLT_KEY# AND to_char(SCH_DATE,'DDMONYY')=#FLT_DATE# AND FLT_TYPE='A'
		 <isNotEmpty prepend="AND" property="loginCustCode">
    		RHO_ID = #loginCustCode#
		</isNotEmpty> 
	</select>

<!--  Changed for QR -->
<select id="sqlFetchUldAllot" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
		select ALLOT_TYPE inbUldType,
		ALLOT_TYPE oldInbUld,
		QTY uldQty,
		QTY oldUldQty,
		EMPTY emptyInd,
		EMPTY oldEmptyInd 
		from IMP_CFM_ULD_TOWED_DTL where flt_key=#flightCarr# and flt_date=#arrDate#
</select>

<!--  Changed for QR 
<select id="sqlEdiFFMloadedUld" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
         select COUNT(1) from EDI_FFM_ULD where ULD_LOD_IND='Y'
</select> -->

<!-- Changed for QR
<select id="sqlTowGetLoaded" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
         select COUNT(1) from imp_cfm_uld_towed_dtl where EMPTY='N'
</select> -->

<!--  Changed for QR -->
<select id="sqlQueryTowedList" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
select IC.BATCH_NO batchNo, 
	   IC.BATCH_NO oldbatchNo,
       IC.ULD_TYPE towUldType,
       IC.ULD_TYPE oldtowUldType,
       IC.QTY towQty, 
       IC.QTY oldTowQty,
       IC.TO_NO towOrdrNo,
       IC.TO_NO oldtowNo,
       TO_CHAR(IC.CTO_ARR_TIME,'DDMONYY') ctoArrTime, 
       TO_CHAR(IC.CTO_ARR_TIME,'DDMONYY') oldctoTime,
       TO_CHAR(IC.CTO_ARR_TIME,'HH24') ctoArrTimeHr,
       TO_CHAR(IC.CTO_ARR_TIME,'HH24') oldctoTimeHr,
       TO_CHAR(IC.CTO_ARR_TIME,'MI') ctoArrTimeMin,
       TO_CHAR(IC.CTO_ARR_TIME,'MI') oldctoTimeMin,
       TO_CHAR(IC.START_TIME,'DDMONYY') towStrtTime,
       TO_CHAR(IC.START_TIME,'DDMONYY') oldStrtTime,
       TO_CHAR(IC.START_TIME,'HH24') towStrtTimeHr,
       TO_CHAR(IC.START_TIME,'HH24') oldStrtTimeHr,
       TO_CHAR(IC.START_TIME,'MI') towStrtTimeMin, 
       TO_CHAR(IC.START_TIME,'MI') oldStrtTimeMin,
       TO_CHAR(IC.END_TIME,'DDMONYY') towEndTime,
       TO_CHAR(IC.END_TIME,'DDMONYY') oldEndTime,
       TO_CHAR(IC.END_TIME,'MI') towEndTimeMin,
       TO_CHAR(IC.END_TIME,'MI') oldEndTimeMin,
       TO_CHAR(IC.END_TIME,'HH24') towEndTimeHr,
       TO_CHAR(IC.END_TIME,'HH24') oldEndTimeHr
from imp_cfm_uld_towed_tow_info IC 
JOIN FLT_OPR FO ON FO.FLT_KEY = IC.FLT_KEY AND FO.SCH_DATE = IC.FLT_DATE
where  IC.FLT_KEY=#flightCarr# AND IC.FLT_DATE=#arrDate#
<isNotEmpty prepend="AND" property="loginCarrier">
    (FO.CARR_CODE = #loginCarrier#
     OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
</isNotEmpty>
<isEmpty property="loginCarrier">
<isNotEmpty prepend="AND" property="loginCustCode">
    FO.RHO_ID = #loginCustCode#
</isNotEmpty>
</isEmpty>
 </select>
 
 <!--  Changed for QR -->
<insert id="sqlSaveFlightInfo" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
		Insert into IMP_CFM_ULD_TOWED 
		(FLT_KEY,
		FLT_DATE,
		BULK_QTY,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		FLT_TYPE)
		 values (
		 #flightCarr#,
		 #arrDate#,
		 #bulkQty#,
		 #userID#,
		 SYSDATE,
		 #userID#,
		 SYSDATE,'I')
</insert>

<!--  Changed for QR -->
<insert id="sqlSaveInbAllotLst" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
	Insert into IMP_CFM_ULD_TOWED_DTL 
	(FLT_KEY,
	FLT_DATE,
	ALLOT_TYPE,
	QTY,EMPTY,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	FLT_TYPE)
	 values 
	 (#flightCarr#,
	 #arrDate#,
	 #inbUldType#,
	 #uldQty#,
	 NVL(#emptyInd#,'Y'),
	 #userID#,
     SYSDATE,
	 #userID#,
	 SYSDATE,
	 'I')
</insert>
<insert id="save_imp_car_shp_gt_cms" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
      INSERT INTO GT_CMS
            (COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6, COLUMN_7)
      VALUES
            (#awbNo#,#awbDate#,#fltKey#,#fltDate#,#carCreated#, 'DEL',#ffmFlag#)    
 </insert>
	
<!--  Changed for QR -->
<delete id="deleteAllFromTowedDtl" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
	delete from IMP_CFM_ULD_TOWED_DTL where  FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate# 
</delete>

<!--  Changed for QR -->
<delete id="sqlDeleteToweInfo" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
	delete from IMP_CFM_ULD_TOWED_TOW_INFO where  FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate#
</delete>

<!--  Changed for QR -->
<delete id="deleteAllFromTowed" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from IMP_CFM_ULD_TOWED where FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate# 
 </delete>
 
 <!--  Changed for QR -->
 <delete id="sqlDeleteAllotList" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from IMP_CFM_ULD_TOWED_DTL  Where FLT_KEY=#flightCarr# and FLT_DATE=#arrDate# and ALLOT_TYPE=#inbUldType# and EMPTY=#oldEmptyInd#
 </delete>
 
  <!--  Changed for QR -->
  <delete id="sqlDeleteTowedList" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from imp_cfm_uld_towed_tow_info 
 where FLT_KEY=#flightCarr# AND 
 FLT_DATE=#arrDate#  
 <isEmpty  property="batchNo">
 AND BATCH_NO IS NULL 
 </isEmpty>
 <isNotEmpty  property="batchNo">
 AND BATCH_NO=#batchNo#
 </isNotEmpty>	
 <isEmpty  property="towUldType">
 AND ULD_TYPE IS NULL
 </isEmpty>
 <isNotEmpty  property="towUldType">
 AND ULD_TYPE=#towUldType# 
 </isNotEmpty>	
 AND QTY=#towQty# 
 <isEmpty  property="towOrdrNo">
 AND TO_NO IS NULL
 </isEmpty>	
 <isNotEmpty  property="towOrdrNo">
 AND TO_NO=#towOrdrNo#
 </isNotEmpty>	
 AND TO_CHAR(CTO_ARR_TIME,'DDMONYY HH24MI')=#ctoArrTime# 
 <isEmpty  property="towStrtTime">
 AND START_TIME IS NULL
 </isEmpty>
  <isNotEmpty  property="towStrtTime">
  AND TO_CHAR(START_TIME,'DDMONYY HH24MI')=#towStrtTime# 
 </isNotEmpty>
  <isEmpty  property="towEndTime">
 AND END_TIME IS NULL 
 </isEmpty>
 <isNotEmpty  property="towEndTime">
 AND TO_CHAR(END_TIME,'DDMONYY HH24MI')=#towEndTime# 
 </isNotEmpty>

</delete>

  <!--  Changed for QR -->
 <insert id="sqlInsertTowOderData" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
 Insert into IMP_CFM_ULD_TOWED_TOW_INFO (
FLT_KEY,
FLT_DATE,
BATCH_NO,                                
ULD_TYPE,
QTY,
TO_NO,
CTO_ARR_TIME,
START_TIME,
END_TIME,
CR_USER_ID,
CR_DATE,
LM_USER_ID,
LM_DATE,
FLT_TYPE)
values (
#flightCarr#,
#arrDate#,
#batchNo#, 
#towUldType#,
#towQty#,
#towOrdrNo#,
TO_DATE(#ctoArrTime#,'DDMONYY HH24MI'),
TO_DATE(#towStrtTime#,'DDMONYY HH24MI'),
TO_DATE(#towEndTime#,'DDMONYY HH24MI'),
#userID#, 
sysdate, 
#userID#, 
sysdate, 
'I'
)
</insert>

<!--  Changed for QR -->
<select id="sqlUldLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
<![CDATA[
		 select (COUNT(ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) AS ffmULD
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status = 'P' 
         LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key 
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 
         ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 
         ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' 
         and (b.trf_type is null or b.trf_type NOT IN ('TT','IF')) 
         and INB.flt_key=#flightKey# and TO_CHAR(INB.flt_date,'DDMONYY')=#flightDate#
         GROUP BY INB.ULD_TYPE,ALLOTGROUP_1.ULD_ALLOT order by ALLOTGROUP_1.ULD_ALLOT
]]>
</select>

<select id="sqlUldLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
		select ((QTY)||(ALLOT_TYPE)) uldTowedConfirm from IMP_CFM_ULD_TOWED_DTL where flt_key=#flightKey# and TO_CHAR(flt_date,'DDMONYY')=#flightDate# and  EMPTY='N' order by ALLOT_TYPE
</select>

<select id="sqlUldLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
          select (COUNT(ALLOTGROUP_2.ULD_ALLOT) || ''  || ALLOTGROUP_2.ULD_ALLOT) AS actualChkinULD  
          from IMP_RAMP_CHK_DTL RAMPCHK
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate# and
          RAMPCHK.ULD_TYPE not in (Select CODE from MAST_ULD_TYPE where H_CONT_IND='Y' or BT_IND='Y') and NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
          GROUP BY RAMPCHK.ULD_TYPE,ALLOTGROUP_2.ULD_ALLOT order by ALLOTGROUP_2.ULD_ALLOT
</select>

<select id="sqlTowedHContCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="java.lang.String">	
       SELECT bulk_qty
	   FROM imp_cfm_uld_towed 
	   where flt_key=#flightKey# and TO_CHAR(flt_date,'DDMONYY')=#flightDate#
</select>

<select id="sqlUldHcontChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="java.lang.String">
        <!-- select count(1) from imp_ramp_chk_dtl a, mast_uld_type b
         where a.flt_key=#flightKey# and TO_CHAR(a.flt_date,'DDMONYY')=#flightDate# and a.uld_type=b.code and b.h_cont_ind='Y' -->
          select count(1) from imp_ramp_chk_dtl a
 			join mast_uld_type b
 			on a.uld_type=b.code
 			where a.flt_key=#flightKey#  
 			and TO_CHAR(a.flt_date,'DDMONYY')=#flightDate# and
       (b.h_cont_ind='Y' or b.bt_ind='Y') and nvl(a.empty_ind,'N') = 'N'
</select>

<update id="sqlUpdateRampStatus" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
	UPDATE FLT_OPR_EVENTS
	SET RAMP_COMPL_YN='Y',
    RAMP_COMPL_DATE=TO_CHAR(SYSDATE,'DDMONYY'),
	RAMP_COMPL_TIME=TO_CHAR(SYSDATE,'HH24MI'),
	RAMP_COMPL_USER_ID=#crUserId# 
	WHERE FLT_KEY=#flightKey# and SCH_DATE=#flightDate# and FLT_TYPE='A'
</update>

<select id="sqlBulkQty" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
 SELECT bulk_qty
	   FROM imp_cfm_uld_towed 
	   where flt_key=#flightCarr# and flt_date=#arrDate#
</select>

<select id="sqlRampStatus" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
      select count(1) from flt_opr_events where RAMP_COMPL_YN='Y' and FLT_KEY=#flightCarr# and SCH_DATE=#arrDate# and FLT_TYPE = 'A'
</select>
<!-- Confirm Inbound Uld ends-->


<!-- starts For enquire display -->

<select id="sqlEnqUldLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
<![CDATA[
     select (COUNT( ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) AS ffmULD
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status='P' 
    	 LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' and (b.trf_type is null or b.trf_type NOT IN ('TT','IF'))
         and INB.flt_key=#flightKey# and TO_CHAR(INB.flt_date,'DDMONYY')=#flightDate#
         GROUP BY ALLOTGROUP_1.ULD_ALLOT order by ALLOTGROUP_1.ULD_ALLOT
]]>
</select>

<select id="sqlEnqUldLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO"> 
             
           select * from ( select COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT AS actualChkinULD,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate#
          <![CDATA[
     	  	 AND MULD.H_CONT_IND <> 'Y' AND
    		  MULD.BT_IND <> 'Y' AND
    		  nvl(RAMPCHK.EMPTY_IND,'N') = 'N'
    		  ]]>
  	  	   GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date
   union all          
       select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate#
  		  and (MULD.H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y') and     	nvl(RAMPCHK.EMPTY_IND,'N') = 'N'
  		  
  		 GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
         order by I.sortingOrder
          
</select>


<select id="sqlEnqUldLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
  select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY||'BULK') bulkqty,
    HD.flt_key flightNo,TO_CHAR(HD.flt_date,'DDMONYY')
    flightDate 
    from IMP_CFM_ULD_TOWED HD 
    left join IMP_CFM_ULD_TOWED_DTL DTL on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date  AND nvl(DTL.EMPTY,'N')='N' 
    where  HD.flt_key=#flightKey# and TO_CHAR(HD.flt_date,'DDMONYY')=#flightDate#
	    order by DTL.ALLOT_TYPE  
	    <!-- 
        select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY || 'BULK') bulkqty,
	    DTL.flt_key flightNo,TO_CHAR(DTL.flt_date,'DDMONYY')
	    flightDate 
	    from IMP_CFM_ULD_TOWED_DTL DTL 
	    join IMP_CFM_ULD_TOWED HD on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date
	    where DTL.EMPTY='N' and
	    DTL.flt_key=#flightKey# and TO_CHAR(DTL.flt_date,'DDMONYY')=#flightDate#
	    order by uldTowedConfirm -->
</select>
  


<!-- ends For enquire display -->

<!-- Send fad starts here-->

<select id="imp_SendFadList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT evnt.TR_NO fltEventTrNo, 
		shp.FLT_KEY flightNoKey, shp.FLT_DATE flightDate,  
		flt.ACT_TIME  ata,
		flt.CARR_CODE flightKey,
		PKG_COMMON.get_flt_ata(shp.FLT_KEY,shp.FLT_DATE,'A','DD') AS ataTime,
		shp.ManfShp noOfManfShpm, 
		shp.CARShp noOfShpmCAR, shp.DIRShp noOfDIRShpm, shp.CIRShp noOfCIRShpm,  
		TO_CHAR(evnt.DOC_COMPL_DATE,'DDMONYY HH24:MI') docComplDate,		
		evnt.DOC_COMPL_TIME docComplTime,		
		substr(evnt.DOC_COMPL_TIME,1,2)||':'||substr(evnt.DOC_COMPL_TIME,3,2)||':'||substr(evnt.DOC_COMPL_TIME,5)  docComplTimeDisp,		
		evnt.DOC_COMPL_USER_ID docComplStaffID, 	fltrpt.CR_DATE fltHdlgDataGenDate  	

		FROM (SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 
			 SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' and MANIFEST_PCS > 0 THEN 1 ELSE 0 END) AS ManfShp, 
			 SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CARShp,
			 SUM(CASE WHEN (NVL(DOC_DISC, 'N') = 'FDAW' 
	    OR NVL(DOC_DISC, 'N') = 'MSAW' 
	    OR NVL(DOC_DISC, 'N') = 'FDCA' 
		OR NVL(DOC_DISC, 'N') = 'MSCA' 
		OR NVL(DOC_DISC, 'N') = 'FDCN'
		OR NVL(DOC_DISC, 'N') = 'MSCN'
		OR NVL(DOC_DISC, 'N') = 'FDMB'
		OR  NVL(DOC_DISC, 'N') = 'MSMB') THEN 1 ELSE 0 END) AS DIRShp,
			 SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIRShp
			 FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp 
		
		JOIN FLT_OPR flt ON 
			flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND
			flt.FLT_TYPE = 'A'	
			<isNotEmpty property="carrCode">
				AND	flt.CARR_CODE = #carrCode#
			</isNotEmpty>
		 	<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
					AND	(flt.CARR_CODE = #loginCarrier#
					OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
					WHERE GRP_CARR_CODE	= #loginCarrier#))							
				</isNotEmpty>
			</isEmpty>    
		JOIN FLT_OPR_EVENTS evnt ON 
			evnt.FLT_KEY = shp.FLT_KEY AND 
			evnt.SCH_DATE = shp.FLT_DATE AND 
			evnt.FLT_TYPE = 'A'	
		 
		LEFT JOIN IMP_FLT_HAND_SUMMARY fltrpt ON 
			fltrpt.FLT_KEY = shp.FLT_KEY AND 
			fltrpt.FLT_DATE = shp.FLT_DATE AND 
			fltrpt.Rep_Module = 'IDOC' 	
			
		 WHERE shp.FLT_DATE = #flightDate# 
		<isNotEmpty property="flightNoKey">
			AND	shp.FLT_KEY = #flightNoKey#
		</isNotEmpty>	
		<isEmpty property="flightNoKey">
			and (shp.CIRShp > 0 or  shp.DIRShp > 0)
		</isEmpty>		  
	</select>
	
	<!--  Changed for QR -->
	<select id="DiscShipListForSendFad" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
				SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
				shp.AWB_No awbNo, 
				TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
				car.awb_Origin awbOrigin,
				car.AWB_DEST dest, 
				shp.MANIFEST_PCS manfPc,
				shp.MANIFEST_WT manfWt,
				car.AWB_PCS awbPc,
				car.AWB_WT awbWt,
				docDisc docDisc, 
				mcd.CODE_DESC dirAction, 
				DIR_ACTION_RMK dirActionRemarks, 
				DIR_PROC_USER dirProcUser, 
				to_char(DIR_PROC_DATE, 'DDMONYY') dirProcDate,
				fad.LM_USER_ID lmUserId,
				to_char(fad.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
				fad.tr_No trNo,
				f.Orig fltOrigin,
				f.Dest fltDest
		FROM (Select DOC_DISC docDisc, s.* from IMP_CAR_SHP s) shp 
		left join (select max(TO_NUMBER(Tr_No)) Tr_No, AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE from Imp_FAD_AWB 
			where FAD_SEND = 'Y' group by AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE) tr 
			on tr.AWB_NO = shp.AWB_NO and tr.AWB_DATE = shp.AWB_DATE and tr.DISC_TYPE = shp.docDisc
			and tr.FLT_KEY = shp.FLT_KEY and tr.FLT_DATE = shp.FLT_DATE 
		left join Flt_Opr f on f.FLT_KEY = shp.FLT_KEY and f.Sch_DATE = shp.FLT_DATE and f.Flt_Type = 'A'
		left join Imp_FAD_AWB fad on fad.Tr_No = tr.Tr_No
		LEFT JOIN MAST_CODE_DTL mcd on shp.DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No 
		AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate#	AND 
		(NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW'
		OR NVL(shp.DOC_DISC, 'N') = 'FDCA' 
		OR NVL(shp.DOC_DISC, 'N') = 'MSCA' 
		OR NVL(shp.DOC_DISC, 'N') = 'FDCN'
		OR NVL(shp.DOC_DISC, 'N') = 'MSCN'
		OR NVL(shp.DOC_DISC, 'N') = 'FDMB'
		OR  NVL(shp.DOC_DISC, 'N') = 'MSMB')
		 UNION ALL
     	SELECT SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
				SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
				shp.AWB_No awbNo, 
				TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
				car.awb_Origin awbOrigin,
				car.AWB_DEST dest, 
				shp.MANIFEST_PCS manfPc,
				shp.MANIFEST_WT manfWt,
				car.AWB_PCS awbPc,
				car.AWB_WT awbWt,
				docDisc docDisc, 
				mcd.CODE_DESC dirAction, 
				DIR_ACTION_RMK dirActionRemarks, 
				DIR_PROC_USER dirProcUser, 
				to_char(DIR_PROC_DATE, 'DDMONYY') dirProcDate,
				fad.LM_USER_ID lmUserId,
				to_char(fad.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
				fad.tr_No trNo,
				f.Orig fltOrigin,
				f.Dest fltDest
		FROM (Select case when  decode(CIR_PCS,0,CIR_WT_TYPE,CIR_PCS_TYPE) = 'SL' then 'MSCA' else 
			case when  decode(CIR_PCS,0,CIR_WT_TYPE,CIR_PCS_TYPE) = 'SP' then 'FDCA' else DOC_DISC end end docDisc, s.* from IMP_CAR_SHP s) shp 
		left join (select max(TO_NUMBER(Tr_No)) Tr_No, AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE from Imp_FAD_AWB 
			where FAD_SEND = 'Y' group by AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE) tr 
			on tr.AWB_NO = shp.AWB_NO and tr.AWB_DATE = shp.AWB_DATE and tr.DISC_TYPE = shp.docDisc
			and tr.FLT_KEY = shp.FLT_KEY and tr.FLT_DATE = shp.FLT_DATE 
		left join Flt_Opr f on f.FLT_KEY = shp.FLT_KEY and f.Sch_DATE = shp.FLT_DATE and f.Flt_Type = 'A'
		left join Imp_FAD_AWB fad on fad.Tr_No = tr.Tr_No
		LEFT JOIN MAST_CODE_DTL mcd on shp.DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No 
		AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate#	AND shp.CIR_PROC_USER is not null
   		ORDER BY 4 
			
	</select>
	
	<select id="getFadCount" parameterClass="cargo.cms.imprt.bo.SendFADBO" resultClass="java.lang.String">			
		select COUNT(1)+1 as fadCount from Imp_FAD_AWB where FAD_SEND = 'Y' and AWB_NO=#awbNo# and  AWB_DATE=#awbDate#  and FLT_KEY=#flightNoKey# and  FLT_DATE=#flightDate#
	</select>
	
	<select id="getFadMailId" resultClass="java.lang.String">			
		select RULE_VALUE from CMSRULES where RULE_CODE = 'FAD_EMAIL'
	</select>
		
	<select id="imp_fetchsendfadosi" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT 
		TR_NO transactionNo, 
		SUBSTR(AWB_NO,1,3) awbNoPrefix, 
		SUBSTR(AWB_NO,4)  awbNoSuffix, 
		SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , 
		AWB_No awbNo, 
		TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
		DISC_TYPE docDisc, 
		TO_CHAR(FLT_DATE,'DDMONYY') flightDate, 
		FLT_KEY flightNoKey, 
		FLT_ATA ata, 
		substr(FLT_ATA,1,2)||':'||substr(FLT_ATA,3) ataTime,	
		ACTION dirAction, 
		RMK dirActionRemarks, 
		MSG messageContentBytes, 
		OSI_RMK osiRemarks, 
		FAD_SEND fadSend,
		DOC_COMPL_DATE docComplDate, 
		DOC_COMPL_TIME docComplTime, 
		DOC_COMPL_USER docComplStaffID
		FROM IMP_FAD_AWB 
		WHERE 
		TR_NO = #trNo# AND 
		AWB_NO = #awbNo# AND 
		TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		DISC_TYPE = #docDisc# AND 
		FLT_DATE = #flightDate# AND 
		FLT_KEY = #flightNoKey#
	</select>
	
	<select id="imp_fetchsendfadosiaddr" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT 		
		TR_NO transactionNo, 
		ADDR_GRP addressGroup,
		ADDR_TYPE addressType,
		MSG_ADDR sitaAddress		
		FROM IMP_FAD_ADDR 
		WHERE 
		TR_NO = #trNo# 
	</select>
	<select id="getSitaAddressForCreateFadFormat"  parameterClass="map" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT SITA_ADDR AS sitaAddress FROM CUST_AIRL_SITA_GRPDTL
		WHERE
			CUST_NO = #customerId# AND
			ADDR_GROUP = UPPER(#addressGroup#)
		ORDER BY SITA_ADDR
	</select>
	<select id="getEmailFaxAddressForCreateFadFormat"  parameterClass="map" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT EMAIL1 AS emailAddress1, EMAIL2 AS emailAddress2, EMAIL3 AS emailAddress3, 
			EMAIL4 AS emailAddress4, EMAIL5 AS emailAddress5, FAX1 AS faxNumber1, 
			FAX2 AS faxNumber2, FAX3 AS faxNumber3, FAX4 AS faxNumber4, FAX5 AS faxNumber5 
		FROM CUST_CONTACT
		WHERE
			CUST_NO = #customerId# AND
			CONTACT_TYPE = 'FAD'
	</select>
	
	<!--  Changed for QR -->
	<insert id="insertAWBdocline" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
		<![CDATA[
		INSERT INTO  IMP_FAD_AWB 
    (ACTION, 
     TR_NO, 
     AWB_NO, 
     AWB_DATE,     
     CR_USER_ID, 
     CR_DATE, 
     DISC_TYPE, 
     DOC_COMPL_DATE, 
     DOC_COMPL_TIME, 
     DOC_COMPL_USER,
     FAD_SEND,
     FLT_DATE, 
     FLT_KEY, 
     FLT_ATA, 
     FLT_TYPE,
     LM_USER_ID, 
     LM_DATE,    
     MSG,
     OSI_RMK, 
     RMK,    
     SEND_USER_ID, 
     SEND_DATE    
    )
  VALUES(
     #dirAction#,
     #transactionNo#, 
     #awbNo#,
     to_date(#awbDate#,'DDMONYY'),     
     #createdBy#, 
     SYSDATE,
     #docDisc#,
     TO_DATE(#docComplDate#,'DDMONYY'),
     #docComplTime#,
     #docComplStaffID#,
     'Y',
     To_DATE(#flightDate#,'DDMONYY'), 
     #flightNoKey#, 
     #ata#, 
     'I',
     #createdBy#, 
     SYSDATE, 
     #messageContentBytes#, 
     #osiRemarks#, 
     #dirActionRemarks#,    
     #createdBy#, 
     SYSDATE
    )
			]]>		
	</insert>
		
	<insert id="insertAWBAddressDetails" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
		INSERT INTO IMP_FAD_ADDR 
					(TR_NO, 
					ADDR_GRP, 
					ADDR_TYPE, 
					MSG_ADDR, 
					CR_USER_ID, 
					CR_DATE, 
					LM_USER_ID, 
					LM_DATE)
			VALUES(#transactionNo#, 
				   #addressGroup#,
				   #addressType#, 
				   #sitaAddress#,
				   #createdBy#, 
				   SYSDATE, 
				   #createdBy#, 
				   SYSDATE)
	</insert>

	<select id="validateFadAddressGroup"  parameterClass="map" resultClass="java.lang.String">
		SELECT A.CUST_NO AS CUST_NO FROM CUST_AIRL_SITA_GRP A, CUST_COMPANY B
			WHERE
				A.ADDR_GROUP = UPPER(#addressGroup#) AND
				A.CUST_NO = B.CODE 
				<isNotEmpty prepend="AND" property="carrierCode">
					B.CARR_CODE = #carrierCode#
				</isNotEmpty>			
	</select>
	<select id="maxawbdocline" parameterClass="cargo.cms.imprt.bo.SendFADBO" resultClass="java.lang.Integer">
		SELECT NVL(MAX(DOC_LINE_NO),0) 
		from  IMP_FAD_AWB 
		where TR_NO = #transactionNo# AND 
		AWB_NO = #awbNo# AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<update id="updateFadAwbDocLine" parameterClass="cargo.cms.imprt.bo.SendFADBO">
		update IMP_FAD_AWB set 	
		SEND_USER_ID = #createdBy# , SEND_DATE = SYSDATE , 
		LM_USER_ID = #createdBy# , LM_DATE = SYSDATE 
		where 	TR_NO = #transactionNo# AND 
		DOC_LINE_NO = #docLineNo# AND
		AWB_NO = #awbNo# AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</update>
	<select id="checkSitaAddress" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_SITA_ADDRESS WHERE CODE = #PARAM#
	</select>
		
	
<update id="updatesSendFadImpCarShip" parameterClass="cargo.cms.imprt.bo.SendFADBO">
	 UPDATE IMP_CAR_SHP
   SET SEND_FAD_USER=#createdBy#,
   SEND_FAD_DATE  =SYSDATE,
   SEND_FAD_TIME  = TO_CHAR(sysdate,'HH24MISS')
  WHERE FLT_KEY =#flightNoKey# AND FLT_DATE =#flightDate#  AND AWB_NO= #awbNo#
	</update>
	<insert id="maintainSendFadEventsLog" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
	INSERT INTO AWB_EVENTS(AWB_NO, AWB_DATE,  EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
     VALUES(#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,  'ADIUCAR', 'Amend Dummy IU CAR', #flightKey#,  TO_DATE(#flightDate#,'DDMONYY'),'I', AWB_event_SEQ.nextval, NULL, 
     nvl(#awbPc#,0), nvl(#awbWt#,0),'ADMIN1',  sysdate,'ADMIN1',  sysdate)
	</insert>
	<select id="SendFAD_checkCarrierCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT to_char(count(1))
		FROM mast_carrier
		WHERE code = #flightKey#
	</select>
		

	<insert id="maintainSendFadEDIMSGLog" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
	INSERT   INTO EDI_MSG_LOG_OUT  ( MSG_ID    ,    MSG_SEQ_NO,    AWB_NO    ,    AWB_DATE  ,    
    FLT_NO    ,    FLT_DATE  ,    FLT_KEY   ,    MSG_DATE  ,    MSG_TYPE  ,
    SENDER_ID ,    MSG       ,      LM_USER_ID,    LM_DATE   ,LM_VER)
      VALUES(EDI_MESSAGE_LOG_SEQ.nextval   ,
      EDI_MESSAGE_LOG_SEQ.nextval   ,  
      #awbNo#                       ,
     to_date(#awbDate#,'DDMONYY')  ,    
     #flightNo#                    ,
     To_DATE(#flightDate#,'DDMONYY'),    
     #flightNoKey#                 ,      
     SYSDATE                    ,    
      'FAD'                   ,    
      'HKGGCSQ'               ,    
      #fad#                  ,    
      'HKGGCSQ'              ,  
      SYSDATE,     '1')
  
	</insert>
	
<insert id="maintainSendFadEmailLog" parameterClass="cargo.cms.services.email.EMailBO" >
	INSERT   INTO EMAIL_LOG  (SOURCE_ID ,SENDER_ID ,SENDER_ADD, TO_ADD  , CC_ADD    , SEND_DATE ,SUBJECT,STATUS,TR_NO ) 
	 VALUES (#sourceId# , #userId# , #notifyAddress# ,  #strTo#,   #strCC# , sysdate, #subject#, #status#, #trNo#)
</insert>
	<!-- Send fad ends here-->

<!--  Maintain Inbound transfer checklist queries starts-->
<select id="imp_mtnchecklist"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
SELECT inb.TR_NO AS trNo ,
    inb.DOC_LINE_NO AS docLineNo , 
    hd.CARR_CODE AS carrierCode ,
    hd.FLT_NO AS flightNo , 
    hd.FLT_KEY AS flightKey, 
    TO_CHAR(hd.FLT_DATE,'DDMONYY') AS flightDate,  
    inb.ULD_KEY AS uldKey, 		
    inb.FFM_IND AS ffmInd,
    inb.CPM_IND AS cpmInd,    
   	ddtULD.CNTG_FLT_KEY cntgFltKey, TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY') cntgFltDate, ddtULD.TRF_TYPE || decode(ddtULD.BRK_BULK,'Y',' + BB',null) transferType,                       
    DECODE(uld.imx,'Y','Y','N') AS imx,
    uld.handling_mode as dlvMode,  
    V_COMMA_SEP_IMP_FLT_ULD_SHC(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY,NULL,NULL) AS shc,  		      
    inb.LOC_CODE AS plannedHoArea,
    inb.LOC_CODE AS plannedHoAreaOld,	     
	 PKG_IMP.fun_get_ho_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as plannedHoAreaFFMCPM,	   
     PKG_IMP.fun_get_hdlg_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as handlingZone,          
	 NVL(dtl.CHKIN_YN,'N') AS checkInStatus, 
    TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate, 
	inb.RMK AS remark,   
	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,  		
    (select cc.CODE_DESC from CUST_COMPANY cc where cc.code = f.rho_id ) as rho,  
	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,		 	
	DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampComplStatus,       
	(select TRIM(TO_CHAR(MAX(TO_NUMBER(i.TO_NO)),'00000000')) TO_NO FROM
	tow_order_in i, tow_order_in_dtl dtl
    where i.to_no= dtl.to_no
    and dtl.uld_key = inb.ULD_KEY
    and i.flt_key = #flightKey#
    and TO_CHAR(i.flt_date,'DDMONYY') = #flightDate#) as towOrderNo,      
	'N' AS newRecord,   	
    TO_CHAR(inb.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate
    FROM IMP_RAMP_INB_CHK_DTL inb
    JOIN IMP_RAMP_CHK_HD hd ON hd.TR_NO = inb.TR_NO      
	join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = inb.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
    LEFT JOIN IMP_ULD_LIST uld ON  uld.FLT_KEY = inb.FLT_KEY AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY') AND uld.ULD_KEY = inb.ULD_KEY
	left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = inb.CARR_CODE AND flt.FLT_NO = inb.FLT_NO AND flt.FLT_KEY = inb.FLT_KEY
    LEFT JOIN IMP_RAMP_CHK_DTL dtl on hd.TR_NO =  dtl.TR_NO AND inb.ULD_KEY = dtl.ULD_KEY  
    LEFT OUTER JOIN DDT_MSG MSG ON inb.FLT_KEY   = MSG.FLT_KEY AND inb.FLT_DATE = MSG.FLT_DATE and MSG.DDT_STATUS='P' 
	LEFT OUTER JOIN DDT_ULD ddtULD ON ddtULD.ULD_KEY = inb.ULD_KEY AND MSG.TR_NO = ddtULD.TR_NO 				 			  
    WHERE hd.FLT_NO  = #flightNo#  AND 
    hd.CARR_CODE = #carrierCode# AND
    TO_CHAR(hd.FLT_DATE, 'DDMONYY')  =  #flightDate#  
    <isNotEmpty property="uldKey">
		and inb.ULD_KEY = #uldKey#
	</isNotEmpty>
   ORDER BY inb.ULD_KEY
	</select>
	
	<select id="miu_get_flt_details"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		SELECT	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,
		(SELECT dtl.CODE_DESC FROM MAST_CODE_DTL dtl, FLT_OPR f 
		WHERE  dtl.CODE  = f.WTHR_COND 
		AND dtl.CODE_TYPE='WTH_CONDN' 
		AND FLT_NO = #flightNo#
		AND CARR_CODE   = upper(#carrierCode#)
		AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') and FLT_TYPE = 'A'
		) AS weatherCondition,			
			    (select cc.CODE_DESC from CUST_COMPANY cc where cc.code= FO.rho_id ) as rho,  			   
        		(SELECT DECODE(COUNT(1),'0','N','Y') 
      				from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #flightDate#
					and RAMP_COMPL_YN = 'Y' and FLT_TYPE = 'A' 
					AND CARR_CODE = #carrierCode# AND FLT_NO = #flightNo#) AS rampComplStatus
			  FROM FLT_OPR FO WHERE FO.FLT_TYPE='A' AND
			  FO.CARR_CODE=#carrierCode# AND
			  FO.FLT_NO =#flightNo# AND
			  FO.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	
	<select id ="imp_get_ramp_uld_count" parameterClass="map" resultClass="java.lang.String">
		<!--SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO=#trNo# AND ULD_KEY=#uldKey# AND SURPLUS_IND = 'Y'-->
		SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO=#trNo# AND ULD_KEY=#uldKey#
	</select>
	
	<select id="get_max_docline"  parameterClass="map"  resultClass="java.lang.String">		
		SELECT MAX(DOC_LINE_NO) FROM IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#
	</select>
	
	<update id="imp_updchecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO">		
		UPDATE IMP_RAMP_INB_CHK_DTL	SET 
		<isEqual property="isFFMCPM" compareValue="N">								
			LOC_CODE = #plannedHoArea#,
		</isEqual>
			RMK	= upper(#remark#),
			LM_USER_ID = #lmUserId#,
			LM_DATE	 = sysdate
			WHERE TR_NO = #trNo#  AND
			DOC_LINE_NO =#docLineNo# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>	
	
	<insert id="imp_inschecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
		INSERT INTO IMP_RAMP_INB_CHK_DTL ( TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, CARR_CODE, 
		<isEqual property="isFFMCPM" compareValue="N">	
		LOC_CODE,
		</isEqual>
		TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID,  LM_DATE, RMK,CPM_IND,FFM_IND,TR_TYPE) 
		VALUES ( #trNo#, #docLineNo#,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#, #uldCarr#,#uldKey#,#carrierCode#,
		<isEqual property="isFFMCPM" compareValue="N">
		#plannedHoArea#,
		</isEqual>
		'N',#lmUserId#,sysdate,#lmUserId#,sysdate,upper(#remark#),'N','N','IR')
	</insert>

	<delete id="imp_delchecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</delete>

        <delete id="imp_delinb_fromcheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE ULD_KEY = #uldKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#flightKey#
	</delete>
	

	<delete id="imp_delchecklist_impuld" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		DELETE IMP_ULD_LIST	WHERE ULD_KEY = #uldKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#fltkeyinsert#
	</delete>
	<select id="sqlGetTowOrderForUld" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.String">
			select  A.to_no from tow_order_in A
			join tow_order_in_dtl B
			on A.to_no = B.to_no
			where B.ULD_KEY = #uldKey#  and
			A.flt_key = #fltkeyinsert# and
			A.flt_date = TO_DATE(#flightDate#,'DDMONYY')	
	</select>
	
	<!--  Changed for QR -->
	<select id="chkFltCancelled" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
			select count(1) from flt_opr where FLT_KEY=#flightKey# and SCH_DATE=to_date(#flightDate#,'DDMONYY') and status='X' and flt_type = 'A' 
	</select>
	
	<!--  Changed for QR -->
	<select id="chkFltClosed" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM FLT_OPR_EVENTS WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'DDMONYY') and flt_type = 'A' AND FLT_CLS_YN='Y'	
	</select>
<!--  Maintain Inbound transfer checklist queries ends-->

	<!-- Added by Venkateswarlu.m - Queries for Shipment Tracking Starts -->
	
	<!--  Changed for QR -->	
	<select id="shipment_tracking_getAwbInfo"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	 	select a.awb_type,
	 		 a.AWB_NO as awb, 
			 to_char(a.awb_date, 'DDMONYY') as awbDate,	
	  		 a.ORIG as orig,  
			 a.DEST as dest, 
			 a.PCS as pcs, 
			 a.WT as wt, 
			 a.AGENT_NAME as agentName,
			 case when a.awb_type in ('T','I') then ia.SHPR_name
                  when a.awb_type = 'E' then  ea.SHPR_name end as shipper, 
             case when a.awb_type in ('T','I') then ia.CSGNE_name
                  when a.awb_type = 'E' then  ea.CSGNE_name end as consignee, 
			 a.CONTENT as content,
			 a.awb_type as awbType, a.AGENT_CODE as agentCustNo,
			 mp.CARR_CODE carrCode,
			 (SELECT URL_NAME  FROM MAST_CARRIER  WHERE CODE = a.CARR_CODE ) url,
			 (a.spl_code1 ||''|| decode(a.spl_code2, null, '', ','|| a.spl_code2)
      		||''|| decode(a.spl_code3, null, '', ','|| a.spl_code3)
      		||''|| decode(a.spl_code4, null, '', ','|| a.spl_code4)
      		||''|| decode(a.spl_code5, null, '', ','|| a.spl_code5)
      		||''|| decode(a.spl_code6, null, '', ','|| a.spl_code6)
      		||''|| decode(a.spl_code7, null, '', ','|| a.spl_code7)
      		||''|| decode(a.spl_code8, null, '', ','|| a.spl_code8)
      		||''|| decode(a.spl_code9, null, '', ','|| a.spl_code9)) as shcCode
		  from AWB a
		  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
		  left join EXP_CAR ea on a.AWB_NO = ea.AWB_NO and a.AWB_DATE = ea.AWB_DATE 	 
		  left join MAST_AWB_PREFIX mp on mp.CODE = #preAWB#
		  where a.AWB_NO = #awb#
		  and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)		 
			ORDER BY a.awb_type asc	
	</select>
	
	<select id="shipment_tracking_getRCF"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	
		SELECT s.FLT_KEY as fltKey,  to_char(f.sch_date, 'DDMONYY') as fltDate, 
		to_char(f.sch_date, 'DDMONYY')||' '||SUBSTR(lpad(ACT_TIME,4, 0),0,2)|| ':'|| SUBSTR(lpad(ACT_TIME,4, 0),3,4) as fltDateDisplay, 
		(RECD_PCS + nvl(tt_pcs,0)) as recdPcs, TRIM(TO_CHAR((RECD_WT + nvl(tt_wt,0)), '9999999990D9')) as recdWt, 
		TO_CHAR(a.strgDate, 'DDMONYY HH24:MI') as recdDate 
		FROM IMP_CAR_SHP s
		left join (select awb_no, awb_date, flt_key, flt_date, min(CR_DATE) strgDate from imp_awb_strg_dtl group by awb_no, awb_date, flt_key, flt_date) a
			 on s.AWB_NO = a.AWB_NO and s.AWB_DATE = a.AWB_DATE and s.flt_key = a.flt_key and s.flt_date = a.flt_date
       LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date
       from v_ddt_dtl  where (shp_trf_type in ('TT','IF')) GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt
              ON ddt.AWB_NO = s.awb_no AND ddt.AWB_DATE = s.awb_date AND ddt.FLT_KEY=s.flt_key AND ddt.FLT_DATE = s.flt_date
 		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		WHERE s.AWB_NO = #awb# and s.AWB_DATE = #awbDate#

	</select>
	
	<select id="shipment_tracking_getDLV"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		
		SELECT TO_CHAR(max(s.SRF_DATE),'DDMONYY HH24:MI') deliveryDate, 
		sum(sf.DLV_PCS) deliveryPcs, TRIM(TO_CHAR(sum(sf.DLV_WT), '9999999990D9')) deliveryWt
		FROM IMP_SRF s
		join imp_srf_flt sf on s.srf_no = sf.srf_no
		WHERE s.AWB_NO = #awb# and s.AWB_DATE = #awbDate# and Status = 'POSTED'
		group by s.srf_no
		
	</select>
	
	<select id="shipment_tracking_arrival"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		
		SELECT s.FLT_KEY as fltKey, to_char(f.sch_date, 'DDMONYY') as fltDate, 
		to_char(f.sch_date, 'DDMONYY')||' '||SUBSTR(NVL(lpad(ACT_TIME,4, 0),'0000'),0,2)|| ':'|| SUBSTR(NVL(lpad(ACT_TIME,4, 0),'0000'),3,4) as fltDateDisplay, 
		MANIFEST_PCS as manifestPcs, TRIM(TO_CHAR(MANIFEST_WT, '9999999990D9')) as manifestWt, 
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE V.FLT_KEY = s.FLT_KEY AND V.FLT_DATE = s.FLT_DATE AND V.AWB_NO = s.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS ccCode
		FROM IMP_CAR_SHP s
		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		WHERE AWB_NO = #awb# and AWB_DATE = To_DATE(#awbDate#,'DDMONYY')
	
	</select>
	
	<select id="shipment_tracking_getRCS"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT sum(pcs) as recdPcs, TRIM(TO_CHAR(sum(wt), '9999999990D9')) as recdWt, TO_CHAR(rcl_date,'DDMONYY HH24:MI') as recdDate 
		FROM v_awb_rcl
		WHERE awb_no = #awb# and awb_date=#awbDate#
		group by rcl_date
	</select>
	
	<select id="shipment_tracking_getDEP"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
select  fltKey, fltDate, schTime, actDate,   actTime, sum(pmanPcs) pmanPcs, sum(pmanWt) pmanWt
   from ( select t2.flt_key fltKey, to_char(t2.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(t2.flt_key, t2.SCH_DATE, 'D') schTime, 
		to_char(t2.act_date,'DDMONYY')  actDate,  
		PKG_COMMON.get_flt_ata(t2.flt_key, t2.SCH_DATE, 'D') actTime, 
		nvl(pman_pcs,0) pmanPcs, trim(to_char(pman_wt, '9999990.9')) pmanWt
		from   exp_pmanifest_awb t1, flt_opr t2, flt_opr_events t3
		where  t1.flt_key = t2.flt_key
		and    t1.flt_date = t2.sch_date
		and    t2.FLT_KEY  = t3.FLT_KEY
		and    t2.sch_date = t3.sch_date
		and    t2.flt_type = t3.flt_type
		and    t2.flt_type = 'D'
		and    t3.CTM_OUT_DATE is not null
		and    t1.awb_no =  #awb#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
		union
                select t2.flt_key fltKey, to_char(t2.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(t2.flt_key, t2.SCH_DATE, 'D')schTime, 
		to_char(t2.act_date,'DDMONYY')  actDate,  
		PKG_COMMON.get_flt_ata(t2.flt_key, t2.SCH_DATE, 'D') actTime, 
		nvl(bulk_pcs + ppk_pcs,0) pmanPcs, trim(to_char(bulk_wt + ppk_wt, '9999990.9')) pmanWt
		from   exp_pman_tarmac_awb t1, flt_opr t2, flt_opr_events t3
		where  t1.flt_key = t2.flt_key
		and    t1.flt_date = t2.sch_date
		and    t2.FLT_KEY  = t3.FLT_KEY
		and    t2.sch_date = t3.sch_date
		and    t2.flt_type = t3.flt_type
		and    t2.flt_type = 'D'
		and    t3.CTM_OUT_DATE is not null
		and    t1.awb_no =  #awb#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')) a group by	fltKey, fltDate, schTime, actDate,   actTime	
	</select>
	
	<select id="shipment_tracking_getAwbUserList"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		select su.code as userName from awb aw 
		left join cust_company cc on cc.code = aw.agent_code  or cc.code = aw.shpr_code
		left join sec_user su on su.cust_no = cc.code
		where aw.awb_no = #awb# and su.code is not null
	</select>
	
	<select id="shipment_tracking_getValCargo"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
			 select case when count(1) > 0 then 'true' else 'false' end as valCargo
				from awb where awb_no=#awb#
				and exists (select null from CUST_AIRL_SPL_CODE where carr_code = awb.carr_code and spl_type = 'SPL_VAL' 
				              and instr(awb.spl_code1|| awb.spl_code2||awb.spl_code3|| awb.spl_code4|| awb.spl_code5|| awb.spl_code6||spl_code7||spl_code8||spl_code9,spl_code) > 0)
	</select>

<!--  Changed for QR -->
<select id="fetchMaxAWBDate"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
		      TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
		      AWB_TYPE AS awbType
		  FROM
		      AWB
		 WHERE
		      AWB_NO=#awbNo# AND
		      awb_DATE=(SELECT MAX(awb_DATE) FROM AWB WHERE AWB_NO=#awbNo#)
	</select>
	
<!--  Changed for QR
<select id="getAWBNoStatus"  parameterClass="map"  resultClass="java.lang.String">
SELECT
      AWB_CLOSED_YN
  FROM
      AWB
 WHERE
      AWB_NO=#AWBNO# AND 
      AWB_DATE=#AWBDate# AND 
      AWB_TYPE=#AWBType# AND 
      rownum=1			
</select>	 -->	

<!--  Changed for QR
<select id="getStorageCharge"  parameterClass="map"  resultClass="java.lang.String">
select 
      CHRG_AMT
  FROM
      BILL_CHARGE_DTL
 WHERE
      AWB_NO=#AWBNO# AND 
      AWB_DATE=#AWBDate# AND 
      rownum=1
</select> -->

<parameterMap id="chargeMap" class="map" >
	<parameter property="storageAmount" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="existingDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="F_IMPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_IMPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
  </parameterMap>
	
  <procedure id="getStorageRatePkgExisting" parameterMap="chargeMap">
	{? = call PKG_CALCULATE.GET_STORAGE_CHRG_UPTO (?,?,?,?,?,?)}
  </procedure>


<select id="getRCLStorageAmountForEachRCL" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
		select  pkg_exp_billing.get_rcl_storage_amt(#rclNumber#,#rclWt#) strgAmt from dual
</select>
	
	<select id="getPaidStorageCharges"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT  nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0)),0) AS paidAmt               
		FROM BILL_CHARGE_DTL
		WHERE itm_code like 'SCIMP%' and
		STATUS != 'VOID'
		AND AWB_NO=#AWBNO# AND AWB_DATE = to_date(#AWBDate#,'DDMONYY')
		AND (STATUS = 'PAID' 
				or (STATUS = 'PENDING'	AND WAVR_AMT > 0 AND WAVR_DONE = 'Y'
					AND SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID'))
			)
		]]>
	</select>
	
	<select id="getShpTrackAwbType"  parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
	SELECT awb_type as AWBTYPE,TO_CHAR(awb_date,'DDMONYY') as AWBDATE from awb where awb_no=#AWBNO# and awb_closed_yn='N'
	</select>
	
	 <select id="getShpTrackRclList"  parameterClass="java.util.HashMap"  resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	    <![CDATA[
	    		  SELECT hd.rcl_no as rclNumber, hd.rcl_wt as rclWt, to_char(hd.rcl_date,'DDMONYY') as rclDate
				    FROM exp_rcl_hd hd   
				    WHERE hd.awb_no    = #awbNo#
				    AND hd.awb_date  = to_date(#AWBDATE#,'DDMONYY')
				    AND hd.PPK_TYPE <> 'M' and hd.STATUS <> 'V'
				   UNION
				 SELECT hd.rcl_no as rclNumber, hd.rcl_wt as rclWt, to_char(hd.rcl_date,'DDMONYY') as rclDate
				    FROM exp_rcl_hd hd
		            join (
		              select rcl_no as rclNumber from Exp_Uld_Awb where awb_no = #awbNo#
		                AND awb_date = to_date(#AWBDATE#,'DDMONYY')
		                AND PPK_TYPE = 'M' group by rcl_no
		            ) eua ON eua.rclNumber = hd.rcl_no
		          where hd.STATUS <> 'V'
		]]>
    </select>
    
    <select id="getShpTrackRclDate"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
    <![CDATA[
    SELECT MIN(TO_CHAR(T.startDate,'DDMONYY')) FROM (SELECT 
	B.RCL_DATE AS startDate
	FROM 
	EXP_RCL_HD B,
	EXP_PRE_RCL_HD C
	WHERE 
	B.CR_DATE = (select min(cr_date) from exp_rcl_hd where awb_no = B.AWB_NO and status <> 'V') AND
	C.PRE_RCL_NO(+) = B.PRE_RCL_NO AND
  	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #AWBDATE# AND ROWNUM=1
	UNION
	SELECT 
	C.RCL_DATE AS startDate
	FROM 
	EXP_RCL_BRKDN B,
	EXP_RCL_HD C,
	EXP_PRE_RCL_HD D
	WHERE
	C.RCL_NO = B.RCL_NO AND
	C.RCL_DATE = (select min(cr_date) from exp_rcl_hd where RCL_NO=B.RCL_NO AND status <> 'V') AND
	D.PRE_RCL_NO(+) = C.PRE_RCL_NO AND
	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #AWBDATE# AND ROWNUM=1)T
	]]>
    </select>
    <select id="getNonBuPcsForCharges"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
    	SELECT sum(NVL(inv.locn_wt,0)) wt from awb_inventory inv where awb_no = #awbNo# and awb_date = #AWBDATE#
    		AND not (inv.flt_type = 'E' and inv.FLT_KEY IS not NULL  )  group by awb_no,awb_date
    </select>
    
    <select id="getShpTrackDateDiff"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
    SELECT to_number(TO_DATE(#existingDate#,'DDMONYY') - TO_DATE(#rclDate#,'DDMONYY'))+1 from dual
    </select>
	<!-- End - Queries added for Shipment Tracking -->
	
<!-- Fax Hash Total/Print Paper Manifest Queries Starts -->
	<select id="flt_validate_by_type"  parameterClass="map"  resultClass="java.lang.Integer">
			SELECT NVL(count(1),0) FROM FLT_OPR WHERE CARR_CODE=#carrierCode# AND FLT_NO=#flightNo# 
			AND SCH_DATE= #flightDate#
			<isEqual property="flightType" prepend="AND" compareValue="I">
	              FLT_TYPE = 'A'
	        </isEqual>
            <isEqual property="flightType" prepend="AND" compareValue="E">
	              FLT_TYPE = 'D'
	        </isEqual>
   	</select>

<!-- Fax Hash Total/Print Paper Manifest Queries End -->

	
	<!-- ImportRampModule_EnqAckTowOrder [Query added by Srinivas] -->
	
		<select id="sqlEnqTowDetailsLst" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = a.rho_id) rhoIdlist,
			c.TR_NO txnNo,
			a.to_no towOrderlist,			
			a.ver_no verNo,
			a.flt_key fltKeylist,
			Decode(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'),NULL,'notAck',TO_CHAR(a.ack_date,'DDMONYY HH24:MI')) ackDate,
			Decode(a.ack_date,NULL,'N','Y') condCode,
			TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
			TO_CHAR(a.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
			PKG_COMMON.get_flt_sta(a.flt_key, a.FLT_DATE, 'A') sta,
			TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
			(substr((pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD')),0,8)) ata,
			c.ACFT_PRK_BAY bay,
			(select count(c.uld_key) from
			tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
			(select
			count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and
			c.awb_no is Not NUll) awbCount,
			 to_date((TO_CHAR(a.flt_date,'DDMONYY')||      
      		  DECODE((DECODE(c.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),3,4)))),NULL,
       		  SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4),
        	  (DECODE(c.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),3,4)))))),'DDMONYYHH24MI') as sortOrd
			from tow_order_in a
			join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE and c.FLT_TYPE = 'A'
			where TO_DATE(to_char(a.FLT_DATE,'DDMONYY')|| ' ' || TO_CHAR(NVL(c.sch_time,0),'0000'),'DDMONYY HH24MI')  &gt;= TO_DATE(#arrDateHm#,'DDMONYY HH24MI') 
      		and  TO_DATE(to_char(a.FLT_DATE,'DDMONYY')|| ' ' || TO_CHAR(NVL(c.sch_time,0),'0000'),'DDMONYY HH24MI')  &lt;=	to_Date(#arrDateToHm#,'DDMONYY HH24MI')
				<isNotEmpty property="rhoId">
					AND a.rho_id = #rhoId#
				</isNotEmpty>
				<isNotEmpty property="carrCode">
					AND c.CARR_CODE= #carrCode#
				</isNotEmpty>
				<isNotEmpty property="towOrder">
					AND a.to_no = #towOrder#
				</isNotEmpty>
				<isNotEmpty property="fltKey">
					AND a.flt_key = #fltKey#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="loginCarrier">
                    (c.CARR_CODE = #loginCarrier#
                     OR c.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                </isNotEmpty>
                <isEmpty property="loginCarrier">
                <isNotEmpty prepend="AND" property="loginCustCode">
                     c.RHO_ID = #loginCustCode#
                </isNotEmpty>
                </isEmpty>				
	     	 ORDER BY  sortOrd desc, a.LM_DATE desc
		</select>
		
		<select id="getTowDtlsForHypLnk" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = a.rho_id) rhoIdlist,
			c.TR_NO txnNo,
			a.to_no towOrderlist,			
			a.ver_no verNo,
			a.flt_key fltKeylist,
			c.CARR_CODE fltCarr,
			c.FLT_NO fltNo,
			Decode(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'),NULL,'notAck',TO_CHAR(a.ack_date,'DDMONYY HH24:MI')) ackDate,
			Decode(a.ack_date,NULL,'N','Y') condCode,
			TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
			TO_CHAR(a.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
			SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4) sta,
			TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
			(substr((pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD')),0,8)) ata,
			c.ACFT_PRK_BAY bay,
			(select count(c.uld_key) from
			tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
			(select
			count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and
			c.awb_no is Not NUll) awbCount,
			to_date((TO_CHAR(a.flt_date,'DDMMYY')||SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4)),'DDMMYYHH24MI')
			from tow_order_in a 
			join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE and c.FLT_TYPE = 'A'
      		where a.FLT_KEY = #fltKeylist#  AND a.FLT_DATE = #fltDatelist#  AND a.TO_NO = #towOrderlist#
	</select>
	
	<select id="sqlAckEnqTowDtl" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		select
		    Decode(tdtl.ULD_KEY,null,(SUBSTR(tdtl.AWB_NO,1,3)||'-'||SUBSTR(tdtl.AWB_NO,4,11)),tdtl.ULD_KEY) uldAwbNo,
		    Decode(chk.CHKIN_YN,NULL,'N',chk.CHKIN_YN) AS chkYN,
		    tdtl.HO_AREA hoArea,
		    tdtl.TRNS_GRP as transferGrp,
		    tdtl.trf_type tfType,
		    toi.to_no towOrderlist,
		    TRIM((tdtl.CNTG_FLT_KEY)||'/'||to_char(tdtl.CNTG_FLT_DATE,'DDMONYY')) cntgKey,	 
			PKG_COMMON.GET_FLT_STA(tdtl.CNTG_FLT_KEY,to_char(tdtl.CNTG_FLT_DATE,'DDMONYY'),'D','HH24:MI') std,  		    
		    FFM.PCS || NVL2(FFM.PCS, '/', '') || DECODE(SUBSTR(FFM.WT, 0, 1), '.', '0' || FFM.WT, FFM.WT)  pcs,
		    tdtl.shcs  as  shc1
		FROM tow_order_in toi
		join tow_order_in_dtl tdtl	ON toi.to_no = tdtl.to_no
		left join IMP_CAR_SHP car ON	tdtl.AWB_NO = car.AWB_NO AND toi.FLT_KEY = car.FLT_KEY AND toi.FLT_DATE = car.FLT_DATE
		left join IMP_ULD_LIST iul ON iul.ULD_KEY = tdtl.ULD_KEY AND toi.FLT_KEY = iul.FLT_KEY AND toi.FLT_DATE = iul.FLT_DATE
		left join imp_ramp_chk_dtl chk	ON chk.ULD_KEY = tdtl.ULD_KEY AND chk.FLT_KEY = toi.FLT_KEY AND toi.FLT_DATE = chk.FLT_DATE
		LEFT OUTER JOIN
		(
			SELECT SUM(SHP.MAN_PCS) PCS, SUM(SHP.MAN_WT) WT, SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
			FROM EDI_FFM_MSG FFM
			JOIN EDI_FFM_ULD ULD
			ON FFM.TR_NO = ULD.TR_NO
			JOIN EDI_FFM_SHP SHP
			ON ULD.TR_NO = SHP.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
			WHERE
			FFM.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
			GROUP BY SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
		) FFM
		ON CAR.AWB_NO = FFM.AWB_NO AND CAR.FLT_KEY = FFM.FLT_KEY AND CAR.FLT_DATE = FFM.FLT_DATE
    	where toi.to_no = #towOrderlist#
	</select>
	
	<update id="sqlAckEnqTowDtls" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >		
		UPDATE TOW_ORDER_IN SET ACK_DATE = sysdate, LM_DATE = sysdate WHERE TO_NO = #towOrderlist# AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
	</update>
	<!-- ImportRampModule_EnqAckTowOrder [Query Ended by Srinivas] -->
	
	<!-- ImportRampModule_HHTEnqTowOrder [Query added by Srinivas] -->
	
	<!--  Changed for QR -->
		<select id="hhtEnqTowDtlList" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select 
			flt.TR_NO as txnNo,
			toi.to_no towOrderlist,				
			toi.flt_key as fltKeylist,
			TO_CHAR(toi.flt_date,'DDMONYY') as fltDatelist,
			TO_CHAR(DECODE(TO_CHAR(flt.EST_TIME),NULL,
  		    TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(flt.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
        	to_date((TO_CHAR(flt.sch_date,'DDMONYY')||      
      		DECODE((DECODE(flt.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4)))),NULL,
       		SUBSTR(TRIM(TO_CHAR(NVL(flt.sch_time,0),'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(NVL(flt.sch_time,0),'0000')),3,4),
        	(DECODE(flt.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4)))))),'DDMONYYHH24MI') as sortOrd
			from TOW_ORDER_IN toi
			join flt_opr flt on flt.flt_key = toi.flt_key and flt.SCH_DATE = toi.FLT_DATE and flt.FLT_TYPE = 'A' 
			where   toi.flt_date =  NVL(#fltDate#,toi.flt_date)
					AND toi.to_no = NVL(#towOrder#,toi.to_no)
					AND toi.flt_key =  NVL(#fltKey#,toi.flt_key)
					<isNotEmpty property="uldNo">
						<isNotEqual property="uldNo" compareValue="">
							AND exists (select null from TOW_ORDER_IN_DTL td where toi.to_no= td.to_no and  td.uld_key =  #uldNo#)
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty property="fltCarr">
					AND flt.carr_code = #fltCarr#
					</isNotEmpty>
					<isNotEmpty property="fltNo">
					<![CDATA[
		 			AND flt.flt_no = #fltNo#
					]]>
					</isNotEmpty>
					ORDER BY sortOrd DESC, toi.lm_date
			</select>
	
	<select id="hhtEnqTowDetails" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		select
 			a.to_no towOrderlist,
      		b.HO_AREA hoArea,
			decode(b.ULD_KEY,null,b.AWB_NO,b.ULD_KEY) uldAwbNo,
      		decode(D.CHKIN_YN,null,'N',D.CHKIN_YN) chkYN
			from tow_order_in a
			join tow_order_in_dtl b	on a.to_no=b.to_no
  			left join imp_ramp_chk_dtl d on d.ULD_KEY=b.ULD_KEY AND d.FLT_KEY = a.FLT_KEY AND d.FLT_DATE = a.FLT_DATE
			where a.to_no=#towOrderlist#
	</select>
	
	<!-- ImportRampModule_EnqAckTowOrder [Query Ended by Srinivas] -->
	
	
	<!-- ImportRampModule_PhysicalCheckList [Query added by Srinivas] -->
	
	<select id="imp_checklist"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
         SELECT          
                hd.CARR_CODE  AS carrierCode,
                hd.FLT_NO  AS flightNo, 
                TO_CHAR(hd.FLT_DATE,'DDMONYY')  As flightDate, 
                dtl.ULD_KEY  AS uldNo, 
                Decode(dts.CHKIN_YN,NULL,'N',dts.CHKIN_YN) AS checkInInd,
                Decode(dtl.FFM_IND,NULL,'N',dtl.FFM_IND) ffmInd,
                Decode(dtl.CPM_IND,NULL,'N',dtl.CPM_IND) cpmInd,
                 (select TRF_TYPE
                  from v_ddt_dtl
                  where flt_key = hd.FLT_KEY
                  and flt_date = hd.FLT_DATE
                  and uld_key = dtl.ULD_KEY  and rownum=1
                  )  AS transferType, 
                foe.RAMP_COMPL_YN as rampComplStatus,
                iul.IMX  AS imx, 
                iul.HANDLING_MODE AS handlingMode, 
                V_COMMA_SEP_IMP_FLT_ULD_SHC( hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY,NULL,NULL) AS shc,   
                UPPER(dtl.RMK) AS remark,               
                dtl.LOC_CODE AS locCode,
                (select TRIM(TO_CHAR(MAX(TO_NUMBER(i.TO_NO)),'00000000')) TO_NO FROM
                tow_order_in i, tow_order_in_dtl tdtl
                where i.to_no= tdtl.to_no
                and tdtl.uld_key = dtl.ULD_KEY
                and i.flt_key = #flightNoKey#
                and TO_CHAR(i.flt_date,'DDMONYY') = #flightDate#) as towOrderNo,
               (select cc.CODE_DESC from CUST_COMPANY cc where cc.code= f.rho_id) as rho,             
               (SELECT count(ULD_KEY) FROM IMP_RAMP_INB_CHK_DTL  WHERE flt_key = hd.flt_key AND FLT_DATE = hd.FLT_DATE)  as totalUld,                
                PKG_IMP.fun_get_ho_area(hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY) as  plannedHoArea,
   				PKG_IMP.fun_get_hdlg_area(hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY) as handlingZone,
                pkg_common.get_flt_ata(hd.flt_key, hd.flt_date,'A','DD') AS ata,
                (SELECT CASE WHEN (SELECT count(1) FROM XT_IMP_CAR_SHP_DTL xt where xt.ULD_KEY =  dtl.ULD_KEY and xt.IMP_FLT_KEY = hd.FLT_KEY and xt.IMP_FLT_DATE = hd.FLT_DATE ) > 0 then 'Y' else 'N' end  from dual) as xtShpFlg
          FROM IMP_RAMP_CHK_HD hd
               join    FLT_OPR f                       ON  f.FLT_KEY = hd.FLT_KEY  AND  f.SCH_DATE = hd.FLT_DATE AND f.FLT_TYPE='A'
               join    FLT_OPR_EVENTS foe              ON  foe.FLT_KEY = hd.FLT_KEY  AND  foe.SCH_DATE = hd.FLT_DATE AND foe.FLT_TYPE='A'
               join    IMP_RAMP_INB_CHK_DTL dtl        ON  dtl.TR_NO = hd.TR_NO AND dtl.FLT_KEY = hd.FLT_KEY  AND  dtl.FLT_DATE = hd.FLT_DATE 
               left  join    IMP_ULD_LIST iul                ON  iul.FLT_KEY = dtl.FLT_KEY  AND  iul.FLT_DATE = dtl.FLT_date AND iul.ULD_KEY=dtl.ULD_KEY
               left  join    IMP_RAMP_CHK_DTL dts      ON  dts.TR_NO = hd.TR_NO AND dts.FLT_KEY = hd.FLT_KEY  AND  dts.FLT_DATE = hd.FLT_DATE AND dts.ULD_KEY=dtl.ULD_KEY         
         WHERE            
               hd.flt_key = #flightNoKey# AND 
               hd.FLT_DATE = #flightDate#
            ORDER BY dtl.ULD_KEY
   	</select>
	
	<!-- ImportRampModule_PhysicalCheckList [Query ended by Srinivas] -->


<insert id="sqlULDCheckinMovementLog" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		  INSERT INTO ULD_MOV(TR_TYPE,TR_NO, TR_DATE,DOC_LINE_NO,ULD_NO,ULD_TYPE,    
								   ULD_CARR, ULD_KEY,RTRV_DATE, STRG_DATE,MOV_FROM,    
							  MOV_TO, ULD_STATUS, FLT_CARR,       
							  FLT_NO, FLT_TYPE, FLT_KEY,FLT_DATE,       
							  DAM_IND,EIC_ISS, EMPTY_ISS, CONTR_CCODE, OWNER_ID,
							  RMK, CR_USER_ID,
							  CR_DATE, LM_USER_ID, LM_DATE,SEQ_NO)
		 VALUES (		
		 'IR',		
		 #trNo#,sysdate,#docLineNo#,#uldNo#,#uldType#,
				 #carrierCode#,#uldKey#,sysdate,sysdate,
				<isEqual property="actionName" compareValue="insert">
					 null, #locCode#,'CONFIRMED',
				</isEqual>
				<isEqual property="actionName" compareValue="delete">
					 null, null,'REMOVED',
				</isEqual>	
				<isEqual property="actionName" compareValue="update">
				     null, #locCode#,'CONFIRMED',
				</isEqual>				
				#carrierCode#,
				#flightNo#,#flightType#,#flightKey#,#flightDate#,
				#damInd#,#eic#,#empty#,#contour#,#owner#,
				#remark#,#lmUser#,sysdate,#lmUser#,sysdate,uld_mov_seq.nextval)  
	</insert>
	
	<!-- Changed for QR 
	<insert id="sqlULDCheckinEventLog" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">	
		INSERT INTO FLT_OPR_EVENTS(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,FFM_IND,LM_DATE)
			VALUES(
				#trNo#,UPPER(#carrierCode#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#flightDate#,'DDMONYY'),
				TO_DATE(#flightDate#,'DDMONYY'),#ffmInd#,sysdate)
	</insert> -->
	
	<select id="sqlGetULDHcontainer"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
			SELECT h_cont_ind from MAST_ULD_TYPE where code = #uldType#
	</select>		
	
	<delete id="imp_ramp_inbuld_del" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE ULD_KEY = #uldKey# AND FLT_DATE=To_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#flightKey#
	</delete>
	
	<select id="checkContrCode"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_CONTR_IND where CODE=#PARAM#
    </select>
    
    <select id="checkLocnCode"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_LOC where CODE=#PARAM#
    </select>
    
    <select id="checkWHArea"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_AREA where WH_AREA=#PARAM#
    </select>
    <select id="getLocnPcsforMiletone"  parameterClass="java.lang.String"  resultClass="java.lang.String">
	     SELECT NVL(SUM(LOCN_PCS),'0') FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM#
    </select>
    <!-- Changed for QR
    <select id="checkHOArea"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">    
	     select count(1) from imp_hoarea_dtl where UPPER(ho_area)=#PARAM#
    </select>    -->
    
    <select id="sqlCountULDTypeVsContourCodeCheckin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="java.lang.Integer" >
		select count(1) from ULD_TYPE_CONTR where ULD_TYPE = #uldType# and CONTR_CODE = #contour#
	</select> 
    
    <select id="checkWHAreaDesc"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_AREA where WH_AREA_DESC=#PARAM#
    </select>
    
    <select id="checkDescrepencyOfHAWB"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	    
		SELECT
		    COUNT(IH.HAWB_NO)
		  FROM
		    IMP_SRF SR 
		    LEFT JOIN IMP_HAWB_STRG_DTL IH ON SR.AWB_NO=IH.AWB_NO AND SR.AWB_DATE = IH.AWB_DATE
		    WHERE
		    SR.SRF_NO = #srfNO#
    </select>
    
    <select id="checkSRFShouldHaveHAWBWithCC"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	    
		SELECT COUNT(ISID.HAWB_NO)
    FROM
    IMP_SRF ISF
    LEFT JOIN IMP_SRF_AWB_INVENTORY ISI ON ISF.AWB_NO = ISI.AWB_NO AND ISF.AWB_DATE = ISI.AWB_DATE AND ISI.CC_CODE != null 
    LEFT JOIN IMP_SRF_AWB_INVENTORY_DTL ISID ON ISID.SEQ_NO = ISI.SEQ_NO
    WHERE 
    ISF.SRF_NO=#srfNo#
    </select>
    
     <insert id="sqlGenTowOrderHdrULD" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
			insert into TOW_ORDER_IN(TO_NO,CR_USER_ID,VER_NO,LM_DATE,LM_USER_ID,RHO_ID,FLT_KEY,FLT_DATE,CR_DATE,FLT_TYPE,TR_TYPE) 
			values(#towOrderNo#,#lmUserId#,#towOrderVersionNo#,SYSDATE,#lmUserId#,#rho#,#flightKey#,#flightDate#,SYSDATE,#flightType#,#trtype#)
	</insert>	
	
	<insert id="sqlGenTowOrderDtlULD" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
			insert into TOW_ORDER_IN_DTL(CR_USER_ID,LM_DATE,CR_DATE,HO_AREA,TO_NO,LM_USER_ID,ULD_KEY,TRNS_GRP,SHCS,TR_TYPE, CNTG_FLT_KEY, CNTG_FLT_DATE, TRF_TYPE) 
			values(#lmUserId#,sysdate,sysdate,#plannedHoArea#,#towOrderNo#,#lmUserId#,#uldKey#,#transferGroup#,#shc#,'TOWCR',#cntgFltKey#, #cntgFltDate#, #transferType#)
	</insert>   
	
	<select id="getFlightType"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
			SELECT FLT_TYPE FROM FLT_OPR WHERE FLT_KEY =#flightKey# AND FLT_TYPE='A' AND SCH_DATE = TO_DATE( #flightDate#, 'DDMONYY')
   	</select> 
   	
   	<insert id="imp_insert_uldlist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
		INSERT INTO IMP_ULD_LIST(CR_USER_ID,ULD_KEY,FLT_DATE,CR_DATE,FLT_KEY,LM_DATE,IMX,LM_USER_ID,TRANSIT_IND,TRANSFER_TYPE)
		VALUES (#lmUserId#,#uldKey#,TO_DATE(#flightDate#,'ddmonyy'),SYSDATE,#flightKey#,SYSDATE,'N',#lmUserId#,'N',#transferType#)
	</insert>
	
	 <select id="checkInULDList"  parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
	     select count(1) from IMP_ULD_LIST where ULD_KEY=#uldKey# and FLT_DATE=TO_DATE(#flightDate#) and FLT_KEY=#flightKey#
    </select> 
	
	 <select id="imp_chk_transfer_type_list"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
	 	SELECT TRF_TYPE FROM ddt_uld 
	 	WHERE cntg_flt_key=#flightKey# 
	 	and cntg_flt_date=TO_DATE(#flightDate#,'DDMONYY') 
	 	and uld_key=#uldKey#
	</select>
	
	<!--  Changed for QR
	<select id="get_contgfltdtl_uldflt"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">	
	    SELECT CNTG_FLT_KEY , CNTG_FLT_DATE  FROM  V_DDT_DTL 
		WHERE FLT_KEY 	= #flightKey#
		AND FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
		AND ULD_KEY     = #uldKey#
		AND TRF_TYPE IN ('TT','IF')
		AND ROWNUM=1   
	</select>  -->
	
	<select id="getImpULDDetails"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select HANDLING_MODE AS handlingMode
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and ULD_KEY = #uldKey#	
	</select>
	
	<select id="get_ddt_uld_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
          SELECT CNTG_FLT_KEY cntgFltKey, TO_CHAR(CNTG_FLT_DATE,'DDMONYY') cntgFltDate, TRF_TYPE transferType FROM v_ddt_dtl
	      WHERE 
	      FLT_KEY = #flightKey# and
	      FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
	      uld_key=#uldKey# and rownum = 1
	</select> 
	
	<select id="check_data_exist_EXP_CHKOUT_HD"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_HD where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# 
	</select>
	
	<insert id="imp_uld_checkin_insert_EXP_CHKOUT_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		Insert into EXP_CHKOUT_HD (FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
		values (#cntgFltKey#,#cntgFltDate#,#lmUser#,sysdate,#lmUser#,sysdate,'E')
	</insert>
	<select id="check_data_exist_EXP_CHKOUT_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey#
	</select>
	<select id="check_flt_data_exist_EXP_CHKOUT_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# 
	</select>
	
	<insert id="imp_uld_checkin_insert_EXP_CHKOUT_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		Insert into EXP_CHKOUT_DTL (FLT_KEY,FLT_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#cntgFltKey#,#cntgFltDate#,#uldKey#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<select id="validate_checkout_uld"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL 
	    	where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey# and chkout_date is not null
	</select>
	
	<delete id="imp_uld_uncheckin_delete_EXP_CHKOUT_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		delete from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey# and chkout_date is null
	</delete>
	
	<delete id="imp_uld_uncheckin_delete_EXP_CHKOUT_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		delete from EXP_CHKOUT_HD where flt_key = #cntgFltKey# and flt_date = #cntgFltDate#
	</delete>
	
	<select id="get_ddt_uld_inbound_transfer_type"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">	
		  SELECT TRF_TYPE FROM v_ddt_dtl
	      WHERE 
	      FLT_KEY = #flightKey# and
	      FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
	      uld_key=#uldKey#   and rownum = 1	 	 
	</select>
	
	<select id="getImpULDDetailsInbound"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
		select HANDLING_MODE AS handlingMode
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and ULD_KEY = #uldKey#	
	</select>
 <!-- ImportRampModule END -->

<!-- ImportRampModule_HLD_IMP_RAMP_FltHandlingRpt [Query's added by Srinivas] -->

	<select id="carrcodevalidation"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
      <![CDATA[
                  SELECT COUNT(1) as count FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' and CODE = #param# 
            ]]>
     </select>
 
 	<select id="imp_getdate"  parameterClass="map"  resultClass="java.lang.String">
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL
   	</select>

	
   	<select id="flight_report_getFlightListForRamp"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   RTRIM(TO_CHAR(fltevents.RAMP_COMPL_DATE, 'DDMONYY')||' '||(SUBSTR(TRIM(TO_CHAR(fltevents.RAMP_COMPL_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(fltevents.RAMP_COMPL_TIME, '0000')),3,4)), ':') as bdComplDate,
		   flt.ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   DECODE(flt.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),3,4)) as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.LM_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.TR_NO as reptTrNo,
		   (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = flt.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,
			pkg_common.flt_route(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall
		FROM FLT_OPR flt LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON
		 		 repthead.REP_MODULE = 'IR' AND
				 flt.FLT_KEY = repthead.FLT_KEY AND
				 flt.SCH_DATE = repthead.FLT_DATE, 
			 FLT_OPR_EVENTS fltevents
		WHERE
			flt.FLT_TYPE = 'A'	AND
			flt.TR_NO = fltevents.TR_NO AND
			TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate# 
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
	
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltKey">
				flt.FLT_KEY = #fltKey#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="flight_report_getFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		SELECT
                  FHS.TR_NO as trNo,
                  FHS.REP_MODULE as repModule,
                  FHS.CARR_CODE as carrCode,
                  FHS.FLT_NO as fltNo,
                  FHS.FLT_DATE as fltDate,
                  FHS.FLT_KEY as fltKey,
                  FHS.FLT_ATA as fltAta,            
                  NO_OF_LOADED_ULDS as noOfLoadedUlds,
				  NO_OF_BULK_CARGO as noOfBulkCargo,
				  NO_OF_EMPTY_ULD as noOfEmptyUld,                      
                  FHS.IRR_ULD as irrUld,
                  FHS.IRR_ULD_RMK as irrUldRmk,
                  FHS.SVC_STD_RMK as svcStdRmk,
                  FHS.LM_USER_ID as modifiedUserId,
                  TO_CHAR(FHS.LM_DATE, 'DDMONYY HH24:MI:SS') as lmDate,
                  FHS.AWB_LOCAL as awbLocal,
                  FHS.AWB_TRAN as awbTran,
                  FHS.AWB_MAIL as awbMail,
                  FHS.BD_TONNAGE bdTonnage,
                  FHS.DAMAGEULD damageUldSize, 
                  FHS.TOTALULD totalUld ,
                  FHS.DAMAGEULDLIST damageUldList,
                  FHS.IMAGE as transactionId
            FROM IMP_FLT_HAND_SUMMARY FHS
            WHERE 
			FHS.FLT_KEY = #fltKey# AND
			TO_CHAR(FHS.FLT_DATE, 'DDMONYY') = #fltDate# AND
			FHS.REP_MODULE = #reptType#
	</select>
	
	<delete id="flight_report_deleteOldUploadFiles" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE SYSDATE-CR_DATE > #days#
	</delete>
	
	<select id="flight_report_checkRandomTR" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #value#
	</select>
	
	<insert id="flight_report_copyToTemp" parameterClass="map">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC_TMP
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, CR_DATE)
		SELECT #randomTr# as TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, SYSDATE
		FROM IMP_FLT_HAND_SUMMARY_DOC
		WHERE TR_NO = #trNo#
	</insert>
	
	<select id="flight_report_getPerformanceListIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.PerformanceFRBO">
		SELECT A.PERF_NAME as performanceName, 
			   A.PERF_DESC as description, 
			   A.INFO_REQD as infoRequired,
	 		   B.RMK as remarks  ,
			   B.RMK as oldRemarks  
		FROM MAST_PERFORMANCE_STD A 
		LEFT JOIN IMP_FLT_HAND_PERFORMANCE B ON A.PERF_NAME = B.PERF_NAME AND B.TR_NO = #reptTrNo#
		WHERE A.REP_MODULE = #reptType#
	</select>
	
	<select id="flight_report_getTimestampListGenerate" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			A.CODE as itemCode, 
			A.Code_DESC as itemName, 
			UPPER(A.MODIFY_YN) as modifyYN,
			TO_CHAR(SYSDATE,'DDMONYY') as actionedTimeDate,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),0,2) as actionedTimeHour,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),3,4) AS actionedTimeMinute,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MISS'),'000000')),5,6) AS actionedTimeSecond,
			TO_CHAR(SYSDATE,'DDMONYY') as oldActionedTimeDate,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),0,2) as oldActionedTimeHour,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),3,4) AS oldActionedTimeMinute,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MISS'),'000000')),5,6) AS oldActionedTimeSecond
		FROM MAST_FLT_TIME_STAMP A
		where A.CODE_TYPE = 'TIME' AND A.REP_MODULE like '%'||#reptType#||'%'
	</select>
		
	<select id="flight_report_getTimestampListIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			A.CODE as itemCode, 
			A.Code_DESC as itemName, 
			UPPER(A.MODIFY_YN) as modifyYN,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY HH24:MI:SS') as actionedTime,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY') as actionedTimeDate,
			TO_CHAR(B.TSTAMP_DATE, 'HH24') as actionedTimeHour,
			TO_CHAR(B.TSTAMP_DATE, 'MI') as actionedTimeMinute,
			TO_CHAR(B.TSTAMP_DATE, 'SS') as actionedTimeSecond,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY HH24:MI:SS') as oldActionedTime,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY') as oldActionedTimeDate,
			TO_CHAR(B.TSTAMP_DATE, 'HH24') as oldActionedTimeHour,
			TO_CHAR(B.TSTAMP_DATE, 'MI') as oldActionedTimeMinute,	
			TO_CHAR(B.TSTAMP_DATE, 'SS') as oldActionedTimeSecond
		FROM MAST_FLT_TIME_STAMP A 
		LEFT JOIN IMP_FLT_HAND_TIME_STAMP B ON A.CODE =	B.TSTAMP_CODE AND B.TR_NO = #reptTrNo#
		where (A.CODE_TYPE = 'TIME' AND A.REP_MODULE like '%'||#reptType#||'%') or A.CODE = 'CATA'
	</select>
	
	
	
	<select id="flight_imp_ramp_getTimeStamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			TSTAMP_CODE as itemCode, 
			to_char(TSTAMP_DATE,'DDMONYY') as actionedTime,
			substr(trim(to_char(TSTAMP_TIME,'0000')), 0, 2) actionedTimeHour,
		   	substr(trim(to_char(TSTAMP_TIME,'0000')), 3, 4) actionedTimeMinute		
			FROM IMP_FLT_HAND_TIME_STAMP A
		where FLT_KEY=#fltKey# and FLT_DATE=#fltDate# 
		and TSTAMP_CODE in ('Ex_Tow_ECT') 
	</select>
	
	<select id="flight_report_getServiceStandardListGenerate"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
		SELECT
			  A.ITM_NAME as itemName,
			  A.STD as std,
			  SUBSTR(TRIM(TO_CHAR(NVL(1140,0),'0000')),0,2)|| 
			  ':'||  SUBSTR(TRIM(TO_CHAR(NVL(1140,0),'0000')),3,4) AS serviceTime,
			  '1140' as serviceTimeForDb,
			  'N' as stdMet
		FROM 
			MAST_SVC_STD A
		WHERE
	        A.REP_MODULE = #reptType#
	</select>	
	
	<select id="flight_report_getServiceStandardListIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
			 <![CDATA[
			SELECT
		  	A.ITM_NAME as itemName,
		  	 (select CODE_DESC from MAST_FLT_TIME_STAMP where code = A.TIME_STAMP2) 
            || ' - ' || (select CODE_DESC from MAST_FLT_TIME_STAMP where code = A.TIME_STAMP1) 
            || ' ' || decode(a.STD_OPR, 'LE', '<=', 'LT', '<', 'GE', '>=', 'GT', '>', 'EQ', '=')  || ' ' || A.STD as std,
		  	A.STD as stdValue,
		  	B.SVC_TIME AS serviceTime,
		  	B.SVC_TIME as serviceTimeForDb,
		 	B.STD_MET_YN as stdMet
		 	FROM MAST_SVC_STD A 
			LEFT JOIN MAST_FLT_TIME_STAMP MT ON MT.CODE = A.TIME_STAMP2
			LEFT JOIN IMP_FLT_HAND_SVC_STD B ON A.ITM_NAME = B.ITM_NAME  AND nvl(b.tr_no, '**') = nvl(#reptTrNo#, '**') 
			JOIN FLT_OPR F ON F.FLT_TYPE = DECODE(A.FLT_TYPE, 'I', 'A', 'D') AND F.CARR_CODE = NVL(A.CARR_CODE, F.CARR_CODE) 
		 	AND F.CGO_ACFT_TYPE = NVL(A.ACFT_TYPE, F.CGO_ACFT_TYPE)
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(MANIFEST_WT) WT 
			FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) S ON S.FLT_KEY = F.FLT_KEY AND S.FLT_DATE = F.SCH_DATE
			WHERE A.REP_MODULE = #reptType#
			AND F.FLT_KEY = #fltKey# AND F.SCH_DATE = #fltDate# AND F.FLT_TYPE = 'A' 
			AND NVL(A.TONN_RANGE_FROM, nvl(S.WT, 0)) <= nvl(S.WT, 0) AND NVL(A.TONN_RANGE_TO, nvl(S.WT, 0)) >= nvl(S.WT, 0)	]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getFlightlistIMBFR"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   TO_CHAR(fltevents.WHSE_COMPL_DATE, 'DDMONYY HH24:MI') as bdComplDate,
           RTRIM(TO_CHAR(fltevents.WHSE_COMPL_DATE, 'DDMONYY')||' '||(SUBSTR(TRIM(TO_CHAR(fltevents.WHSE_COMPL_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(fltevents.WHSE_COMPL_TIME, '0000')),3,4)), ':') as bdComplDate,
		   flt.CGO_ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   PKG_COMMON.get_flt_sta(flt.FLT_KEY, flt.SCH_DATE, 'A') as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.CR_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   repthead.TR_NO as reptTrNo,
			pkg_common.flt_ports(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall ,
		   (SELECT MAST_CODE_DTL.CODE_DESC FROM MAST_CODE_DTL 
		   				WHERE 	MAST_CODE_DTL.CODE_TYPE	= 'WTH_CONDN' AND MAST_CODE_DTL.CODE  = flt.WTHR_COND) AS weatherCondition
	FROM FLT_OPR flt 
	LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON repthead.REP_MODULE = #reptType# AND flt.FLT_KEY = repthead.FLT_KEY AND flt.SCH_DATE = repthead.FLT_DATE, 	
	FLT_OPR_EVENTS fltevents	
	WHERE
		 TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate# AND
		 flt.FLT_TYPE = 'A'	AND
		 flt.TR_NO = fltevents.TR_NO 
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
	
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
		</dynamic> 
		Order by flt.SCH_DATE , flt.SCH_TIME
	</select>

	<!--  Changed for QR -->
	<select id="flight_report_getFlightListForDocument"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   TO_CHAR(fltevents.DOC_COMPL_DATE, 'DDMONYY HH24:MI') as bdComplDate,
		   flt.ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   DECODE(flt.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),3,4)) as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.LM_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.TR_NO as reptTrNo,
		   (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = flt.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,
			pkg_common.flt_route(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall
		FROM FLT_OPR flt 
		LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON
		 		 repthead.REP_MODULE = 'ID' AND	 flt.FLT_KEY = repthead.FLT_KEY AND flt.SCH_DATE = repthead.FLT_DATE, 
		FLT_OPR_EVENTS fltevents
		WHERE
			flt.FLT_TYPE = 'A'	AND
			flt.TR_NO = fltevents.TR_NO AND
			TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate#
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltKey">
				flt.FLT_KEY = #fltKey#
			</isNotEmpty>
			<isEmpty property="carrCode">
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>			
		</dynamic>
		Order by flt.SCH_DATE , flt.SCH_TIME
	</select>
	
	<insert id="flight_report_insertReportImage" parameterClass="cargo.cms.imprt.bo.ReportImageBO">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC_TMP 
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, CR_DATE)
		VALUES (#trNo#, (SELECT NVL(MAX(DOC_LINE_NO), 0) FROM IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE TR_NO = #trNo#)+1 , '',
		#docName#, #docImage#, SYSDATE)
	</insert>
	
	<select id="flight_report_getImageListReal"  parameterClass="cargo.cms.imprt.bo.ReportImageBO"  resultClass="cargo.cms.imprt.bo.ReportImageBO">
		SELECT
			  TR_NO as trNo,
			  DOC_LINE_NO as docLineNo,
			  DOC_NAME as docName,
			  LENGTH(DOC_IMAGE) as filesize
		FROM IMP_FLT_HAND_SUMMARY_DOC
		WHERE TR_NO = #trNo#
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="flight_report_getImageList"  parameterClass="cargo.cms.imprt.bo.ReportImageBO"  resultClass="cargo.cms.imprt.bo.ReportImageBO">
		SELECT
			  TR_NO as trNo,
			  DOC_LINE_NO as docLineNo,
			  DOC_NAME as docName,
			  LENGTH(DOC_IMAGE) as filesize
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #trNo#
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="flight_report_getDamageUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.String">
			SELECT ULD_KEY 
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND	FLT_KEY = #fltKey# AND
			DAM_IND = 'Y'
	</select>
	
	<select id="flight_report_getTotalUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.Integer">
			SELECT COUNT(ULD_KEY)
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND FLT_KEY = #fltKey#
	</select>
	
	<select id="flight_report_getTotalLoadedUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">
		select count(1)  count, ULD_Allot as uld
		from IMP_RAMP_CHK_DTL r
		join ULD_Group_Type gt on gt.ULD_TYPE = r.ULD_TYPE
		join MAST_ULD_ALLOT_GROUP ag on ag.ULD_GROUP = gt.ULD_GROUP
		where r.EMPTY_IND = 'N' AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') = #fltDate#
		group by ag.ULD_Allot
	</select>
	
	<!--  Changed for QR -->		
	<select id="flight_report_getNoOfLoadedUlds" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT, ',')) AS noOfLoadedUlds
    	from IMP_RAMP_CHK_DTL RAMPCHK
    	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
   		LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
   		LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
    	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
    	AND RAMPCHK.FLT_KEY = #fltKey# AND RAMPCHK.EMPTY_IND = 'N'
    	AND MULD.H_CONT_IND = 'N' AND DUMMY_H_CONT_IND = 'N' AND MULD.BT_IND = 'N' GROUP BY ALLOTGROUP_2.ULD_ALLOT
	</select>
	
	<!--  Changed for QR -->	
	<select id="flight_report_getNoOfBulkCargo" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT
		DECODE(count(1),0,'',count(1)||'BULK') AS anoOfBulkCargo
		from IMP_RAMP_CHK_DTL RAMPCHK
     	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
     	LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
     	LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
     	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
     	AND RAMPCHK.FLT_KEY = #fltKey#  
     	and (MULD.H_CONT_IND = 'Y'  OR DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y' )
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getNoOfEmptyUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT, ',')) AS noOfLoadedUlds
    	from IMP_RAMP_CHK_DTL RAMPCHK
    	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
   		LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
   		LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
    	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
    	AND RAMPCHK.FLT_KEY = #fltKey# AND RAMPCHK.EMPTY_IND = 'Y'
    	AND MULD.H_CONT_IND = 'N' AND DUMMY_H_CONT_IND = 'N' AND MULD.BT_IND = 'N' GROUP BY ALLOTGROUP_2.ULD_ALLOT
	</select>
	
	
	
	<select id="flight_report_getTotalEmptyUldReceived" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.UldAllotBO">
		select count(1)  count, ULD_Allot as uld
		from IMP_RAMP_CHK_DTL r
		join ULD_Group_Type gt on gt.ULD_TYPE = r.ULD_TYPE
		join MAST_ULD_ALLOT_GROUP ag on ag.ULD_GROUP = gt.ULD_GROUP
		where r.EMPTY_IND = 'Y' AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') = 
		#fltDate#
		group by ag.ULD_Allot
	</select>
	
	<parameterMap id="fltMapTimeStamp" class="map" >
		<parameter property="CODE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="TIMESTAMP1" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="imp_prc_time_stamp" parameterMap="fltMapTimeStamp" >
		{ call PRC_TIME_STAMP(?,?,?,?)}
	</procedure>
	
	<select id="imp_TimeStamp12"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		SELECT TIME_STAMP1 timeStampOne , TIME_STAMP2 timeStampTwo, STD_OPR stdOpr, STD  std
		FROM MAST_SVC_STD WHERE ITM_NAME = #param#
	</select>
	
	<select id="srvTime" parameterClass="map" resultClass="java.lang.Double">
		SELECT (TO_DATE(#timeTwo#,'DDMONYY HH24:MI:SS')  - TO_DATE(#timeOne#,'DDMONYY HH24:MI:SS'))*1440  FROM DUAL		
	</select>
	
	<select id="flight_report_gettrnoforflightreport" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT IMP_FLT_HAND_SEQ.NEXTVAL FROM DUAL
	</select>	
	
	<!--  Changed for QR
	<select id="flight_report_getBulkCargoUnitReceived" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.String">
		<![CDATA[
			select count(1)||' BT'  count
			from IMP_RAMP_CHK_DTL r
			where LENGTH(R.ULD_KEY) < 9 AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') 
			= #fltDate#
		]]>
	</select> -->
	
	<select id="get_flight_count" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO" resultClass="java.lang.String">
		select COUNT(1) from IMP_FLT_HAND_SUMMARY where  FLT_KEY = #fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND REP_MODULE = 'IR'
	</select>
 
	<insert id="flight_report_insertFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		INSERT INTO IMP_FLT_HAND_SUMMARY (
		   	TR_NO, REP_MODULE, CARR_CODE, 
		   	FLT_NO, FLT_DATE, FLT_KEY, FLT_ATA, 
		   	NO_OF_LOADED_ULDS, NO_OF_BULK_CARGO, NO_OF_EMPTY_ULD,
		   	IRR_ULD, IRR_ULD_RMK, SVC_STD_RMK,  
			CR_USER_ID, CR_DATE,  
			LM_USER_ID, LM_DATE,AWB_LOCAL,AWB_TRAN,AWB_MAIL,DAMAGEULD, TOTALULD, DAMAGEULDLIST, IMAGE) 
		VALUES (#trNo#, #repModule#, #carrCode#,
				#fltNo#, to_date(#fltDate#,'DDMONYY'), #fltKey#, #fltAta#,
				#noOfLoadedUlds#, #noOfBulkCargo#, #noOfEmptyUld#,
				#irrUld#, #irrUldRmk#, #svcStdRmk#, 
				#userID#, SYSDATE, 
				#userID#, SYSDATE,#awbLocal#,#awbTran#,#awbMail#,#damageUldSize#, #totalUld#, #damageUldList#, #transactionId#
		 )
	</insert>
	
	<insert id="flight_report_insertimpflthandperformance" parameterClass="cargo.cms.imprt.bo.PerformanceFRBO">
	INSERT INTO IMP_FLT_HAND_PERFORMANCE (
	   TR_NO, DOC_LINE_NO, PERF_NAME, 
	   REP_MODULE, FLT_NO, FLT_DATE, 
	   CARR_CODE, FLT_KEY, RMK) 
	VALUES ( #trNo#, #docLineNo#, #performanceName#,
	    #reptType#, #fltNo#, to_date(#fltDate#,'DDMONYY'),
	    #carrCode#, #fltKey#, #remarks#)
	</insert>
	
	<insert id="flight_report_insertimpflthandtimestamp" parameterClass="cargo.cms.imprt.bo.TimestampFRBO">
	INSERT INTO IMP_FLT_HAND_TIME_STAMP (
	   TR_NO, CARR_CODE, FLT_NO, 
	   FLT_DATE, FLT_KEY, TSTAMP_CODE, 
	   TSTAMP_DATE, TSTAMP_TIME, CR_USER_ID, 
	   CR_DATE, LM_USER_ID, LM_DATE,DOC_LINE_NO) 
	VALUES ( #trNo#, #carrCode#, #fltNo#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#, #itemCode#,
	    NVL(to_date(#actionedTime#,'DDMONYY HH24:MI:SS'),''), #actionedTimeHour#||#actionedTimeMinute#, #userID#,
	    SYSDATE, #userID#, SYSDATE,#docLineNo#)	
	</insert>	
	
	<insert id="flight_report_insertimpflthandsvcstd" parameterClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
	INSERT INTO IMP_FLT_HAND_SVC_STD (
	   TR_NO, DOC_LINE_NO, ITM_NAME, 
	   REP_MODULE, FLT_NO, FLT_DATE, 
	   CARR_CODE, FLT_KEY, SVC_TIME, 
	   STD_MET_YN) 
	VALUES ( #trNo#, #docLineNo#, #itemName#,
	    #reptType#, #fltNo#, to_date(#fltDate#,'DDMONYY'),
	    #carrCode#, #fltKey#, #serviceTime#, 
		#stdMet#
		)
	</insert>	
	
	<update id="flight_report_updateFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		UPDATE IMP_FLT_HAND_SUMMARY
		SET
			NO_OF_LOADED_ULDS = #noOfLoadedUlds#,
			NO_OF_BULK_CARGO = #noOfBulkCargo#,
			NO_OF_EMPTY_ULD = #noOfEmptyUld#,
			IRR_ULD = #irrUld#,
			IRR_ULD_RMK = #irrUldRmk#, 
			SVC_STD_RMK = #svcStdRmk#,
			LM_USER_ID = #userID#, 
			LM_DATE = sysdate,
			AWB_LOCAL = #awbLocal#,
			AWB_TRAN = #awbTran#,
			AWB_MAIL = #awbMail#,
			DAMAGEULD = #damageUldSize#, 
			TOTALULD = #totalUld#, 
			DAMAGEULDLIST = #damageUldList#,
			IMAGE = #transactionId#
		WHERE
			TR_NO = #trNo# AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') = #lmDate#
	</update>
	
	<delete id="flight_report_deleteReal" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="flight_report_deleteTemp" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE TR_NO = #randomTr#
	</delete>
	
	<insert id="flight_report_copyToReal" parameterClass="map">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE)
		SELECT #trNo# as TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #randomTr#
	</insert>
	
	<delete id="flight_report_deleteimpflthandperformance" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_PERFORMANCE WHERE TR_NO = #reptTrNo#
	</delete>
	
	<delete id="flight_report_deletesplhandshp" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_WH_SPL_INFO WHERE TR_NO = #reptTrNo#
	</delete>	
	<delete id="flight_report_deleteimpflthandtimestamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_TIME_STAMP WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteimpflthandsvcstd" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SVC_STD WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteimpflthanddocoffinfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_DOC_OFFINFO WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteLoadInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_LOAD_INFO WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteDocumentInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SUMMARY_DOC WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteDiscrepencyInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_DOC_DISC WHERE TR_NO = #reptTrNo#
	</delete>
	
	<delete id="flight_report_deleteimpflthandsummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SUMMARY WHERE TR_NO = #reptTrNo#
	</delete>		
	
	<select id="imp_getschdatetime"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		 SELECT TO_CHAR(SCH_DATE,'DDMONYY') schDate,ltrim(SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),3,4), ':') as schTime
	     from FLT_OPR
	     WHERE FLT_NO = #flightNo#
		 AND CARR_CODE   = upper(#carrierCode#)
	     AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
	     AND FLT_TYPE='A'
     </select>
<!-- ImportRampModule_HLD_IMP_RAMP_FltHandlingRpt [Query's Ended by Srinivas] -->


<!-- Amend Tow Order Starts Here [Ranjith] -->
<!--  Changed for QR -->
<select id="sqlTowDetails" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code=a.rho_id) rhoIdlist,
	(SELECT EMAIL1 FROM CUST_COMPANY WHERE code=a.rho_id) rhoEmail,
	c.TR_NO txnNo,
	a.to_no towOrderlist,
	a.ver_no verNo,
	a.flt_key fltKeylist,
	decode(a.ack_date,null,'XXX',(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'))) ackDate,
	Decode(a.ack_date,NULL,'N','Y') condCode,
	TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
	SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4) sta,
	<![CDATA[
	TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  		TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,

	]]>
	pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD') ata,
	c.ACFT_PRK_BAY bay,
	(select count(c.uld_key) from tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
	(select count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and c.awb_no is Not NUll) awbCount
	from tow_order_in a 
	join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE AND C.FLT_TYPE='A'
	join flt_opr_events e on c.flt_key=e.flt_key and c.SCH_DATE=e.SCH_DATE AND e.FLT_TYPE='A'
	<![CDATA[
  	where (e.RAMP_COMPL_YN is null or e.RAMP_COMPL_YN <>'Y')
  	]]>
	AND a.flt_date between to_Date(#arrDate#,'DDMONYY HH24MI') and to_Date(#arrDateTo#,'DDMONYY HH24MI')
	<isNotEmpty property="rhoId">
			AND a.rho_id = #rhoId#
	</isNotEmpty>
		<isNotEmpty property="carrCode">
			AND c.carr_code = #carrCode#
	</isNotEmpty>
		<isNotEmpty property="towOrder">
			AND a.to_no = #towOrder#
	</isNotEmpty>
	<isNotEmpty property="fltKey">
			AND a.flt_key = #fltKey#
	</isNotEmpty>
	<isEmpty property="fltKey">
		<isEmpty property="fltNo">
				<isNotEmpty property="fltCarr">
					AND c.carr_code = #fltCarr#
		</isNotEmpty>
	</isEmpty>
	<isEmpty property="fltCarr">
		<isNotEmpty property="fltNo">
			<![CDATA[
			 AND  c.flt_no = #fltNo#
			]]>
		</isNotEmpty>
	</isEmpty>
	</isEmpty>
	    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		            rhoIdlist
		           </isEmpty>
		 </dynamic>
	</select>

	<!--  Changed for QR -->
	<select id="sqlTowDetailsCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
	SELECT 	COUNT(1) as totalRowCount
	from tow_order_in a
	join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE AND C.FLT_TYPE='A'
	where a.flt_date between to_Date(#arrDate#,'DDMONYY HH24MI') and to_Date(#arrDateTo#,'DDMONYY HH24MI')
	<isNotEmpty property="rhoId">
			AND a.rho_id = #rhoId#
	</isNotEmpty>
	<isNotEmpty property="carrCode">
		AND c.carr_code = #carrCode#
	</isNotEmpty>
	<isNotEmpty property="towOrder">
		AND a.to_no = #towOrder#
	</isNotEmpty>
	<isNotEmpty property="fltKey">
		AND a.flt_key = #fltKey#
	</isNotEmpty>
	<isEmpty property="fltKey">
		<isEmpty property="fltNo">
			<isNotEmpty property="fltCarr">
				AND c.carr_code = #fltCarr#
			</isNotEmpty>
		</isEmpty>
		<isEmpty property="fltCarr">
			<isNotEmpty property="fltNo">
				<![CDATA[
					AND c.flt_no = #fltNo#
				]]>
			</isNotEmpty>
		</isEmpty>
	</isEmpty>
	
	</select>
	
	<select id="sqlTowDtlList" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	select b.ULD_KEY towUld,
	b.ULD_KEY oldtowUld,
	SUBSTR(b.AWB_NO,1,3)  awbNoPrefix , 
	SUBSTR(b.AWB_NO,4)  awbNoSuffix ,
	b.AWB_NO towAwb,
	b.AWB_NO oldtowAwb,
	b.HO_AREA hoArea,
	b.HO_AREA oldHO,
	b.trf_type tfType,
	a.to_no towOrderlist,
	TRIM((b.CNTG_FLT_KEY)||'/'||to_char(b.CNTG_FLT_DATE,'DDMONYY')) cntgFlt,
	PKG_COMMON.GET_FLT_STA(b.CNTG_FLT_KEY,to_char(b.CNTG_FLT_DATE,'DDMONYY'),'D','HH24:MI') std,
	Decode(D.CHKIN_YN,NULL,'N',D.CHKIN_YN) chkYN,
    FFM.PCS || NVL2(FFM.PCS, '/', '') || DECODE(SUBSTR(FFM.WT, 0, 1), '.', '0' || FFM.WT, FFM.WT)  pcs,
	a.to_no towOrderlist
	from tow_order_in a
	join tow_order_in_dtl b on a.to_no=b.to_no
	left join imp_ramp_chk_dtl d on d.ULD_KEY=b.ULD_KEY and d.FLT_KEY=a.FLT_KEY and d.FLT_DATE=a.FLT_DATE
	left join IMP_CAR_SHP car ON b.AWB_NO = car.AWB_NO AND a.FLT_KEY=car.FLT_KEY AND a.FLT_DATE=car.FLT_DATE
	LEFT OUTER JOIN
	(
		SELECT SUM(SHP.MAN_PCS) PCS, SUM(SHP.MAN_WT) WT, SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
		FROM EDI_FFM_MSG FFM
		JOIN EDI_FFM_ULD ULD
		ON FFM.TR_NO = ULD.TR_NO
		JOIN EDI_FFM_SHP SHP
		ON ULD.TR_NO = SHP.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		WHERE
		FFM.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
		GROUP BY SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
	) FFM
	ON CAR.AWB_NO = FFM.AWB_NO AND CAR.FLT_KEY = FFM.FLT_KEY AND CAR.FLT_DATE = FFM.FLT_DATE    
	where a.to_no=#towOrderlist#
	order by chkYN
	</select>
	<select id="sqlHalfSize" parameterClass="java.lang.String" resultClass="java.lang.String">
		select mug.PLT_CNT_SIZE from mast_uld_group mug
		join uld_group_type ugt ON ugt.uld_group= mug.uld_group
	 	where ugt.uld_type=substr(#towUld#,0,3)
	</select>
	<delete id="sqlDeleteTowOrderUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN_DTL WHERE TO_NO = #towOrderlist#  AND 
		<isNotEmpty property="towUld">
		ULD_KEY = #towUld#
		</isNotEmpty>
		<isNotEmpty property="towAwb">
		AWB_NO = #towAwb#
		</isNotEmpty>
	</delete>
	
	<delete id="sqlDeleteTowOrderDtl" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN_DTL WHERE TO_NO = #towOrderlist# 
		</delete>
	
	<delete id="sqlDeleteTowOrder" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN WHERE TO_NO = #towOrderlist# 
	</delete>
	<update id="sqlUpdateHOArea" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	 UPDATE TOW_ORDER_IN_DTL 	
			SET HO_AREA=#hoArea#,
			LM_DATE= sysdate,
			LM_USER_ID=	#userId#,
			TR_TYPE = #trtype#			
	 WHERE	TO_NO = #towOrderlist#   AND (ULD_KEY = #towUld#  OR AWB_NO=#towAwb#)
	</update>
	
	<update id="updateREJULDLocation" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		UPDATE IMP_RAMP_DOLLY_DTL SET REJECT_IND='Y',
		 REJECT_RMK = #rejectRmk#,
			REJECT_DATE = SYSDATE,
			dam_ind = nvl(#damInd#,'N')
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="flightKey">
		AND FLT_KEY = #flightKey# 
		</isNotEmpty>
		<isNotEmpty property="flightDate">
		AND FLT_DATE = #flightDate# 
		</isNotEmpty>
		AND ULD_KEY = #uldKey#
	</update>
	
	<update id="sqlUpdateTowVersion" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		<![CDATA[
	 UPDATE TOW_ORDER_IN
			SET VER_NO=(VER_NO+1), 
			LM_DATE = SYSDATE,
			LM_USER_ID=	#userId#			
	 WHERE	TO_NO = #towOrderlist#  
	 ]]>
	</update>
	
	<select id="getShcForTowUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO"  resultClass="java.lang.String">
	 SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS FROM V_IMP_FLT_ULD_SHC
		WHERE ULD_KEY = #towUld# AND FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND ROWNUM &lt;= 3    
	</select>
	
	<select id="getShcForTowAwb" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO"  resultClass="java.lang.String">
	SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
          from (select distinct SHC FROM V_IMP_FLT_ULD_SHC
	      WHERE awb_no = #towedAwb# AND FLT_KEY = #fltKey#  AND FLT_DATE = #fltDate#)
                where ROWNUM &lt;= 3   
	</select>
	
	<insert id="sqlinsertTowOrdrUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
			Insert into TOW_ORDER_IN_DTL 
			(TO_NO,
			ULD_KEY,
			AWB_NO,
			HO_AREA,
			TRNS_GRP,
			SHCS,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			TR_TYPE
			) 
			values (#towOrderlist#,
					#towUld#,
					#towedAwb#,
					#hoArea#,
					#transferGrp#,
					#amendShcs#,
					#userId#,
					SYSDATE,
					#userId#,
					SYSDATE,
					#trtype#)
	</insert>
	
	<select id="validateTowOrder"	parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from TOW_ORDER_IN where TO_NO=#towOrder#
	</select>
	<select id="sqlValidHoArea"	parameterClass="java.lang.String" resultClass="java.lang.String">
	select count(1) from MAST_WH_AREA where WH_AREA=#hoArea#
	</select>
	<select id="sqlCheckExtUld"	parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY where ULD_KEY=#uld# AND LOC_CODE is not null
	</select>
	<select id="sqlChkinYN"	parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from IMP_RAMP_CHK_DTL where ULD_KEY=#uld# and  FLT_KEY=#flt#  and FLT_DATE=#fltDate# and CHKIN_YN='Y'
	</select>
	
	<!-- Changed for QR -->
	<select id="selectCntgFlt"	parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.String">
		select (u.CNTG_FLT_KEY)||'/'||to_char(u.cntg_flt_date,'DDMONYY') 
		from ddt_msg m 
		join ddt_uld u on m.tr_no = u.tr_no  
		where m.flt_key = #sfltKey# and m.flt_date = #sfltDate# and u.uld_key=#towUld# and m.ddt_status='P' 
	</select>

	<select id="sqlGetRHOId" parameterClass="map" resultClass="java.lang.String">
		select rho_id from flt_opr where flt_key = #FLT_KEY# and sch_date = TO_DATE(#FLT_DATE#,'DDMONYY') and flt_type = #FLT_TYPE#
	</select>
	
	<select id="sqlSTACutOffTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code=#PARAM#
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlExistingTowUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.String">
	select count(1) from TOW_ORDER_IN_DTL where uld_key=#towUld#  and TO_NO =#towOrderlist#
	</select>
	
	<select id="sqlCheckConcurrencyForTowOrder" parameterClass="java.lang.String" resultClass="java.lang.String">
	        	select nvl((Select VER_NO from TOW_ORDER_IN where TO_NO = #towOrderlist#),'0') from  dual
	</select>
	
	<select id="fetchCountTow" parameterClass="java.lang.String" resultClass="java.lang.String">
			select count(awb_no)||'-'||count(uld_key) from tow_order_in_dtl where to_no=#towOrderlist#
	</select>
	<!-- Amend Tow Order ENDS Here [Ranjith] -->
	
	<!--
	==============================================================================================
		START OF START PREPARATION QUERIES
	==============================================================================================
	-->
	<select id="checkEdiFFMMsgRecordExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE CARR_CODE = #fltCarr# AND FLT_NO = #fltNo# AND FLT_DATE = #fltDate#
	</select>
	<select id="fetchFlightDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
		OPR.TR_NO AS flighTxnNo,
    	OPR.ORIG AS flightOrigin,
		OPR.FLT_KEY AS flightKey, TO_CHAR(OPR.SCH_DATE, 'DDMONYY') AS flightDate, 
		NVL(pkg_common.get_flt_ata(OPR.FLT_KEY ,OPR.SCH_DATE,'A'),(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2) || ':' || 
		SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4))) AS flightSchTime
		FROM
		FLT_OPR OPR
		WHERE	
		OPR.FLT_TYPE = 'A' AND 
		OPR.CARR_CODE = #fltCarr# AND
		OPR.FLT_NO = #fltNo# AND
		OPR.SCH_DATE = #fltDate#
	</select>
	<select id="fetchFFMDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
			DISTINCT 
			PREP.FLT_KEY AS flightKey, 
	    	TO_CHAR(PREP.FLT_DATE, 'DDMONYY') AS flightDate,
			TO_CHAR(FFM_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate,
			FFM_FRZ_USER_ID AS freezeUserId,
			  (SELECT COUNT(MSG_TYPE) FROM 
			    MESSAGE_LOG WHERE MSG_TYPE = 'FFM' 
			    AND FLT_KEY = PREP.FLT_KEY AND
			    FLT_DATE = PREP.FLT_DATE AND MSG_STATUS = 'P') AS messagesInQueue,
			TO_CHAR(PREP.LM_DATE, 'ddMMYY HH24:MI:SS') as lastModifiedDate
		FROM
			START_PREP PREP
		WHERE		
			PREP.FLT_KEY =  #fltCarr# || #fltNo# AND
			PREP.FLT_DATE = #fltDate# AND
			PREP.MSG_TYPE = 'FFM'		 
	</select>
	<select id="fetchCPMDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
			DISTINCT 
			PREP.FLT_KEY AS flightKey, 
	    	TO_CHAR(PREP.FLT_DATE, 'DDMONYY') AS flightDate,
			TO_CHAR(CPM_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate,
			CPM_FRZ_USER_ID AS freezeUserId,
			  (SELECT COUNT(MSG_TYPE) FROM 
			    MESSAGE_LOG WHERE MSG_TYPE = 'CPM' 
			     AND FLT_KEY = PREP.FLT_KEY AND
			    FLT_DATE = PREP.FLT_DATE AND MSG_STATUS = 'P') AS messagesInQueue,
			TO_CHAR(PREP.LM_DATE, 'ddMMYY HH24:MI:SS') as lastModifiedDate
		FROM
			START_PREP PREP
		WHERE		
			PREP.FLT_KEY =  #fltCarr# || #fltNo# AND
			PREP.FLT_DATE = #fltDate# AND
			PREP.MSG_TYPE = 'CPM'				
	</select>
	<select id="fetchFWBDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate ,COUNT(MESSAGE_LOG.AWB_NO) AS messagesInQueue FROM(
			SELECT
				(SUBSTR(SHP.AWB_NO, 1, 3) || '-' || SUBSTR(SHP.AWB_NO, 4)) AS displayAwbNo,
				TO_CHAR(SHP.AWB_DATE,'DDMONYY') as awbDate,
				SHP.AWB_NO                       AS awbNo       ,  
	 			TO_CHAR(FWB_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate  ,
	 			FWB_FRZ_USER_ID                  AS freezeUserId, 			
	 			TO_CHAR(DTL.LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate
	      FROM EDI_FFM_MSG MSG INNER JOIN EDI_FFM_SHP SHP	ON MSG.TR_NO = SHP.TR_NO AND MSG.FFM_STATUS = 'P'
	      LEFT OUTER JOIN START_PREP_DTL DTL ON SHP.AWB_NO    = DTL.AWB_NO AND DTL.MSG_TYPE= 'FWB'		      
			WHERE			
				MSG.CARR_CODE = #fltCarr# AND
				MSG.FLT_NO =  #fltNo# AND
				MSG.FLT_DATE = #fltDate#
			GROUP BY SHP.AWB_NO,SHP.AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,DTL.LM_DATE) A
	    LEFT OUTER JOIN MESSAGE_LOG ON MESSAGE_LOG.AWB_NO = A.awbNo AND MESSAGE_LOG.MSG_TYPE = 'FWB' AND MESSAGE_LOG.MSG_STATUS = 'P'
	    GROUP BY A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate
    	ORDER BY A.displayAwbNo
	</select>
	<select id="fetchFHLDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		 SELECT A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate ,COUNT(MESSAGE_LOG.AWB_NO) AS messagesInQueue FROM(
			SELECT
				(SUBSTR(SHP.AWB_NO, 1, 3) || '-' || SUBSTR(SHP.AWB_NO, 4)) AS displayAwbNo,
				TO_CHAR(SHP.AWB_DATE,'DDMONYY') as awbDate,
				SHP.AWB_NO                       AS awbNo       ,  
	 			TO_CHAR(FHL_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate  ,
	 			FHL_FRZ_USER_ID                  AS freezeUserId, 			
	 			TO_CHAR(DTL.LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate
	      FROM EDI_FFM_MSG MSG INNER JOIN EDI_FFM_SHP SHP	ON MSG.TR_NO = SHP.TR_NO AND MSG.FFM_STATUS = 'P'
	      LEFT OUTER JOIN START_PREP_DTL DTL ON SHP.AWB_NO    = DTL.AWB_NO AND DTL.MSG_TYPE= 'FHL'		      
			WHERE			
			MSG.CARR_CODE = #fltCarr# AND
			MSG.FLT_NO =  #fltNo# AND
			MSG.FLT_DATE = #fltDate# 
			GROUP BY SHP.AWB_NO,SHP.AWB_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,DTL.LM_DATE) A
	    LEFT OUTER JOIN MESSAGE_LOG ON MESSAGE_LOG.AWB_NO = A.awbNo AND MESSAGE_LOG.MSG_TYPE = 'FHL' AND MESSAGE_LOG.MSG_STATUS = 'P'
	    GROUP BY A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate
    	ORDER BY A.displayAwbNo
	</select>
	<insert id="insertFFMStartPrepHeader" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(
		FLT_KEY,FLT_DATE,FFM_FRZ_DATE,FFM_FRZ_USER_ID,CPM_FRZ_DATE,CPM_FRZ_USER_ID,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,FFM_FRZ_IND,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,null,
		null,#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FFM','Y','FFMFR')
	</insert>
	<insert id="insertCPMStartPrepHeader" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(
		FLT_KEY,FLT_DATE,FFM_FRZ_DATE,FFM_FRZ_USER_ID,CPM_FRZ_DATE,CPM_FRZ_USER_ID,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE, CPM_FRZ_IND,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),null,
		null,SYSDATE,#freezeUserId#,#freezeUserId#,
		SYSDATE,#freezeUserId#,SYSDATE, 'CPM','Y','CPMFR')
	</insert>
	<insert id="insertFHLStartPrepDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP_DTL(
		AWB_NO,AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FHL_FRZ_DATE,
		FHL_FRZ_USER_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,AUTO_FRZ_YN)
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),null,
		null,SYSDATE,#freezeUserId#,#freezeUserId#,
		SYSDATE,#freezeUserId#,SYSDATE, 'FHL',#autoFrzMan#)
	</insert>
	<insert id="insertFWBStartPrepDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP_DTL(
		AWB_NO,AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FHL_FRZ_DATE,
		FHL_FRZ_USER_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE)
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),SYSDATE,#freezeUserId#,null,
		null,#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FWB')
	</insert>
	<update id="updateFFMFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FFM_FRZ_DATE = SYSDATE, FFM_FRZ_USER_ID = #freezeUserId#, FFM_FRZ_IND = 'Y',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FFMFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FFM'
	</update>
	<update id="updateCPMFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET CPM_FRZ_DATE = SYSDATE, CPM_FRZ_USER_ID = #freezeUserId#, CPM_FRZ_IND = 'Y',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='CPMFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'CPM'
	</update>
	<update id="updateFWBFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FWB_FRZ_DATE = SYSDATE, FWB_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FWB'
	</update>
	<update id="updateFHLFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FHL_FRZ_DATE = SYSDATE, FHL_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FHL'
	</update>
	<update id="updateFFMUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FFM_FRZ_DATE = null, FFM_FRZ_USER_ID = null, FFM_FRZ_IND = 'N',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FFMUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FFM'
	</update>
	<update id="updateCPMUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET CPM_FRZ_DATE = null, CPM_FRZ_USER_ID = null,CPM_FRZ_IND = 'N',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='CPMUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'CPM'
	</update>
	<update id="updateFWBUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FWB_FRZ_DATE = null, FWB_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FWB'
	</update>
	<update id="updateFHLUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FHL_FRZ_DATE = null, FHL_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,AUTO_FRZ_YN=DECODE(AUTO_FRZ_YN,NULL,NULL,'Y','N',AUTO_FRZ_YN)
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FHL'
	</update>
	<select id="headerExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate FROM START_PREP WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND MSG_TYPE = #messageType#
	</select>
	<select id="detailsExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND MSG_TYPE = #messageType#
	</select>  	
   	<select id="getSecChkUnldgPt"  parameterClass="map"  resultClass="java.lang.String" >
			 select LDG_POINT from imp_car_shp where flt_key=#IMP_FLT_KEY# and flt_date=#IMP_FLT_DATE# and awb_no=#AWB_NO# and awb_date=#AWB_DATE# AND ROWNUM = 1
   	</select>
   	<!--  Changed for QR -->
	<select id="fetchFHLAWBData" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT DISTINCT SHP.AWB_NO AS awbNo,PKG_COMMON.GET_AWB_DATE(SHP.AWB_NO,'') AS awbDate 
		FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.ffm_status = 'P' and FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND OPR.flt_type = 'A' AND
		SYSDATE >  (TO_DATE(TO_CHAR(SCH_DATE,'DDMONYY')||LPAD(SCH_TIME,4,0),'DDMONYYHH24MI') - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FHL_FREEZE_HRS')/24)
    	AND FFM.FLT_KEY = #fltCarr# || #fltNo# AND FFM.FLT_DATE = #fltDate#
	</select>
	<select id="fetchSecFFMAWBData" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT SHP.AWB_NO AS awbNo,PKG_COMMON.GET_AWB_DATE(SHP.AWB_NO,'') AS awbDate, SHP.DEST  AS dest,SUM(SHP.MAN_PCS) AS pcs,SUM(SHP.MAN_WT) AS wt,SHP.BRD_POINT AS ldgPt,shp.org as orig 
		FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.ffm_status = 'P' and FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE 
    AND OPR.flt_type = 'A' AND FFM.FLT_KEY = #flightKey# AND FFM.FLT_DATE = #flightDate# GROUP BY SHP.AWB_NO,SHP.AWB_DATE,SHP.DEST,SHP.BRD_POINT,SHP.ORG
	</select>
	<insert id="insFltFWBFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(FLT_KEY,FLT_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FWB_FRZ_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,'Y',#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FWB','FWBFR')
	</insert>	
	<insert id="insFltFHLFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(FLT_KEY,FLT_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,FHL_FRZ_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,'Y',#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FHL','FHLFR')
	</insert>
	<update id="updFltFWBFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FWB_FRZ_IND = 'Y', FWB_FRZ_DATE = sysdate, FWB_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FWBFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FWB'
	</update>
	<update id="updFltFHLFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FHL_FRZ_IND = 'Y', FHL_FRZ_DATE = sysdate, FHL_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FHLFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FHL'
	</update>
	<update id="updFltFWBUnFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FWB_FRZ_IND = 'N', FWB_FRZ_DATE = null, FWB_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FWBUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FWB'
	</update>
	<update id="updFltFHLUnFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FHL_FRZ_IND = 'N', FHL_FRZ_DATE = null, FHL_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FHLUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FHL'
	</update>
	<!--
	==============================================================================================
		END OF START PREPARATION QUERIES
	==============================================================================================
	-->	
	
	
		<!--Queries for Create Inbound OBC CAR   -->

<select id="imp_xom_getMailTagForCreateOBC" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	FLT_DATE as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 
			ACT_PCS as pcs, 
			ACT_WT as wt,
			ORIG as orig, 
			DEST as dest, 
			LOCN as locn, 
			ULD_KEY as uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') as lmDate,
			BD_ULD_KEY as bdULDKey
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '')
			
	</select>
	
	<select id="imp_get_ata_from_flight"  parameterClass="map"  
		resultClass="java.lang.String">		  			
			SELECT	PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#schDate#,'DDMONYY'), 'A', 'DD') AS ATA
		 FROM
		 	FLT_OPR
		 WHERE  		
			FLT_KEY = #fltKey# AND		
			FLT_TYPE = 'A' AND
			SCH_DATE = TO_DATE(#schDate#,'DDMONYY')
	</select>
	
	<select id="imp_xom_getAWBPrefixFromCarrCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT CODE
		FROM MAST_AWB_PREFIX
		WHERE 
			CARR_CODE = #carrCode# 		AND 
			DEF_YN = 'Y' 			 	AND 
			ROWNUM = 1
	</select>
	
	<select id="imp_xom_validateAWBPrefix"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0)
		FROM MAST_AWB_PREFIX
		WHERE CODE = #awbPre#
   	</select>
   	
   	<select id="imp_xom_checkAgentCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y' AND 
			CODE_DESC = #agentDesc#
	</select>
	
	<select id="imp_xom_checkConsigneeCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE 
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE_DESC = #desc#
	</select>
	

	<select id="imp_lspNoValidation"  parameterClass="map" resultClass="java.lang.Integer">
  		select count(1) 
  		from (select awb_no, awb_date from awb_inventory 
  		where lsp_no = #lspNo# and locn_Pcs > 0
		and not (awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY'))
		group by awb_no, awb_date) a 
	</select>
	
	
	<select id="checkLSPNormalSHPExists"  parameterClass="map" resultClass="java.lang.Integer">
   	select count(1) 
	from (select awb_no, awb_date from awb_inventory 
	where lsp_no = #lspNo# and locn_Pcs > 0
	and not (awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY'))) a 
	JOIN IMP_CAR_AWB car on a.awb_no=car.awb_no and a.awb_date = car.awb_date and car.awb_dest='HKG'
	</select>
	
	<select id="imp_xom_getAWB_Count" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(count(1),0) from  IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = #catalog# AND
			TAG_NO = #tagNo# and
			AWB_NO is not null
	</select>
	
	<update id="imp_xom_updateAWBForCreateOBC" parameterClass="map">
		UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = #awbNo#,
			AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'),
			AWB_ORIG = #awbOrig#,
			AWB_DEST = #awbDest#,
			LM_DATE = SYSDATE,
			APPNTD_AGENT = #appntdAgent#,
			ECT_HANDLER = #ectHandler#,
			CNS_CUST_NO = #cnsCustNo#,
			CSGNE_NAME = #cnsCustDesc#,
			LM_USER_ID = #lmUserId#
			WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	</update>
	
	<!--  Changed for QR
	<update id="imp_xom_updateImpCarAWBForCreateOBC" parameterClass="cargo.cms.imprt.bo.TransitMailSearchBO">
		UPDATE IMP_CAR_AWB	SET
		SPL_CODE1 = #splCode1#, 
		SPL_CODE2 = #splCode2#, 
		SPL_CODE3 = #splCode3#, 
		SPL_CODE4 = #splCode4#, 
		SPL_CODE5 = #splCode5#, 
		SPL_CODE6 = #splCode6#, 
		SPL_CODE7 = #splCode7#, 
		SPL_CODE8 = #splCode8#,
		SPL_CODE9 = #splCode9# 
		WHERE
			AWB_NO = #awbNo#
	</update> -->
	
	<select id="imp_xom_getAWBInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(count(1),0) from  AWB_INVENTORY	
		WHERE
			AWB_NO = #awbNo# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltkey#
	</select>
	
	
	<select id="imp_xom_getAWB_Data" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			TO_CHAR(AWB_DATE, 'DDMONYY') 			
		FROM 
			IMP_CAR_SHP
		WHERE 
			AWB_NO = #awbNo# AND
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<!--  Changed for QR
	<select id="imp_xom_getAWBInventory_Data" parameterClass="map" resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select 
		LOCN_PCS as totalPcs,    
		LOCN_WT as totalWt
		from  AWB_INVENTORY	
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</select> -->
	
	<!--  Changed for QR -->
	<select id="imp_xom_getAWBDtl_ImpCarAwb" parameterClass="map" resultClass="cargo.cms.imprt.bo.TransitMailSearchBO">
		SELECT A.CSGNE_NAME AS CSGN,
        A.APPNTD_AGENT AS APPNTDAGENT,
       A.SHPR_NAME AS SHIPPER,
       A.OBC_TYPE AS OBCTYPE,
       A.ECT_HANDLER AS ECTHANDLER,
       A.SPL_CODE1 AS SPLCODE1,
       A.SPL_CODE2 AS SPLCODE2,
       A.SPL_CODE3 AS SPLCODE3,
       A.SPL_CODE4 AS SPLCODE4,
       A.SPL_CODE5 AS SPLCODE5,
       A.SPL_CODE6 AS SPLCODE6,
       A.SPL_CODE7 AS SPLCODE7,
       A.SPL_CODE8 AS SPLCODE8,
       A.SPL_CODE9 AS SPLCODE9,
       nvl((SELECT car_created FROM IMP_CAR_SHP	
       						WHERE AWB_NO = #awbNo# AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') ),'N') AS carCreated 
       FROM IMP_CAR_AWB A
       WHERE A.AWB_NO=#awbNo# and TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</select>
	
	<insert id="imp_xom_addAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO AWB_INVENTORY
			(SEQ_NO, AWB_NO,AWB_DATE,CARR_CODE, 
			LOC_CODE,LOCN_PCS,LOCN_WT,STRG_DATE,
			BULK_WT,BUP_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,
			FLT_DATE,FLT_TYPE,FLT_KEY,CATALOG,
			LSP_NO,STRG_RMK,DAM_IND,FLT_NO,ULD_KEY) 
		VALUES 
			(AWB_INV_SEQ.NEXTVAL,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,
			#locn#,#totalPcs#,#totalWt#,SYSDATE,
			#totalWt#,'0',#crUserId#,SYSDATE,#lmUserId#,SYSDATE,
			#fltDate#,'I',#fltKey#,#catalog#,
			#lspNo#,#rmk#,#damInd#,#fltNo#,#uldKey#)	
 	</insert>
 	
 	<insert id="imp_xom_addAWBToAwb" parameterClass="map">
	INSERT INTO AWB
			(AWB_NO,AWB_DATE, AWB_TYPE,CAR_YN,MANIFEST_PCS,MANIFEST_WT,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CATALOG,
			CARR_CODE,ORIG,DEST,AGENT_CODE,SHIPPER_NAME,AGENT_NAME,AWB_RMK,
			SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,TR_TYPE,PCS,WT) 
		VALUES 
			( #awbNo#, TO_DATE(#awbDate#,'DDMONYY'),'I','Y',#totalPcs#,#totalWt#,
			#crUserId#,SYSDATE,#lmUserId#, SYSDATE,#catalog#,
			#carrcode#,#orgn#,#dest#,#agentcode#,#shipperName#,#agentName#,#awbrmk#,
			#spl1#,#spl2#,#spl3#,#spl4#,#spl5#,#spl6#,#spl7#,#spl8#,#spl9#,#trType#,#totalPcs#,#totalWt#)	
 	</insert>
 	
 	<insert id="imp_xom_addAWBToImpCarAwb" parameterClass="map">
	INSERT INTO IMP_CAR_AWB
			(AWB_NO,AWB_DATE, AWB_PRFX,AWB_PCS,AWB_WT,
			BULK_PCS,BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CSGNE_NAME,APPNTD_AGENT,
			OBC_TYPE,ECT_HANDLER,SHPR_NAME,AWB_ORIGIN,AWB_DEST,CATALOG,
			AWB_RMK,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,AGENT_CUST_NO,CNS_CUST_NO,TR_TYPE,PPK_TYPE) 
		VALUES 
			( #awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrfx#,#totalPcs#,#totalWt#,
			#totalPcs#,#totalWt#,#crUserId#, SYSDATE,#lmUserId#, SYSDATE,#csgnName#,#agentName#,
			#obcType#,#ect#,#shipperName#,#orgn#,#dest#,#catalog#,
			#awbrmk#,#spl1#,#spl2#,#spl3#,#spl4#,#spl5#,#spl6#,#spl7#,#spl8#,#spl9#,#agentcode#,#csgnCode#,#TR_TYPE#,'B')	
 	</insert>
 	
 	<!--  Changed for QR -->
 	<insert id="imp_xom_addAWBToImpCarShp" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		INSERT INTO IMP_CAR_SHP
			(AWB_NO,AWB_DATE,FLT_DATE,FLT_KEY,FLT_TYPE,
			AWB_PRFX,CARR_CODE,MANIFEST_PCS,MANIFEST_WT,BULK_PCS,BULK_WT,
			TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LDG_POINT,CAR_CREATED,AGENT_ID,RECD_PCS,RECD_WT,PPK_TYPE) 
		VALUES 
			( #awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#fltDate#,#fltKey#,'I',
			 #awbPre#,#carrCode#,#totalPcs#,#totalWt#,#totalPcs#,
			 #totalWt#,'E',#crUserId#, SYSDATE,#lmUserId#, SYSDATE,#awbOrig#,'Y',#appntdAgent#,#totalPcs#,#totalWt#,'B')
 	</insert>
 	<insert id="imp_xom_insertAWBEvents" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			  CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#, TO_DATE(#awbDate#,'DDMONYY') ,  #fltKey#, 
			   TO_DATE(#fltDate#,'DDMONYY'), 'I', AWB_event_SEQ.nextval,
			    #bdULDKey#, nvl(#pcs#,0),nvl(#wt#,0) ,
			   #crUserId#,  SYSDATE, #lmUserId#,  SYSDATE)
		]]>
	</insert>
	
	<update id="imp_xom_updateAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB_INVENTORY SET
		LM_DATE = SYSDATE,
		LOCN_PCS = #totalPcs#, 
		LOCN_WT = #totalWt#,
		LM_USER_ID = #lmUserId#
		WHERE SEQ_NO = #seqNo# 
		
	</update>
	
	<update id="imp_xom_updateAWBToAwb" parameterClass="map">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS+#totalPcs#, 
		MANIFEST_WT = MANIFEST_WT+#totalWt# ,
		PCS = PCS+#totalPcs#, 
		WT = WT+#totalWt# ,
		TR_TYPE=#trType#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<update id="imp_xom_updateAWBToImpCarAwb" parameterClass="map">
		UPDATE IMP_CAR_AWB SET
		LM_DATE = SYSDATE,
		AWB_PCS = AWB_PCS+#totalPcs#, 
		AWB_WT = AWB_WT+#totalWt# ,
		BULK_PCS =  BULK_PCS+#totalPcs#,
		BULK_WT = BULK_WT+#totalWt#,
		LM_USER_ID = #lmUserId#,
		TR_TYPE = #TR_TYPE#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="imp_xom_updateAWBToImpCarShp" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_CAR_SHP SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS+#totalPcs#, 
		MANIFEST_WT = MANIFEST_WT+#totalWt# ,
		BULK_PCS =  BULK_PCS+#totalPcs#,
		BULK_WT = BULK_WT+#totalWt#,
		RECD_PCS =  RECD_PCS+#totalPcs#,
		RECD_WT = RECD_WT+#totalWt#,
	<!--  AGENT_ID = #appntdAgent#,-->
		LM_USER_ID = #lmUserId# 
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE,'DDMONYY' = TO_DATE(#awbDate#,'DDMONYY')
		AND FLT_KEY = #fltKey#
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	
	<select id="fetchShipperForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as shipperName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and ACTIVE = 'Y' AND SHPR_YN = 'Y'  ORDER BY code_desc     
	</select>
	
	<!-- Queries for Create Inbound OBC CAR Ends -->

	<!--
	==============================================================================================
		START OF MAINTAIN INBOUND OBC TAG
	==============================================================================================
	-->	
	
	<update id="imp_xom_updateOBCTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 				
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #actPcs#, 
			ACT_WT  = #actWt#,          
            EST_PCS= #estPcs#, 
            EST_WT= #estWt#,    
			LOCN = #locn#,	
			TARE_WT	= #tareWt#,	
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND 
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#
	</update>
	
	
	<update id="imp_xom_updateOBCTagRmk" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 		
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#
	</update>
	
	<update id="imp_xom_updateTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #actPcs#, 
			ACT_WT  = #actWt#,          
            EST_PCS= #estPcs#, 
            EST_WT= #estWt#,    
			LOCN = #locn#,
			TARE_WT = #tareWt#,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
	<insert id="imp_xom_addTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO,
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
           EST_PCS, EST_WT,               
		   LOCN, ULD_KEY, 
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'TM', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),
		    UPPER(#tagNo#), UPPER(#lspNo#),
		    UPPER(#orig#), UPPER(#dest#),#tareWt#,
		    #actPcs#,#actWt#,
		    #estPcs#,#estWt#,		    
		    UPPER(#locn#), UPPER(#uldKey#),
		    #damInd#, UPPER(#rmk#), #crUserId#,
		    sysdate, #crUserId#, sysdate 
		)
	</insert>
	
	<insert id="imp_xom_addOBCTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO, 
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
           EST_PCS, EST_WT,             	   
		   LOCN, ULD_KEY, ECT_HANDLER,
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'IO', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),
		    UPPER(#tagNo#), UPPER(#lspNo#), 
		    UPPER(#orig#), 'HKG', #tareWt#,
		    #actPcs#,#actWt#,
		    #estPcs#,#estWt#,
			UPPER(#locn#), UPPER(#uldKey#),'CPCT',
		    #damInd#, UPPER(#rmk#), #crUserId#,
		    sysdate, #crUserId#, sysdate 
		)
	</insert>
	
	<select id="getOBCMailFlightDetailsUldInv" parameterClass="cargo.cms.imprt.bo.ImpXomBO" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
				select					
				CARR_CODE 										   As carrCode,
				FLT_NO 											   AS fltNo,
			    FLT_KEY                                            AS fltKey,
			    TO_CHAR(FLT_DATE,'DDMONYY')                        AS fltDate,
			    ULD_KEY                                            AS listFormULD,
			    ULD_KEY                                            AS searchFormULD			   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locn# AND ULD_KEY=#searchFormULD#		
</select>
	
	<!--  Changed for QR -->
	<insert id="insertAWBStrgDtl_fromOBCMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		 INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	  		  
		   ULD_KEY, 	
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   LSP_NO, 	DAM_IND, 				
		   TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, 	LM_DATE, FLT_TYPE, MINI_SHP, BUP_WT, BULK_WT,
			RMK, TAG_NO, INSRT_FROM_IND, CHKIN_ULD_KEY,ULD_NO,ULD_CARR,ULD_TYPE) 
		VALUES (#trNo#, '1', nvl(#carrCode#,#uldCarr#),
		    TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 	    
		    #uldKey#, 
		    #locn#, NVL(#estPcs#,#actPcs#), NVL(#estWt#,#actWt#),
		    #lspNo#, #damInd#,
			'XP', 'A', #crUserId#,
		    sysdate, #crUserId#, sysdate,'I','N',NVL(#estPcs#,#actPcs#), NVL(#estWt#,#actWt#), 		   
			#rmk#, #tagNo#,'D',#bdULDKey#,#uldNo#,#uldCarr#,#uldType#)		
	</insert>	  	
	
	<select id="imp_xom_flightorigin"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String">
		select ORIG  from FLT_OPR WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#				
   	</select>  	
	
	<select id="imp_xom_validateWarehouseByULD" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
			  ULD_KEY,			 
			  LOC_CODE as locn
		FROM
			  ULD_INVENTORY
		WHERE
			  ULD_KEY = #uldKey#
	</select>
	
	
	<select id="imp_xom_getTransitMailByAWB" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT			
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 				
			ORIG as orig, 
			DEST as dest, 
			ACT_PCS as actPcs, 
            ACT_WT as actWt,
            EST_PCS as estPcs,
            EST_WT as estWt,				
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			LM_DATE as lmDate
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'TM' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '' OR AWB_NO = #awbNo#)
		ORDER BY
			awbNo asc
	</select>
	
	<select id="imp_xom_getOBCTagList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			BD_ULD_KEY as bdULDKey,
			BD_ULD_KEY as listFormULD,
			TARE_WT as tareWt,
			LSP_NO as lspNo, 				
			ORIG as orig, 
			DEST as dest, 
			ACT_PCS as actPcs, 
            ACT_WT as actWt,
            EST_PCS as estPcs,
            EST_WT as estWt,
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			RMK as rmkOld, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			'update' as recordType,
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS') AS lmDate		 				
		 FROM IMP_XPS_OBC_MAIL		
		 WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND 
			<isNotEmpty property="bdULDKey">
				BD_ULD_KEY = #bdULDKey# AND
			</isNotEmpty>		
			TO_CHAR(FLT_DATE,'DDMONYY') = #schDate#
		ORDER BY
			TAG_NO
	</select>
	
	<!--  Changed for QR
	<delete id="imp_xom_deleteTransitMail" parameterClass="map" >
		DELETE IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE  =#fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</delete> -->
	
	<delete id="imp_xom_deleteOBC" parameterClass="map" >	
		DELETE IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND 
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#
	</delete>
	

	<select id="imp_xom_getOBCTag"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">		
		 SELECT 
		 	obc.CATALOG as catalog,
		 	obc.FLT_TYPE as fltType,
		 	obc.FLT_KEY as fltKey,		 	
		 	TO_CHAR(obc.FLT_DATE,'DDMONYY')  as fltDate,
			obc.AWB_NO as awbNo, 
			TO_CHAR(obc.AWB_DATE,'DDMONYY') as awbDate, 			
			obc.TAG_NO as tagNo, 
			obc.BD_ULD_KEY as bdULDKey,
			obc.TARE_WT as tareWt,
			obc.LSP_NO as lspNo, 			
			obc.ACT_PCS as actPcs, 
		    obc.ACT_WT as actWt,
		    obc.EST_PCS as estPcs,
		    obc.EST_WT as estWt,	
			obc.ORIG as orig, 
			obc.DEST as dest, 			
			obc.LOCN as locn, 
			obc.ULD_KEY uldKey, 
			obc.DAM_IND as damInd, 
			obc.RMK as rmk, 
			obc.CR_USER_ID as crUserId, 
			obc.CR_DATE as crDate, 
			obc.LM_USER_ID as lmUserId,	     
	      opr.CARR_CODE AS carrCode,
	      opr.FLT_NO AS fltNo,
	      TO_CHAR(obc.LM_DATE , 'DDMONYY HH24:MI:SS') AS lmDate
		 FROM IMP_XPS_OBC_MAIL	obc
		 left join flt_opr opr on opr.flt_key=obc.flt_key and opr.sch_date=obc.flt_date and opr.flt_type='A'		   
		 WHERE  
			obc.FLT_KEY = #fltKey# AND
			obc.FLT_TYPE = 'I' AND
			TO_CHAR(obc.FLT_DATE,'DDMONYY') = #schDate# AND
			obc.CATALOG = 'IO' AND
			obc.TAG_NO = #tagNo#
	</select>
	
	<select id="get_tagcount_forflight_bduld"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1) from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bdULDKey#			
   	</select>
   	
   	<select id="get_tagcount_forflight"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1) from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#			
   	</select>	
   	
   	
   	<update id="imp_xom_updateOBCTag_pcwt" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 				
			ACT_PCS = ACT_PCS + #actPcs#, 
			ACT_WT  = ACT_WT + #actWt#,          
            EST_PCS = EST_PCS + #estPcs#, 
            EST_WT = EST_WT + #estWt#,  			
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#
	</update>
	
	<select id="get_bduld_forflight_tag"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String">
		select BD_ULD_KEY  from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#			
   	</select>  	   	
   	
    <update id="imp_xom_mtnOBCTagPCWT_updateAWBEvents" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE AWB_EVENTS SET
		PCS = #actPcs#,
		WT =#actWt#,
		EVENT_ID = #eventId#,
		EVENT_DESC = (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #eventId#),
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	 AND
		ULD_KEY = #bdULDKey#
	</update>	
	<select id="imp_xom_get_PC_WT" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select sum(ACT_PCS) actPcs, sum(ACT_WT) actWt  from IMP_XPS_OBC_MAIL where AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)	AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	
	</select>
	<update id="imp_xom_mtnOBCTagPCWT_updateCARSHP" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE IMP_CAR_AWB SET
		AWB_PCS = #actPcs#,
		AWB_WT = #actWt#,
		BULK_PCS = #actPcs#,
		BULK_WT = #actWt#,
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# 	AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
	</update>	
	
	<update id="imp_xom_mtnOBCTagPCWT_updateCARAWB" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE IMP_CAR_SHP SET
		MANIFEST_PCS = #actPcs#,
		MANIFEST_WT =#actWt#,	
		BULK_PCS = #actPcs#,
		BULK_WT = #actWt#,	
		RECD_PCS = #actPcs#,
		RECD_WT = #actWt#,
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)	AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
	</update>	
	
	<update id="imp_xom_mtnOBCTagPCWT_updateAWBINV" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB_INVENTORY SET		
		LOCN_PCS = #actPcs#, 
		LOCN_WT = #actWt#,
		BULK_WT = #actWt#,
		LM_USER_ID = #lmUserId#,
		LM_DATE = SYSDATE 
		WHERE
		AWB_NO = #awbNo# AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>
	
	<update id="imp_xom_mtnOBCTagPCWT_updateAWB" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = #actPcs#, 
		MANIFEST_WT = #actWt# ,
		PCS =#actPcs#,
		WT =#actWt#,
		TR_TYPE=#trType#,
		LM_USER_ID = #lmUserId#		
		WHERE
		AWB_NO = #awbNo# AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>

	
	<select id="get_ulddetails_inventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT			
		 	ULD_TYPE as uldType,
		 	ULD_NO as uldNo,
		 	ULD_CARR uldCarr
		FROM 
			ULD_INVENTORY
		WHERE
			ULD_KEY=#bdULDKey#			
	</select>	
	
	<insert id="ins_lspinv_xpsobc_mailtag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locn#, SYSDATE, 'N', #crUserId#, SYSDATE, #crUserId#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	  	
	<!--
	==============================================================================================
		END OF MAINTAIN INBOUND OBC TAG
	==============================================================================================
	-->
	<!--
	==============================================================================================
		START OF INBOUND ULD LIST
	==============================================================================================
	-->
<select id="get_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		Select *
from (select FLT.FLT_KEY as flightKey,
FLT.SCH_DATE flightDate, FLT.FLT_TYPE flightType,
TO_CHAR(FLT.SCH_DATE,'DDMONYY') as arrDate,
PKG_COMMON.get_flt_eta(FLT.FLT_KEY,FLT.SCH_DATE,'A')	AS eta,    
PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE,'A','DD')AS ata,
DECODE(FLT.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(FLT.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(FLT.SCH_TIME, '0000')),3,4)) as sta,
(case when (select COUNT(1) from EDI_FFM_MSG where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE AND FFM_STATUS ='P') >= 1  then 'Y'  else 'N' end) as ffmInd,
(case when (select COUNT(1) from EDI_RESDIT_HD where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE ) >= 1  then 'Y'  else 'N' end) as resditInd,
(case when (select COUNT(1) from EDI_CPM where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE) >= 1  then 'Y'   else 'N' end) as cpmInd,
(case when FLTOPR.ddt_finalise_date is not null then 'Y' else 'N' end) as ddtFinalized,
FLTOPR.INB_ULD_LIST_CONFIRM cfmStatus,
 ( case when
    (SELECT COUNT(1)
  FROM imp_ramp_dolly_hd hd,
    imp_ramp_dolly_dtl dtl,
    IMP_RAMP_CHK_DTL ch
  WHERE hd.ho_no IS NOT NULL
  AND not exists(select 1 from imp_ramp_chk_dtl chk
      where dtl.flt_key=chk.flt_key
      and dtl.flt_date=chk.flt_date
      and dtl.uld_key=chk.uld_key)
  AND hd.flt_key  =dtl.flt_key
  AND hd.dolly_id =dtl.dolly_id
  AND hd.flt_date =dtl.flt_date
  AND FLT.FLT_KEY  =dtl.flt_key
  AND FLT.SCH_DATE =dtl.flt_date
   AND FLT.FLT_KEY  =ch.flt_key
  AND FLT.SCH_DATE =ch.flt_date
  )>0 then 'Y' else 'N' end ) as handoverInd,
FLTOPR.RAMP_COMPL_YN rampComplYN,
FLT.FLT_MODULE1 fltModule,
(case when FLTOPR.WHSE_COMPL_DATE is not null then 'Completed'  
   when (SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL R where r.FLT_KEY = FLT.FLT_KEY AND  r.FLT_DATE = FLT.SCH_DATE and R.BRKDN_START_DATE is not null) >= 1 then 'Started'  
   else '' end) as bdStatus, FLT.CARR_CODE as carrCode
FROM FLT_OPR FLT
JOIN FLT_OPR_EVENTS FLTOPR ON FLT.FLT_KEY = FLTOPR.FLT_KEY AND  FLT.SCH_DATE = FLTOPR.SCH_DATE AND FLT.FLT_TYPE = FLTOPR.FLT_TYPE) flt
WHERE flightDate = #arrDate# and sta between #staTimeFromHr#||':'||#staTimeFromMin# and #staTimeToHr#||':'||#staTimeToMin# 
and (ffmInd = 'Y' or exists (select flt_key from IMP_RAMP_CHK_DTL R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate)
      or exists (select flt_key from IMP_ULD_LIST R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate)
      or exists (select flt_key from EDI_RESDIT_HD R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate))
and flightKey = nvl(#flightKey#,flightKey)
and fltModule = nvl(#fltModule#,fltModule)
and flightType='A' 
<isEmpty property="flightKey">
	<isNotEmpty property="loginCarrier">
		AND	(carrCode = #loginCarrier# OR carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
		WHERE GRP_CARR_CODE	= #loginCarrier#))							
	</isNotEmpty>
</isEmpty> 
order by sta asc
</select>

<!--  Changed for QR -->
	<select id="get_chkin_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		  select * from (select (COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT) AS checkInULD  ,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key as flightKey,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate 
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		  LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY  
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' AND MULD.H_CONT_IND &lt;&gt; 'Y' AND MULD.DUMMY_H_CONT_IND &lt;&gt; 'Y'  AND MULD.BT_IND &lt;&gt; 'Y'
          GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date,MULD.H_CONT_IND 
          UNION ALL
          select count(1)||'BULK' actualChkinULD,null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE
          LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY  
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' and (MULD.H_CONT_IND = 'Y' OR MULD.DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y')
          GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date) I order by I.sortingOrder
	</select>
	
	<!--  Changed for QR -->
	<select id="get_chkin_qt_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		  select * from (select (COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT) AS checkInUldQT  ,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key as flightKey,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		  LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' AND MULD.H_CONT_IND &lt;&gt; 'Y' AND MULD.DUMMY_H_CONT_IND &lt;&gt; 'Y' AND MULD.BT_IND &lt;&gt; 'Y' 
          AND EXISTS (SELECT 1 FROM MAST_WH_LOC LOC JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP WHERE CODE=RAMPCHK.LOC_CODE AND GRP.WH_TYPE='QT')
          GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date,MULD.H_CONT_IND 
          UNION ALL
          select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate 
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE
          LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' and (MULD.H_CONT_IND = 'Y' OR MULD.DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y') 
          AND EXISTS (SELECT 1 FROM MAST_WH_LOC LOC JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP WHERE CODE=RAMPCHK.LOC_CODE AND GRP.WH_TYPE='QT')
          GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
          order by I.sortingOrder
	</select>
	
	<select id="fetch_nestingid_inbULDCnsgnmt" parameterClass="map" resultClass="java.lang.String">
	<![CDATA[
	SELECT B.NESTING_ID
	FROM EDI_RESDIT_AWB_DTL A
	JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
	JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
	WHERE c.flt_key = #fltKey#
	and c.flt_date = #fltDate# 
	AND B.CONTAINER_NO = #uldKey#
	AND B.NESTING_ID IS NOT NULL
	AND ROWNUM         = 1
	]]>   
	</select>
	
	
	<!--  Changed for QR -->
        <select id="get_imp_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		Select (CASE WHEN uldList.loadType = 'C' THEN 1 ELSE CASE WHEN uldList.loadType = 'Q' THEN 2 ELSE CASE WHEN uldList.loadType = 'M' THEN 3 ELSE 1 END END END) sortList,  
        uldList.* from (
		
			select 	RAMPCHK.flt_key as flightKey,
					TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate,
					DECODE(RAMPCHK.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK.BRKDN_START_DATE,NULL,'Blank','Started'),'Completed') as bdStatus,
	    			RAMPCHK.uld_key as uldKey,	
	    			impuld.manual_hdly_area as manualHdlgArea,
	    			impuld.manual_hdly_area as manualHdlgAreaOld,
	    			RAMPCHK.EIC_IND as eicInd, 
	    			uld.LOC_CODE as locCode,
	    			ddtuld.TRF_TYPE as trfType,
	    			RAMPCHK.DAM_IND as serInd,
	    			(SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1 
	    					FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      				) WHERE ULD_KEY = RAMPCHK.uld_key AND FLT_KEY = RAMPCHK.flt_key AND FLT_DATE = RAMPCHK.FLT_DATE AND ROWNUM &lt;= 9) shc1,
	    			pkg_imp.fun_get_hdlg_area(RAMPCHK.flt_key,TO_CHAR(RAMPCHK.flt_date,'DDMONYY'),RAMPCHK.uld_key,'SYS') systemHdlgArea,
	    			impuld.wh_rmk as uldWhRmk,
	    			impuld.airl_rmk as uldAirlRmk,
	    			impuld.imx as imx,
	    			impuld.handling_mode as hdlgMode,
	    			impuld.handling_mode as oldHdlgMode,
	    			impuld.wh_rmk as uldWhRmkOld,
	    			impuld.airl_rmk as uldAirlRmkOld,
	    			(select sum(a.MAN_WT) a 
	    									from edi_ffm_shp a, edi_ffm_uld b,edi_ffm_msg c 
	    									where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#flightKey# and b.flt_date=#arrDate# 
												and b.uld_key=RAMPCHK.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as wt1,
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#flightKey# and b.flt_date=#arrDate# 
												and b.uld_key=RAMPCHK.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as pcs1,
					(case
			      		when (select COUNT(1) from ULD_INVEntory where BASE_PLT = RAMPCHK.uld_key) >= 1
			       		then 'Y'
			       		else 'N'
			       	end) as topPalletYN,
					(case
			      		when (select COUNT(1) 
			      					from edi_ffm_shp a,edi_ffm_uld b where a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
										and b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=RAMPCHK.uld_key) >= 1
			       		then 'T'
			       		else 'I'
			       		end) as uldFlow,
			       		   
			       		
          NVL(RAMPCHK.chkin_yn,'N') uldChkStatus,
          NVL(imp.cpm_ind,'N') cpmInd,
          NVL(imp.ffm_ind,'N') ffmInd ,
          NVL(imp.resdit_ind,'N') resditInd ,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =RAMPCHK.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,          
	          ( CASE
	      WHEN (SELECT COUNT(1)
	      FROM imp_ramp_dolly_hd hd,
	      imp_ramp_dolly_dtl dtl,
	      IMP_RAMP_CHK_DTL ch
	      WHERE hd.ho_no  IS NOT NULL
	      AND  NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
	      AND hd.flt_key   =dtl.flt_key
	      AND hd.dolly_id  =dtl.dolly_id
	      AND hd.flt_date  =dtl.flt_date
	      AND ch.flt_key  =dtl.flt_key
	      AND ch.flt_date =dtl.flt_date 
	      and dtl.uld_key=RAMPCHK.uld_key
	      AND dtl.flt_key = #flightKey#
	      AND dtl.flt_date =#arrDate#
	       )>0
	      THEN 'YELLOW'
	      ELSE null
	    END ) AS uldInd

    	from IMP_RAMP_CHK_DTL RAMPCHK
		LEFT JOIN IMP_ULD_LIST impuld ON impuld.FLT_KEY = RAMPCHK.FLT_KEY AND impuld.FLT_DATE = RAMPCHK.FLT_DATE AND RAMPCHK.uld_key = impuld.uld_key 
    	LEFT JOIN IMP_RAMP_INB_CHK_DTL imp ON imp.FLT_KEY = RAMPCHK.FLT_KEY AND imp.FLT_DATE = RAMPCHK.FLT_DATE
		AND imp.tr_no = RAMPCHK.tr_no AND  RAMPCHK.uld_key = imp.uld_key 
    	LEFT Join ULD_INVEntory uld on RAMPCHK.uld_key = uld.uld_key
		Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
		where RAMPCHK.flt_date=#arrDate# AND RAMPCHK.flt_key = #flightKey# and RAMPCHK.EMPTY_IND='N' 
		
		UNION
    	
    	select imp.flt_key as flightKey,
    			TO_CHAR(imp.flt_date,'DDMONYY') as arrDate,
				( select DECODE(RAMPCHK1.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK1.BRKDN_START_DATE,NULL,'','Started'),'Completed') 
							from IMP_RAMP_CHK_DTL RAMPCHK1,IMP_ULD_LIST impuld1 
							where impuld1.FLT_KEY = RAMPCHK1.FLT_KEY AND impuld1.FLT_DATE = RAMPCHK1.FLT_DATE
    							AND RAMPCHK1.uld_key = impuld1.uld_key AND RAMPCHK1.uld_key = impuld.uld_key
    							AND RAMPCHK1.flt_date=#arrDate# AND RAMPCHK1.flt_key =#flightKey#) as bdStatus,
    			imp.uld_key as uldKey,
    			impuld.manual_hdly_area as manualHdlgArea,
    			impuld.manual_hdly_area as manualHdlgAreaOld,NVL(RAMPCHK.EIC_IND,'N') as eicInd,
    			uld.LOC_CODE as locCode,
    			ddtuld.TRF_TYPE as trfType,imp.DAM_IND as serInd,
    	(SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1 
    	FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
      	) WHERE ULD_KEY = impuld.uld_key AND FLT_KEY = impuld.flt_key AND FLT_DATE = impuld.FLT_DATE AND ROWNUM &lt;= 9) shc1,
    	pkg_imp.fun_get_hdlg_area(imp.flt_key,TO_CHAR(imp.flt_date,'DDMONYY'),imp.uld_key,'SYS') systemHdlgArea,
    	impuld.wh_rmk as uldWhRmk,impuld.airl_rmk as uldAirlRmk,impuld.imx as imx,impuld.handling_mode as hdlgMode,impuld.handling_mode as oldHdlgMode,
    	impuld.wh_rmk as uldWhRmkOld,impuld.airl_rmk as uldAirlRmkOld,
    	(select sum(a.MAN_WT) a from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as wt1,
		(select sum(a.MAN_PCS) a from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as pcs1,
	(case
		      when (select COUNT(1) from ULD_INVEntory where BASE_PLT = imp.uld_key) >= 1
		       then 'Y'
		       else 'N'
		       end) as topPalletYN,
		       (case
		      when (select COUNT(1) from edi_ffm_shp a,edi_ffm_uld b where a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key) >= 1
		       then 'T'
		       else 'I'
		       end) as uldFlow,
		         
		       
          NVL(RAMPCHK.chkin_yn,'N') uldChkStatus,
          NVL(imp.cpm_ind,'N') cpmInd,
          NVL(imp.ffm_ind,'N') ffmInd ,
          NVL(imp.resdit_ind,'N') resditInd ,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =imp.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,
         
                 (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd hd,
          imp_ramp_dolly_dtl dtl
        WHERE hd.ho_no  IS NOT NULL
        AND NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
        AND hd.flt_key   =dtl.flt_key
        AND hd.dolly_id  =dtl.dolly_id
        AND hd.flt_date  =dtl.flt_date
    
        AND dtl.uld_key  =imp.uld_key
        AND dtl.flt_key  = #flightKey#
        AND dtl.flt_date =#arrDate#  )>0
      THEN 'YELLOW'
      ELSE NULL
    END ) AS uldInd
    	from IMP_ULD_LIST impuld
		LEFT JOIN IMP_RAMP_CHK_DTL RAMPCHK ON impuld.FLT_KEY = RAMPCHK.FLT_KEY AND impuld.FLT_DATE = RAMPCHK.FLT_DATE AND RAMPCHK.uld_key = impuld.uld_key 
		LEFT JOIN IMP_RAMP_INB_CHK_DTL imp ON impuld.FLT_KEY = imp.FLT_KEY AND impuld.FLT_DATE = imp.FLT_DATE AND imp.uld_key = impuld.uld_key 
		LEFT Join ULD_INVEntory uld on imp.uld_key = uld.uld_key
    	Left JOIN DDT_MSG MSG on MSG.FLT_KEY = impuld.FLT_KEY AND MSG.FLT_DATE = impuld.FLT_DATE AND MSG.DDT_STATUS='P' 
		LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = impuld.ULD_KEY
		left join imp_ramp_dolly_hd hd on hd.flt_key=impuld.FLT_KEY and hd.flt_date=impuld.FLT_DATE and hd.ho_no is not null
		left join imp_ramp_dolly_dtl dt on dt.flt_key=hd.FLT_KEY and dt.flt_date=hd.FLT_DATE  and hd.dolly_id=dt.dolly_id and dt.uld_key=impuld.ULD_KEY
		and NOT EXISTS ( SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE flt_date   =dt.FLT_DATE AND flt_key    = dt.FLT_KEY AND uld_key    = dt.uld_key )
		where imp.flt_date=#arrDate# AND imp.flt_key = #flightKey#		
				AND not exists (select null from IMP_RAMP_CHK_DTL where EMPTY_IND='N' AND flt_date=impuld.FLT_DATE AND flt_key = impuld.FLT_KEY and  uld_key = impuld.uld_key )
      			AND not exists (select null from EDI_CPM_DTL cpmdtl where cpmdtl.FLT_KEY = impuld.FLT_KEY AND cpmdtl.FLT_DATE = impuld.FLT_DATE 
                                                                and cpmdtl.uld_key = impuld.uld_key and cpmdtl.load_type='X'   )
		                                              
        UNION
        
  SELECT A.flt_key                                                                                            AS flightKey,
    TO_CHAR(A.flt_date,'DDMONYY')                                                                             AS arrDate,
    DECODE(RAMPCHK.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK.BRKDN_START_DATE,NULL,'Blank','Started'),'Completed') AS bdStatus,
    dol.uld_key                                                                                               AS uldKey,
    impuld.manual_hdly_area                                                                                   AS manualHdlgArea,
    impuld.manual_hdly_area                                                                                   AS manualHdlgAreaOld,
    dol.EIC_IND                                                                                               AS eicInd,
    uld.LOC_CODE                                                                                              AS locCode,
    ddtuld.TRF_TYPE                                                                                           AS trfType,
    dol.DAM_IND                                                                                               AS serInd,
    (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1
    FROM
      (SELECT DISTINCT SHC,
        FLT_KEY,
        ULD_KEY,
        FLT_DATE,
        PRIORITY
      FROM V_IMP_FLT_ULD_SHC
      ORDER BY PRIORITY DESC
      )
    WHERE ULD_KEY = dol.uld_key
    AND FLT_KEY   = A.flt_key
    AND FLT_DATE  = A.FLT_DATE
    AND ROWNUM   &lt;= 9
    ) shc1,
    pkg_imp.fun_get_hdlg_area(A.flt_key,TO_CHAR(A.flt_date,'DDMONYY'),dol.uld_key,'SYS') systemHdlgArea,
    impuld.wh_rmk   AS uldWhRmk,
    NULL            AS uldAirlRmk,
    NULL            AS imx,
    NULL            AS hdlgMode,
    NULL            AS oldHdlgMode,
    NULL            AS uldWhRmkOld,
    impuld.airl_rmk AS uldAirlRmkOld,
    (SELECT SUM(a.MAN_WT) a
    FROM edi_ffm_shp a,
      edi_ffm_uld b,
      edi_ffm_msg c
    WHERE a.tr_no     =b.tr_no
    AND a.udoc_line_no= b.doc_line_no
    AND b.flt_key     =#flightKey#
    AND b.flt_date    =#arrDate#
    AND b.uld_key     =dol.uld_key
    AND c.tr_no       =a.tr_no
    AND c.ffm_status  ='P'
    ) AS wt1,
    (SELECT SUM(a.MAN_PCS) a
    FROM edi_ffm_shp a,
      edi_ffm_uld b,
      edi_ffm_msg c
    WHERE a.tr_no     =b.tr_no
    AND a.udoc_line_no= b.doc_line_no
    AND b.flt_key     =#flightKey#
    AND b.flt_date    =#arrDate#
    AND b.uld_key     =dol.uld_key
    AND c.tr_no       =a.tr_no
    AND c.ffm_status  ='P'
    ) AS pcs1,
    (
    CASE
      WHEN (SELECT COUNT(1) FROM ULD_INVEntory WHERE BASE_PLT = RAMPCHK.uld_key) >= 1
      THEN 'Y'
      ELSE 'N'
    END) AS topPalletYN,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM edi_ffm_shp a,
          edi_ffm_uld b
        WHERE a.dest!     ='HKG'
        AND a.tr_no       =b.tr_no
        AND a.udoc_line_no= b.doc_line_no
        AND b.flt_key     =#flightKey#
        AND b.flt_date    =#arrDate#
        AND b.uld_key     =dol.uld_key) >= 1
      THEN 'T'
      ELSE 'I'
    END) AS uldFlow,
    'N' uldChkStatus,
    NVL(imp.cpm_ind,'N') cpmInd,
    NVL(imp.ffm_ind,'N') ffmInd ,
    NVL(imp.resdit_ind,'N') resditInd ,
    CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =dol.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd hd,
          imp_ramp_dolly_dtl dtl,
          IMP_RAMP_INB_CHK_DTL,
          IMP_RAMP_CHK_DTL ch
        WHERE hd.ho_no  IS NOT NULL
        AND  NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
        AND hd.flt_key   =dtl.flt_key
        AND hd.dolly_id  =dtl.dolly_id
        AND hd.flt_date  =dtl.flt_date
        AND ch.flt_key   =dtl.flt_key
        AND ch.flt_date  =dtl.flt_date
        AND dtl.uld_key  =dol.uld_key
        AND dtl.flt_key  = #flightKey#
        AND dtl.flt_date =#arrDate# )>0
      THEN 'YELLOW'
      ELSE NULL
    END ) AS uldInd
  FROM IMP_RAMP_DOLLY_HD A
  LEFT JOIN IMP_RAMP_DOLLY_DTL dol
  ON A.FLT_KEY  =dol.FLT_KEY
  AND A.FLT_DATE=dol.FLT_DATE
  AND A.DOLLY_ID=dol.DOLLY_ID
  LEFT JOIN IMP_RAMP_CHK_DTL RAMPCHK
  ON RAMPCHK.FLT_KEY   =A.FLT_KEY
  AND RAMPCHK.FLT_DATE =A.FLT_DATE
  AND RAMPCHK.CHKIN_YN ='N'
  LEFT JOIN IMP_ULD_LIST impuld
  ON impuld.FLT_KEY   = RAMPCHK.FLT_KEY
  AND impuld.FLT_DATE = RAMPCHK.FLT_DATE
  AND RAMPCHK.uld_key = impuld.uld_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL imp
  ON imp.FLT_KEY      = RAMPCHK.FLT_KEY
  AND imp.FLT_DATE    = RAMPCHK.FLT_DATE
  AND imp.tr_no       = RAMPCHK.tr_no
  AND RAMPCHK.uld_key = imp.uld_key
  LEFT JOIN DDT_MSG MSG
  ON MSG.FLT_KEY    = RAMPCHK.FLT_KEY
  AND MSG.FLT_DATE  = RAMPCHK.FLT_DATE
  AND MSG.DDT_STATUS='P'
  LEFT JOIN DDT_ULD ddtuld
  ON ddtuld.TR_NO    = MSG.TR_NO
  AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
  JOIN FLT_OPR_EVENTS dd
  ON dd.FLT_KEY           = dol.FLT_KEY
  AND dd.SCH_DATE         = dol.FLT_DATE
  AND DD.FLT_TYPE='A'
  AND DD.whse_compl_date IS NULL
  LEFT JOIN ULD_INVEntory uld
  ON dol.uld_key  = uld.uld_key
  WHERE A.flt_date=#arrDate#
  AND A.flt_key   = #flightKey#
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_CHK_DTL
    WHERE ULD_KEY=DOL.ULD_KEY
    AND FLT_KEY  =DOL.FLT_KEY
    AND FLT_DATE =DOL.FLT_DATE
    )
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=DOL.ULD_KEY
    AND FLT_KEY  =DOL.FLT_KEY
    AND FLT_DATE =DOL.FLT_DATE
    )
  AND A.HO_NO IS NOT NULL  
 	) uldList
		where nvl(uldList.trfType,'*') = nvl(#trfType#,nvl(trfType,'*'))
		
    	<isNotEmpty property="inBoundUldType">
		    <isEqual property="inBoundUldType" compareValue="MAIL">
				AND uldList.loadType ='M'
			</isEqual>
			<isEqual property="inBoundUldType" compareValue="CARGO">
				AND uldList.loadType ='C'
			</isEqual>
			<isEqual property="inBoundUldType" compareValue="COURIER">
				AND uldList.loadType ='Q'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="oldBdStatus">
			<isNotEqual property="oldBdStatus" compareValue="Blank">
				and  uldList.bdStatus = #oldBdStatus#
			</isNotEqual>
			<isEqual property="oldBdStatus" compareValue="Blank">
				and  (uldList.bdStatus is null or uldList.bdStatus='Blank')
			</isEqual>
		</isNotEmpty>
		order by sortList,bdStatus, uldKey asc	
	</select>
	
	<!--  Changed for QR -->
	<select id="getSystemHdlgArea" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.String">
	select flt_module1 from flt_opr where flt_key=#flightKey# and sch_date=TO_DATE(#arrDate#,'DDMONYY') and flt_type='A' and 
	(select rule_value from cmsrules where rule_code='WOSP_AVAILABLE') = 'N'
	</select>
	<!--<select id="get_imp_uldlist_cpmffm_status" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select uld_key as uldKey,cpm_ind as cpmInd,ffm_ind as ffmInd,'Y' as uldChkStatus from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N')
		union
		select uld_key as uldKey,cpm_ind as cpmInd,ffm_ind as ffmInd,'N' as uldChkStatus from IMP_RAMP_INB_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#
		AND uld_key not in (select uld_key from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N'))
		UNION 
		select uld_key as uldKey,'N' as cpmInd,'N' as ffmInd,chkin_yn as uldChkStatus from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#
		and uld_key not in (
		select uld_key from (
		select uld_key from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N')
		union
		select uld_key from IMP_RAMP_INB_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#))
	</select>-->
         <select id="get_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType                         
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
	</select>
	<select id="get_cargo_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		WITH CARGO_TYPE AS (SELECT AWB_NO,AWB_DATE,
       						(CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       						(CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
       						THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
       						ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as catalog	  
	  			FROM AWB  A)
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType		                                                 
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
    	AND (SELECT CATALOG FROM CARGO_TYPE WHERE CARGO_TYPE.AWB_NO=d.AWB_NO AND CARGO_TYPE.AWB_DATE=d.AWB_DATE)  IN ('C')
	</select>
	<select id="get_courier_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		WITH CARGO_TYPE AS (SELECT AWB_NO,AWB_DATE,
       						(CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       						(CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
       						THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
       						ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as catalog	  
	  			FROM AWB  A)
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType                         
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
    	AND (SELECT CATALOG FROM CARGO_TYPE WHERE CARGO_TYPE.AWB_NO=d.AWB_NO AND CARGO_TYPE.AWB_DATE=d.AWB_DATE)  IN ('Q')
	</select>
	<insert id="save_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO IMP_ULD_LIST (FLT_KEY,FLT_DATE,ULD_KEY, TRANSIT_IND, IMX, LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,SPL_CODE1,SPL_CODE2,SPL_CODE3,MANUAL_HDLY_AREA,WH_RMK,AIRL_RMK,HANDLING_MODE,TR_TYPE)
		VALUES( #flightKey#,TO_DATE(#arrDate#,'DDMONYY'),#uldKey# ,#transInd#,#imx#,#userID#,SYSDATE, #userID#,SYSDATE,#shc1#,#shc2#,#shc3#,#manualHdlgArea#,#uldWhRmk#,#uldAirlRmk#,#hdlgMode#,'INBUL')	
    </insert>
	 <select id="check_record_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		  select count(1) 
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') and ULD_KEY = #uldKey#
	</select>
	<select id="get_pcwt_inblist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
		select sum(a.MAN_WT) wt1,sum(a.MAN_PCS) pcs1 from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=TO_DATE(#arrDate#,'DDMONYY') and c.tr_no=a.tr_no and c.ffm_status='P' and a.awb_no=#awbNo# and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and b.uld_key=#uldKey#
	</select>	
		
	<select id="checkAnyULDExistsForTheShipment" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		select count(1) from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=TO_DATE(#arrDate#,'DDMONYY') and c.tr_no=a.tr_no and c.ffm_status='P' and a.awb_no=#awbNo# and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')		
		and  b.uld_key is not null
	</select>	
	
	<select id="get_bupPcWt_bulkPcWt_Shipment" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
		SELECT (SUM(manifest_pcs) - SUM(BUP_PCS)) othFltBulkPcs, (SUM(manifest_wt) - SUM(BUP_WT)) othFltBulkWt, SUM(BUP_PCS) othFltBupPcs, SUM(BUP_WT) othFltBupWt FROM IMP_CAR_SHP 
			WHERE awb_no =#awbNo# AND awb_date =TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<update id="upd_imp_shp_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE,
			CFM_IND = #cfmStatus# 
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND FLT_KEY  = #flightKey#
	</update>
	<update id="upd_imp_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			WH_RMK = DECODE(#awbWhRmk#,'NULL',null,NVL(#awbWhRmk#,WH_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
				<isEqual property="shcUpdReqd" compareValue="Y">
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				</isEqual>
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   			<isEqual property="shcUpdReqd" compareValue="Y">
							,SPL_CODE1     = #shc1#, 
							SPL_CODE2     = #shc2#, 
							SPL_CODE3     = #shc3#,  
							SPL_CODE4     = #shc4#,  
							SPL_CODE5     = #shc5#,  
							SPL_CODE6     = #shc6#,  
							SPL_CODE7     = #shc7#,  
							SPL_CODE8     = #shc8#, 
							SPL_CODE9     = #shc9#
						</isEqual> 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	
	<update id="upd_buppcwt_imp_shp_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE 
			<isEqual property="carCreated" compareValue="N">
   					,PPK_TYPE = case when (manifest_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
		   			bulk_pcs = manifest_pcs-#totalBupPcs#,
		   			bulk_wt = manifest_wt-#totalBupWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
		   		<isEqual property="carCreated" compareValue="Y">	
		   			,PPK_TYPE = case when (manifest_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
		   			bulk_pcs = manifest_pcs-#totalBupPcs#,
		   			bulk_wt = manifest_wt-#totalBupWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			   	</isEqual>	
		   	</isEqual>
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND FLT_KEY  = #flightKey#
	</update>
	
	<update id="upd_buppcwt_imp_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
					,PPK_TYPE = case when (awb_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
					TR_TYPE = 'INBUL',
		   			bulk_pcs = #totalBulkPcs#,
		   			bulk_wt = #totalBulkWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
	   				,PPK_TYPE = case when (awb_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
	   				TR_TYPE = 'INBUL',
		   			bulk_pcs = #totalBulkPcs#,
		   			bulk_wt = #totalBulkWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	
	
	<select id="checkImpCarAwbSaved" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_awb WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO = #awbNo# AND SAVE_YN='N'
    </select> 
    <update id="upd_imp_awb_inbdlist_carawb" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		update imp_car_awb set SAVE_YN='Y', bulk_pcs= (select NVL((SUM(manifest_pcs) - SUM(BUP_PCS)),0) from imp_car_shp where  AWB_NO  = #awbNo#  AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) ,
		bulk_wt= (select NVL((SUM(manifest_wt) - SUM(BUP_WT)),0) from imp_car_shp where  AWB_NO   = #awbNo#  AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) 
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO   = #awbNo# 	
    </update>
    
    <update id="upd_imp_awb_inbdlist_carshp" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
    	update imp_car_shp set bulk_pcs=MANIFEST_PCS,bulk_wt=MANIFEST_WT WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
		AWB_NO   = #awbNo# AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		AND FLT_KEY  = #flightKey#
	</update>
	
	<update id="upd_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE AWB SET
			LM_USER_ID =  #userID#, 
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
				<isEqual property="shcUpdReqd" compareValue="Y">
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				</isEqual>
		   	</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   		<isEqual property="shcUpdReqd" compareValue="Y">
						,SPL_CODE1     = #shc1#, 
						SPL_CODE2     = #shc2#, 
						SPL_CODE3     = #shc3#,  
						SPL_CODE4     = #shc4#,  
						SPL_CODE5     = #shc5#,  
						SPL_CODE6     = #shc6#,  
						SPL_CODE7     = #shc7#,  
						SPL_CODE8     = #shc8#, 
						SPL_CODE9     = #shc9#
					</isEqual> 
			   	</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	<select id="get_inbd_shc_list" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select code as shc from mast_spl_hand_code where code in (#PARAM#) ORDER BY priority ASC
	</select>
	
	<!--<select id="check_amd_to_ack_date" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNo, 
  		toin.ver_no as verNo, 
  		todtl.ho_area as hoArea,
  		toin.ack_date toAckDate 
    	from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>

	
	--><select id="getTowOrderDetails" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNo, 
  		toin.ver_no as verNo, 
  		todtl.ho_area as hoArea,
  		toin.to_no as toNoHidden, 
  		toin.ver_no as verNoHidden,
  		toin.ack_date toAckDate 
    	from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>
	
	<update id="upd_amd_to_ack_date" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE tow_order_in_dtl SET
			HO_AREA  = #hoArea#,
			TRNS_GRP = #trfGroup#,
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE
		WHERE  TO_NO = #toNo#
		AND ULD_KEY = #uldKey#	
	</update>
	<update id="upd_amd_to_ack_date_to_hdr" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE tow_order_in SET
			ver_no  = #verNo#,
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE 
		WHERE  TO_NO = #toNo#
		and FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and FLT_KEY  = #flightKey# 
	</update>
	
	<!--<select id="getTowOrderDetailsHidden" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNoHidden, 
  		toin.ver_no as verNoHidden  
  		from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>
	
	--><update id="upd_imp_awb_ech_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			ECT_HANDLER = #ectHandl#,
			BYPASS_REL = 'Y', 
			LM_USER_ID =  #userID#, 
			AWB_RMK      = #awbRmk#,
			LM_DATE  = SYSDATE
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="upd_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_ULD_LIST SET
			TRANSIT_IND = decode(#uldFlow#,'T','Y',TRANSIT_IND),
			SPL_CODE1 = #shc1#,
			SPL_CODE2 = #shc2#,
			SPL_CODE3 = #shc3#,
			IMX = #imx#,
			WH_RMK = #uldWhRmk#,
			AIRL_RMK = #uldAirlRmk#,
			LM_USER_ID =  #userID#,
			HANDLING_MODE = #hdlgMode#,
			MANUAL_HDLY_AREA = #manualHdlgArea#, 
			LM_DATE  = SYSDATE,
			TR_TYPE = #trtype#
		WHERE  FLT_KEY  = #flightKey#
			AND FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') 
			AND ULD_KEY   = #uldKey#
	</update>
	
	<update id="upd_uld_inv_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE ULD_INVENTORY SET
			HANDLING_MODE = #hdlgMode#, 
			LM_DATE  = SYSDATE
			<isNotEmpty property="hdlgMode">
				<isEqual property="uldFlow" compareValue="T">
					,TRANSIT_FLG = 'Y'	
				</isEqual>
			</isNotEmpty>
		WHERE    
			ULD_KEY   = #uldKey#
	</update>
	<update id="update_shc_inboundlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
			UPDATE AWB SET 
				SHCLOCK_IND = #shcLockInd#
				WHERE  AWB_NO   = #awbNo#
				AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	<insert id="insertUldRmk" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO ULD_RMK (ULD_TYPE,ULD_NO,ULD_CARR,TR_NO,TR_TYPE,DOC_LINE_NO,ULD_RMK,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EVENT_ID)
		VALUES( #uldType#,#uldNo#,#uldCarr# ,'18','IU','1',#rmk#, #uldKey#,#userID#,sysdate,#userID#,sysdate,'IUL')
	</insert>
	<insert id="insertAwbRmk" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO AWB_RMK (SEQ_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,FLT_TYPE,RMK_TYPE,RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FUNCTION_NAME)
		VALUES(awb_rmk_seq.nextval,#awbNo#,TO_DATE(#awbDate#,'DDMONYY') ,#flightKey#,TO_DATE(#arrDate#,'DDMONYY'),'I', 'IMP ULD LIST',#rmk#,#userID#,sysdate,#userID#,sysdate,'IMP ULD LIST')
	</insert>
	<update id="upd_cfmstatus_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   INB_ULD_LIST_CFM_USER_ID = #userID#,
		   INB_ULD_LIST_CFM_DATE = sysdate,
		   INB_ULD_LIST_CONFIRM = DECODE(INB_ULD_LIST_CONFIRM,'Y','Y',#cfmStatus#),
		   LM_USER_ID  = #userID#, 
		   LM_DATE = sysdate
		WHERE
			 FLT_KEY = #flightKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #arrDate# AND
			 FLT_TYPE	 = 'A'
    </update>
	<!--
	==============================================================================================
		END OF INBOUND ULD LIST
	==============================================================================================
	-->
	<!-- Amend ULD storage starts -->
<select id="getuldforamenduld" parameterClass="java.lang.String" 
	resultClass="cargo.cms.uld.bo.ULDEICBO">	
  
	<![CDATA[
select 
uld.ULD_KEY as uldKey,
uld.FLT_KEY as fltNo,
uld.FLT_TYPE as fltType,
uld.ULD_CARR uldCarr,
uld.SOURCE_CODE sourceCode,
uld.BASE_PLT basePlt,
uld.EIC_UNLDG_PT eicUnloadingPt,
TO_CHAR(uld.FLT_DATE,'DDMONYY') fltDate,
(SELECT TR_NO from FLT_OPR flt where flt.FLT_KEY=uld.FLT_KEY 
and TO_CHAR(flt.SCH_DATE,'DDMONYY')=TO_CHAR(uld.FLT_DATE,'DDMONYY') and uld.uld_KEY=#uldKey# and flt.FLT_TYPE='A') txNo,
(select distinct ULD_IMAGE_NAME from ULD_IMAGE where ULD_KEY = #uldKey# and rownum=1) transactionId,
pkg_common.get_flt_ata(uld.FLT_KEY,TO_CHAR(uld.FLT_DATE,'DDMONYY'),DECODE(uld.FLT_TYPE,'I','A',uld.FLT_TYPE) )AS actTime,
pkg_common.get_flt_eta(uld.FLT_KEY,TO_CHAR(uld.FLT_DATE,'DDMONYY'),DECODE(uld.FLT_TYPE,'I','A',uld.FLT_TYPE) )AS estTime,
uld.LOC_CODE locCode,
uld.LOC_CODE locCodeOld,
uld.TARGET target,
uld.EIC_FLG eicFLG,
uld.EMPTY_FLG emptyYN,
uld.EMPTY_FLG oldemptyYN,
nvl(ULD_FLOW,'I') uldFlow,
uld.SURP_I spInd,
uld.DAM_IND damYN,
uld.SER_IND serYN,
uld.OWNER_ID as ownerId,
uld.LOCKED as lokStatus,
uld.LOCK_RQS as lokYN,
uld.HANDLING_MODE as hdlgMode, 
uld.GEN_RMK as genRem,
uld.DAM_RMK as damRem,
uld.GEN_RMK as oldGenRem,
uld.DAM_RMK as oldDamRem,
to_char(uld.LM_DATE,'DDMONYY HH24:MI:SS') as modifiedDate,
DECODE(FUN_GET_ULD_STATE(uld.uld_key),'AL',TRIM(uld.LOAD_TYPE),'') as loadType,
DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) AS oldrefWt,
DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) AS refWt
from uld_inventory uld
where uld_KEY=#uldKey# 
	]]>	
</select>
<select id="emableEmptyForImportUld" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	  select  count(1)  from imp_ramp_chk_dtl ircd 
			  join uld_inventory uld on uld.uld_key = ircd.uld_key and nvl(uld.flt_key,uld.Imp_flt_key) = ircd.flt_key and nvl(uld.flt_date,uld.Imp_flt_date) = ircd.flt_date
			  							and nvl(ircd.empty_ind,'N') = 'N'
			  where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'I') = 'I'
</select>	

<select id="emableEmptyForImportUld1" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	  select  count(1)  from imp_ramp_chk_dtl ircd 
			  join uld_inventory uld on uld.uld_key = ircd.uld_key and nvl(uld.flt_key,uld.Imp_flt_key) = ircd.flt_key and nvl(uld.flt_date,uld.Imp_flt_date) = ircd.flt_date
			  							and nvl(ircd.empty_ind,'N') = 'N' and ircd.brkdn_compl_date is not null
			  where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'I') = 'I'
			  
</select>	

<select id="emableEmptyForExportUld" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	select count(1) from uld_inventory uld 
	join exp_offload_uld eou on uld.uld_key = eou.uld_bt_no and uld.flt_key = eou.flt_key and uld.flt_date = eou.flt_date
	where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'E') = 'E'
	
</select>	

<select id="emableEmptyForExportUld1" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	select count(1) from uld_inventory uld 
	join exp_offload_uld eou on uld.uld_key = eou.uld_bt_no and uld.flt_key = eou.flt_key and uld.flt_date = eou.flt_date
	where uld.uld_key = #uldKey# and nvl(confirmed_yn,'N') = 'Y' and nvl(uld.uld_flow,'E') = 'E'
</select>	


<update id="sqlUpdateUldStorage" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ULD_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   EIC_FLG = #eicFLG#, 
	   EMPTY_FLG = nvl(#emptyYN#,EMPTY_FLG), 
	   SURP_I = #spInd#, 
	   DAM_IND= nvl(#damYN#,DAM_IND),	   
	   <isEqual  property="callFrom"  compareValue="desktop">
	   SER_IND=#serYN#,
	   </isEqual>		
	   OWNER_ID = #ownerId#,
	   LOCK_RQS=#lokYN#,	   
	   <isEqual  property="emptyYN"  compareValue="Y">
	    HANDLING_MODE = '',
	   </isEqual>		   
	   <isNotEqual  property="emptyYN"  compareValue="Y">
	    HANDLING_MODE=DECODE(HANDLING_MODE,'DT','DT',#hdlgMode#),
	   </isNotEqual>
	   GEN_RMK = #genRem#, 
	   DAM_RMK = #damRem#,
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_EVENT = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_OUT_CARR = #uldCarr#, 
	   REF_RMK = #genRem#,
	   TR_TYPE = #trtype#,
	   LOAD_TYPE = #loadType#,
	   ULDENTRY_MSG_RCVD_YN = NVL(#turnOffUldEntryMessageIndicator#, ULDENTRY_MSG_RCVD_YN)
	   <isEqual  property="updTargetFlg"  compareValue="Y">
	    ,TARGET = null
	   </isEqual>	   
	   <isEqual  property="eicFLG"  compareValue="N">
	    ,EIC_TYPE=NULL,BASE_PLT=NULL 
	   </isEqual>	 
	   <isEqual  property="updtareWtInd"  compareValue="Y">
	   <isEqual  property="updRefWt"  compareValue="Y">
		   	,REF_WT = #refWt#
			,REF_NET_WT = (#refWt# - NVL(#tareWt#,0) )
		   	,tare_weight = NVL(#tareWt#,0)
		</isEqual>
		</isEqual>
	    <isNotEqual  property="updtareWtInd"  compareValue="Y">
	   <isEqual  property="updRefWt"  compareValue="Y">
		,REF_WT = #refWt#
		,REF_NET_WT = (#refWt# - NVL(TARE_WEIGHT,0) )
		</isEqual>
		</isNotEqual>	 
		<isEqual  property="updRefWtNull"  compareValue="Y">
		,REF_WT = ''
		,REF_NET_WT = ''
		</isEqual>
	   WHERE ULD_KEY = #uldKey#
</update>


<update id="sqlUpdateTopPalletLoc" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ULD_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_OUT_CARR = #uldCarr#, 
	   REF_RMK = #genRem#,
	   TR_TYPE = #trtype# 
	WHERE base_plt = #uldKey#
</update>

<update id="sqlUpdateShipments" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE AWB_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_RMK = #genRem#
	WHERE uld_key = #uldKey#
</update>

<update id="sqlUpdateAsvShpDtlsforHAWB" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ASV_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE uld_key = #uldKey#
</update>

<update id="sqlUpdateSrfShipments" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE imp_srf_awb_inventory 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE uld_key = #uldKey#
</update>

<select id="topPalletPS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and EIC_TYPE='PS' and BASE_PAL_FLG='N'
</select>	

<select id="topPalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and (EIC_TYPE is null or EIC_TYPE <>'PS') and BASE_PAL_FLG='N'
		]]>
</select>

<select id="isBasePalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and (EIC_TYPE is null or EIC_TYPE <>'PS') and NVL(BASE_PAL_FLG,'N')='Y'
		]]>
</select>

<!--  Changed for QR
<select id="validateLoc"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1)
			FROM MAST_WH_LOC
		WHERE CODE = upper(#locCode#)
		]]>
</select> -->

<select id="basePalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,uld_inventory u
	where t1.code=u.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and u.uld_key = UPPER(#uldKey#)
    and u.eic_flg='Y'
    and u.base_pal_flg='Y'
</select>
<select id="chkUldExt"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and OWNED_INV='Y' and LOC_CODE IS NOT NULL
		]]>
</select>
<select id="uldinMHS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,uld_inventory u
	where t1.code=u.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and u.uld_key = UPPER(#uldKey#)
</select>
<select id="lspinMHS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,lsp_inventory l
	where t1.code=l.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and l.LSP_NO = UPPER(#lspNo#)
</select>
<update id="sqlUpdateMovOrder" parameterClass="cargo.cms.uld.bo.ULDEICBO">
<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED',
		LM_USER_ID=#userId#,
		LM_DATE=sysdate
		where ULD = UPPER(#uldKey#)
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED' AND status <>'TIMEOUT'))
		
]]>
</update>
<select id="sqlUldImageList"  parameterClass="java.lang.String" resultClass="cargo.cms.uld.bo.ULDEICBO">
	select IMG_NAME imgName, (IMG_PATH||IMG_NAME) imgPath from FW_IMAGE_STORE  where IMG_SESSION_ID=#transactionId# and IMG_UPLOAD_DATE is not null
</select>

<select id="sqlULDShipmentCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_INVENTORY WHERE uld_key = UPPER(#uld_key#) 
</select>
<select id="sqlULDTransferTypeCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_INVENTORY WHERE uld_key = UPPER(#uld_key#) AND TRANSIT_TYPE IN ('TT','IF')
</select>
<!-- Queries for Requesting LSP, validation for qty rule configred Starts :: Anup -->
	<select id="sqlReqEmptyLSPConfig" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT RULE_VALUE as rulevalue FROM CMSRULES WHERE RULE_CODE=#PARAM#
	</select>
<!-- Queries for Requesting LSP, validation for qty rule configred Ends :: Anup -->
	
<!-- Amend ULD storage ends -->
<!-- Amend LSP storage Starts -->
<select id="sqlValidLSP"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM LSP_INVENTORY WHERE LSP_NO = UPPER(#lspNo#) and LOC_CODE IS NOT NULL
</select>

<select id="getShpmntCount"  parameterClass="cargo.cms.imprt.bo.LSPStorageBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_INVENTORY WHERE LSP_NO = UPPER(#lspNumber#) 
</select>
<select id="getHAWBShpCount" parameterClass="cargo.cms.imprt.bo.LSPStorageBO" resultClass="java.lang.Integer">
	SELECT count(1) FROM ASV_INVENTORY WHERE LSP_NO = UPPER(#lspNumber#)
</select>

<select id="getAmendLSPStorage"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.LSPStorageBO">
		select lsp_no lspNumber,
		target target,
		loc_code locCode ,
		loc_code locCodeOld,
		EMPTY_FLG emptyInd,
		locked lockStatus,
		lock_rqs lockInd,
		to_char(LM_DATE,'DDMONYY HH24MISS') lmDate,
		DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) as oldrefWt,
		DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) as refWt
		from lsp_inventory
		where lsp_no=#lspNo#
</select>


<update id="updateLSPStorage" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
update LSP_INVENTORY
set 
	EMPTY_FLG=#emptyInd#,
	LOC_CODE=#locCode#,
	LOCK_RQS=#lockInd#,
	LM_USER_ID=#userId#,
	LM_DATE=SYSDATE,
	REF_TR_NO=#lspNumber#,
	REF_TR_TYPE='AL',
	REF_TR_EVENT = 'AL',
	REF_TR_DATE=SYSDATE,
	REF_DOC_LINE_NO='1',
	STRG_DATE = sysdate,
	tr_type=#trtype#
	<isEqual  property="movOrderFlg"  compareValue="Y">
	 ,TARGET = null
	</isEqual>
	<isEqual  property="turnOffEntryIndicator"  compareValue="Y">
	 ,BINENTRY_MSG_RCVD_YN = 'N'
	</isEqual>
	<isEqual  property="updRefWt"  compareValue="Y">
	,REF_WT = #refWt#
	,REF_NET_WT = (#refWt# - NVL((select TARE_WT FROM mast_csd where CODE = #lspNumber#),0) )
	</isEqual>
	<isEqual  property="updRefWtNull"  compareValue="Y">
	,REF_WT = ''
	,REF_NET_WT = ''
	</isEqual>
	where LSP_NO=#lspNumber#
</update>
<update id="updateColdBoxStorage" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE COLD_BOX_PROFILE SET LOC_CODE=#locCode#	WHERE COLD_BOX=#lspNumber# AND NVL(DEL_YN,'N')='N'
</update>
<update id="updateLSPMovOrder" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED' , LM_DATE = SYSDATE
		where LSP = UPPER(#lspNumber#)
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
]]>
</update>
<update id="updateLSPShpmnt" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE AWB_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #lspNumber#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AL',
	   REF_TR_DATE = SYSDATE
	WHERE LSP_NO = #lspNumber#
</update>
<update id="updateLSPASVShpforHAWB" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE ASV_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE LSP_NO = #lspNumber#
</update>
<update id="updateLSPSrfShpmnt" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE imp_srf_awb_inventory 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   TR_TYPE = #trtype#
	WHERE LSP_NO = #lspNumber#
	  and srf_no in (select srf_no from awb_inventory ai where ai.lsp_no =#lspNumber# and ai.srf_no is not null)
</update>
<!-- Amend LSP storage ends -->
<!-- Added by yugandhar for Amend OBC CAR -->
 	<select id="imp_xom_getAWBNoListByFlightInfo" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			ICA.AWB_NO as awbNo,
			ICA.AWB_ORIGIN as orig,
			ICA.AWB_DEST as dest,
			ICA.AWB_PCS as pcs,
			ICA.AWB_WT as wt,
			ICA.SPL_CODE1 as splCode1,
			ICA.SPL_CODE2 as splCode2,
			ICA.SPL_CODE3 as splCode3,
			ICA.SPL_CODE4 as splCode4,
			ICA.SPL_CODE5 as splCode5,
			ICA.SPL_CODE6 as splCode6,
			ICA.SPL_CODE7 as splCode7,
			ICA.SPL_CODE8 as splCode8,
			ICA.SPL_CODE9 as splCode9,
			ICA.CONTENT as content,
			ICA.CC_CODE as ccCode,
			ICA.CATALOG as catalog,
			ICA.ECT_HANDLER as ectHandler,
			ICA.CSGNE_NAME as csgneName,
            ICA.CNS_CUST_NO as cnsCustNo,
			ICA.APPNTD_AGENT as appntdAgent,
            ICA.AGENT_CUST_NO as appntdAgentCode,
            ICA.SHPR_NAME as shipper,
            ICA.OBC_TYPE as obctype,
			ICS.LDG_POINT as ldgPoint,
			ICS.MANIFEST_PCS as manifestPcs,
			ICS.MANIFEST_WT as manifestWt,
			ICS.CNTG_FLT_CARR as cntgFltCarr,
			TO_CHAR(ICS.CNTG_FLT_DATE,'DDMONYY') as cntgFltDate,
			ICS.CNTG_FLT_DEST as cntgFltDest,
			ICS.CNTG_FLT_NO as cntgFltNo,
			ICS.CNTG_FLT_TIME as cntgFltTime,
			TO_CHAR(ICS.FLT_DATE, 'DDMONYY') as fltDate,
			ICS.FLT_KEY as fltKey,
			TO_CHAR(ICS.AWB_DATE, 'DDMONYY') as awbDate,
			TO_CHAR(ICA.LM_DATE,'DDMONYY HH24:MI') AS lmDate,
			ICA.AIRLN_RMK rmk,
			ICA.AIRLN_RMK oldRmk
		FROM
            IMP_CAR_AWB ICA 
            JOIN IMP_CAR_SHP ICS ON ICS.AWB_NO = ICA.AWB_NO AND ICS.AWB_DATE = ICA.AWB_DATE 
         	<!-- LEFT join IMP_XPS_OBC_MAIL IXOM on   IXOM.FLT_KEY = ICS.FLT_KEY and IXOM.FLT_DATE = ICS.FLT_DATE
            and IXOM.AWB_NO = ICS.AWB_NO and IXOM.AWB_DATE = ICS.AWB_DATE
            AND IXOM.CATALOG = 'IO' -->
		WHERE
			ICS.FLT_KEY = #fltKey# AND
			ICS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			ICA.CATALOG = #catalog# AND
			ICA.AWB_NO LIKE #awbNo# AND
			EXISTS (SELECT NULL FROM IMP_XPS_OBC_MAIL IXOM  WHERE   IXOM.FLT_KEY = ICS.FLT_KEY and IXOM.FLT_DATE = ICS.FLT_DATE
            and IXOM.AWB_NO = ICS.AWB_NO and IXOM.AWB_DATE = ICS.AWB_DATE
            AND IXOM.CATALOG = 'IO')
			ORDER BY ICA.AWB_NO asc
	</select>
	
	<select id="imp_xom_getOBCByAWB" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	FLT_DATE as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 
			ACT_PCS as actPcs, 
			ACT_WT as actWt,
			EST_PCS as estPcs,
			EST_WT as estWt,
			ORIG as orig, 
			DEST as dest, 
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			BD_ULD_KEY as bduldno,
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			TO_CHAR(LM_DATE,'DDMONYY HH24:MI') AS lmDate
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '' OR AWB_NO = #awbNo#)
		ORDER BY
			tagNo asc
	</select>
	<select id="imp_xom_getAgentCodeDesc" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE_DESC 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y' AND 
			CODE = #code#
	</select>
	<select id="imp_xom_getConsigneeCodeDesc" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE_DESC
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE = #code#
	</select>

	<select id="imp_xom_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE_DESC as appntdAgent,CODE as appntdAgentCode 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="imp_xom_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE as appntdAgentCode,CODE_DESC as appntdAgent
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
	<select id="imp_xom_fetchConsigneeCodeDesc" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE_DESC as csgneName,CODE as cnsCustNo
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND
			CODE = #code#
	</select>
	<select id="imp_xom_fetchConsigneeCode" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE as cnsCustNo,CODE_DESC as csgneName
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE_DESC = #codeDesc#
	</select>
	
	<update id="imp_xom_updateAWBCarShp" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_SHP SET 
			LDG_POINT = #ldgPoint#,
			MANIFEST_PCS = #manifestPcs#,
			MANIFEST_WT = #manifestWt#,
			CNTG_FLT_CARR = #cntgFltCarr#,
			CNTG_FLT_NO = #cntgFltNo#,
			CNTG_FLT_DEST = #cntgFltDest#,
			CNTG_FLT_TIME = #cntgFltTime#,
			CNTG_FLT_DATE = TO_DATE(#cntgFltDate#,'DDMONYY'),
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>

	<update id="imp_xom_updateAWBCarShpOBC" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_SHP SET 
			LDG_POINT = #ldgPoint#,
			MANIFEST_PCS = #manifestPcs#,
			MANIFEST_WT = #manifestWt#,
			BULK_PCS =#pcs#,
			BULK_WT =#wt#,
			RECD_PCS =#pcs#,
			RECD_WT =#wt#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<!--<update id="imp_xom_updateAWBCarAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB SET 
			AWB_ORIGIN = #orig#,
			AWB_DEST = #dest#,
			AWB_PCS = #pcs#,
			AWB_WT = #wt#,
			AWB_RMK = #rmk#,
			SPL_CODE1 = #splCode1#,
			SPL_CODE2 = #splCode2#,
			SPL_CODE3 = #splCode3#,
			SPL_CODE4 = #splCode4#,
			SPL_CODE5 = #splCode5#,
			SPL_CODE6 = #splCode6#,
			SPL_CODE7 = #splCode7#,
			SPL_CODE8 = #splCode8#,
			SPL_CODE9 = #splCode9#,
			CONTENT = #content#,
			CC_CODE = #ccCode#,
			LM_USER_ID  = #lmUserId#,
			LM_DATE = sysdate 
		 WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>-->

	<update id="imp_xom_updateAWBCarAWBOBC" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB SET 
			AWB_ORIGIN = #orig#,
			AWB_DEST = #dest#,
			AWB_PCS = #pcs#,
			AWB_WT = #wt#,
			AIRLN_RMK = #rmk#,
			BULK_PCS =#pcs#,
			BULK_WT =#wt#,
			ECT_HANDLER = #ectHandler#,
			AGENT_CUST_NO =#appntdAgentCode#,
			APPNTD_AGENT = #appntdAgent#,
			CNS_CUST_NO = #cnsCustNo#,
			CSGNE_NAME = #csgneName#,
			SPL_CODE1 = #splCode1#,
			SPL_CODE2 = #splCode2#,
			SPL_CODE3 = #splCode3#,
			SPL_CODE4 = #splCode4#,
			SPL_CODE5 = #splCode5#,
			SPL_CODE6 = #splCode6#,
			SPL_CODE7 = #splCode7#,
			SPL_CODE8 = #splCode8#,
			SPL_CODE9 = #splCode9#,
			CONTENT = #content#,
			CC_CODE = #ccCode#,
			SHPR_NAME = #shipper#,
			OBC_TYPE = #obctype#,
			LM_USER_ID  = #lmUserId#,
			LM_DATE = sysdate 
		 WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<insert id="imp_insertAWBEventsIO" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
        INSERT INTO AWB_EVENTS 
	  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
	  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
	   VALUES  
	  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY'), 'ADIOCAR', 'Amend Dummy IO CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
	  'I', AWB_event_SEQ.nextval
	   , NULL,nvl(#pcs#,0) ,  nvl(#wt#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
     
    </insert>
    <update id="imp_xom_updateFullAWBForImport" parameterClass="map">
		UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = #awbNo#,
			AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'),
			AWB_ORIG = #awbOrig#,
			AWB_DEST = #awbDest#,
			ECT_HANDLER = #ectHandler#,
			CNS_CUST_NO = #cnsCustNo#,
			APPNTD_AGENT = #appntdAgent#,
			LM_DATE = sysdate
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = #catalog# AND
			TAG_NO = #tagNo#
	</update>
	<update id="imp_xom_removeAWB" parameterClass="java.lang.String">
	     UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = '',
			AWB_DATE=''
		    WHERE
			TAG_NO = #tagNo#
	</update>
	<update id="imp_xom_amendAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB_INVENTORY SET
		LM_DATE = SYSDATE,
		LOCN_PCS = #pcs#, 
		LOCN_WT = #wt#,
		BULK_WT = #wt#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
		<isNotEmpty prepend="AND" property="seqNo">
			SEQ_NO = #seqNo# 
		</isNotEmpty>
		
	</update>
	<update id="imp_Amend_xom_updateAWBToAwb" parameterClass="map">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = #totalPcs#, 
		MANIFEST_WT = #totalWt# ,
		PCS =#totalPcs#,
		WT =#totalWt#,
		LM_USER_ID = #lmUserId#,
		AGENT_NAME = #agentName#,
		SHIPPER_NAME = #shipperName#,
		AGENT_CODE = #agentcode#,
		SPL_CODE1 = #spl1#,
		SPL_CODE2 = #spl2#,
		SPL_CODE3 = #spl3#,
		SPL_CODE4 = #spl4#,
		SPL_CODE5 = #spl5#,
		SPL_CODE6 = #spl6#,
		SPL_CODE7 = #spl7#,
		SPL_CODE8 = #spl8#,
		TR_TYPE=#trType#,
		SPL_CODE9 = #spl9#
		WHERE
		AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</update>

<!-- ##################### Close/UnClose Flight  : Start   :Santosh    ###############################################-->	

	<select id="importcloseflightsearch"  parameterClass="cargo.cms.imprt.bo.FlightBO" 
	 resultClass="cargo.cms.imprt.bo.FlightBO"> 
	SELECT  
		A.TR_NO trNo,B.FLT_KEY flightKey,
		TO_CHAR(B.SCH_DATE,'DDMONYY') flightDate,
		PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A') AS ata,
		TO_CHAR(B.RAMP_COMPL_DATE,'DDMONYY') as rmpComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.RAMP_COMPL_TIME,'0000')),3,2),':') rmpComplTime, 
		TO_CHAR(B.DOC_COMPL_DATE,'DDMONYY') as docComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.DOC_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.DOC_COMPL_TIME,'0000')),3,2),':') docComplTime,
		TO_CHAR(B.WHSE_COMPL_DATE,'DDMONYY') as bdComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.WHSE_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.WHSE_COMPL_TIME,'0000')),3,2),':') bdComplTime,
		TO_CHAR(B.FLT_CLS_DATE,'DDMONYY') as fltClsDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.FLT_CLS_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.FLT_CLS_TIME,'0000')),3,2),':') fltClsTime,
		B.FLT_CLS_USER_ID fltClsStfId, B.UNCLOSE_RMK unClsRmk
	FROM  FLT_OPR A , FLT_OPR_EVENTS B  
	WHERE A.CARR_CODE=B.CARR_CODE 
		AND	A.FLT_NO=B.FLT_NO
		AND	A.SCH_DATE = B.SCH_DATE 
		AND A.FLT_TYPE = B.FLT_TYPE
		AND	B.FLT_TYPE ='A' 
		AND	B.CARR_CODE=NVL(#carrierCode#, B.CARR_CODE)
		AND	B.FLT_NO=NVL(#flightNo#, B.FLT_NO)
		AND	B.SCH_DATE=TO_DATE(#flightDate#,'DDMONYY')
	ORDER BY TO_CHAR(A.SCH_TIME,'0000')
	</select>
	
	
	<update id="updateflightclose" parameterClass="cargo.cms.imprt.bo.FlightBO">
	UPDATE 
			FLT_OPR_EVENTS 
	SET 
			FLT_CLS_DATE = SYSDATE,
			FLT_CLS_TIME = TO_CHAR(SYSDATE,'HH24MI'),
			FLT_CLS_YN	 ='Y',
			FLT_CLS_USER_ID	= #fltClsStfId#,
			UNCLOSE_RMK = '',
			<!-- UNCLOSE_RMK = NVL(#unClsRmk#, UNCLOSE_RMK),-->
			LM_USER_ID= #fltClsStfId#, 
			LM_DATE = SYSDATE,
			TR_TYPE='CLFLT'
	WHERE	TR_NO=#trNo#
	</update>
	
	<update id="updateActualDateForDummyFltimp" parameterClass="cargo.cms.imprt.bo.FlightBO">
		UPDATE flt_opr set act_date = sch_date, act_time = sch_time , LM_USER_ID= 'SYSTEM' , LM_DATE = SYSDATE , tr_type = 'MTDFL' where TR_NO = #trNo#
		AND EXISTS (SELECT NULL FROM mast_carrier where nvl(dummy_carr,'N') = 'Y' AND code = flt_opr.carr_code) 
	</update>
	
	<insert id="insrrecrdtofltoprlogforimport" parameterClass="cargo.cms.imprt.bo.FlightBO">
	insert into flt_opr_log (FLT_KEY,SCH_DATE,FLT_TYPE,EVENT,CR_DATE,CR_USER_ID) VALUES (#flightKey#,#flightDate#,'A',UPPER(#action#),SYSDATE,#fltClsStfId#)
	</insert>
	
	<update id="updateflightunclose" parameterClass="cargo.cms.imprt.bo.FlightBO">
	UPDATE 
				FLT_OPR_EVENTS 
	SET 
				FLT_CLS_DATE = '',
				FLT_CLS_TIME='',
				FLT_CLS_YN='N',
				FLT_CLS_USER_ID='',
				UNCLOSE_RMK=#unClsRmk#,
				LM_USER_ID= #fltClsStfId#, 
				LM_DATE = SYSDATE,
				TR_TYPE='UCFLT'
	WHERE
				TR_NO=#trNo#
	</update>
	
	<update id="updateDCEndroseInFltOprEvnts" parameterClass="java.util.HashMap">
		UPDATE FLT_OPR_EVENTS SET ENDORSED_DC_BY=#endrDCBy#, ENDORSED_DC_DATE=SYSDATE WHERE TR_NO=#trNo#
	</update>

	<!-- if count(1) > 0 then err: 'Cannot close flight as CIR is not maintained' and not exists (SELECT null FROM V_DDT_DTL 
		WHERE FLT_KEY = c.Flt_KEY 
		AND FLT_DATE = c.FLT_DATE 
		AND AWB_NO = c.awb_no 
		AND AWB_DATE = c.AWB_DATE 
		AND shp_trf_type in ('TT','IF'))	 -->
	<select id="imp_CIRValidate"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE		
		LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
						from v_ddt_dtl  where (shp_trf_type = 'TT'  or trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
           			ON c.AWB_NO = ddt.AWB_NO AND c.AWB_DATE = ddt.AWB_DATE AND c.FLT_KEY = ddt.FLT_KEY AND c.FLT_DATE = ddt.FLT_DATE
		where (c.MANIFEST_PCS != (c.RECD_PCS+nvl(tt_pcs,0)) or c.MANIFEST_WT != (c.RECD_WT+nvl(tt_wt,0))) AND CIR_PROC_USER IS NULL 
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 		
		and d.BYPASS_REL != 'Y'			
		]]>
	</select>
	
	<select id="imp_getcargoirrgdiscount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1)
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE
		where CIR_PROC_USER IS NOT NULL
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE =TO_DATE(#flightDate#,'DDMONYY')
		AND D.CATALOG NOT IN ('TM','IO')
		And not exists 
		(select null from cst_csgnm cn 
		join cst_subm s on cn.flt_key = s.flt_key and cn.flt_date = s.flt_date 
		and cn.flt_type = s.flt_type 
		and cn.recv_rec_type = s.rec_type and cn.ver_no = s.ver_no
		where s.send_status = 'A' and cn.recv_rec_type = 'BDS' And s.msg_type is null
		and cn.flt_type = 'I' 
		and cn.flt_key = c.flt_key 
		and cn.flt_date = c.flt_date 
		and cn.awb_no = c.awb_no)
	]]>
	</select>
	
	<!--  Changed for QR
	<select id="imp_ByPassShpCount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE
		where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND CIR_PROC_USER IS NULL 
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND d.BYPASS_REL = 'Y'
		]]>
	</select> -->
	
	<!--  Changed for QR
	<select id="imp_gettermaccount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
	select count(1)
    FROM DDT_SHP_TRF_DTL DTL
    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltkey# AND MSG.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
    where DTL.TRF_TYPE = 'TT' AND shp.awb_no IN (    
    select  c.awb_no 
	from Imp_CAR_SHP c
	where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND c.CIR_PROC_USER IS NULL
	AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
	AND not exists (select null from IMP_CAR_AWB where awb_no = c.awb_no and awb_date = c.awb_date and catalog = 'TA'))	
    ]]>
    </select>	 -->
	 
	<!--  Changed for QR
	<select id="imp_checkForECANFltClose" parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from imp_flt_fst_events where FST_FLT_CLS_DATE is not null
		and flt_key = #fltkey# and sch_date = to_date(#flightDate#,'DDMONYY') 
		and flt_type = 'A'
	]]>
	</select> -->
	
	<!--  Changed for QR
	<select id="fetchAwbValues"  parameterClass="map" resultClass="cargo.cms.imprt.bo.TrackingBO">		
	<![CDATA[
		SELECT  b.AWB_NO awbNo,To_Char(b.AWB_DATE,'DDMONYY')  awbDate,
		c.FLT_KEY fltKey, To_Char(c.FLT_DATE,'DDMONYY') fltDate , b.PCS qtyTotPcs , b.CARR_CODE carrCode ,
		c.CIR_PCS_TYPE cirPcsType , c.DOC_DISC docDisc 
		FROM AWB b 	, IMP_CAR_SHP c
		where  b.AWB_NO = c.AWB_NO and  b.AWB_DATE = c.AWB_DATE and b.awb_type ='I'	
		and c.FLT_KEY = #fltkey# and  c.FLT_DATE = #flightDate#
		]]>
	</select> -->
	
	<select id="getFsuCheck"  parameterClass="cargo.cms.imprt.bo.TrackingBO" resultClass="java.lang.Integer">			
		<![CDATA[		
		select count(1) from AWB_SHP_STS 
		where 	AWB_NO = #awbNo# AND AWB_DATE =  TO_date(#awbDate#,'DDMONYY')
		AND COD_FSU_STS = #status# 
			]]>
		<isNotEmpty prepend="AND" property="fltKey">
			FLT_NO = #fltKey# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fltDate">
			FLT_DATE = To_Date(#fltDate# , 'DDMONYY')
		</isNotEmpty>
	</select>
	
	<parameterMap id="FSURCFMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuRcf" parameterMap="FSURCFMap" >
		{call PKG_FSU.FSU_RCF(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="FSUDISCMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DISCTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<parameterMap id="FSURCTMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuRct" parameterMap="FSURCTMap" >
		{call PKG_FSU.FSU_RCT(?,?,?,?)}
	</procedure>
	<procedure id="callPkgFsuDisc" parameterMap="FSUDISCMap" >
		{call PKG_FSU.FSU_DISC(?,?,?,?,?,?)}
	</procedure>
	<parameterMap id="FSUTFDMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuTfd" parameterMap="FSUTFDMap" >
		{call PKG_FSU.FSU_TFD(?,?,?)}
	</procedure>

	<parameterMap id="FSUNFDMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuNfd" parameterMap="FSUNFDMap" >
		{call PKG_FSU.FSU_NFD(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="FSUDLVMap" class="map" >	
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuDlv" parameterMap="FSUDLVMap" >
		{call PKG_FSU.FSU_DLV_POST_SRF(?,?)}
	</procedure>
	<select id="fetchSrfValues"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TrackingBO">			
		<![CDATA[	
		SELECT a.SRF_NO srfNo, a.AWB_NO awbNo,To_Char(a.AWB_DATE,'DDMONYY')  awbDate,
		a.INV_PCS qtyTotPcs , CIR_PCS_TYPE cirPcsType , DOC_DISC docDisc 
		FROM IMP_SRF_FLT a 
		join AWB b on a.AWB_NO = b.AWB_NO and  a.AWB_DATE = b.AWB_DATE and b.awb_type ='I'
		left join IMP_CAR_SHP c on a.AWB_NO = c.AWB_NO and  a.AWB_DATE = c.AWB_DATE and 
			 	  a.FLT_KEY = c.FLT_KEY and  a.FLT_DATE = c.FLT_DATE
		where a.SRF_No = #srfNo#	 and rownum = 1
		]]>
	</select>
	<select id="srfFsuCheck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE SRF_NO != #srfNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<parameterMap id="srfMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="fun_val_cc_post_srf" parameterMap="srfMap" >
		{ ? = call pkg_imp.fun_val_cc_post_srf(?) }
	</procedure>
	
	<!-- Changed for QR
	<select id="imp_splitFltKeyQuery"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		select flightKey , flightNo
		from (select f.CARR_CODE flightKey, f.FLT_NO flightNo
		from imp_cdif c
		join imp_srf_flt s on s.srf_no = c.srf_no
		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		where c.cdif_no = #FLTKEY# 
		order by flt_date desc) a
		where rownum = 1 
	</select> -->
	
	<parameterMap id="Hmap" class="map" >
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	
	<procedure id="prc_get_srf_flt" parameterMap="Hmap" >
		{call prc_get_srf_flt(?,?,?,?)}
	</procedure>
	
	<!--  Changed for QR 
	<select id="getSrfNoForDHL" parameterClass="map" resultClass="java.lang.String">
		select srf_no from imp_srf where awb_no = #AWBNO# and awb_Date = to_date(#AWBDATE#,'DDMONYY') and STATUS = 'ISSUED'
	</select> -->
	
	
	<insert id="insertAwbShpSts" parameterClass="cargo.cms.imprt.bo.TrackingBO" >
	INSERT INTO AWB_SHP_STS(AWB_NO, AWB_DATE,FLT_NO, FLT_DATE, DAT_FSU_CRE, COD_FSU_STS, COD_FSU_SND, DES_FSU_DTS, QTY_TOT_PCS,COD_FSU_DIS)
	values (#awbNo# , #awbDate# , #fltKey# , #fltDate# ,sysdate , #status# , #codeFsuSend# , #msg# , #qtyTotPcs#,#discType#)
	</insert>

	<!--  Changed for QR 
	<select id="imp_getAgentInfo" parameterClass="cargo.cms.imprt.bo.FlightBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">	
	<![CDATA[
		 select distinct a.APPNTD_AGENT appointedAgent, a.AGENT_CUST_NO appointedAgentCode , s.CARR_CODE carrCode 
		 from imp_car_awb a 
		 join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date	
		 where s.flt_key = #flightKey# and s.flt_date = #flightDate#
	 ]]>
	</select> -->
	
	<select id="imp_getBrkDiscCount"  parameterClass="map"  resultClass="java.lang.Integer">	
		Select count(1)
		from CST_BD_DISC
		where FLT_KEY = #fltkey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	

	<select id="imp_getBrkDisSubByCustoms"  parameterClass="map"  resultClass="java.lang.Integer">	
		Select count(1)
		from CST_SUBM
		where FLT_KEY = #fltkey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')	
		AND BD_COMPLETE IS NOT NULL AND BD_COMPLETE='Y'
		AND REC_TYPE = 'BDS'
	</select>

<!-- ##################### Close/UnClose Flight  : End   :Santosh    ###############################################-->	

<!-- Query for Declare BD Complete Starts :: Anup -->

	<select id="imp_dbdc_getFlightForDeclare" parameterClass="cargo.cms.imprt.bo.DBDCSearchBO"
		resultClass="cargo.cms.imprt.bo.DBDCFltBO">
		SELECT 
		   A.FLT_KEY as fltKey, 
		   A.FLT_KEY as fltKeyDisp, 
		   TO_CHAR(A.SCH_DATE,'DDMONYY') as fltDateDisplay, 
		   TO_CHAR(A.SCH_DATE,'DDMONYY') as fltDate, 
           PKG_COMMON.get_flt_ata(A.FLT_KEY, A.SCH_DATE, 'A','DD') AS ata,        
		   TO_CHAR(B.WHSE_COMPL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(NVL(B.WHSE_COMPL_TIME,null),'0000')),0,2)|| DECODE(B.WHSE_COMPL_TIME, null, '', ':') ||  SUBSTR(TRIM(TO_CHAR(NVL(B.WHSE_COMPL_TIME,null),'0000')),3,4) as bdCompleteDateTime,
		   TO_CHAR(B.WHSE_COMPL_DATE, 'DDMONYY') as bdCompleteDate,
		   B.WHSE_COMPL_USER_ID as bdCompleteStaffId,
		   C.LM_USER_ID as genUserId,
		   TO_CHAR(C.LM_DATE, 'DDMONYY HH24:MI') AS genDate,
		   RAMP_COMPL_YN as rampComplete, 
		   FLT_CLS_YN as fltClose 
		   FROM  FLT_OPR_EVENTS B , FLT_OPR A 
		   LEFT JOIN IMP_FLT_HAND_SUMMARY C  
		   		ON C.FLT_KEY = A.FLT_KEY AND 
		   		C.FLT_DATE = A.SCH_DATE and rep_module = 'IW'
		WHERE
			A.FLT_KEY	 = B.FLT_KEY  AND
			A.SCH_DATE	 = B.SCH_DATE AND
			A.FLT_TYPE	 = B.FLT_TYPE AND
			A.FLT_TYPE	 = 'A' AND
			A.FLT_KEY LIKE #fltKey# AND
			A.SCH_DATE = #fltDate#
		<dynamic prepend="ORDER BY ">
        	<isNotEmpty property="sortOrder.sortField">
            	$sortOrder.sortField$
           	</isNotEmpty>
           	<isEmpty property="sortOrder.sortField">
            	fltDateDisplay 
           	</isEmpty>
        </dynamic>
	</select>
	<select id="imp_dbdc_getFlightForDeclareCOUNT" parameterClass="map" resultClass="java.lang.Integer">
		SELECT 
		   COUNT(1) AS totalRowCount 
		   FROM  FLT_OPR_EVENTS B , FLT_OPR A LEFT JOIN IMP_FLT_HAND_SUMMARY C  
		   		ON C.FLT_KEY = A.FLT_KEY AND 
		   		C.FLT_DATE = A.SCH_DATE and rep_module = 'IW'
		WHERE
			A.FLT_KEY	 = B.FLT_KEY  AND
			A.SCH_DATE	 = B.SCH_DATE AND
			A.FLT_TYPE	 = B.FLT_TYPE AND
			A.FLT_TYPE	 = 'A' AND
			A.FLT_KEY LIKE #fltKey# AND
			A.SCH_DATE = #fltDate#
	</select>


	<select id="imp_dbdc_getUldForDeclare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO"
		resultClass="cargo.cms.imprt.bo.DBDCUldBO">
		SELECT
			U.ULD_KEY as uldKey,
			U.LOC_CODE as locn, 
			'N' as bup,
			R.EIC_IND as eic,
			R.EMPTY_IND as empty,
			U.DAM_IND as cond, 
			(TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':')) as bdDateTime, 
			R.BRKDN_COMPL_YN as uldLocnCfm,
			decode(EMPTY_FLG, 'Y', 'EMPTY', 'LOAD') || decode(RESV_FLG, 'Y', ', RESERVED') as currentStatus,
			R.BRKDN_COMPL_YN as bdComplete,
			NVL(R.CHKIN_YN, 'N') as chkinStatus,
			U.HANDLING_MODE as hadlgMode,
			(SELECT TRF_TYPE from (SELECT DDT.TRF_TYPE FROM V_DDT_DTL DDT WHERE DDT.FLT_KEY = #fltKey# AND DDT.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND DDT.uld_key = U.ULD_KEY) where ROWNUM=1) as traType,			
			CASE WHEN (SELECT COUNT(1)
		  	FROM V_FFM_DTL V 
		  	JOIN IMP_CAR_AWB AWB ON V.AWB_NO = AWB.AWB_NO AND V.AWB_DATE =  AWB.AWB_DATE
		  	AND AWB.BYPASS_REL = 'Y'
		  	WHERE
			V.FLT_KEY = R.FLT_KEY AND
			V.FLT_DATE = R.FLT_DATE AND    
      		V.ULD_KEY = R.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END as byPassInd			
		FROM
			ULD_INVENTORY U 
			JOIN IMP_RAMP_CHK_DTL R 
			ON U.ULD_KEY = R.ULD_KEY
		WHERE
			R.FLT_KEY = #fltKey# AND
			R.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND 
			R.CFM_STATUS = 'CONFIRMED' 
	</select>
	
	<select id="imp_dbdc_getBypassShpCountULD" parameterClass="cargo.cms.imprt.bo.DBDCUldBO"
		resultClass="java.lang.Integer">
		  SELECT COUNT(1)
		  FROM V_FFM_DTL V 
		  JOIN IMP_CAR_AWB AWB ON V.AWB_NO = AWB.AWB_NO AND V.AWB_DATE =  AWB.AWB_DATE
		  AND AWB.BYPASS_REL = 'Y'
		  WHERE
			V.FLT_KEY = #fltKey# AND
			V.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#
     </select>
     
     
     <!-- Changed for QR 
	<select id="imp_dbdc_checkConfirmULD" parameterClass="cargo.cms.imprt.bo.DBDCFltBO"
		resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_RAMP_CHK_DTL
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate# AND
			 CHKIN_YN = 'Y' AND
			 CFM_STATUS = 'UNCONFIRMED'
		SELECT count(1)
		FROM IMP_RAMP_CHK_DTL
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate# AND
			 CHKIN_YN = 'Y' AND
			 EMPTY_IND = 'N' and
			 LENGTH(uld_key) >= 9
	</select> -->
	
	<update id="imp_dbdc_declare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   WHSE_COMPL_USER_ID = #bdCompleteStaffId#,
		   WHSE_COMPL_DATE = sysdate,
		   WHSE_COMPL_TIME = TO_CHAR(sysdate, 'HH24MI'),
		   LM_USER_ID  = #bdCompleteStaffId#, 
		   LM_DATE = sysdate,
		   TR_TYPE = #trtype#
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #fltDate# AND
			 FLT_TYPE	 = 'A'
	</update>

	<update id="imp_dbdc_undeclare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   WHSE_COMPL_USER_ID = NULL,
		   WHSE_COMPL_DATE = NULL,
		   WHSE_COMPL_TIME = NULL,
		   LM_USER_ID  = #bdCompleteStaffId#, 
		   LM_DATE = sysdate,
		   TR_TYPE = #trtype#
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #fltDate#
			 AND FLT_TYPE	 = 'A'
	</update>
	
	<select id="imp_dbdc_checkFlight"  parameterClass="cargo.cms.imprt.bo.DBDCFltBO"  
		resultClass="java.lang.Integer">
			SELECT count(1) FROM FLT_OPR WHERE 
				FLT_KEY=#fltKey#
				AND TO_CHAR(SCH_DATE, 'DDMONYY')= #fltDate# 
				AND FLT_TYPE='A'
   	</select>

<!-- Query for Declare BD Complete Ends :: Anup -->
<!--
	==============================================================================================
		START OF CREATE IMPORT AWB STORAGE
	==============================================================================================
	-->
	<select id="imp_Check_accCtrl" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) 
		  from sec_role_sub_function rsf
		  join sec_role_function rf on rsf.ROLE_CODE = rf.ROLE_CODE
		  join sec_user_role ur on ur.ROLE_NAME = rf.ROLE_CODE
		  where rsf.ENABLE_YN = 'Y' and ur.USER_ID = #userId# and rf.FUNCTION_CODE = 'IMP_71' and rsf.SUB_FUNCTION_CODE = 'IMP_71_002'
	</select>
	
	<select id="imp_Check_accCtrl3" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) 
		  from sec_role_sub_function rsf
		  join sec_role_function rf on rsf.ROLE_CODE = rf.ROLE_CODE
		  join sec_