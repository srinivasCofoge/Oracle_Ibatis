
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='Y' -->
			SCAN_TAG_NO IS NOT NULL AND ((AWB_NO IS NOT NULL AND AWB_NO like '%M%') OR AWB_NO IS NULL)
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY XPS.TAG_NO
	</select>
	
	<select id="TransitMailPAWBTagDesktopSearch"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,	
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='Y' -->
			AWB_NO IS NOT NULL AND AWB_NO not like '%M%'
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY XPS.TAG_NO
	</select>
	
	<select id="sqlQueryTransitMailSummary"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
    fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo,manulaPc,manualWt,scannedPc,scannedWt,b.dest as awbDest,b.pcs as awbPc,TRIM(TO_CHAR(b.wt,'99999999999999999.9')) as awbWt
    FROM(
	select 
		fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo,
		decode(sum(manualPc),null,'',sum(manualPc)) AS manulaPc,
    TRIM(TO_CHAR(sum(manualWt),'99999999999999999.9')) AS manualWt,
   	decode(sum(scannedPc),null,'',sum(scannedPc)) AS scannedPc,
    TRIM(TO_CHAR(sum(scannedWt),'99999999999999999.9')) AS scannedWt
    from(
		  SELECT 
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			SUBSTR(XPS.AWB_NO,1,3)||'-'||SUBSTR(XPS.AWB_NO,4) as awbNo, 
      XPS.AWB_NO as awbNoDisp, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo,
			(select a.ACT_PCS from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='N'
		      ) as manualPc,
	      	(select a.ACT_WT from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='N'
			      ) as manualWt,
	      	(select a.ACT_PCS from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='Y'
			      ) as scannedPc,
	      	(select a.ACT_WT from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='Y'
			      ) as scannedWt
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			XPS.AWB_NO is not null
		ORDER BY
			XPS.AWB_NO
		)where 1=1
		group by fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo
		order by awbNo) A, AWB B WHERE B.AWB_NO = A.awbNoDisp AND B.AWB_DATE = A.awbDate
	</select>
	 <update id="sqlReducePcWtTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ACT_PCS = NVL(ACT_PCS,0) - NVL(#pcs#,0), 
			ACT_WT  = NVL(ACT_WT,0) - NVL(#wt#,0),       
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bdULDKey#
			AND DEST = #dest# 
	</update>
	
	
	 <delete id="sqlDeleteTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		DELETE FROM IMP_XPS_OBC_MAIL
		WHERE
			SEQ_NO=#xpsSeqNo# 
	</delete>
	
	 <update id="sqlUpdateTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
			UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey# ,
			RMK = UPPER(#rmk#) 
		 WHERE
			SEQ_NO=#xpsSeqNo#
	</update>
	
	
	<select id="sqlGetTMFligtAta"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	to_char(SCH_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(FLT_KEY,SCH_DATE, 'A')  ata,
			CARR_CODE carrCode,
			(SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as mailAsCargo
			FROM FLT_OPR
		 WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') 
		</select>
		
		
	<update id="reducePcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS - #pcs#),
		    LOCN_WT    = (LOCN_WT  - #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    <update id="reducePcsWtForTrTagOnUpdate" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = ((LOCN_PCS -  #oldPcs#) + #pcs#),
		    LOCN_WT    = ((LOCN_WT  - #oldWt#) + #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate,
	     WHERE SEQ_NO = #seqNo#
    </update>
    
    <!-- Changed for QR :: RANJITH -->
    <!--  
     <delete id="sqlDeleteAwbStrgTagRecord" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		DELETE FROM IMP_AWB_STRG_DTL
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			TAG_NO = #tagNo# AND
			chkin_uld_key = #bdULDKey#
	</delete>
	-->
	<select id="sglGetInvoiceNoSeq" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(invoice_no_seq.nextVal,'00000000') from dual
	</select>
	
	<select id="sqlGetPcAndWtForTransitMailTag"  parameterClass="java.lang.String" resultClass="java.lang.String" >
		 SELECT 
		 	NVL(LOCN_PCS,0) || '/' || NVL(LOCN_WT,0) pcWt
		 	FROM AWB_INVENTORY
		 WHERE  
			SEQ_NO = #seqNo#
		</select>
	
	<delete id="sqlDeleteInventoryForTransitMailTag"  parameterClass="java.lang.String">
		 DELETE FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo#
		</delete>
	
	<!-- Changed for QR :: RANJITH -->	
	<update id="sqlUpdateRecvPcWtForTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =  NVL(RECD_PCS,0)+NVL(#pcs#,0),
			RECD_WT =  NVL(RECD_WT,0)+NVL(#wt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #userID#
		WHERE 	
		AWB_NO = UPPER(#awbNo#) AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
		FLT_KEY = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>	
		
	<!-- Changed for QR :: RANJITH -->
	<update id="sqlReduceRecvPcWtForTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =  NVL(RECD_PCS,0)-NVL(#pcs#,0),
			RECD_WT =  NVL(RECD_WT,0)-NVL(#wt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #userID#
		WHERE 	
		AWB_NO = UPPER(#awbNo#) AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
		FLT_KEY = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
		
	<select id="sqlQueyGetUldInvCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from uld_inventory where uld_key = #uldKey# and (OWNED_INV='Y' or loc_code is not null)
	</select>
	
	<select id="sqlQueyGetLspInvCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from lsp_inventory where lsp_no = #lspNo#
	</select>	
		
	<insert id="sqlMailInsertLspInv" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	 	 insert into LSP_INVENTORY
	 	 (LSP_NO,EMPTY_FLG,LOC_CODE,LM_DATE,LM_USER_ID,CR_DATE,CR_USER_ID,STRG_DATE,LSP_TYPE,REF_TR_TYPE,REF_TR_EVENT)
	 	 values(#lspNo#,'Y',#locCode#,sysdate,#userID#,sysdate,#userID#,sysdate,substr(#lspNo#,0,1),'TM','MAILTAG')
	 </insert>
	 

	
	<!-- Transit Mail Tag :: Desktop :: Ranjith :: Ends  -->
     
    <!-- Update TM Tag for Maintain/Delete CAR :: Start-->
    
    <!-- Changed for QR :: RANJITH -->
    <!--
    <select id="sqlfetchXPSDataforCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO" >
    	select LSP_NO lspNo, act_pcs locnPcs, act_wt locnWt, dest awbDestination, dam_ind damInd, ULD_KEY uldNo, locn locnCode from IMP_XPS_OBC_MAIL where flt_key = #fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') 
		and dest=#awbDestination# and catalog='TM' and awb_no is null
	</select>
     
     -->
     <select id="sqlGetSeqNoForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locnCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
   </select>
	
	
	<update id="updatePcsWtForTrTaginCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #locnPcs#),
		    LOCN_WT    = (LOCN_WT  + #locnWt#),
		    LM_USER_ID = #lmUserId#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    
    
    <insert id="insertPcsWtForTrTagforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locnCode#,
	 #locnPcs#,#locnWt#,#damInd#,#lmUserId#, sysdate,
	 #lmUserId#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldNo#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM')
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updatePcsWtForTMTaginCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =NVL(#locnPcs#,0),
			RECD_WT =  NVL(#locnWt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #lmUserId#
		WHERE 	
		UPPER(AWB_NO) = UPPER(#awbNo#) 
		AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		UPPER(FLT_KEY) = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
     -->
     
     <!-- Update TM Tag for Maintain/Delete CAR :::End-->
<!--     Added by Shilpa for Flight Information starts-->
<select id="ext_fetch_flightInfo" parameterClass="cargo.cms.external.bo.ExtFlightBO" resultClass="cargo.cms.external.bo.ExtFlightBO" >
		SELECT      TO_CHAR(OPR.TR_NO) TXNNO, 
                  OPR.CARR_CODE FLIGHTCARR, 
                  OPR.FLT_NO FLIGHTNO, 
                  TO_CHAR(OPR.SCH_DATE,'DDMONYY') SCHDATE, 
                  TO_CHAR(OPR.EST_DATE,'DDMONYY') ESTDATE,
                  TO_CHAR(OPR.ACT_DATE,'DDMONYY') ACTDATE,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') HRANDMINSCH,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),3,4), ':') HRANDMINEST,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),3,4), ':') HRANDMINACT,
                  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.STATUS AND CODE_TYPE='FLT_STATUS') ARRDEPSTATUS,
                  OPR.ACFT_PRK_BAY GATE, FLT_KEY  FLIGHTKEY, ORIG AS ORIGINATION, DEST AS DESTINATION,
                  FLT_TYPE as flightType,
                  FLT_NO as flightNo,
                  ACFT_TYPE AS airCraftType,
                  (select STRAGG(STRINGDELIM(t22.off_point, '/')) 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = OPR.FLT_KEY
                  and      t11.sch_date =  TO_CHAR(OPR.SCH_DATE,'DDMONYY')
                  and      t11.flt_type = 'D')
                  as portOfCall
                 FROM FLT_OPR OPR WHERE
			FLT_TYPE = #flightType# AND
		    SCH_DATE  BETWEEN TO_DATE(#schDate#, 'ddMONyy') AND TO_DATE(#schDateTo#, 'ddMONyy')
    <dynamic prepend="AND">
			<isNotEmpty property="fltKey">
				 OPR.flt_key = #fltKey#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="origination">
				 OPR.DEST = #origination#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="flightCarr">
				 OPR.CARR_CODE = #flightCarr#
			</isNotEmpty>
		</dynamic>
		ORDER	BY SCHDATE ASC,NVL(to_date(estDate||HRANDMINEST,'DDMONYYHH24:MI'),to_date(SCHDATE||HRANDMINSCH,'DDMONYYHH24:MI')) ASC
	</select>
	<select id="ext_fetch_flightInfo1" parameterClass="cargo.cms.external.bo.ExtFlightBO" resultClass="cargo.cms.external.bo.ExtFlightBO" >
		SELECT      TO_CHAR(OPR.TR_NO) TXNNO, 
                  OPR.CARR_CODE FLIGHTCARR, 
                  OPR.FLT_NO FLIGHTNO, 
                  TO_CHAR(OPR.SCH_DATE,'DDMONYY') SCHDATE, 
                  TO_CHAR(OPR.EST_DATE,'DDMONYY') ESTDATE,
                  TO_CHAR(OPR.ACT_DATE,'DDMONYY') ACTDATE,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') HRANDMINSCH,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),3,4), ':') HRANDMINEST,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),3,4), ':') HRANDMINACT,
                  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.STATUS AND CODE_TYPE='FLT_STATUS') ARRDEPSTATUS,
                  OPR.ACFT_PRK_BAY GATE, FLT_KEY  FLIGHTKEY, ORIG AS ORIGINATION, DEST AS DESTINATION,
                  FLT_TYPE as flightType,
                  FLT_NO as flightNo,
                  ACFT_TYPE AS airCraftType,
                  (select STRAGG(STRINGDELIM(t22.off_point, '/')) 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = OPR.FLT_KEY
                  and      t11.sch_date =  TO_CHAR(OPR.SCH_DATE,'DDMONYY')
                  and      t11.flt_type = 'A')
                  as portOfCall
                 FROM FLT_OPR OPR WHERE
			FLT_TYPE = #flightType# AND
		    SCH_DATE  BETWEEN TO_DATE(#schDate#, 'ddMONyy') AND TO_DATE(#schDateTo#, 'ddMONyy')
		
    <dynamic prepend="AND">
			<isNotEmpty property="fltKey">
				 OPR.flt_key = #fltKey#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="origination">
				 OPR.ORIG = #origination#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="flightCarr">
				 OPR.CARR_CODE = #flightCarr#
			</isNotEmpty>
		</dynamic>
		ORDER	BY SCHDATE ASC,NVL(to_date(estDate||HRANDMINEST,'DDMONYYHH24:MI'),to_date(SCHDATE||HRANDMINSCH,'DDMONYYHH24:MI')) ASC
	</select>
	<!--<select id="getFlightPortOfCall1" parameterClass="map" resultClass="java.lang.String">
		select PKG_PMAN.FLT_PORTS(#flightNumber#, #flightDate#) as portOfCall from dual
	</select>
	
--><!--     Added by Shilpa for Flight Information starts-->	



<!--  Cross Terminal Transfer Bug Fixing  :: Ranjith -->
	<select  id="get_trm_awbinv_Record" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND TRM_NO is null
	</select>
	
		<update id="upd_trm_reject_awbInvtory" parameterClass="map">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#locn_pcs#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#locn_wt#,0),
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
<!--  Cross Terminal Transfer Bug Fixing  :: Ranjith -->

<!-- Create Transit Mail CAR :: Santosh D :: Start-->
	<select  id="get_transitmailtag_list" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		SELECT
		 	mail.CATALOG as catalog,
		 	mail.TAG_NO as tagNo, 
		 	mail.ACT_PCS as actPcs, 
			mail.ACT_WT as actWt,
			mail.EST_PCS as estPcs,
			mail.EST_WT as estWt,			
		 	mail.FLT_TYPE as fltType,
		 	#carrCode# as carrCode,
		 	#fltNo# as fltNo,
		 	mail.FLT_KEY as fltKey,
		 	#fltDate# as fltDate,
		 	PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'A', 'DD') as ata,			
			mail.ORIG as orig, 
			mail.DEST as dest, 
			mail.LOCN as locn, 
			mail.LSP_NO as lspNo,
			mail.ULD_KEY uldKey, 
			mail.BD_ULD_KEY as bduldno,			
			mail.DAM_IND as damInd, 
			mail.RMK as rmk, 		
			mail.LM_USER_ID as lmUserId,
			mail.LM_DATE as lmDate,
			DECODE(evnt.WHSE_COMPL_DATE,NULL,'N','Y') fltBDCompl,
			mail.seq_no as mailSeq,
			(SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = flt.CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as mailAsCargo 
		 FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN FLT_OPR flt ON
			flt.FLT_KEY = mail.FLT_KEY AND 
			flt.SCH_DATE = mail.FLT_DATE AND 
			flt.FLT_TYPE = 'A'		 
			JOIN FLT_OPR_EVENTS evnt ON 				
			evnt.FLT_KEY = flt.FLT_KEY AND 
			evnt.SCH_DATE = flt.SCH_DATE AND 
			evnt.FLT_TYPE = 'A'		
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NULL AND
			mail.AWB_DATE IS NULL
		ORDER BY
			tagNo asc
	</select>
	
		<update id="upd_transitmailtag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			SEQ_NO = #mailSeq#
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>

	
	
	
	<update id="updateTransitMailTransformAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			<isNotEmpty property="bduldno" >
			BD_ULD_KEY = #bduldno# AND 
			</isNotEmpty>
			DEST = #dest# 
			AND AWB_NO = #trfAwbNo# AND AWB_DATE = to_date(#trfAwbDate#)
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>
	
	
<update id="updateTransitMailTransformAWBCT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY'),
			FLT_KEY = #fltKey#,
			FLT_TYPE = 'I',		
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			SEQ_NO = #mailSeq#			
	</update>
	
	
	<update id="upd_transitmailtag_Mobile" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bduldno# AND DEST = #dest# 
			and MBLE_FLG = 'Y' AND MBLE_CAR_IND = 'Y'
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>

    <!-- Changed for QR :: RANJITH -->	 
    <select id="checkCarCreatedForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND
			mail.TAG_NO = #tagNo# AND
      		mail.DEST = #dest# 
	</select>
	
	
	<select id="checkCarCreatedForTMAsCargoWAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO = #awbNo# AND
			mail.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
			mail.TAG_NO = #tagNo#      		
	</select>
	
	<select id="chkFHLCreatedForAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select TR_NO as tr_number FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<select id="chkFhlHAWBCreated" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select DOC_LINE_NO as docLine FROM edi_fhl_hawb WHERE TR_NO = #trNumber# AND HAWB_NO = #tagNo# 
	</select>
	
	<insert id="insEDI_FHL" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into EDI_FHL (TR_NO,MSG_VER,SI_TYPE,COPY_NO,AWB_NO,AWB_DATE,AWB_ORG,AWB_DEST,AWB_PCS,AWB_WT,AWB_WT_CODE,PART_SHMPT_YN,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#trNumber#,'0','S','1',#awbNo#,#awbDate#,#orig#,#dest#,#pcs#,#wt#,'K','N',#crUserId#,SYSDATE,#crUserId#,SYSDATE,'1')
	</insert>	

	<insert id="insEDI_FHL_HAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into edi_fhl_hawb (TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,MANIFEST_DESC,ACCS_I,SOURCE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#trNumber#,EDI_FHL_HAWB_SEQ.nextval,#tagNo#,#orig#,#dest#,#pcs#,#wt#,'K','TAG','A','TAG',#crUserId#,SYSDATE,#crUserId#,SYSDATE,1)
	</insert>	
	
	<update id="updEDI_FHL" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE edi_fhl
		    SET awb_pcs = awb_pcs +  #pcs#,
		           awb_wt = awb_wt + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNumber#
    </update>
	
	<update id="updEDI_FHL_HAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE edi_fhl_hawb
		    SET HAWB_PCS = HAWB_PCS +  #pcs#,
		           HAWB_NET_WT = HAWB_NET_WT + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNumber# and DOC_LINE_NO = #docLine#
    </update>
	    
	<select id="chkMastHAWBCnt" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbCnt FROM MAST_HAWB WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<insert id="insMastHAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into MAST_HAWB (AWB_NO,AWB_DATE,HAWB_NO,HAWB_ORG,HAWB_DES,HAWB_PCS,HAWB_WT) values 
			(#awbNo#,#awbDate#,#tagNo#,#orig#,#dest#,#pcs#,#wt#)
	</insert>	
	
	<update id="updMastHAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE MAST_HAWB
		    SET HAWB_PCS = HAWB_PCS +  #pcs#,
		           HAWB_WT = HAWB_WT + #wt# 
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
    </update>
	
	
	<select id="chkHAWBStorageDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbStrgCnt FROM IMP_HAWB_STRG_DTL WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<insert id="insHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_HAWB_STRG_DTL(FLT_DATE, CARR_CODE, AWB_PFX,FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE,HAWB_NO, HAWB_PCS, HAWB_WT,SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT,
			TR_TYPE, TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,#fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',#tagNo#, NVL(#pcs#,0), NVL(#wt#,0),#sc#, NVL(#pcs#,0), NVL(#wt#,0),
			 'HA', 'A',#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>	
	
	<insert id="insHAWBStorageDtl" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_HAWB_STRG_DTL(FLT_DATE, CARR_CODE, AWB_PFX,FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE,HAWB_NO, SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT,
			TR_TYPE, TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,#fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',#tagNo#, #sc#, NVL(#pcs#,0), NVL(#wt#,0),
			 'HA', 'A',#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>
	
	
	<insert id="insertTransformAWBDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_TM_TRANSFORM_HD(TR_NO,TRF_FROM_AWB_NO, TRF_FROM_AWB_DATE,TRF_TO_AWB_NO,TRF_TO_AWB_DATE,TR_TYPE,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FUNCTION_NAME)
		VALUES (#trfTrNum#,#trfAwbNo#,to_date(#trfAwbDate#, 'DDMONYY'),#awbNo#, to_date(#awbDate#, 'DDMONYY'),'TRFP',#crUserId#, SYSDATE, #crUserId#, SYSDATE,#fromFunction#) 
	</insert>
			
	<insert id="insertTransformTagDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_TM_TRANSFORM_DTL(TR_NO,DOC_LINE_NO,TAG_NO, TAG_WT,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			VALUES (#trfTrNum#,(SELECT NVL(MAX(DOC_LINE_NO), 0) FROM IMP_TM_TRANSFORM_DTL WHERE TR_NO = #trfTrNum#)+1,#tagNo#,#wt#,#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>
	
	<select id="checkTransformationForCT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select COUNT(1) from IMP_TM_TRANSFORM_HD  where TRF_FROM_AWB_NO = #awbNo# and TRF_FROM_AWB_DATE = to_date(#awbDate#, 'DDMONYY') and TRF_TO_AWB_NO = #trfAwbNo# and TRF_TO_AWB_DATE = to_date(#trfAwbDate#, 'DDMONYY')
	</select>
	
	<update id="updHAWBStorageDtl" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_HAWB_STRG_DTL
		    SET    HAWB_BRKDN_PCS = HAWB_BRKDN_PCS +  #pcs#,
		           HAWB_BRKDN_WT = HAWB_BRKDN_WT + #wt#,
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  AND
		    FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    </update>
    
    
    <update id="updHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_HAWB_STRG_DTL
		    SET    
		    HAWB_PCS = HAWB_PCS +  #pcs#,
		    HAWB_WT = HAWB_WT + #wt#, 
		    HAWB_BRKDN_PCS = HAWB_BRKDN_PCS +  #pcs#,
		    HAWB_BRKDN_WT = HAWB_BRKDN_WT + #wt#,
		    lm_user_id = #crUserId#,
		    lm_date = SYSDATE
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  AND
		    FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    </update>
    
    
    <select id="chkHAWBInventoryExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbInvCnt FROM HAWB_INVENTORY WHERE HAWB_NO = #seqNo# AND HAWB_NO = #tagNo# 
	</select>
	
    <insert id="insHAWBInventory" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values 
			(#seqNo#,#tagNo#,#pcs#,#wt#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>	
	
	<update id="updHAWBInventory" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE HAWB_INVENTORY
		    SET STRG_PCS = STRG_PCS +  #pcs#,
		           STRG_WT = STRG_WT + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE SEQ_NO = #seqNo# AND HAWB_NO = #tagNo# 
    </update>
    
    
    <insert id="imp_insertTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, FLT_DATE, BD_ULD_KEY, AWB_NO,AWB_DATE,TAG_NO, LSP_NO,  ORIG, DEST, ACT_PCS, ACT_WT, LOCN, ULD_KEY, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,MBLE_FLG, MBLE_CAR_IND) 
		VALUES (#catalog#, 'I', UPPER(#fltKey#), TO_DATE(#fltDate#,'DDMONYY'), #bduldno#, UPPER(#awbNo#),to_date(#awbDate#,'DDMONYY'),	UPPER(#tagNo#), UPPER(#lspNo#),	UPPER(#orig#), UPPER(#dest#),
		#actPcs#,#actWt#, UPPER(#locCode#), UPPER(#uldKey#), #crUserId#, sysdate, #crUserId#, sysdate,#mobileApp#,#mobileApp#)
	</insert>
	
	<insert id="sqlInsertAwbStrlDtlTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
		Insert into IMP_AWB_STRG_DTL 
		(TR_NO,DOC_LINE_NO,CARR_CODE,FLT_DATE,FLT_KEY,AWB_PFX,AWB_NO,AWB_DATE,AWB_DEST,ULD_KEY,LOC_CODE,STRG_PCS,STRG_WT,LSP_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TAG_NO,FLT_TYPE,TR_STATUS,
		TR_TYPE,CHKIN_ULD_KEY,CATALOG) values
		(IMP_AWB_STRG_DTL_SEQ.NEXTVAL, '1',  #carrCode#,  to_date(#fltDate#,'DDMONYY'),  #fltKey#,  substr(#awbNo#,0,3),  #awbNo#,  to_date(#awbDate#,'DDMONYY'),   #dest#,  #uldKey#,  #locCode#,  #actPcs#,  #actWt#,  #lspNo#,
		  #crUserId#,  sysdate,  #crUserId#,  sysdate,  #tagNo#,  'I',  'A',  'TM',  #bduldno#,  #catalog#)
	</insert>
	
    
	<select id="checkCarCreatedForTMAsCargoWOAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND mail.DEST = #dest# 
			AND AWB_NO like '%M%'
			AND (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(mail.TAG_NO,17,4) ELSE mail.TAG_NO END) = (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(#tagNo#,17,4) ELSE #tagNo# END)
	</select>
	
	
	    <select id="checkAWBCreatedForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
		</select>
	
	<!-- Changed for QR :: RANJITH -->	 
	<select id="getCarDetailsForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		shp.AWB_PRFX as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN IMP_CAR_SHP shp ON
			shp.AWB_NO = mail.AWB_NO AND
			shp.AWB_DATE = mail.AWB_DATE AND
			shp.FLT_DATE = mail.FLT_DATE AND
			shp.FLT_KEY = mail.FLT_KEY 
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND
			mail.TAG_NO = #tagNo#  AND
      		mail.DEST = #dest# 
			AND rownum = 1
	</select>   
	
	<select id="getCarDetailsForTransitMailTagWOAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		shp.AWB_PRFX as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN IMP_CAR_SHP shp ON
			shp.AWB_NO = mail.AWB_NO AND
			shp.AWB_DATE = mail.AWB_DATE AND
			shp.FLT_DATE = mail.FLT_DATE AND
			shp.FLT_KEY = mail.FLT_KEY 
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY =  #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND mail.DEST = #dest#  AND
			(CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(mail.TAG_NO,17,4) ELSE mail.TAG_NO END) = (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(#tagNo#,17,4) ELSE #tagNo# END) AND mail.AWB_NO like '%M%'
			AND rownum = 1
	</select>  
	
	<select id="getCarDetailsForTransitMailTagWAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		SUBSTR(mail.AWB_NO,1,3) as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail			
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY =  #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO = #awbNo# AND
			mail.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
			mail.TAG_NO = #tagNo#
			AND rownum = 1
	</select>   
	 
	
	<insert id="ins_awbstrldtl_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
	Insert into IMP_AWB_STRG_DTL 
		(TR_NO,
		DOC_LINE_NO,
		CARR_CODE,
		FLT_DATE,
		FLT_KEY,
		AWB_PFX,
		AWB_NO,
		AWB_DATE,
		AWB_DEST,
		ULD_KEY,
		LOC_CODE,
		STRG_PCS,
		STRG_WT,
		LSP_NO,
		DAM_IND,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		TAG_NO,
		FLT_TYPE,
		TR_STATUS,
		TR_TYPE,
		CHKIN_ULD_KEY)  
	values
	  (IMP_AWB_STRG_DTL_SEQ.NEXTVAL,
	  '1',
	  #carrCode#,
	  to_date(#fltDate#,'DDMONYY'),
	  #fltKey#,
	  substr(#awbNo#,0,3),
	  #awbNo#,
	  to_date(#awbDate#,'DDMONYY'),
	  #dest#,
	  #uldKey#,
	  #locn#,
	  #pcs#,
	  #wt#,
	  #lspNo#,
	  #damInd#,
	  #crUserId#,
	  sysdate,
	  #crUserId#,
	  sysdate,
	  #tagNo#,
	  'I',
	  'A',
	  'TM',
	  #bduldno#)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="upd_awbstrldtl_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	UPDATE IMP_AWB_STRG_DTL
		SET AWB_PFX = substr(#awbNo#,0,3),
			AWB_NO = #awbNo#,	 
			AWB_DATE= to_date(#awbDate#,'DDMONYY'),
			AWB_DEST=#dest#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
	     WHERE FLT_DATE = to_date(#fltDate#,'DDMONYY')
			   and FLT_KEY = #fltKey#
		       and TAG_NO =#tagNo#
		       and CHKIN_ULD_KEY =#bduldno# 
    </update>
	
	-->
	
	<select id="getTMCatalogForCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select catalog from imp_car_awb where  AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#) 
	</select>	
	
	<select id="getDocCompStatus" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select decode(COUNT(1),1,'Y','N') from flt_opr a, flt_opr_events b where b.tr_no=a.tr_no and a.flt_key=#fltKey# and a.sch_date=#fltDate# and a.flt_type='A'
		AND B.DOC_COMPL_YN = 'Y' AND B.DOC_COMPL_DATE IS NOT NULL AND B.DOC_COMPL_TIME IS NOT NULL
	</select>	
	
	<!-- Changed for QR :: RANJITH -->
	<select id="checkCarCreatedForOtehrFlt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		select count(1) from imp_car_shp where  AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#) AND
		(flt_key !=#fltKey# AND	TO_CHAR(flt_date,'DDMONYY') != TO_DATE(#fltDate#))		
	</select>
	
<!-- Create Transit Mail CAR :: Santosh D :: End-->
	<select id="checkShcsforLock" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) as cnt from mast_spl_hand_code where lock_yn='Y' and code in 
		<iterate property="SHCLIST" open="(" close=")" conjunction=",">
                       #SHCLIST[]#  
        </iterate>    
	</select>
	<update id="sqlUpdateAWBSHCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				shclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="getFinaliseLockIndforCC"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and (nvl(SHCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(DCLOCK_IND,'N') = 'Y')
	</select>	
	<update id="sqlUpdateAWBCCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				cclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="getFinaliseLockIndforDC"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and (nvl(CCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(SHCLOCK_IND,'N') = 'Y')
	</select>	
	<update id="sqlUpdateAWBDCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				dclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	
	
	<select id="getFinaliseLockIndforCCWoPurpose"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')  and nvl(DCLOCK_IND,'N') = 'Y'
	</select>	
	
	<select id="getFinaliseLockIndforDCWoPurpose"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')  and nvl(DCLOCK_IND,'N') = 'Y'
	</select>
	
	
	
	
	<select id="checkawbexistsinimpcarawbfordummy"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" 
		 resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_CAR_AWB 
		WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="checkValidForSchCollSRF"   parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select count(1) from CUST_AGENT_SCH_COLL_TIME where cust_no=#apptdAgtCode# and EFF_TO > TO_CHAR(SYSDATE,'DDMONYY') and purpose='CRG'
	</select>
	<update id="update_srf_awb_dtls_post" parameterClass="java.util.HashMap">	
		UPDATE 
			IMP_SRF_AWB_INVENTORY 
		SET 
			DLV_PCS = NVL(LOCN_PCS, 0), DLV_WT = NVL(LOCN_WT, 0), 
			DLV_DATE= decode(DLV_DATE,null,SYSDATE, DLV_DATE) , DLV_IND='Y', DLV_BY=#userID#, LM_USER_ID=#userID#, 
			LM_DATE=SYSDATE,TR_TYPE='POSRF' 
		WHERE 
			SRF_NO=#srfNo#
	</update>
	<update id="update_imp_srf_hawb_dtls_post" parameterClass="java.util.HashMap">
		UPDATE IMP_SRF_AWB_INVENTORY_DTL  SET DLV_PCS=NVL(LOCN_HAWB_PCS, 0), DLV_WT=NVL(LOCN_HAWB_WT, 0), LM_USER_ID=#userID#, LM_DATE=SYSDATE    
		WHERE SRF_NO=#srfNo#  
	</update>
	<select id="getSRFAwbInvDtls"   resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  parameterClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) dlvPcs,SUM(LOCN_WT) dlvWt,AWB_NO awbNo,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,FLT_KEY fltKey,TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM AWB_INVENTORY 
		WHERE SRF_NO=#srfNo# group by AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
	</select>
	<update id="update_imp_srf_flt_dtls_post" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(DLV_PCS, 0) +  NVL(#dlvPcs#, 0) , DLV_WT = NVL(DLV_WT, 0) + NVL(#dlvWt#, 0) , LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo# AND  ORIG_FLT_KEY=#fltKey# AND ORIG_FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<update id="update_imp_srf_flt_dtls_post_fail" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET 		
		DLV_PCS = NVL(DLV_PCS, 0) +  NVL(#dlvPcs#, 0) , DLV_WT=NVL(DLV_WT, 0) + NVL(#dlvWt#, 0) , LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo# AND  length(flt_key) > 7
	</update>
	<select id="getSrfIssuedCount"   resultClass="java.lang.Integer"  parameterClass="java.util.HashMap">
		select count(1) from IMP_SRF s, IMP_SRF_FLT sf 
 	    where s.AWB_NO=#awbNo# AND sf.FLT_KEY=#fltKey# AND sf.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND s.srf_no = sf.srf_no 
 	  	and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
	  	or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
	 </select>	 
	 <insert id="sqlxmlinsertimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		Insert into NO_BAR_CODE_IMAGE
 		(SCANNER_ID,IMAGE_REF_ID,DOC_NO,RECV_DATE_TIME,IMAGE,SEQ_NO) values(#scannerId#,#imageFileName#,#docNumber#,sysdate,#image#,SRF_SEQ.nextval)
	</insert>
	<select id="checkNoBarCodeImageExists" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM NO_BAR_CODE_IMAGE WHERE DOC_NO = #docNo#
	</select>
	<select id="sqlxmlselectimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		 SELECT Image image, TO_CHAR(RECV_DATE_TIME,'DDMONYY') recDateTime,seq_no sequenceId, IMAGE_REF_ID AS imageFileName 
		 FROM NO_BAR_CODE_IMAGE where IMG_TRANSACTION_ID  IS NULL AND SCANNER_ID = #scannerId# order by RECV_DATE_TIME desc
	</select>
	<select id="sqlFetchImageBySequenceId" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		 SELECT IMAGE AS image, TO_CHAR(RECV_DATE_TIME,'DDMONYY') AS recDateTime,SEQ_NO AS sequenceId 
		 FROM NO_BAR_CODE_IMAGE where IMG_TRANSACTION_ID  IS NULL AND SEQ_NO = #sequenceId#
	</select>
	<select id="sqlScannerList" parameterClass="java.lang.Object" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT DISTINCT SCANNER_ID AS codeId, UPPER(SCANNER_ID) AS codeDesc FROM NO_BAR_CODE_IMAGE ORDER BY SCANNER_ID ASC
	</select>
	<select id="sqlSrfTranId" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.String">
		SELECT IMG_TRANS_ID FROM IMP_SRF where srf_no = #srfNo#
	</select>
	<select id="sqlCheckSrfVoid" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE SRF_NO = #srfNo# AND VOID_DATE IS NOT NULL AND VOID_USER IS NOT NULL
	</select>
	<delete id="sqlUpdatexmlTranIdimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE SCANNER_ID = #scannerId# AND SEQ_NO = #sequenceId#
	</delete>
	<delete id="sqlDeleteNoBarCodeImageByImageName" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE IMAGE_REF_ID = #imageFileName#
	</delete>
	<delete id="sqlDeleteNoBarCodeImages" parameterClass="java.lang.String">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE EXISTS(
                                          SELECT FW_IMAGE_STORE.IMG_NAME                                          
                                          FROM FW_IMAGE_STORE,IMP_SRF WHERE 
                                          FW_IMAGE_STORE.IMG_SESSION_ID = IMP_SRF.IMG_TRANS_ID
                                          AND FW_IMAGE_STORE.IMG_NAME = NO_BAR_CODE_IMAGE.IMAGE_REF_ID)
	</delete>
	<update id="sqlupdateimpsrf" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		  update IMP_SRF SET IMG_TRANS_ID = #transactionId#,tr_type='Dummy' where SRF_NO = #srfNo#
	</update>
	<insert id="insertFWImageData" parameterClass="java.util.HashMap">
		INSERT INTO FW_IMAGE_STORE(IMG_ID,IMG_SIZE,IMG_NAME,IMG_SESSION_ID, IMG_PATH, IMG_UPLOAD_DATE,VIDEO_YN,UPLOAD_STAT) 
		VALUES(FW_IMAGE_SEQ.NEXTVAL,#pImageSize#,#pImageName#,#pRequestTransactionId#,#pImagePath#, CURRENT_TIMESTAMP,'I','P')
	</insert>
	<delete id="sqlxmldeleteimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" >
		DELETE
			FROM NO_BAR_CODE_IMAGE  
			WHERE	SEQ_NO	 = #sequenceId#			
	</delete>
	<select id="sqlxmlsrfnovalid" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF  where srf_no = #srfNo#	
	</select>
	<update id="updateEXPCARForExportRMKINB" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">	
		UPDATE EXP_CAR
		SET   airl_rmk = #awbAirlRmk#, 
			  wh_rmk = #awbWhRmk#,
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate,
			  SPL_CODE1     = #shc1#, 
			  SPL_CODE2     = #shc2#, 
			  SPL_CODE3     = #shc3#,  
			  SPL_CODE4     = #shc4#,  
			  SPL_CODE5     = #shc5#,  
			  SPL_CODE6     = #shc6#,  
			  SPL_CODE7     = #shc7#,  
			  SPL_CODE8     = #shc8#, 
			  SPL_CODE9     = #shc9#  			 
		WHERE AWB_NO = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')		      
	</update>	
	
	<select id="sqlquerycheckULDTypeDefinedinULDProfile"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		SELECT NVL(count(1), 0) as count
			 FROM ULD_GROUP_TYPE
			  WHERE ULD_TYPE=#uldType#
   	</select>
   	
   	<select id="get_exitchkpost_purpose" parameterClass="java.lang.String"	resultClass="java.lang.String">
	 	select purpose from truck_trip where truck_no=#PARAM# and closed='N'
	 </select>

	<select id="getHdlgModeDetails"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM V_IMP_FLT_ULD_SHC 
		WHERE ULD_KEY = #uldKey# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND SHC='BUP'
	</select>
	
	<select id="getUldFlowChkIn"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from edi_ffm_msg msg, edi_ffm_shp a,edi_ffm_uld b
    			where a.tr_no=msg.tr_no and a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no and ffm_status = 'P'
				and b.flt_key =#flightKey# and b.flt_date=TO_DATE(#flightDate#,'DDMONYY') and b.uld_key=#uldKey#
    </select>
     
	<insert id="insertLSPInventoryInCDIF" parameterClass="map">
	 	 insert into LSP_INVENTORY
	 	 ( LSP_NO ,EMPTY_FLG,REF_TR_TYPE,LOC_CODE,REF_TR_NO,REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,
	 	 REF_MOV_FROM,REF_LOC_FROM,REF_RMK,TARGET,STRG_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LSP_TYPE)
	 	 values(#LSP_NO#,'N',#TR_TYPE#,#LOC_CODE#,#TR_NO#,#TR_EVENT_ID#,SYSDATE,#DOC_LINE_NO#,
	 	 #LOC_CODE#,#LOC_CODE#,'','',SYSDATE,#USER_ID#,SYSDATE,#USER_ID#,SYSDATE,substr(#LSP_NO#,0,1))
	 </insert>
	<procedure id="imp_srf_nls_trt">
		{call alter_nls_territory()}
	</procedure>
	<select id="checkCarShpExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND flt_key=#fltKey# AND flt_date=TO_DATE(#fltDate#,'DDMONYY')
	</select>
	<select id="checkCarAwbExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_AWB where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="checkAwbExistsforOBC" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from AWB where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<update id="update_awb_deletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	   UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS-#manifestPcs#, 
		MANIFEST_WT = MANIFEST_WT-#manifestWt# ,
		<isEqual property="updAwbPcWt" compareValue="Y">
		PCS = PCS-#manifestPcs#, 
		WT = WT-#manifestWt# ,
	    </isEqual>
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
 	</update>
	
	<update id="updateDlvReturnSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(#dlvPcs#, 0) , DLV_WT = NVL(#dlvWt#, 0), LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo#
	</update>
	
 	<update id="update_car_awb_deletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_AWB SET
		LM_DATE = SYSDATE,
		AWB_PCS = AWB_PCS-#manifestPcs#, 
		AWB_WT = AWB_WT-#manifestWt# ,
		BULK_PCS =  BULK_PCS-#manifestPcs#,
		BULK_WT = BULK_WT-#manifestWt#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<delete id="delete_CAR_physical_Awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		<![CDATA[
		 DELETE	FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  			
		]]>
	</delete>
	<select id="validatePmanExistsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from EXP_PMANIFEST_AWB where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="validatePmanTarExistsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from exp_pman_tarmac_awb where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="validateFWBExistsforDelCar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="sqlgetcounttoppalletexists"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM ULD_INVENTORY WHERE BASE_PLT =(SELECT BASE_PLT FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM#)	
   	</select>
   	<update id="sqlUpdateBasePalletAmdStrg" parameterClass="cargo.cms.uld.bo.ULDEICBO">
		UPDATE ULD_INVENTORY 
		SET 
		   LM_USER_ID = #userId#, 
		   LM_DATE = SYSDATE,
		   REF_TR_NO = #uldKey#,
		   REF_DOC_LINE_NO = '1',
		   REF_TR_TYPE = 'AU',
		   REF_TR_DATE = SYSDATE, 
		   REF_OUT_CARR = #uldCarr#, 
		   TR_TYPE = #trtype#,
		   EIC_FLG=nvl(#eicFLG#,'N')
		WHERE uld_key =(SELECT BASE_PLT FROM ULD_INVENTORY WHERE ULD_KEY= #uldKey#)
	</update>
    <select id="find_srf_uld_lsp_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" resultClass="cargo.cms.imprt.bo.PostSRFSearchBO">
   		select LSP_NO lspNo,ULD_KEY uldKey from awb_inventory where srf_no=#srfNo#
   </select>
   	<update id="updateLocCodeULDInvTag" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		TR_TYPE = #trtype#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeLSPInvTag" parameterClass="map">
		UPDATE LSP_INVENTORY SET 
		LOC_CODE = #locCode#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where LSP_NO = #lspNo#
	</update>
	<update id="update_IMP_ULD_LIST_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		UPDATE IMP_ULD_LIST SET HANDLING_MODE = #handlMode# WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND ULD_KEY = #uldKey#
	</update>
	<select id="getAWB_BUP_PCWT_TCCL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        	select BUP_PCS, BUP_WT, CAR_CREATED from IMP_CAR_SHP where AWB_NO =#AWB_NO#  and AWB_DATE=#AWB_DATE# and FLT_KEY=#FLT_KEY# and FLT_DATE=#FLT_DATE#
    </select>
    <update id="upd_blkpcwt_imp_shp_tccl" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #USER_ID#, 
			LM_DATE  = SYSDATE 
			<isEqual property="awbType" compareValue="T">
		   		<isEqual property="carCreated" compareValue="Y">
		   			,PPK_TYPE = case when (manifest_pcs-#totalBlkPcs#) = 0 then 'B' else case when #totalBlkPcs#=0 then 'P' else 'M' end end,
		   			bulk_pcs = #totalBlkPcs#,
		   			bulk_wt = #totalBlkWt#,
		   			bup_pcs = manifest_pcs - #totalBlkPcs#,
		   			bup_wt = manifest_wt - #totalBlkWt# 
			   	</isEqual>	
		   	</isEqual>
		WHERE AWB_NO  = #AWB_NO# 
			AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND FLT_KEY  = #FLT_KEY#
	</update>
	<update id="upd_blkpcwt_imp_awb_tccl" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #USER_ID#,
			LM_DATE  = SYSDATE
			<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   		,PPK_TYPE = case when (awb_pcs-#totalBlkPcs#) = 0 then 'B' else case when #totalBlkPcs#=0 then 'P' else 'M' end end,
		   			bulk_pcs = #totalBlkPcs#,
		   			bulk_wt = #totalBlkWt#,
		   			bup_pcs = awb_pcs-#totalBlkPcs#,
		   			bup_wt = awb_Wt-#totalBlkWt# 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND     
			AWB_NO   = #AWB_NO#
	</update>
	<select id="check_record_imp_uld_list_ffm" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		  select count(1) from V_FFM_DTL  
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') and ULD_KEY = #uldKey#
	</select>	
	<select id="sqlgetLocCodeforEmptyULD"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM# and LOC_CODE IS NOT NULL AND EMPTY_FLG='Y'
	</select>
	<select id="sqlgetLocCodeforEmptyLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE FROM LSP_INVENTORY WHERE LSP_NO = #lspNo# and LOC_CODE IS NOT NULL AND EMPTY_FLG='Y'
	</select>
	
	<!-- HHT RestoreAwbStorage :: Bug Fix :: Ranjith-->
	<select id="getAwbStoragePcWt"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOCN_PCS||'/'||LOCN_WT FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo# 
	</select>
	<!--  HHT RestoreAwbStorage :: Bug Fix :: Ranjith-->
	 <update id="imp_awbstrgdtl_updcarawb" parameterClass="map">
	 	UPDATE IMP_CAR_AWb 
		SET 
			WH_RMK = #rmk#,  
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>
	
	<select id="fsuBrkdnPcsEqualToManifestPcs"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP WHERE ( NVL(MANIFEST_PCS,0) = NVL(RECD_PCS,0) AND NVL(MANIFEST_WT,0) = NVL(RECD_WT,0) ) AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
		AND FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	
	<select id="fsuBrkdnPcsEqualToManifestPcsHht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP WHERE ( NVL(MANIFEST_PCS,0) = NVL(RECD_PCS,0) AND NVL(MANIFEST_WT,0) = NVL(RECD_WT,0) ) AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
		AND FLT_KEY = #flightKey# AND FLT_DATE = to_date(#flightDate#,'DDMONYY')
	</select>
	
	
	<select id="sqlFetchFWImageAlreadyExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FW_IMAGE_STORE WHERE IMG_SESSION_ID = #pRequestTransactionId# AND IMG_NAME = #pImageName#		
	</select>
	
	<delete id="deleteFromGTTable" parameterClass="java.lang.String">
	DELETE FROM GT_SRF_CHARGES
	</delete>
	<select id="getUldLSPdetailsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	   select uld_key uldNo, lsp_no lspNo from awb_inventory WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	 </select>
	
	 <select id="checkULDAssignedtoExportFlt"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	   SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY = #uldNo# AND FLT_KEY IS NOT NULL AND FLT_DATE IS NOT NULL AND FLT_TYPE = 'E'
	 </select>
	 
	 <select id="getPcWtFromCARSHP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
		<![CDATA[
 			select awb_no AWB_NO,to_char(awb_date,'DDMONYY') AWB_DATE ,flt_key FLT_KEY,to_char(flt_date,'DDMONYY') FLT_DATE,recd_pcs RECD_PC,recd_wt RECD_WT,manifest_pcs MAN_PC,manifest_wt MAN_WT,lm_user_id LM_USER_ID 
 			from imp_car_shp 
 			where AWB_NO   = #awbNo# AND
       		AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND
       		FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
       		FLT_KEY   = #fltKey#
		]]>
	</select>
	
<!-- ###################### ADDED BY Yugandhar ON 27-11-2012 FOR IF ULDs ShipmentsList Starts Here ########################### -->
<select id="fetchIFULDInBoundFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, 
		pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'A','DD') etaAta, 
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcftType,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'ALL_ULD') inbdUld,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_ULD') ifUld,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_CHK_IN') ifchkin,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_BD') ifBD,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_SHP_IMP') ifShpImp, 
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_EST_BD_BU_IMP') estBdBuImp, 
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_LST_BD_BU_IMP') lstBdBuImp, 
		(SELECT WH_AREA FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode,
		decode(FLTEVENTS.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLTEVENTS.flt_type ='A'
		join (select FLT_KEY , FLT_DATE from  V_UNFIN_DDT_DTL 
		       where DDT_STATUS = 'P' 
				<isNotEmpty property="fltKey" >
				and FLT_KEY = #fltKey#
				</isNotEmpty>
				<isNotEmpty property="fltDate" >	 
				and  FLT_DATE = #fltDate#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
				  and SHP_CNTG_FLT_KEY = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
					<isNotEmpty property="cntgFltDate" >	 
					  and  SHP_CNTG_FLT_DATE = #cntgFltDate#
					</isNotEmpty>
				</isNotEmpty>
				
		      union
		      select   ffmMSG.flt_key flt_key , ffmMSG.FLT_DATE FLT_DATE
		      from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		      where ffmMSG.FFM_STATUS = 'P' and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		      and FFMSHP.DEST != 'HKG'        
				<isNotEmpty property="fltKey" >
				and FFMMSG.FLT_KEY = #fltKey# 
				</isNotEmpty>
				<isNotEmpty property="fltDate" >	 
				and  FFMMSG.FLT_DATE = #fltDate#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
				 and ffmULD.CNTG_FLT_Carr1||ffmULD.CNTG_FLT_No1 = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
					<isNotEmpty property="cntgFltDate" >	 
					 and  ffmULD.CNTG_FLT_DATE1 = #cntgFltDate#
					</isNotEmpty>
				</isNotEmpty>
          ) FFMDDT on FFMDDT.FLT_KEY = flt.FLT_KEY and FFMDDT.FLT_DATE = flt.SCH_DATE        
		where flt.flt_type ='A'
		<isNotEmpty property="fltKey" >
		and flt.FLT_KEY = #fltKey#  
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and flt.SCH_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cgoAcftType" >	 
		and flt.CGO_ACFT_TYPE = #cgoAcftType# 
		</isNotEmpty>
		<isNotEmpty property="fltModule" >	 
		and flt.flt_module1 = #fltModule# 
		</isNotEmpty>
		<isNotEmpty property="fromEta" >
		<isNotEmpty property="toEta" >	 
		and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
		</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( flt.carr_code = #loginCarrier#
                        OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
</select>
<select id="fetchIFULDOutBoundFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo,
		FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
		pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'D','DD') etd,
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcftType, flt.cgo_acft_type cgoAcfTypeCode,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'IF_EST_BD_BU_EXP') estBdBuExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'IF_LST_BD_BU_EXP') lstBdBuExp, 
		(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode 
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P'	
				<isNotEmpty property="expFltKey" >
				  	and SHP_CNTG_FLT_KEY = #expFltKey#
				</isNotEmpty>
				<isNotEmpty property="expFltDate" >	 
				  	and  SHP_CNTG_FLT_DATE = #expFltDate# 
				</isNotEmpty>				
				group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 
		       ) FFMDDT on FFMDDT.cntgFltKey = flt.FLT_KEY and FFMDDT.cntgFltDate = flt.SCH_DATE       
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P' 
				<isNotEmpty property="impFltKey" >
				and FLT_KEY = #impFltKey#
				</isNotEmpty>
				<isNotEmpty property="impFltKey" >
					<isNotEmpty property="impFltDate" >	 
					and  FLT_DATE = #impFltDate#
					</isNotEmpty>
				</isNotEmpty>		
				group by  SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 	 
       ) DDTIMP on DDTIMP.cntgFltKey = flt.FLT_KEY and DDTIMP.cntgFltDate = flt.SCH_DATE          
		where exists (select null from v_unfin_ddt_dtl where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
		and flt.flt_type ='D'
		<isNotEmpty property="cgoAcftType" >	 
		and flt.CGO_ACFT_TYPE = #cgoAcftType# 
		</isNotEmpty>
		<isNotEmpty property="fltModule" >	 
		and flt.flt_module1 = #fltModule# 
		</isNotEmpty>
		<isNotEmpty property="fromEta" >
		<isNotEmpty property="toEta" >	 
		and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
		</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( flt.carr_code = #loginCarrier#
                        OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>
</select>
<select id="fetchIFULDOutBoundFltList_unldgList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo, fltLeg.OFF_POINT unldgPt, 
		FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
		to_char(nvl(nvl(flt.act_time, flt.est_time), flt.sch_time),'0000') etd,
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'EST_BD_BU_EXP') estBdBuExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'LST_BD_BU_EXP') lstBdBuExp, 
		(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'ALLT_EXP') allt,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_EXP') ifShpExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_COMPL_EXP') ifShpComplExp,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_BU_EXP') ifShpBuExp
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
		join flt_opr_leg fltLeg on fltLeg.flt_type ='D' and FLT.FLT_KEY = fltLeg.FLT_KEY and FLT.SCH_DATE = fltLeg.SCH_DATE
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate, SHP_UNLDG_PT unldgPt from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P'
				<isNotEmpty property="cntgFltKey" >
				  	and SHP_CNTG_FLT_KEY = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltDate" >	 
				  	and  SHP_CNTG_FLT_DATE = #cntgFltDate# 
				</isNotEmpty>
				group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE , SHP_UNLDG_PT
				       
		       ) FFMDDT on FFMDDT.cntgFltKey = fltLeg.FLT_KEY and FFMDDT.cntgFltDate = fltLeg.SCH_DATE   and  FFMDDT.unldgPt = fltLeg.OFF_POINT
		where exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
		and flt.flt_type ='D' and fltLeg.OFF_POINT != 'HKG'
		
		<isNotEmpty property="searchUnldgPt" >	 
		  	and  fltLeg.OFF_POINT = #searchUnldgPt# 
		</isNotEmpty>
</select>

<select id="fetchIFULDIndBoundShpList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from (
		select ddt.awb_no awbNo,
		SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,
		ddt.awb_Date awbDate, 
		nvl(ddt.ULD_KEY,'BULK')  uldKey,
		NVL(DDT.ULD_KEY,'BULK') ||'-'|| DDT.AWB_NO  uldKeyAwbNo,
		ULDFFM.PCS ttlUldPcs,
		ULDFFM.WT ttlUldWt,
		case when DDT.ULD_KEY is not null then (select LOC_CODE from ULD_INVENTORY where ULD_KEY = DDT.ULD_KEY) else null end as locn,
    	case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
            and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
             else null end as noBreak, 
		(select WH_RMK from IMP_ULD_LIST where FLT_KEY = DDT.FLT_KEY  and FLT_DATE =DDT.FLT_DATE and ULD_KEY = DDT.ULD_KEY) as uldWhRmk,   
		(select AIRL_RMK from IMP_ULD_LIST where FLT_KEY = DDT.FLT_KEY  and FLT_DATE = DDT.FLT_DATE and ULD_KEY = DDT.ULD_KEY) as uldAirlRmk,     
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
			      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
			      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                )  shc,
		NVL(AWB.ORIG,'') org, AWB.DEST dest, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, NVL(FFM.PCS,0) PCS,NVL(FFM.WT,0) WT,ffm.shmpt_code shpmCode,
		(select sum(STRG_PCS)||'/'|| sum(STRG_WT) from  IMP_AWB_STRG_DTL 
        where  AWB_NO = DDT.AWB_NO and AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and  chkin_ULD_KEY = DDT.ULD_KEY group by AWB_NO,AWB_DATE,chkin_uld_key ) as bdPcWt, 
		(select sum(DAM_PC_DECL)||'/'|| sum(DAM_WT_DECL) from  IMP_AWB_STRG_DTL 
        where  AWB_NO = DDT.AWB_NO and AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and chkin_uld_key = ddt.ULD_KEY group by AWB_NO,AWB_DATE,chkin_uld_key ) as damPcWt,   
    	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
        WHERE V.FLT_KEY =  DDT.FLT_KEY AND V.FLT_DATE = DDT.FLT_DATE  AND V.AWB_NO = ddt.awb_no
        AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,    
		ddt.flt_key fltKey , ddt.flt_Date  fltDate,
    	DECODE((select count(1) from awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date and rownum=1),0,(select rmk from awb_rmk where awb_no=ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),(select AIRLN_RMK from awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date  and rownum=1)) AS awbAirlRmk,  
		DECODE((select count(1) from imp_car_awb where awb_no =ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),0,(select awb_rmk from awb where awb_no=ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date and rownum=1)) AS awbWhRmk,
	    ddt.CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
		decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr,
		REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		(select decode(FLTOPR.EST_TIME ,null,SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),3,4),SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),3,4)) 
		   as etd from FLT_OPR FLTOPR WHERE FLTOPR.FLT_KEY = ddt.SHP_CNTG_FLT_KEY and FLTOPR.SCH_DATE = ddt.SHP_CNTG_FLT_DATE  and FLTOPR.flt_type ='D')as etd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE_HH_MI(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferanceHhMi,
      	ddt.SHP_TRF_TYPE trfType, ddt.BRK_BULK brkBulk,
		ddt.UNLDG_PT  uldUnldgPt,
		ddt.SHP_UNLDG_PT shpUnldgPt,
    	ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
    	(select bulkPcs ||'/'||  bulkWt from 
             	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                 (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                    from EXP_PMANIFEST_AWB 
                          where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                          group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  union
                  select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                    from EXP_PMAN_TARMAC_AWB 
                          where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
              where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
              and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
              ) buPcWt,
    	JO.BU_INST buildInstr
  	from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO,shmpt_code shmpt_code 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		]]> 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
	               to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
	         	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
	         	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE,
	             ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
	             ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK,
	           	ddtView.SHP_TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	           	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	            			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	            			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
	                 NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	            			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	            			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
	             ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
	             ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
	           from V_UNFIN_DDT_DTL ddtView
	       		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A' 
	       		where 
	     		(uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'IF'))
	     		 and ddtView.SHP_CNTG_FLT_KEY = nvl(#expFltKey#,ddtView.SHP_CNTG_FLT_KEY) and nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000') = NVL(#expFltDate#,nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000'))) ddt 
 		on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		 left join AWB on AWB.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB.AWB_DATE = NVL(FFM.AWB_DATE,DDT.AWB_DATE)
		 left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = DDT.CNTG_FLT_KEY  and JO.FLT_DATE = DDT.CNTG_FLT_DATE
		              and JO.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO)  and JO.AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		 left join (select sum(NVL(ffmshp.MAN_PCS,0)) PCS,sum(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY
		 		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    		where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    		and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY)  uldFfm 
		    		on ffm.FLT_KEY = uldFfm.FLT_KEY and ffm.FLT_DATE = uldFfm.FLT_DATE and ffm.ULD_KEY = uldFFm.ULD_KEY             
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		    and exists (select null from V_UNFIN_DDT_DTL where SHP_TRF_TYPE = 'IF' and flt_key = ffm.flt_key and flt_date = ffm.flt_date and nvl(ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') 
		                and (uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'IF' and awb_no = ffm.awb_no)))
		      ) a       where 1 = 1 
       <isNotEmpty property="bulkIndYN">
	       <isEqual property="bulkIndYN" compareValue="N">
	       		and uldKey &lt;&gt; 'BULK'
	       			<isNotEmpty property="expFltKey">
					 	<isNotEmpty property="expFltDate">
					  			and  cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
						</isNotEmpty>
					</isNotEmpty>
	       	</isEqual>
	       <isEqual property="bulkIndYN" compareValue="Y">
	       		and uldKey = 'BULK'
	       	</isEqual>
       	</isNotEmpty>
   order by  to_number(nvl(timeDiifferanceHhMi,0)) , uldKey, awbno
</select>

<select id="fetchIFULDIndBoundULDAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from ( 
		select nvl(ffm.awb_no,ddt.awb_no) awbNo,
		SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
		TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
		decode(ffm.tr_No,null,'N','Y') ffmInd,
		decode(ddt.tr_No,null,'N','Y') ddtInd,
		nvl(awb.ORIG,'') org, awb.DEST dest, nvl(ffm.PCS,0) pcs,nvl(ffm.WT,0) wt, ffm.shmpt_code shpmCode, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
		(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
		                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		                        and (SHP_TRF_TYPE = 'IF' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
		                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
		                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
		              then 'Y' else 'N' end) as manPman,
		 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
		  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		   (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
						WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
						AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
			      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
			      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                )  shc,			
		 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
			ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
		  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
			ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
		  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
		      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
		              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
		               else '' end as noBreak, 
		              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
		DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
		DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
		d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
		DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
		DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt     
		from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, shmpt_code shmpt_code, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
		                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
		 left join IMP_CAR_SHP shp on shp.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and shp.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and shp.flt_key = NVL(ffm.flt_key,ddt.flt_key) and shp.flt_Date = NVL(ffm.flt_Date,ddt.flt_Date)
		 left join IMP_ULD_LIST D
		     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  and d.flt_key = NVL(ffm.flt_key,ddt.flt_key) and d.flt_date = NVL(ffm.flt_Date,ddt.flt_Date) 
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
		   ]]>
		   <isNotEmpty property="trfType">
				and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
			</isNotEmpty>
		   ) a ORDER BY  timeDiifferance, awbNo , awbDate
</select>

<select id="fetchIFULDIndBoundTsnstCntrlAWB_CNTG_FLT_List" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from (
		select nvl(ffm.awb_no,ddt.awb_no) awbNo,
		SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
		TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
		decode(ffm.tr_No,null,'N','Y') ffmInd,
		decode(ddt.tr_No,null,'N','Y') ddtInd,
		nvl(awb.ORIG,'') org, awb.DEST dest, 
		awb.catalog catalog,
		case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.PCS,0)
			else nvl(ffm.PCS,0) end pcs,
		case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.WT,0)
			else nvl(ffm.WT,0) end wt, 
		case when ffm.tr_No is null and awb.catalog = 'TM' then 'Y' else 'N' end disablePcWt,
		NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
		(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
		                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		                        and (SHP_TRF_TYPE = 'IF' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
		                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
		                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
		              then 'Y' else 'N' end) as manPman,
		nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
		ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
			ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
		  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
			ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt, 
		  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
		  '' as proposeTrfType, '' etaChangedHrs, 
		      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
		              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
		               else '' end as noBreak, 
		              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
		                 (select bulkPcs ||'/'||  bulkWt from 
		               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
		                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
		                      from EXP_PMANIFEST_AWB 
		                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
		                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
		                    union
		                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
		                      from EXP_PMAN_TARMAC_AWB 
		                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
		                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
		                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
		                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
		                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
		                ) buPcWt,
		PKG_COMMON.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as etd, 
		                        PKG_COMMON.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as std,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,nvl(ffm.flt_key,ddt.flt_key),nvl(ffm.flt_date,ddt.flt_date),'TIME_DIFF' ) timeDiifferance,
		ddt.qt_bu qtBu,
		(select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
				where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
				and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr, 
			ffmCntTab.ffmCount ffmCount,
		(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
		(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
		               nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
		from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
		                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.qt_BU
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		left join (select  COUNT(1) ffmCount ,  nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
		         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		            where ffmMSG.FFM_STATUS = 'P'
		            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
		            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                  and ffmCntTab.flt_key = NVL(ffm.flt_key,ddt.flt_key) and ffmCntTab.flt_date = NVL(ffm.flt_Date,ddt.flt_Date)    				
		 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
		  		and nvl(ffm.awb_no,ddt.awb_no) = #awbNo# and nvl(ffm.awb_Date,ddt.awb_Date) = #awbDate#
		
		   ]]>
		   ) a where 1=1 
		    	<isNotEmpty property="expFltKey">
		       	 	<isNotEmpty property="expFltDate">
		       	  		and cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
		    	  	</isNotEmpty>
		     	 </isNotEmpty>
		   ORDER BY  timeDiifferance,  awbNo , awbDate
</select>

<select id="fetchIFULDIndBoundTransitFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select 
		   ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate  
		from
		(select  
		FFMSHP.AWB_NO AWB_NO, FFMSHP.AWB_DATE AWB_DATE, FFMSHP.ORG ORG, FFMSHP.DEST DEST, NVL(FFMSHP.MAN_PCS,0) PCS,
		NVL(FFMSHP.MAN_WT,0) WT, FFMMSG.FLT_KEY FLT_KEY , FFMMSG.FLT_DATE FLT_DATE, FFMULD.ULD_KEY ULD_KEY, FFMMSG.TR_NO TR_NO,
		
		ffmULD.CNTG_FLT_CARR1 ||ffmULD.CNTG_FLT_NO1 CNTG_FLT_KEY,ffmULD.CNTG_FLT_DATE1 CNTG_FLT_DATE
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where FFMMSG.FFM_STATUS = 'P' and FFMSHP.DEST != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
		                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on DDT.FLT_KEY = FFM.FLT_KEY and  DDT.FLT_DATE =  FFM.FLT_DATE and nvl(DDT.ULD_KEY, '*') =  nvl(FFM.ULD_KEY, '*') and DDT.AWB_NO = FFM.AWB_NO
		 where 
		   ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		 		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		   		 
		  ]]>
		  	<isNotEmpty property="expFltKey">
			 	<isNotEmpty property="expFltDate">
			  			and  ddt.CNTG_FLT_KEY = #expFltKey# and ddt.CNTG_FLT_DATE = #expFltDate#
				</isNotEmpty>
			</isNotEmpty>
		 		
		 		group by ddt.CNTG_FLT_KEY , ddt.CNTG_FLT_DATE  
</select>

<select id="fetchIFULDIndBoundTransitBulkList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select distinct FLT_KEY, FLT_DATE, ULD_KEY uldKey, LOC_CODE locn
				from IMP_RAMP_CHK_DTL r
				join mast_wh_loc l on l.code = r.loc_code
				join mast_wh_group g on l.wh_group = g.wh_group and g.wh_type = 'IF'
				join mast_uld_type t on t.code = r.uld_type and (t.h_cont_ind = 'Y' or t.bt_ind = 'Y')
		where r.flt_key = #fltKey# and r.flt_Date = #fltDate#  and NVL(r.chkin_yn,'N')='Y'
		 ]]>
</select>

<select id="fetchOutBoundIFUldShpList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select
		nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
		ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
		nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
		ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
		PKG_COMMON.get_flt_eta(ddt.flt_key, ddt.flt_Date, 'A', 'DD') eta,
		NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, 
		NVL(FFM.PCS,0) ffmPcs,NVL(FFM.WT,0) ffmWt, FFM.shmpt_code shpmCode,
		ddt.qt_bu as qtBuInd,
	  
	   (select nvl(sum(bup_pc),'0') ||'/'|| nvl(sum(bup_wt),'0') buPcWt
	    FROM ( select flt_key, flt_date, awb_no, awb_date,
	    sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
	    sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
	   from exp_pmanifest_awb 
	   GROUP BY flt_key, flt_date, awb_no, awb_date
	   UNION 
	   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date,
	   sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
	   sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
	   from EXP_PMAN_TARMAC_AWB
	   group by flt_key,awb_no,awb_date,flt_date) where FLT_KEY = ddt.SHP_CNTG_FLT_KEY
	    AND FLT_DATE  = ddt.SHP_CNTG_FLT_Date
	    AND AWB_NO    = DDT.AWB_NO
	    AND AWB_DATE  = DDT.AWB_DATE) as buPcWt,
	   
	   (select nvl(sum(manf_pc),'0') ||'/'|| nvl(sum(manf_wt),'0') as pmanPcWt
	    FROM ( select flt_key, flt_date, awb_no, awb_date,sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt
	   from exp_pmanifest_awb 
	   GROUP BY flt_key, flt_date, awb_no, awb_date
	   UNION 
	   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt
	   from EXP_PMAN_TARMAC_AWB
	   group by flt_key,awb_no,awb_date,flt_date) 
	    WHERE FLT_KEY = ddt.SHP_CNTG_FLT_KEY
	    AND FLT_DATE  = ddt.SHP_CNTG_FLT_Date
	    AND AWB_NO    = DDT.AWB_NO
	    AND AWB_DATE  = DDT.AWB_DATE
	   ) as pmanPcWt,
          
		        
		(select sum(SHP.RECD_PCS)||'/'|| sum(SHP.RECD_WT) from  IMP_CAR_SHP SHP
		          where SHP.AWB_NO = DDT.AWB_NO and SHP.AWB_DATE = DDT.AWB_DATE
		          and  SHP.FLT_KEY = DDT.FLT_KEY and SHP.FLT_DATE = DDT.FLT_DATE group by SHP.AWB_NO,SHP.AWB_DATE,SHP.FLT_KEY,SHP.FLT_DATE) as bdPcWt, 
		(select loc_code from  ULD_INVENTORY uldInv where ddt.uld_key = uldInv.uld_key and rownum = 1) locn, 
		NVL(JODTL.PC,0) joPcs, NVL(JODTL.WT,0) joWt,          
		NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt,
		nvl(ddt.LOADED_PCS,0) pcs,nvl(ddt.LOADED_WT,0) wt, ddt.SHP_TRF_PC trfPcs , ddt.SHP_TRF_WT  trfWt, ddt.BRK_BULK brkBulk,
		round(ddtEtd.etdChangedHrs) etdChangedHrs, 
		       round(ddtEtd.etdChangedMin) etdChangedMin,
		       round(ddtEtd.etdChangedHrs)  || 'h'|| (round(ddtEtd.etdChangedMin) - (ROUND(ddtEtd.etdChangedHrs) * 60)) ||'m' etdChangedHrsMin,
		   ddt.TRF_TYPE trfType, 
		   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
		   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
		   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		   ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,   
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
			      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
			      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
		                )  shc,
		        (SELECT V.CC_CODE FROM V_CST_CC_CODE_AWB V
		                WHERE V.AWB_NO = ddt.awb_no
		          AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,
		           JO.BU_INST buildInstr, ddt.QT_BU qtBu,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TR_TYPE' ) proposeTrfType    
		from V_UNFIN_DDT_DTL ddt
		join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
		          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
				NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
		      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
		          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
		join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
		left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
		LEFT JOIN   (SELECT SUM(JO_DTL.AWB_JO_PC) PC ,SUM(JO_DTL.AWB_JO_WT) WT,JO_HD.FLT_KEY FLT_KEY, JO_HD.FLT_DATE FLT_DATE ,JO_DTL.AWB_NO AWB_NO ,JO_DTL.AWB_DATE AWB_DATE 
		FROM EXP_BU_JO JO_HD 
		JOIN EXP_BU_JO_DTL JO_DTL 
		ON JO_HD.JO_NO = JO_DTL.JO_NO
		WHERE CONFIRMED_YN='Y' 
		group by JO_HD.FLT_KEY, JO_HD.FLT_DATE, JO_DTL.AWB_NO, JO_DTL.AWB_DATE) JODTL
		ON JODTL.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  AND JODTL.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
		AND JODTL.AWB_NO = DDT.AWB_NO  AND JODTL.AWB_DATE =  DDT.AWB_DATE
		left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, sum(nvl(ffmshp.MAN_PCS,0)) PCS, MIN(shmpt_code) shmpt_code,
		    SUM(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmshp.awb_no, ffmshp.awb_Date, ffmMSG.flt_key, ffmMSG.flt_Date 
		    ) ffm on ddt.FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
		left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = ddt.SHP_CNTG_FLT_DATE
		              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
		where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
		and ddt.SHP_TRF_TYPE = 'IF' 
		  ]]>
		  <isNotEmpty property="unldgPt" >	 
			  	and ddt.SHP_UNLDG_PT = #unldgPt#
			</isNotEmpty>
			 <isNotEmpty property="impFltKey" >	 
			  	<isNotEmpty property="impFltDate" >	 
			  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
			  	</isNotEmpty>
			</isNotEmpty>
			ORDER BY  ddt.ULD_KEY
</select>

<select id="fetchOutBoundIFUldShpListFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select
		ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate
		from V_UNFIN_DDT_DTL ddt
		join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
		          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
				NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
		      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
		          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
		join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
		left join (select nvl(sum(shp_trf_Pc),0) qt_trf_Pcs  , nvl(sum(shp_trf_Wt),0) qt_trf_Wt  ,V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY ,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO ,
		          V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO 
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D'
		      group by V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO, V_UNFIN_DDT_DTL.SDOC_LINE_NO, V_UNFIN_DDT_DTL.UDOC_LINE_NO, V_UNFIN_DDT_DTL.DOC_LINE_NO 
		      ) ddtQt
		      on ddt.SHP_CNTG_FLT_KEY = ddtQt.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtQt.SHP_CNTG_FLT_DATE 
		          and  ddtQt.TR_NO = ddt.TR_NO and ddtQt.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtQt.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtQt.DOC_LINE_NO = ddt.DOC_LINE_NO
		left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
		left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		    nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm on ddt.SHP_CNTG_FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.SHP_CNTG_FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
		left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
		              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
		where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
		and ddt.SHP_TRF_TYPE = 'IF' 
		  ]]>
		   <isNotEmpty property="unldgPt" >	 
			  	and ddt.SHP_UNLDG_PT = #unldgPt#
			</isNotEmpty>
			 <isNotEmpty property="impFltKey" >	 
			  	<isNotEmpty property="impFltDate" >	 
			  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
			  	</isNotEmpty>
			</isNotEmpty>
		group By ddt.flt_key , ddt.flt_Date
</select>
<select id="fetchIndBoundIFAwbInvtryList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
	<![CDATA[ 
		select A.LOC_CODE locn, 
		A.LSP_NO lspNo, 
		A.ULD_KEY uldKey,
		A.LOCN_PCS locnPcs, 
		A.LOCN_WT locnWt, 
		A.WH_DAM_IND whDamInd , 
		case when A.LSP_NO is not null then (select L.TARGET from LSP_INVENTORY L where L.LSP_NO = A.LSP_NO)  
		else case when A.ULD_KEY is not null then (select U.TARGET from ULD_INVENTORY U where U.ULD_KEY = A.ULD_KEY)
		else '' end end  as  target
		from awb_inventory A where awb_no = #awbNo# and awb_date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
	 ]]>
</select>

<select id="sqlAwbCountafterBD"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#PARAM# AND AWB_CLOSED_YN='N'
</select>
<update id="updateimpcarshprestorereset" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	UPDATE IMP_CAR_SHP 
	SET     LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
</update>	
<select id="chkBldpExistsCnt"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') 
</select>

<select id="getULDPPKNBKRecord_Count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select COUNT(1) from uld_inventory where uld_key = #PARAM# and handling_mode in ('PPK','NBK') and (transit_type is null or transit_type not in ('IF'))
</select>

<select id="getULDPPKNBKRecordImpUldDDT_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT 
		COUNT(1) 
	FROM IMP_ULD_LIST A
	LEFT JOIN V_DDT_DTL B on B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE=A.FLT_DATE AND B.ULD_KEY=A.ULD_KEY 
	WHERE 
		A.ULD_KEY=#uldKey# AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.HANDLING_MODE IN ('PPK','NBK') AND (B.TRF_TYPE IS NULL OR B.TRF_TYPE NOT IN ('IF'))
</select>


<select id="getULDPPKNBKRecordImpUldDDT_CountTM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_ULD_LIST A WHERE A.ULD_KEY= #uldKey# AND A.FLT_KEY= #fltKey# AND A.FLT_DATE= #fltDate# AND A.HANDLING_MODE = 'NBK'
	AND EXISTS (select null from IMP_RAMP_INB_CHK_DTL  WHERE ULD_KEY= #uldKey# AND FLT_KEY= #fltKey# 
	AND FLT_DATE= #fltDate# AND (NVL(RESDIT_IND,'N') = 'Y' or (CPM_IND='Y' and LOAD_TYPE='M') ))
</select>

<select id="getULDPPKNBKRecordImpUldDDT_CountTM2" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_ULD_LIST A WHERE A.ULD_KEY= #uldKey# AND A.FLT_KEY= #fltKey# AND A.FLT_DATE= #fltDate# 
	AND EXISTS (select null from IMP_RAMP_INB_CHK_DTL  WHERE ULD_KEY= #uldKey# AND FLT_KEY= #fltKey# 
	AND FLT_DATE= #fltDate# AND (NVL(RESDIT_IND,'N') = 'Y' or (CPM_IND='Y' and LOAD_TYPE='M') ))
</select>

<select id="getMailASCargo_CountTM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_CARRIER where code = substr(#fltKey#,0,2) and NVL(MAIL_AS_CARGO,'X') = 'Y' 
</select>

<select id="getCountULDAlreaadyCheckin" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from imp_ramp_chk_dtl where uld_key=#uldKey# and flt_key=#fltKey# and flt_date=#fltDate# and chkin_yn='Y'
</select>

<select id="getAWBListFromFFM_view" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select awb_no as awbNo,to_char(awb_date,'DDMONYY') as awbDate,(select decode(count(1),0,'N','Y') from awb where awb_no=v_ffm_dtl.awb_no and awb_date=v_ffm_dtl.awb_date and awb_closed_yn='Y') as awbClosedyn,   man_pcs as strgPcs, man_wt as strgWt 
			from v_ffm_dtl where flt_key=#flightKey# and flt_date=#flightDate# and uld_key=#uldKey#
</select>


<select id="fiwMessageChecking" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 WITH FFMINFO  AS (    
	    SELECT flt_key,flt_date,AWB_NO,AWB_DATE, sum(strgPcs) as strgPcs,sum(strgWt) as strgWt  from (
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,man_pcs as strgPcs, man_wt as strgWt  FROM V_FFM_DTL  
	      where flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	      AND uld_key is not null and EXISTS (select null from IMP_RAMP_CHK_DTL where FLT_KEY = V_FFM_DTL.flt_key and flt_date = V_FFM_DTL.flt_date and uld_key = V_FFM_DTL.uld_key )
      		UNION ALL	      
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,strg_pcs as strgPcs, strg_wt as strgWt  FROM IMP_AWB_STRG_DTL a
	       LEFT JOIN MAST_ULD_TYPE M1 ON SUBSTR(a.CHKIN_ULD_KEY,0,3) = M1.CODE
	      where flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	      AND (NVL(DUMMY_H_CONT_IND,'N') = 'Y' OR NVL(H_CONT_IND,'N') = 'Y' OR NVL(BT_IND,'N') = 'Y')
	    ) GROUP by flt_key,flt_date,AWB_NO,AWB_DATE
	  ),
	  MANFINFO AS(
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,MANIFEST_PCS as manfPcs, MANIFEST_WT as manfWt FROM imp_car_shp  WHERE 
	      flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	  ) 
	  select COUNT(1) as result from FFMINFO a , MANFINFO b where a.strgPcs = b.manfPcs and a.strgWt = b.manfWt
</select>

<select id="getAWBListFromRESDIT" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT A.AWB_NO as awbNo,to_char(A.AWB_DATE,'DDMONYY') as awbDate,B.TR_AWB_NO AS trNo,B.TAG_NO AS tagNo ,B.TAG_WT AS wt,
		D.ORIG as orig,
		D.DEST as dest
        FROM EDI_RESDIT_AWB_DTL A
        JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
        JOIN EDI_RESDIT_HD C ON  C.TR_NO = A.TR_NO
        JOIN (SELECT DTL.TAG_NO,HD.AWB_NO,HD.AWB_DATE,HD.ORIG,HD.DEST FROM EDI_CARDIT_HD HD , EDI_CARDIT_TAG_DTL DTL WHERE HD.TR_NO = DTL.TR_NO) D ON  D.TAG_NO = B.TAG_NO AND D.AWB_NO = A.AWB_NO AND D.AWB_DATE = A.AWB_DATE	
        WHERE C.FLT_KEY= #fltKey# AND C.FLT_DATE= TO_DATE(#fltDate#,'DDMONYY') AND B.CONTAINER_NO = #uldKey#
</select>

<select id="getAnotherImportFlightDtl_CheckIn"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">			  
		select ui.flt_key flightKey,to_char(ui.flt_date,'DDMONYY') flightDate
		from ULD_INVENTORY ui
		join FLT_OPR_EVENTS foe on foe.flt_key = ui.flt_key and foe.sch_date = ui.flt_date and foe.flt_type = 'D' 
		where not (nvl(ui.imp_flt_key,'*') = #flightKey# and nvl(ui.imp_flt_date,'01JAN70') = #flightDate#) and ui.flt_type='E' and ui.uld_key=#uldKey#
		and foe.ctm_out_date is null
</select>
<select id="getFltClrforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String" >	
	select DECODE(COUNT(1),0,'N','Y') as flightClear 
	FROM CST_ACK WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND ACK_REC_TYPE = 'CLR' AND FLT_TYPE = 'I'
</select>

<select id="checkAWBhaveNegitivePcsWt" parameterClass="map" resultClass="java.lang.Integer" >	
	select count(*) from imp_car_shp where awb_no=#awbNo# and awb_date=#awbDate# and (recd_pcs &lt; 0 or recd_wt &lt; 0)
</select>

<select id="getMinStrgCharge" parameterClass="java.lang.String" resultClass="java.lang.String" >	
	select trim(to_char(min_chrg,'99999D99')) from bill_itm_master where itm_code=#PARAM#
</select>
 <select id="selectSRFBkgSRFInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
 	select booking_no from imp_booking_dtl a,imp_srf b where booking_no in (
 	select booking_no from imp_booking_dtl where srf_no=#srfNo#) and a.srf_no=b.srf_no and b.status!='VOID' and rownum=1
 </select>
 <update id="updateSRFBkgSRFInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
 	update imp_booking set srf_issued='N',LM_USER_ID=#userId#,lm_date=sysdate where booking_no=#bookingNo# 
 </update>

<select id="chkUldExistsInInventoryForIF_TCCL" parameterClass="map" resultClass="java.lang.Integer" >
<![CDATA[
    select COUNT(1) 
    	from  uld_inventory u
		left join exp_pmanifest_uld p on p.flt_key=u.flt_key and p.flt_date=u.flt_date and p.uld_bt_no=u.uld_key
		left join exp_pman_tarmac_uld t on t.flt_key=u.flt_key and t.flt_date=u.flt_date and t.uld_bt_no=u.uld_key
		where  u.uld_key = #uldKey#  
		and u.owned_inv = 'Y' 
		and ( not(u.imp_flt_key = #fltKey# and imp_flt_date =#fltDate#)
		      or p.flt_key is not null
		      or (t.flt_key is not null and  #firstFinalizedInd# = 'Y')
		      or (u.flt_type = 'E' and not(u.flt_key = #cntFltKey# and u.flt_date = #cntFltDate# ))
		      )
]]>
</select>

<update id="resetDDTFinalVer_DDT_MSG" parameterClass="map">
 	UPDATE DDT_MSG SET FINAL_VER_IND='N', LM_USER_ID=#lmUserId#, LM_DATE = SYSDATE WHERE  FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND DDT_STATUS = 'P'
</update>


<update id="resetResetFinalize_TCC" parameterClass="map">
 	update flt_opr_events set ddt_finalise_date = '' , ddt_finalise_user_id = '', MANUAL_HANDLED_TCC = 'Y' , LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE where flt_key = #fltKey# and sch_date = #fltDate# and FLT_TYPE = 'A'
</update>

<select id="getCurrentDDT_Trno" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select m.TR_NO as trNo from ddt_msg m where m.flt_key = #FLT_KEY# and m.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') AND m.ddt_status='P'
</select>


<update id="update_DDT_MSG_AWB_MAN_IND" parameterClass="map">
 	UPDATE ddt_shp SET MANUAL_IND='', LM_USER_ID=#LM_USER_ID#, LM_DATE = SYSDATE WHERE  TR_NO = #TR_NO#
</update>

<delete id="delete_DDT_MSG_DEL_INFO" parameterClass="java.util.HashMap" >
 	DELETE FROM ddt_shp_del where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</delete>

<select id="validateContourcode_TCCL" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
 	select count(1) from MAST_CONTR_IND where CODE = #PARAM#
</select>

<select id="getCount_IMP_RAMP_CHK_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  IMP_RAMP_CHK_DTL  where flt_key = #fltKey# and flt_Date = #fltDate# and uld_key=#uldKey# and chkin_yn='Y'
]]>
</select>
<select id="getCount_EXP_CHKOUT_HD_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_HD  where flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# 
]]>
</select>
<select id="getCount_EXP_CHKOUT_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where ULD_KEY = #uldKey# and flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# 
]]>
</select>
<insert id="insert_EXP_CHKOUT_HD_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_CHKOUT_HD (FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
	values (#cntgFltKey#,#cntgFltDate#,#lmUserId#,sysdate,#lmUserId#,sysdate,'E')
</insert>
	
<insert id="insert_EXP_CHKOUT_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_CHKOUT_DTL (FLT_KEY,FLT_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey#,#cntgFltDate#,#uldKey#,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>
<select id="getCount_EXP_CHKOUT_DTL_TCCL_OLD_VALIDATE" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate# and uld_key = #uldKey# and chkout_date is not null
]]>
</select>
<delete id="delete_EXP_CHKOUT_HD_OLD_TCCL" parameterClass="java.util.HashMap" >
	delete from EXP_CHKOUT_DTL where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate# and uld_key = #uldKey# and chkout_date is null
</delete>
<select id="getCount_EXP_CHKOUT_DTL_TCCL_OLD" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where flt_key = #oldCntgFltKey# and flt_Date = #oldCntgFltDate# 
]]>
</select>
<delete id="delete_EXP_CHKOUT_DTL_OLD_TCCL" parameterClass="java.util.HashMap" >
	delete from EXP_CHKOUT_HD where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate#
</delete>
<select id="validateCCCode_TCCL" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
      SELECT DECODE(#PROCESS#,'PREMAN',restrict_preman, 'BUILDUP_COMP_ULD', RESTRICT_BUILDUP_COMP_ULD) as v_restrict
	   FROM mast_constraint_code
	   WHERE code = #CC_CODE#
</select>

<select id="getEnquireTransListInternal" parameterClass="cargo.cms.imprt.bo.EnqTranshipmentBO" resultClass="cargo.cms.imprt.bo.EnqTranshipmentBO">
<![CDATA[
SELECT car.awb_no awbNo,
  SUBSTR(car.awb_no,'0','3') AS awbPfx,
  SUBSTR(car.awb_no,'4')     AS awbSfx,
  car.flt_key fltKey,
  TO_CHAR(car.flt_date,'DDMONYY') fltDate,
  PKG_COMMON.get_flt_sta(car.FLT_KEY, car.FLT_DATE, 'A') AS sta,
  PKG_COMMON.get_flt_eta(car.FLT_KEY, car.FLT_DATE, 'A') AS eta,
  awb.orig origin,
  awb.dest dest,
  DECODE(awb.spl_code1, NULL, '', awb.spl_code1 )
  || DECODE(awb.spl_code2, NULL, '',','
  || awb.spl_code2 )
  || DECODE(awb.spl_code3, NULL, '', ','
  || awb.spl_code3 )
  || DECODE(awb.spl_code4, NULL, '', ','
  || awb.spl_code4 )
  || DECODE(awb.spl_code5, NULL, '', ','
  || awb.spl_code5 )
  || DECODE(awb.spl_code6, NULL, '', ','
  || awb.spl_code6 )
  || DECODE(awb.spl_code7, NULL, '', ','
  || awb.spl_code7 )
  || DECODE(awb.spl_code8, NULL, '', ','
  || awb.spl_code8 )
  || DECODE(awb.spl_code9, NULL, '', ','
  || awb.spl_code9)AS shc,
  car.manifest_pcs manPcs,
  car.manifest_wt manWt,
  car.recd_pcs invPcs,
  car.recd_wt invWt ,
  pman.pmanPcs pmanPcs,
  pman.pmanWt pmanWt ,
  DECODE(
  (SELECT COUNT(1) FROM IMP_TRM_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO                  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE                =TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ),0,NULL,
  (SELECT SUM(pcs)
  FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN
  WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ))),
  (SELECT SUM(RCL_PCS)
  FROM TRF_ACCEPT_HD
  WHERE AWB_NO=car.awb_no
  AND AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ))),
  (SELECT SUM(dtl.pcs)
  FROM IMP_TRM_DTL dtl,
    IMP_TRM_HD hd
  WHERE dtl.trm_no=hd.trm_no
  AND dtl.flt_key =car.flt_key
  AND dtl.flt_date=car.flt_date
  AND dtl.awb_no  =car.awb_no
  AND dtl.awb_date=car.awb_date
  AND hd.status   ='POSTED'
  )) AS ctPcs,
  DECODE(
  (SELECT COUNT(1) FROM IMP_TRM_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO                  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE                =TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ),0,NULL,
  (SELECT SUM(wt)
  FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN
  WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ))),
  (SELECT SUM(RCL_WT)
  FROM TRF_ACCEPT_HD
  WHERE AWB_NO=car.awb_no
  AND AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ))),
  (SELECT SUM(dtl.wt)
  FROM IMP_TRM_DTL dtl,
    IMP_TRM_HD hd
  WHERE dtl.trm_no=hd.trm_no
  AND dtl.flt_key =car.flt_key
  AND dtl.flt_date=car.flt_date
  AND dtl.awb_no  =car.awb_no
  AND dtl.awb_date=car.awb_date
  AND hd.status   ='POSTED'
  )) AS ctWt,
  trk.trkPcs truckManfPcs,
  trk.trkWt truckManfWt
FROM awb awb,
  imp_car_shp car
LEFT OUTER JOIN
  (SELECT awb_no,
    awb_date,
    SUM(pman_pcs) pmanPcs,
    SUM(pman_wt) pmanWt
  FROM EXP_PMANIFEST_AWB
  GROUP BY awb_no,
    awb_date
  ) pman
ON car.awb_no   = pman.awb_no
AND car.awb_date=pman.awb_date
LEFT OUTER JOIN
  (SELECT awb_no,
    awb_date,
    imp_flt_key,
    imp_flt_date,
    SUM(trk_manf_pcs) trkPcs,
    SUM(trk_manf_wt) trkWt
  FROM ITM_TRK_MANF_SHP
  GROUP BY awb_no,
    awb_date,
    imp_flt_key,
    imp_flt_date
  )trk
ON car.awb_no   = trk.awb_no
AND car.awb_date=trk.awb_date
AND car.flt_key = trk.imp_flt_key
AND car.flt_date=trk.imp_flt_date
WHERE car.awb_no=awb.awb_no
AND car.awb_date=awb.awb_date
AND awb.awb_type='T'
]]>
  			<isNotEmpty property="fltKey">
  				and car.flt_key=#fltKey#
  			</isNotEmpty>
			<isNotEmpty property="fltDate">
			  	and car.flt_date=#fltDate#
			</isNotEmpty>
 			<isNotEmpty property="awbNo" >	 
			  	and car.awb_no = #awbNo#
			</isNotEmpty>
			 <isNotEmpty property="origin" >	 
			  	and awb.orig = #origin#
			</isNotEmpty>
			 <isNotEmpty property="dest" >	 
			  	and awb.dest = #dest#
			</isNotEmpty>
			 <isNotEmpty property="splCode1" >	 
			  	and #splCode1# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="splCode2" >	 
			  	and #splCode2# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="splCode3" >	 
			  	and #splCode3# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="fltDateFrom" >	 
			  <isNotEmpty property="fltDateTo" >	 
			  	and car.flt_date between TO_DATE(#fltDateFrom#,'DDMONYY')  
    			AND TO_DATE(#fltDateTo#,'DDMONYY') 
			</isNotEmpty>
			<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( car.carr_code = #loginCarrier#
                        OR  car.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>
			</isNotEmpty> order by fltDate asc,sta asc,awbNo asc
</select>
<select id="getEnquireTransListExternal" parameterClass="cargo.cms.imprt.bo.EnqTranshipmentBO" resultClass="cargo.cms.imprt.bo.EnqTranshipmentBO">
select car.awb_no awbNo,SUBSTR(car.awb_no,'0','3') AS awbPfx,SUBSTR(car.awb_no,'4') AS awbSfx, car.flt_key fltKey, to_char(car.flt_date,'DDMONYY') fltDate,PKG_COMMON.get_flt_sta(car.FLT_KEY, car.FLT_DATE, 'A') as sta,PKG_COMMON.get_flt_eta(car.FLT_KEY, car.FLT_DATE, 'A') as eta,
awb.orig origin,awb.dest dest, ica.shpr_name as shipper,
              car.manifest_pcs manPcs, car.manifest_wt manWt, car.recd_pcs invPcs, car.recd_wt invWt,                       
                          	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE v.flt_key = car.flt_key and v.flt_date = car.flt_date AND V.AWB_NO = car.AWB_NO 
			 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
			 nvl(awb.CNSL_IND,'N') consolInd,ica.CSGNE_NAME AS consignee
from 
awb awb, imp_car_awb ica ,imp_car_shp car   
where car.awb_no=awb.awb_no and car.awb_date=awb.awb_date and car.awb_no=ICA.awb_no and car.awb_date=ICA.awb_date
  and awb.awb_type='T' and
  		(awb.spl_code1 = (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code2 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') 
  		OR awb.spl_code3 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR 
			awb.spl_code4 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code5 =  'RFS' OR awb.spl_code6 = (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR 
			awb.spl_code7 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code8 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') 
			OR awb.spl_code9 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC'))
  			<isNotEmpty property="fltKey" >	 
			  <isNotEmpty property="fltDate" >	 
			  	and car.flt_key=#fltKey# and car.flt_date=#fltDate#
			</isNotEmpty>
			</isNotEmpty>
 			<isNotEmpty property="awbNo" >	 
			  	and car.awb_no = #awbNo#
			</isNotEmpty>
			 <isNotEmpty property="origin" >	 
			  	and awb.orig = #origin#
			</isNotEmpty>
			 <isNotEmpty property="dest" >	 
			  	and awb.dest = #dest#
			</isNotEmpty>			 
			 <isNotEmpty property="fltDateFrom" >	 
			  <isNotEmpty property="fltDateTo" >	 
			  	and car.flt_date between TO_DATE(#fltDateFrom#,'DDMONYY')  
    			AND TO_DATE(#fltDateTo#,'DDMONYY') 
			</isNotEmpty>
			</isNotEmpty>
			 <isNotEmpty property="consignee" >	 
			  	and ica.CSGNE_NAME = #consignee#
			</isNotEmpty>
</select>

<select id="isInventoryUpdatebyAnotheruser" parameterClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO" 
		resultClass="java.lang.Integer">
		select count(*) from awb_inventory 
		where
		AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND 
		nvl(flt_key,'*') = nvl(#fltNo#,'*') and nvl(flt_Date,'01JAN00') = nvl(to_date(#fltDate#,'DDMONYY'),'01JAN00')
		AND SRF_NO=#srfNo# AND LOC_CODE=#locCode# and locn_pcs=#locPc# and locn_wt=#locWt#
		<isNotEmpty prepend="AND" property="lspNo">
		  	LSP_NO=#lspNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="uldNo">
			ULD_KEY=#uldNo#
		</isNotEmpty>
</select>
<select id="isAWBhasConfiguredSHCs_count" parameterClass="map" resultClass="java.lang.String">
		select count(*) from AWB a, mast_code_dtl mcd
			where a.awb_no=#awbNo# and a.awb_date=#awbDate#
			and mcd.code in (a.spl_code1,a.spl_code2,a.spl_code3,a.spl_code4,a.spl_code5,a.spl_code6,a.spl_code7,a.spl_code8,a.spl_code9)
			and mcd.code_type='ECT_HANDLER_SHC'
</select>

<select id="srfExistForRestore"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">
	 <![CDATA[	 
	 		SELECT COUNT(1)
				FROM IMP_SRF T
				WHERE AWB_NO = #awbNo#
				AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND ( STATUS  ='ISSUED'  
				AND sysdate  < srf_expy_date
				OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) 
				OR STATUS  ='POSTED'
      			OR SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )
			)
		]]>
	</select>



	<select id="isAuthRepOfAgent"  parameterClass="map"  resultClass="java.lang.Integer">
	   select count(1) from cust_agent_auth_rep where cust_no = #CUST_NO# and auth_rep_id = NVL((select hkid from sec_user where code = #USER_ID# and cust_no = #CUST_NO#),'XXXX')
	</select>
	
	<select id="AuthRepNameOfAgentBooking"  parameterClass="map"  resultClass="java.util.HashMap">
	   select AUTH_REP_NAME ,AUTH_REP_ID  from cust_agent_auth_rep where cust_no = #CUST_NO# and auth_rep_id = NVL((select hkid from sec_user where code = #USER_ID# and cust_no = #CUST_NO#),'XXXX')
	</select>
	<!-- Tow Order Check-in - Flight Details -->
	<select id="sqlGetTowInRecordFltDtl" parameterClass="java.lang.String"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			MAX(FLT_KEY) fltKey, TO_CHAR(MAX(FLT_DATE), 'DDMONYY') fltDate
			FROM TOW_ORDER_IN
			WHERE TO_NO = #PARAM#	
		]]>
	</select>
	<select id="checkeHandoverRHOstatus" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT NVL(INB_FLT,'N') FROM MAST_EHANDOVER_RHO HANDOVER WHERE NVL(HANDOVER.INB_FLT,'N')='Y' AND HANDOVER.RHO IN (
		SELECT (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=OPR.RHO_ID) FROM FLT_OPR OPR WHERE OPR.RHO_ID IS NOT NULL
		AND OPR.FLT_TYPE = 'A' AND OPR.FLT_KEY = #FLT_KEY# AND OPR.SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY'))			
		]]>
	</select>
	<!-- Tow Order In Record - Verify Flight Data -->
	<select id="sqlGetIsTowInRecordValidFlight" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isValidFlight
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')			
		]]>
	</select>
	<!-- Tow Order In Record - Verify Arrived Flight Data -->
	<select id="sqlGetIsTowInRecordValidArrivedFlight"
		parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isArrivedFlight
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND ACT_TIME IS NOT NULL AND
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
		]]>
	</select>
	<!-- Tow Order In Record - Verify Check-in Completion -->
	<select id="sqlGetIsTowInRecordRampComplete" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') completed
			FROM FLT_OPR_EVENTS
			WHERE FLT_TYPE = 'A' AND
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND RAMP_COMPL_YN = 'Y'
		]]>
	</select>
	<!-- Tow Order In Record - Verify Record Already Exist Or Not -->
	<select id="sqlGetIsTowInRecordExist" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isExist
			FROM TOW_ORDER_IN_RECORD
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')
		]]>
	</select>
	<!-- Tow Order In Record - Actual Flight Arrival Time (Short Value) -->
	<select id="sqlGetTowInRecordATA" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			PKG_COMMON.GET_FLT_ATA(#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), 'A', 'DD')
			FROM DUAL		
		]]>
	</select>
	<!-- Tow Order In Record Records for Flight/Date -->
	<select id="sqlGetTowInRecords" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			TOR.FLT_KEY fltKey, TO_CHAR(TOR.FLT_DATE, 'DDMONYY') fltDate,
			TO_CHAR(TOR.TOW_IN_TIME, 'DDMONYY') terminalInDate, TO_CHAR(TOR.TOW_IN_TIME, 'HH24:MI:SS') terminalInTime,
			TOR.TYPE_P uldTypeP, TOR.TYPE_A uldTypeA, TOR.TYPE_B uldTypeB, TOR.TYPE_W uldTypeW, TOR.TYPE_U uldTypeU, 
			TOR.TYPE_20FT uldType20ft,
			'N' newFlag, TO_CHAR(TOR.LM_DATE, 'DDMONYY HH24:MI:SS') lmMultiUserTime
			FROM TOW_ORDER_IN_RECORD TOR
            JOIN FLT_OPR FO ON FO.FLT_KEY = TOR.FLT_KEY AND FO.SCH_DATE = TOR.FLT_DATE AND FO.FLT_TYPE='A'
			WHERE TOR.FLT_KEY = #FLT_KEY# AND TOR.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
                  ]]>
                  <isNotEmpty prepend="AND" property="loginCarrier">
                  <![CDATA[                
                                    (FO.CARR_CODE = #loginCarrier#
                                    OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                  ]]>
                  </isNotEmpty>
                  <isEmpty property="loginCarrier">
                  <isNotEmpty prepend="AND" property="loginCustCode">
                   <![CDATA[                 
                                    FO.RHO_ID = #loginCustCode#
                  ]]>
                  </isNotEmpty>
                  </isEmpty>
            <![CDATA[      
			ORDER BY TOR.TOW_IN_TIME DESC
		]]>
	</select>
 		<select id="sqlGetTowInRecordsSummary" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
            SELECT
			TOR.FLT_KEY fltKey, TO_CHAR(TOR.FLT_DATE, 'DDMONYY') fltDate,
			SUM(NVL(TOR.TYPE_P, 0)) uldTypeP, SUM(NVL(TOR.TYPE_A, 0)) uldTypeA, 
      		SUM(NVL(TOR.TYPE_B, 0)) uldTypeB, SUM(NVL(TOR.TYPE_W, 0)) uldTypeW, 
      		SUM(NVL(TOR.TYPE_U, 0)) uldTypeU, SUM(NVL(TOR.TYPE_20FT, 0)) uldType20ft
			FROM TOW_ORDER_IN_RECORD TOR
            JOIN FLT_OPR FO ON FO.FLT_KEY = TOR.FLT_KEY AND FO.SCH_DATE = TOR.FLT_DATE AND FO.flt_type='A'
			WHERE TOR.FLT_KEY = #FLT_KEY# AND TOR.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
			]]>
			<isNotEmpty prepend="AND" property="loginCarrier">
                  <![CDATA[  
                      (FO.CARR_CODE = #loginCarrier#
                       OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                  ]]>
            </isNotEmpty>
             <isEmpty property="loginCarrier">
               <isNotEmpty prepend="AND" property="loginCustCode">
                 <![CDATA[
                      FO.RHO_ID = #loginCustCode#
                  ]]>   
                </isNotEmpty>
             </isEmpty>
            <![CDATA[      
            GROUP BY TOR.FLT_KEY, TOR.FLT_DATE
		]]>
	</select>	
	<!-- Tow Order In Record Data for Modification -->
	<select id="sqlGetTowInRecord" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			FLT_KEY fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') fltDate,
			TO_CHAR(TOW_IN_TIME, 'DDMONYY') terminalInDate, TO_CHAR(TOW_IN_TIME, 'HH24:MI:SS') terminalInTime,
			TYPE_P uldTypeP, TYPE_A uldTypeA, TYPE_B uldTypeB, TYPE_W uldTypeW, TYPE_U uldTypeU, 
			TYPE_20FT uldType20ft,
			'N' newFlag, TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmMultiUserTime
			FROM TOW_ORDER_IN_RECORD
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')			
		]]>
	</select>
	<!-- Tow Order In Record Data - Create -->
	<insert id="sqlInsertTowInRecord" parameterClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			INSERT INTO TOW_ORDER_IN_RECORD
			  (
			    FLT_KEY, FLT_DATE, TOW_IN_TIME,
			    TYPE_P, TYPE_A, TYPE_B, TYPE_W, TYPE_U, TYPE_20FT,
			    CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			  )
			  VALUES
			  (
			    #fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 
			    TO_DATE(#terminalInDate# || ' ' || #terminalInTime#, 'DDMONYY HH24:MI:SS'),
			    #uldTypeP#, #uldTypeA#, #uldTypeB#, #uldTypeW#, #uldTypeU#, #uldType20ft#,
			    #userID#, SYSDATE, #userID#, SYSDATE
			  )
		]]>
	</insert>
	<!-- Tow Order In Record Data - Modify -->
	<update id="sqlUpdateTowInRecord" parameterClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			UPDATE TOW_ORDER_IN_RECORD
			SET TYPE_P = #uldTypeP#, TYPE_A = #uldTypeA#, TYPE_B = #uldTypeB#, TYPE_W = #uldTypeW#, TYPE_U = #uldTypeU#, 
			TYPE_20FT = #uldType20ft#,
			LM_DATE = SYSDATE, LM_USER_ID = #userID# 
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#terminalInDate# || ' ' || #terminalInTime#, 'DDMONYY HH24:MI:SS')
		]]>
	</update>
	<!-- Tow Order In Record Data - Delete -->
	<delete id="sqlDeleteTowInRecord" parameterClass="java.util.Map">
		<![CDATA[
			DELETE FROM TOW_ORDER_IN_RECORD 
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')	
		]]>
	</delete>				
	<!-- -->
	<!-- Tow Order In Record - Actual Flight Arrival Time -->
	<select id="sqlGetTowInRecordATAFull" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			TO_CHAR(NVL(ACT_DATE, SCH_DATE), 'DDMONYY') || ' ' 
			  || SUBSTR(TRIM(TO_CHAR(ACT_TIME, '0000')), 0, 2) 
			  || NVL2(ACT_TIME, ':', '') 
			  || SUBSTR(TRIM(TO_CHAR(ACT_TIME, '0000')), 3, 4) ATA
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND ACT_TIME IS NOT NULL AND 
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
		]]>
	</select>	
	<!-- Tow Order In Record Records for Flight/Date -->
	
	<select id="chkOffloadExistsCnt"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">		
		select count(1) from exp_offload_uld_awb where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and confirmed_yn   ='Y' 
	</select>
	<select id="unPostedSRFexistsforReIssue" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
	   SELECT count(1) FROM IMP_SRF T
	   WHERE AWB_NO = #AWBNO# AND AWB_DATE =  TO_DATE(#AWBDATE#, 'DDMONYY') 
	   AND
	   (STATUS ='ISSUED' and sysdate < srf_expy_date
	   OR
	   EXISTS (SELECT NULL FROM imp_srf_awb_inventory where srf_no = t.srf_no and t.status = 'ISSUED' and dlv_pcs > 0))
	   and SRF_NO != #SRFNO# 
 	]]>
</select>
    
	<select id="get_awbno_forflight_tag"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1)  from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# AND SEQ_NO=#xpsSeqNo# AND AWB_NO IS NOT NULL			
   	</select>  
    <select id="getSeqNoTMTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
	   <![CDATA[
		 SELECT SEQ_NO
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #fltKey#
	     AND flt_date = to_date(#fltDate#,'DDMONYY')
	     AND TAG_NO = #tagNo#  
	     AND CATALOG = 'TM'
	     AND BD_ULD_KEY = #bdULDKey#
	     AND DEST=#dest#
	     ]]>
   </select>
    <update id="sqlUpdateTransitMailTagDesktopAdd" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
			UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = ACT_PCS + #pcs#, 
			ACT_WT  = ACT_WT + #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey# ,
			RMK = UPPER(#rmk#) 
		 WHERE
			SEQ_NO=#xpsSeqNo#
	</update>	
	
	<select id="getVoidSRFControlList" parameterClass="cargo.cms.imprt.bo.VoidSrfControlBO" resultClass="cargo.cms.imprt.bo.VoidSrfControlBO">    
    	 	SELECT
			  BV.SRF_NO AS srfNum,
			  BV.AWB_NO AS awbNum,
			  substr(BV.AWB_NO,0,3) AS awbPriffix,
			  substr(BV.AWB_NO,4,11) AS awbSuffix,
			  to_char(BV.AWB_DATE,'DDMONYY') AS awbDate,
			  BV.AWB_WGT AS awbWgt,
			  BV.VOID_USER AS voidUserName,			  
			  to_char(BV.VOID_DATE,'DDMONYY HH24:MI') AS voidTime,
			  BV.INV_NO AS invoiceNum,
			  BV.AGENT_CODE AS custCode,
			  BV.AGENT_NAME       AS agentName,
			  BV.FIN_CODE AS finCode,
			  BV.ITM_CODE AS itemCode,
			  BV.ITM_DESC AS itemDesc,
			  BV.ITM_CHARGE AS itemCharge,
			  BV.REV_IND AS revInd,   
			  BV.STD_IND AS stdCharge,
			  BV.CHRG_QTY AS chargeQuantity   ,
			  BV.TTL_CRD_BAL AS credit,
			  BV.CRD_BAL_BEF_VOID AS custCreditBefVoid,
			  BV.CRD_BAL_AFT_VOID AS custCreditAftVoid 
			FROM
			  bill_void_srf_chrg_dtls BV
			  join AWB AWB on BV.AWB_NO = AWB.AWB_NO and BV.AWB_DATE = AWB.AWB_DATE
			  where BV.CR_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#,'DDMONYY') + 1
			  <isNotEmpty property="loginCarrier">
              AND (AWB.CARR_CODE = #loginCarrier#
              OR AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
              </isNotEmpty>
			  <isNotEmpty prepend="AND" property="srfNumber">
			       BV.SRF_NO = #srfNumber#		      
		 	  </isNotEmpty>
		 	  <isNotEmpty prepend="AND" property="awbNumber">
			       BV.AWB_NO = #awbNumber#		      
		 	  </isNotEmpty>
		 	  <isNotEmpty prepend="AND" property="customerName">
			       BV.AGENT_NAME = #customerName#		      
		 	  </isNotEmpty>	   
		 	  order by BV.VOID_DATE,BV.AWB_NO,BV.ITM_CODE
    </select>
	
	<select id="getUldCPMWeight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">		
		 select wt from edi_cpm_dtl where flt_key = #flightKey# and flt_date  = to_date(#flightDate#,'DDMONYY') and uld_key = #uldKey#
   	</select>
	<select id="checkUrfisCreatedorNot" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_ISS_HD where srf_no=#srfNo#
	</select>
	<select id="fsuBrkdnPcsEqualToManifestPcsFB"  parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.Integer">  
	   SELECT count(1)    
		  FROM imp_car_shp carshp
		  LEFT JOIN imp_car_awb cawb on cawb.awb_no = carshp.awb_no and cawb.awb_date = carshp.awb_date
		  LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date
										from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt
		             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
		     WHERE ( ( NVL(carshp.MANIFEST_PCS,0) = NVL(carshp.recd_pcs + nvl(ddt.tt_pcs,0),0) 
		               AND NVL(carshp.MANIFEST_WT,0) = NVL(carshp.recd_wt + nvl(ddt.tt_wt,0),0) ) OR cawb.bypass_rel = 'Y' )
		        AND carshp.awb_no = #awbNo#
		        AND carshp.awb_date = to_date(#awbDate#,'DDMONYY')
		        AND carshp.flt_key  = #fltKey#
		        And carshp.flt_date = to_date(#fltDate#,'DDMONYY')	   
	</select>
	<select id="checkFlightRHOAndLoginRHO" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from flt_opr where flt_key = #FLT_KEY# and sch_date = TO_DATE(#FLT_DATE#,'DDMONYY') and flt_type = #FLT_TYPE# and RHO_ID = #RHO_ID#
	</select>
	<update id="update_close_ind_awb" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'N', LM_DATE = SYSDATE, 
			LM_USER_ID = #lmUser#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<select id="chkRHOIsHAS"  parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.Integer">
	select count(1) from flt_opr where flt_key = #flightCarr# and sch_date = #arrDate# and rho_id = (select code from cust_company where code_desc = 'HAS')					
	</select>	
	
	
	<!-- EIIT Submission-->
	
	<delete id="deleteITTHeader" parameterClass="map">
		delete from cst_itt_hd where tr_no = #trNo#
	</delete>
	
	<delete id="deleteITTDetail" parameterClass="map">
		delete from cst_itt_dtl where tr_no = #trNo#
	</delete>
	
	<insert id="insertEIITHeader" parameterClass="map" >
     Insert into cst_itt_hd
     (TR_NO,ITT_REQ_NO,ITT_REQ_DATE,ITT_AUTH_CODE,ORIG_CARGO_HANDLER,DEST_CARGO_HANDLER,DC_IND,CONSOL,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
         values
     (#trNumber#,#ittReqNum#,to_char(SYSDATE,'DDMONYY'),#ittAuthCode#,#origCargoHandler#,#destCargoHandler#,#dcInd#,#console#,#crUserID#,SYSDATE,#crUserID#,SYSDATE)
	</insert>
				
	<insert id="insertEITTDetail" parameterClass="cargo.cms.imprt.bo.TrmBO">
	      Insert into cst_itt_dtl
	     (TR_NO,DOC_LINE_NO,ITT_REQ_NO,ITT_REQ_DATE,AWB_NO,AWB_DATE,HAWB_NO,CARR_CODE,FLT_NO,FLT_KEY,FLT_DATE,
	         ITT_CTM_REF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,Pcs,Wt,CC_CODE,ORIG,DEST,CATALOG,DC_YN,CT_NO,TR_TYPE,CONTENT,ITT_TYPE)
	         values
	     (#trNumber#,#docLineNo#,#eiitNumber#,to_char(SYSDATE,'DDMONYY'),#awbNo#,#awbDate#,'000000000000000000',#carrCode#,substr(#fltKey#,3),#fltKey#,#fltDate#,
			#ittCtmRefNo#,#userID#,SYSDATE,#userID#,SYSDATE,#manPcs#,#manWt#,#ccCode#,#origin#,#destination#,#catalog#,#dcInd#,#trmNo#,'CEITT',#content#,'ITT')
	</insert>
	
	<insert id="sqlITTSubmSubmitTempSaveHeader" parameterClass="cargo.cms.imprt.bo.TrmBO">
	      Insert into cst_subm_temp
	     (VER_NO,CTRL_DATE,REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER)
	         values
	     (#eiitNumber#,to_char(SYSDATE,'DDMONYY'),'ITT',SYSDATE,'P',#userID#,SYSDATE,'1')        
	</insert>
	
	<insert id="sqlITTSubmSubmitTempSaveDetails" parameterClass="cargo.cms.imprt.bo.TrmBO">
	         Insert into cst_submit_temp
	         (FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO,CTRL_DATE)
	          values
	         (#fltKey#,#fltDate#,#eiitNumber#,'ITT',#awbNo#,'000000000000000000',to_char(SYSDATE,'DDMONYY'))
	</insert>
	
	<select id="getEITTSubmDetails" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select awb_no as awbNumber,pcs as awbPc,wt as awbWt,
			(select to_char(max(subm_date),'DDMONYY HH24:MI') from cst_subm where ver_no = ITT_REQ_NO and ctrl_date = ITT_REQ_DATE and rec_type = 'ITT') as submDate,
			DECODE(fun_check_man_itt(itt_req_no, itt_req_date, NULL, 'ITT', 'Y'),'A','Accepted','P','In progress') as eittStatus,
			cr_user_id as submEITT,
			(SELECT ERR_MSG AS errMsgDesc FROM CST_SUBM
		WHERE((TO_char(ctrl_date, 'DDMONYY') =  cst_itt_dtl.itt_req_date AND ver_no = cst_itt_dtl.itt_req_no) and itt_req_code = cst_itt_dtl.itt_req_code)  	
			and REC_TYPE = 'ITT' and rownum = 1 ) as details
			from cst_itt_dtl
			where ITT_REQ_NO = #eiitNumber# and
			TRUNC(ITT_REQ_DATE) = to_date(#eiitDate#,'DDMONYY')
	</select>
	
	<select id="enquireEITTSubmStatusList" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT *
			FROM
			  (SELECT 
			    CASE     
			      WHEN A.REC_TYPE='ITF'      THEN 6      
			      WHEN A.REC_TYPE='ITC'      THEN 7      
			      WHEN A.REC_TYPE='ITT'      THEN 8 
			    END orderNo,
			    A.REC_TYPE                               AS type, 
			    TO_CHAR(A.SUBM_DATE,'DD MON YY HH24:mi') AS submDate,
			    TO_CHAR(B.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    CASE WHEN SEND_STATUS in ('E','R') then 'Y'  
			     	 WHEN (select count(1) from cst_recv where req_uid = B.uq_id and error_msg is not null and msg_type =  A.REC_TYPE )  > 0  THEN 'Y' ELSE '' END AS errMessage,
			    DECODE(A.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as status, 
			    B.uq_id reqUid
			  FROM CST_SUBM A
			  JOIN CST_ACK B
			  ON ((A.VER_NO          = B.VER_NO  AND A.ctrl_DATE        = B.ctrl_DATE)  OR A.ITT_REQ_CODE      = B.ITT_REQ_CODE)  AND A.REC_TYPE         =B.ACK_REC_TYPE
			  AND ((B.VER_NO         = #eiitNumber#
			  AND B.ctrl_DATE        = to_date(#eiitDate#,'DDMONYY'))
			  OR B.ITT_REQ_CODE      = #ittReqCode#)			  
			  WHERE (A.rec_type     IN ('ITT','ITF','ITC')  OR B.ACK_rec_type NOT IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA'))
			  AND ((A.VER_NO         = #eiitNumber#
			  AND A.ctrl_DATE        = to_date(#eiitDate#,'DDMONYY'))
			  OR A.ITT_REQ_CODE      = #ittReqCode#)
			  UNION ALL
			  SELECT DECODE(C.ACK_REC_TYPE,'ITA',1,'ITD',2,'ITN',3,'ITQ',4,'ITL',5) orderNo,
			    C.ACK_REC_TYPE                           AS type,      
			    ''                                       AS submDate,
			    TO_CHAR(C.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    ''                                       AS errMessage,
			    ''                                       AS status,  
			    uq_id reqUid
			  FROM CST_ACK C
			  WHERE C.ACK_REC_TYPE IN('ITQ','ITN','ITL','ITD','ITA')
			  AND ((C.VER_NO        = #eiitNumber#
			  AND C.ctrl_DATE       = to_date(#eiitDate#,'DDMONYY'))
			  OR C.ITT_REQ_CODE     = #ittReqCode#)
			  )
			ORDER BY TO_DATE(ackDate,'DD MON YY HH24:mi') DESC, orderNo	
	</select>
	
	<!-- eITT Submission Status -->
    
    <select id="getEITTSubmissionStatusList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >    
    	SELECT ver_no                  AS eiitReqNum,
		  TO_CHAR(ctrl_date,'DDMONYY') AS eiitReqDate,
		  TRIM(CST_SUBM.itt_req_code)  AS reqCode,
		  CST_SUBM.itt_auth_code       AS authCode,
		  DEST_CARGO_HANDLER as destinationCTO,
		  TO_CHAR(subm_date,'DDMONYY HH24:MI') as submDate,
		  DECODE(SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','Rejected')  AS eiitStatus,		 
		  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
		   DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, itt.itt_req_Code, 'ITC', 'N'),'A','Cancel Accepted','P','Cancel In progress','W','Cancel Pending',null) as itcStatus, 
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
		    rec_type msgType,
		    ORIG_CARGO_HANDLER originCTO,  
		    DC_IND containDC,
		    ITT_CONFIRM_DENY_IND confirmDenyInd,
		    case when CONFIRM_USER_ID is not null then 'Y' else '' end as confirmInd,
		    case when DENY_USER_ID is not null then 'N' else '' end as denyInd,
		    itt.tr_no trNumber
		FROM CST_SUBM
		JOIN cst_itt_hd itt ON ((itt.ITT_REQ_NO  = ver_no AND itt.ITT_REQ_DATE = ctrl_date) OR itt.itt_req_code  = CST_SUBM.itt_req_code)
		WHERE rec_type IN ('ITT') 		
		<dynamic>
		    <isNotEmpty prepend="AND" property="ctNumber">
		    	   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE CT_NO = #ctNumber#) 
		    </isNotEmpty>			
			<isNotEmpty prepend="AND" property="awbNumber">
				   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE AWB_NO = #awbNumber#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldKey">
				   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE ULD_KEY = #uldKey#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="eiitReqDate">
				   TRUNC(itt.ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY') 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="eiitReqNum">
				    itt.ITT_REQ_NO = #eiitReqNum# 
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="destinationCTO">
				    itt.DEST_CARGO_HANDLER   = #destinationCTO# 
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="submDate">
				    to_char(CST_SUBM.subm_date,'DDMONYY')   = #submDate# 
			</isNotEmpty>	
		</dynamic>		
	</select>
	
	<select id="getAWBListForcancelRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		  SELECT ITT_REQ_NO as eiitReqNum,to_char(ITT_REQ_DATE,'DDMONYY') as eiitReqDate, to_char(flt_date,'DDMONYY') as fltDate, flt_key as fltKey,
		   ITT_REQ_CODE as reqCode, awb_no as awbNumber
		   FROM CST_ITT_DTL
		   WHERE ITT_REQ_NO = #eiitReqNum# and TRUNC(ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY') 
	</select>	
	
	<insert id="sqlITCSubmCancelRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	      Insert into cst_subm_temp
	     (VER_NO,CTRL_DATE,REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER,ITT_REQ_CODE)
	         values
	     (#eiitReqNum#,#eiitReqDate#,'ITC',SYSDATE,'P',#userID#,SYSDATE,'1',#reqCode#)        
	</insert>
	
	<insert id="sqlSubmitITCSubmitRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	         Insert into cst_submit_temp
	         (FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO,CTRL_DATE,ITT_REQ_CODE)
	          values
	         (#fltKey#,#fltDate#,#eiitReqNum#,'ITC',#awbNumber#,'000000000000000000',#eiitReqDate#,#reqCode#)
	</insert>
	
	<select id="getEITTSubmissionDtlsList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT awb_no                 AS awbNumber,
		  '000000000000000000'        AS hawb,
		  flt_key                     AS fltKey,
		  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
		  (SELECT trim(V.ref_no)
		    FROM V_CST_IMP_CC_CODE V
		    WHERE V.FLT_KEY                          = dtl.FLT_KEY
		    AND V.FLT_DATE                           = dtl.FLT_DATE
		    AND V.AWB_NO                             = dtl.AWB_NO
		    AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		    AND ROWNUM                               = 1
		  )     AS CERefNum,
		  (SELECT trim(V.cc_Code)
		    FROM V_CST_CC_CODE_AWB V
		    WHERE V.AWB_NO                             = dtl.AWB_NO
		    AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		    AND ROWNUM                               = 1
		  )     AS ccCode,  
		  CT_NO AS ctNumber
		FROM cst_itt_dtl dtl 
		where ( (ITT_REQ_NO = #eiitReqNum# and TRUNC(ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY')) 	or ITT_REQ_CODE = #reqCode#)
	</select>
	
	<select id="getEITTErrorMsgDtls" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT ''                 AS awbNumber,
			  ''        AS hawb,
			  flt_key                     AS fltKey,
			  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
			  ERR_MSG                   AS errMessage
			FROM CST_subm
			WHERE REC_type                        IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')
			AND ( (TO_CHAR(ctrl_date, 'DDMONYY') = #eiitReqDate# AND ver_no = #eiitReqNum#) OR itt_req_code = #reqCode# )
			AND REC_type = #type#
	</select>
	
	<select id="getEITTErrorMsgDtlsList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT awb_no                 AS awbNumber,
			  '000000000000000000'        AS hawb,
			  flt_key                     AS fltKey,
			  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
			  ERROR_MSG                   AS errMessage
			FROM CST_RECV
			WHERE REC_TYPE                       = 'M'
			AND MSG_type                        IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')
			AND ( (TO_CHAR(ctrl_date, 'DDMONYY') = #eiitReqDate# AND ver_no = #eiitReqNum#) OR itt_req_code = #reqCode# )
			AND MSG_TYPE = #type# and error_msg is not null
	</select>
	
	<select id="getEITTSubmStatusList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT *
			FROM
			  (SELECT 
			    CASE     
			      WHEN A.REC_TYPE='ITF'      THEN 6      
			      WHEN A.REC_TYPE='ITC'      THEN 7      
			      WHEN A.REC_TYPE='ITT'      THEN 8 
			    END orderNo,
			    A.REC_TYPE                               AS type, 
			    TO_CHAR(A.SUBM_DATE,'DD MON YY HH24:mi') AS submDate,
			    TO_CHAR(B.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    CASE WHEN SEND_STATUS in ('E','R') then 'Y'  
			     	 WHEN (select count(1) from cst_recv where req_uid = B.uq_id and error_msg is not null and msg_type =  A.REC_TYPE )  > 0  THEN 'Y' ELSE '' END AS errMessage,
			    DECODE(A.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as status, 
			    B.uq_id reqUid
			  FROM CST_SUBM A
			  left JOIN (select uq_id,ACK_DATE,ACK_REC_TYPE, VER_NO, ctrl_DATE, ITT_REQ_CODE from CST_ACK 
        where ((VER_NO         = #eiitReqNum#
			  AND ctrl_DATE        = to_date(#eiitReqDate#,'DDMONYY'))
			  OR  ITT_REQ_CODE     = #reqCode#)) B on ((A.VER_NO = B.VER_NO  AND A.ctrl_DATE = B.ctrl_DATE)  OR A.ITT_REQ_CODE = B.ITT_REQ_CODE)  AND A.REC_TYPE = B.ACK_REC_TYPE
			  WHERE (A.rec_type     IN ('ITT','ITF','ITC')  OR B.ACK_rec_type NOT IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA'))
			  AND ((A.VER_NO         = #eiitReqNum#
			  AND A.ctrl_DATE        = to_date(#eiitReqDate#,'DDMONYY'))
			  OR A.ITT_REQ_CODE      = #reqCode#)
			  UNION ALL
			  SELECT DECODE(C.ACK_REC_TYPE,'ITA',1,'ITD',2,'ITN',3,'ITQ',4,'ITL',5) orderNo,
			    C.ACK_REC_TYPE                           AS type,      
			    ''                                       AS submDate,
			    TO_CHAR(C.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    ''                                       AS errMessage,
			    ''                                       AS status,  
			    uq_id reqUid
			  FROM CST_ACK C
			  WHERE C.ACK_REC_TYPE IN('ITQ','ITN','ITL','ITD','ITA')
			  AND ((C.VER_NO        = #eiitReqNum#
			  AND C.ctrl_DATE       = to_date(#eiitReqDate#,'DDMONYY'))
			  OR C.ITT_REQ_CODE     = #reqCode#)
			  )
			ORDER BY TO_DATE(ackDate,'DD MON YY HH24:mi') DESC, orderNo	
	</select>
	
	<!-- eITT Request -->
	
	 <select id="getEITTRequestList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
			SELECT 
			  ORIG_CARGO_HANDLER as originCTO,		  
			  ITT_REQ_CODE as reqCode,
			  ITT_AUTH_CODE as authCode,
			  DC_IND as containDC,
			  TR_NO as trNumber,			  
	      	  to_char(cr_date,'DDMONYY HH24:MI') as recvDate,
	 		  DECODE(fun_check_man_itt(null, null, ITT_REQ_CODE, 'ITF', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as eiitStatus,
	 		  ITT_CONFIRM_DENY_IND as confirmDenyInd,
	 		  (select count(1) from  CST_ITT_DTL where ITT_REQ_CODE =   hd.ITT_REQ_CODE) as cnrCount,
	 		  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        	  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus,
		       (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus 
			FROM CST_ITT_HD hd 
			WHERE DEST_CARGO_HANDLER = 'CPA'  and accs_ind = 'Y' and (ITT_REQ_NO is null and  ITT_REQ_DATE is null)
	   	    <dynamic>
			    <isNotEmpty prepend="AND" property="reqCode">
			    	    ITT_REQ_CODE = #reqCode# 
			    </isNotEmpty>		    		
				<isNotEmpty prepend="AND" property="originCTO">
					 ORIG_CARGO_HANDLER = #originCTO#   
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="awbNumber">
					  ITT_REQ_CODE IN (SELECT ITT_REQ_CODE FROM CST_ITT_DTL WHERE AWB_NO = #awbNumber#) 
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recvDate">
					TRUNC(cr_date) = to_date(#recvDate#,'DDMONYY')				 
				</isNotEmpty>
	        </dynamic>
	</select>	
	
	<update id="updateConfirmInd" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" >
		update cst_itt_hd set ITT_CONFIRM_DENY_IND = 'Y',
		CONFIRM_USER_ID = #userID#,
		CONFIRM_DATE = SYSDATE,
		DENY_USER_ID = null,
		DENY_DATE = null
		where itt_req_code = #reqCode# and tr_no = #trNumber#
	</update>
	
	<update id="updateDenyIndicator" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" >
		update cst_itt_hd set ITT_CONFIRM_DENY_IND = 'N',
		DENY_USER_ID = #userID#,
		DENY_DATE = SYSDATE,
		CONFIRM_USER_ID = null,
		CONFIRM_DATE = null
		where itt_req_code = #reqCode# and tr_no = #trNumber#
	</update>
	
	
	<select id="getAWBListForConfirmDenyRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		  SELECT ITT_REQ_NO as eiitReqNum,to_char(ITT_REQ_DATE,'DDMONYY') as eiitReqDate, to_char(flt_date,'DDMONYY') as fltDate, flt_key as fltKey,
		   ITT_REQ_CODE as reqCode, awb_no as awbNumber
		   FROM CST_ITT_DTL
		   WHERE itt_req_code = #reqCode# and tr_no = #trNumber#
	</select>	
	
	<insert id="InsertCstSubmForconfirmDeny" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	Insert into cst_subm_temp
	(REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER,ITT_REQ_CODE)
		values
	('ITF',SYSDATE,'P',#userID#,SYSDATE,'1',#reqCode#)
	</insert>
	
	<insert id="InsertCstSubmitForconfirmDeny" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	     Insert into cst_submit_temp
	     (FLT_KEY,FLT_DATE,CST_TYPE,AWB_NO,HAWB_NO,ITT_REQ_CODE)
	      values
	      (#fltKey#,#fltDate#,'ITF',#awbNumber#,'000000000000000000',#reqCode#)
	</insert>
	
	<select id="getEIITSeqNumber" resultClass="java.lang.String">	
   	 	select CST_ITT_HD_SEQ.NEXTVAL from dual
   	</select>
	
	<parameterMap id="hmIITGenerateNumberMap" class="map" >
        <parameter property="NUMBER" jdbcType="VARCHAR"    javaType="java.lang.String"    mode="OUT"/>
        <parameter property="TYPE" jdbcType="VARCHAR"    javaType="java.lang.String"    mode="IN"/>
    </parameterMap>

    <procedure id="generateIITnumber" parameterMap="hmIITGenerateNumberMap" >
        {? = call FUN_GET_TR_NO(?)}
    </procedure>
	
	<select id="checkImpFlightLevel1Acess" parameterClass="map" resultClass="java.lang.String" >
    <![CDATA[
    SELECT
	  (CASE
	    WHEN (SELECT  TRUNC(TO_DATE(TO_CHAR(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')) - TRUNC(TO_DATE((SELECT TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='A' AND ACT_DATE IS NOT NULL),'DDMONYY HH24MI'))+1 
	      FROM DUAL) > (SELECT RULE_VALUE FROM CMSRULES where rule_code='CLOSE_UNCLOSE_IMP_FLIGHT_LEVEL1')
	    THEN 'Y'
	    ELSE 'N'
	  END) DAYDIFF
	FROM dual
	]]>
	</select>
	<select id="checkImpFlightLevel2Acess" parameterClass="map" resultClass="java.lang.String" >
	<![CDATA[
	  SELECT
	  (CASE
	    WHEN (SELECT  TRUNC(TO_DATE(TO_CHAR(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')) - TRUNC(TO_DATE((SELECT TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='A' AND ACT_DATE IS NOT NULL),'DDMONYY HH24MI'))+1 
	      FROM DUAL) > (SELECT RULE_VALUE FROM CMSRULES where rule_code='CLOSE_UNCLOSE_IMP_FLIGHT_LEVEL2')
	    THEN 'Y'
	    ELSE 'N'
	  END) DAYDIFF
	FROM dual
	]]>
	</select>
	<select id="agentdropDownList"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
	SELECT CODE CODEID ,
	CODE_DESC CODEDESC
	FROM CUST_COMPANY
	WHERE AGENT_YN = 'Y'
	AND ACTIVE     = 'Y'
	AND CODE_DESC IN (PKG_COMMON.GET_AGENT_NAME(#carrCode#,#awbNo#,#awbDate#,(SELECT code_desc FROM cust_company  WHERE code=#codeId#)))
	</select>



	
	<select id="imp_UnPostSRF_getDataConsigneeExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			   SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
  			IMG_TRANS_ID transactionId,
			  SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			  SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
         SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		   B.CARR_CODE carrCode,
		   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   A.CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			    FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.PCS awbPc, 
			   A.WT awbWt,
			   'E' srfType,
			   A.CONTENT contents,
		   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
		   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   C.CSGNE_NAME consignee, 
			   A.AGENT_NAME apptdAgt,
		   case when B.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CODE) iataCode,
			   '' bankEndorsmentYN, 
			   '' bank,
			   A.AWB_RMK awbRemarks,
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, 					
			   B.TRUCK_NO truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 	   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) &gt; 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
 			   pkg_common.get_srf_cc(b.srf_no) as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   AND CUST_NO = A.AGENT_CODE AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  airlCrdAvail,
	    	   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   and nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND CUST_NO = A.AGENT_CODE AND upper(CR_TYPE) = 'IMPORT_GEN'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CODE ), 'N') undertakingYN 
			   FROM IMP_SRF B 
			    JOIN AWB A ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
          LEFT JOIN EXP_CAR C ON B.AWB_NO = C.AWB_NO AND C.AWB_DATE = B.AWB_DATE
			   WHERE   B.SRF_NO =#srfNo# 
	</select>
	
	<select id="imp_UnPostSRF_getDataConsignee"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 						resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
				IMG_TRANS_ID transactionId,
			   SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			   SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			   SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			   B.CARR_CODE carrCode,
			   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,
			   A.AWB_PCS awbPc, 
			   A.AWB_WT awbWt, 
			   A.CONTENT contents,
			   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
			   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   CSGNE_NAME consignee, 
			   APPNTD_AGENT apptdAgt,  
			   case when B.STATUS = 'VOID' then 'N' else
			   case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
			   A.BANK_ENDOS bankEndorsmentYN, 
			   A.BANK_TYPE bank,  
			   A.AIRLN_RMK awbRemarks, 			  
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			   TO_CHAR(B.VERIFIED_TIME,'DDMONYY HH24:MI') verTime, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, (
			   	SELECT MAX(TRUCK_NO) 
			   	FROM TRUCK_TRIP TRIP
  				JOIN IMP_TRUCK_SRF SRFTRIP
 				ON TRIP.TRIP_ID = SRFTRIP.TRIP_ID
  				WHERE SRFTRIP.SRF_NO = B.SRF_NO
  			   ) truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) > 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
			   B.AWB_CC_CODE as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
						AND nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   	AND CUST_NO = A.AGENT_CUST_NO AND ROWNUM = 1), 0)  airlCrdAvail,
	    	   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
						and nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN 
			   FROM IMP_SRF B , IMP_CAR_AWB A
			   WHERE  
			   B.AWB_NO = A.AWB_NO AND
			   B.AWB_DATE = A.AWB_DATE AND
			   B.SRF_NO = #srfNo#
	</select>
	
	<select id="imp_UnPostSRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.SRF_NO srfNo, 
			a.FLT_KEY flightNoKey, 
			case when length(a.FLT_KEY)>8  then 'N' else 'Y' end as fltKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			a.carr_code carrCode, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			DLV_PCS dlvPcs,
			DLV_Wt dlvWt,
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			CC_CODE strCC, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
	
	<update id="imp_unpostSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF SET 
		POST_USER = null , 
		POST_DATE = null , 		
		post_time = null,
		LM_USER_ID = #lmUserId# ,
		STATUS = 'ISSUED', 
		LM_DATE = SYSDATE,
		TR_TYPE = #trtype#  
		WHERE SRF_NO = #srfNo#
	</update>	
	
	<delete id="delete_imp_srf_awb_inventory_unpostSRF_for_cdifNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		delete from imp_srf_awb_inventory where srf_no = #srfNo# and cdif_no is null
	</delete>
	
	<select  id="get_unpostSrf_awbinv_seq_no" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#flightDate#,'',SYSDATE,#flightDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
		 AND srf_no = #srfNo# and cdif_no is null
	</select>
		
	<select  id="get_unpostSrf_awbinv_pc_milestone" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
    	 SELECT LOCN_PCS as locationPcs,to_char(nvl(LOCN_WT,0),'999999990.99') as locationWt FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM#
	</select>
		
	<update id="upd_unpost_srf_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#locationPcs#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#locationWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>

	<insert id="ins_unpost_srf_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, 
		uld_key, lsp_no, strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date,seq_no,srf_no , rtn_no , cdif_no)
	        values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,'I',#carrCode#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	        #uldKey#, #lspNo#,sysdate, 'B', #lmUserId#, sysdate, #lmUserId#, sysdate,#seqNo#,#srfNo#, 
          (select rtn_no from exp_rtn_hd where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# and rownum = 1) ,
          (SELECT flt_key FROM IMP_SRF_FLT WHERE awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# AND  length(flt_key) &gt; 8) )            
	</insert>
	
	<insert id="ins_unpostsrf_imp_srf_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" >		
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		AWB_NO,AWB_DATE,CARR_CODE,CR_DATE,CR_USER_ID,
		FLT_DATE,FLT_KEY,LOCN_PCS,LOCN_WT,LOC_CODE,SEQ_NO,SRF_NO,ULD_KEY,LSP_NO,REF_CDIF_NO) 
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,SYSDATE,#lmUserId#,
   		#flightDate#,#flightKey#,NVL(#locationPcs#,0), NVL(#locationWt#,0),#warehouseLocation#,#seqNo#,#srfNo#,#uldKey#,#lspNo#,
   		(SELECT flt_key FROM IMP_SRF_FLT WHERE awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# AND length(flt_key) &gt; 8))   		
	</insert>
	
	<update id="update_imp_srf_flt_unpostSRF" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		update imp_srf_flt set 
		dlv_pcs = null, 
		dlv_wt = null 		
		where srf_no = #srfNo# and AWB_NO  = #awbNo# and  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		and FLT_KEY = #flightNoKey# and FLT_DATE = #flightDate#
	</update>			
	
	<update id="update_imp_srf_awb_inventory_unpostSRF_for_cdifNo" parameterClass="java.util.HashMap">
		update imp_srf_awb_inventory set dlv_pcs = null, dlv_wt = null , dlv_rmk = null,
		DLV_BY = null, DLV_DATE = null, DLV_IND = null where srf_no = #srfNo# and cdif_no is not null
	</update>
	
	<update id="update_awb_un_closed_unpostSRF" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET 
			AWB_CLOSED = 'N', AWB_CLOSE_DATE = SYSDATE, 
			AWB_CLOSE_USER = #userid#,LM_DATE = sysdate,LM_USER_ID = 'SYSTEM'
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="update_awb_unclose_ind_unpostSRF" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'N', LM_DATE = SYSDATE, 
			LM_USER_ID = #userid#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="updateEmptyInUldInv_unpost_srf" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='N' WHERE ULD_KEY=#uldKey# 
	</update>
	<update id="updateEmptyInLspInv_unpost_srf" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='N' WHERE LSP_NO=#lspNo#
	</update>
	<select id="validateGlsAmendCollBookingNo"  parameterClass="java.lang.String" resultClass="java.lang.Integer" >
   	SELECT COUNT(1) FROM IMP_BOOKING_DTL A, IMP_BOOKING B WHERE B.BOOKING_NO = A.BOOKING_NO AND a.booking_no=#PARAM# and status='ISSUED'
   	</select>
		<select id="validateGlsAmendCollAWB"  parameterClass="map" resultClass="java.lang.Integer" >
   	select COUNT(1)
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'              
		where shp.awb_no=#awbNo# and shp.awb_date=#awbDate# and shp.flt_key=#fltKey# and shp.flt_date=#fltDate#
   	</select>
	
	<!-- Online Transfer Summary Starts Here -->
	
	<select id="fetchIndBound_online_transfer_summary_FltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[
	select DDT.tr_No ddtTrNo, FLTOPR.FLT_KEY fltKey, 
	 decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
	TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate ,  pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A') eta ,pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A') ata, FLTOPR.flt_type fltType,
	          NVL(DDTULD.ULDTT,0) uldTt, NVL(DDTSHP.SHPTT,0) shpTt,  
	           FUN_GET_ALLOTMENTS_EXP(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'), '','ETA_CHANGED_MIN') as etaChengedMin,
	            nvl(DDT.msg_yn,'N') ddtInd, nvl(DDT.FInal_VER_IND,'N') finalVerInd,  decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
	           DDT.LM_USER_ID lmUserId, to_char(DDT.LM_DATE,'DDMONYY HH24:MI')  lmDateTime , nvl(DDT.NIL_DDT,'N') ddtNilInd,  
	           FLTOPR.ACFT_PRK_BAY acftPrkBay, 
 			(select FINALIZED_VERSION_NO from ddt_msg where flt_key = FLTOPR.FLT_KEY and flt_date = FLTOPR.SCH_DATE and rownum =1) transitCtrlVer     
	from FLT_OPR  FLTOPR
	join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
	left join (select FLT_KEY, FLT_DATE, NVL(SUM(uldTT),'0') ULDTT  
	          	from
	            (select FLT_KEY, FLT_DATE, ULD_KEY,
	              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt  
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is not null
	                  group by FLT_KEY, FLT_DATE, ULD_KEY
	                  ) ULDDDT 
	                  where ULDDDT.FLT_DATE = #fltDate#
	              group by FLT_KEY, FLT_DATE) DDTULD on FLTOPR.FLT_KEY = DDTULD.FLT_KEY and FLTOPR.SCH_DATE = DDTULD.FLT_DATE 
				left join (select FLT_KEY, FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT
	          	from
	            (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,
	              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is null
	                  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
	                  ) SHPDDT 
	                  where SHPDDT.FLT_DATE = #fltDate#
	              group by FLT_KEY, FLT_DATE) DDTSHP on FLTOPR.FLT_KEY = DDTSHP.FLT_KEY and FLTOPR.SCH_DATE = DDTSHP.FLT_DATE             
	left join (select DDT_MSG.MSG_YN, DDT_MSG.FLT_KEY, DDT_MSG.FLT_DATE, DDT_MSG.DDT_STATUS, DDT_MSG.final_ver_ind, NIL_DDT,
				to_CHAR(DDT_MSG.BASELINE_ETA,'DDMONYY HH24MI') AS  BASELINE_ETA , DDT_MSG.LM_USER_ID , DDT_MSG.LM_DATE  ,  DDT_MSG.tr_no            
	            from  DDT_MSG  where FLT_DATE = #fltDate# 
              ) DDT on DDT.FLT_KEY = FLTOPR.FLT_KEY and DDT.FLT_DATE = FLTOPR.sch_DATE  and DDT.DDT_STATUS='P' 
	where (exists (select null from V_UNFIN_DDT_DTL where FLT_KEY = FLTOPR.FLT_KEY and FLT_DATE = FLTOPR.SCH_DATE)
    		OR exists (select null from EDI_FFM_MSG where FFM_STATUS = 'P' and FLT_KEY = FLTOPR.FLT_KEY and FLT_DATE = FLTOPR.SCH_DATE))
	AND FLTOPR.flt_type ='A' AND FLTOPR.sch_date = #fltDate# and FLTOPR.SCH_TIME between #fromEta# and #toEta#	
	]]>
	<isNotEmpty property="loginCarrier">
	<![CDATA[    
	   AND (FLTOPR.CARR_CODE = #loginCarrier#
	   OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
	]]>
	</isNotEmpty>
	<isEqual property="recWtransitChk" compareValue="Y">
		and (uldTt&gt;0 OR shpTt&gt;0) 
	</isEqual>
	<isNotEmpty property="srchFltKey" >
		and FLTOPR.flt_Key = #srchFltKey# 
	</isNotEmpty>
	<isNotEmpty property="cgoAcftType" >
		and FLTOPR.cgo_acft_type = #cgoAcftType# 
	</isNotEmpty>
   <isNotEmpty property="arcftRegionNo" >
		and FLTOPR.acft_reg_no = #arcftRegionNo# 
	</isNotEmpty>  
	order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
	</select>
	
	<select id="fetchOutBound_online_transfer_summary_fltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[
	select FLTOPR.FLT_KEY fltkey , 
			decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
			TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate      ,  
			pkg_common.get_flt_sta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') std,
  			pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') etd,
  			pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') atd,
		    FLTOPR.flt_type fltType,
			NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTSHP.SHPTT,0) shpTt, 
	        FUN_GET_ALLOTMENTS(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'),'ETD_CHANGED_MIN') etaChengedMin,
	        to_number(NVL(DDTULD.ULDTT,0)) ttlIfTt,  FLTOPR.ACFT_PRK_BAY acftPrkBay, 
	        decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
 			(select FINALIZED_VERSION_NO from ddt_msg where flt_key = FLTOPR.FLT_KEY and flt_date = FLTOPR.SCH_DATE and rownum =1) transitCtrlVer
	from FLT_OPR FLTOPR
	join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
	left join (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT
	          from
	            (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE,
	              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is null
	                  group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE
	                  ) SHPDDT group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE) DDTSHP 
	      on FLTOPR.FLT_KEY = DDTSHP.SHP_CNTG_FLT_KEY and FLTOPR.SCH_DATE = DDTSHP.SHP_CNTG_FLT_DATE    
	left join (select CNTG_FLT_KEY, CNTG_FLT_DATE, NVL(SUM(uldTT),'0') ULDTT
	          	from
	            (select CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY,
	              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is not null
	                  group by CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY
	                  ) ULDDDT 
	                  where ULDDDT.CNTG_FLT_DATE = #fltDate#
	              group by CNTG_FLT_KEY, CNTG_FLT_DATE) DDTULD 
	  on FLTOPR.FLT_KEY = DDTULD.CNTG_FLT_KEY and FLTOPR.SCH_DATE = DDTULD.CNTG_FLT_DATE 
	where  exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLTOPR.FLT_KEY and SHP_CNTG_FLT_DATE = FLTOPR.SCH_DATE)
	and  FLTOPR.FLT_TYPE ='D' and  FLTOPR.SCH_DATE = #fltDate# and FLTOPR.SCH_TIME between #fromEta# and #toEta# 	
	]]>
	<isNotEmpty property="loginCarrier">
	<![CDATA[    
	    AND (FLTOPR.CARR_CODE = #loginCarrier#
	    OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
	]]>
	</isNotEmpty>
	<isEqual property="recWtransitChk" compareValue="Y">
		and (uldTt&gt;0 OR shpTt&gt;0) 
	</isEqual>
	<isNotEmpty property="srchFltKey" >
		and FLTOPR.flt_Key = #srchFltKey# 
	</isNotEmpty>
	<isNotEmpty property="cgoAcftType" >
		and FLTOPR.cgo_acft_type = #cgoAcftType# 
	</isNotEmpty>
   <isNotEmpty property="arcftRegionNo" >
		and FLTOPR.acft_reg_no = #arcftRegionNo# 
	</isNotEmpty>  
	order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
	
	</select>
	
	<select id="fetchInboundOnlineTrnsfrSmryUldAwbList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	<![CDATA[ 
		select ddt.awb_no awbNo,
		SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,
		ddt.awb_Date awbDate, 
		nvl(ddt.ULD_KEY,'BULK')  uldKey,
		decode(ddt.CNTG_FLT_KEY,null,'BULK',ddt.ULD_KEY,null,'BULK',ddt.ULD_KEY) uldKeyShow,
		nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo,
		nvl(awb.ORIG,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = ddt.flt_key AND SCH_DATE = ddt.flt_Date AND FLT_TYPE = 'A')) org, 
		nvl(awb.DEST,ddt.UNLDG_PT) dest, 
		nvl(awb.DEST,ddt.SHP_UNLDG_PT) shpDest, 
		nvl(awb.ORIG,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = ddt.flt_key AND SCH_DATE = ddt.flt_Date AND FLT_TYPE = 'A')) shpldgPt, 
		case when ddt.CNTG_FLT_KEY is null then awb.catalog 
			 when (select count(1) from awb where catalog = 'TM' 
							and exists (select null from v_ddt_dtl where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
                                       and uld_key = ddt.ULD_KEY and awb_no = awb.awb_no and  awb_date = awb.awb_date )) > 0 then 'TM' 
              else awb.catalog end  catalog,
		NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0)) awbPcs, NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0)) awbWt,
		ddt.flt_key fltKey , 
		ddt.flt_Date  fltDate,
		ddt.TR_NO ddtTrNo, 
		ddt.SDOC_LINE_NO ddtSdocLineNo, 
		ddt.UDOC_LINE_NO ddtUdocLineNo, 
		ddt.DOC_LINE_NO ddtDocLineNo,
		decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr, 
		REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
		ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
		ddt.UNLDG_PT uldUnldgPt,ddt.TRF_TYPE trfType,ddt.BRK_BULK brkBulk,
		decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) shpCntgFltCarr, 
		REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') shpCntgFltNo,
		ddt.SHP_CNTG_FLT_KEY shpCntgFltKey, ddt.SHP_CNTG_FLT_DATE shpCntgFltDate,
		ddt.SHP_UNLDG_PT shpUnldgPt,ddt.SHP_TRF_TYPE shpTrfType,ddt.SHP_BRK_BULK shpBrkBulk,
		ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
		(select  sum(shp_trf_pc)
		   from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
		   and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfPc,
		(select sum(shp_trf_wt)  
		   from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
		   and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfWt,		
		ddt.UNLDG_PT unldgPt,
		pkg_common.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,'D') shpStd,
        pkg_common.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,'D') shpEtd,
        pkg_common.get_flt_sta(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,'D') uldStd,
        pkg_common.get_flt_eta(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,'D') uldEtd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) shpTimeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) shpProposeTrfType	

  from (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
	                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
	                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
	                	ddtView.ULD_KEY ULD_KEY , ddtView.CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
	                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
	                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
	                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, 
	                    ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,
	                    ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,ddtView.SHP_BRK_BULK SHP_BRK_BULK
	                  from V_DDT_DTL ddtView
	              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  join FLT_OPR FLT on FLT.FLT_KEY = ddt.FLT_KEY and FLT.SCH_DATE = ddt.FLT_DATE and FLT_type = 'A'
	left join awb on 
	         awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date
	  where  ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# 	
    and (ddt.TRF_TYPE = 'TT' or ddt.SHP_TRF_TYPE = 'TT')
	   ORDER BY  ddt.ULD_KEY, ddt.awb_no, ddt.awb_Date
	   ]]>
	</select>
	
	<select id="fetchOutBoundOnlineTrnsfrSmryUldAwbList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	<![CDATA[ 
	select
	decode(ddt.CNTG_FLT_KEY,null,'BULK',ddt.ULD_KEY,null,'BULK',ddt.ULD_KEY) uldKeyShow,
	nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
	ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
	nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
  case when ddt.CNTG_FLT_KEY is null then awb.catalog 
			 when (select count(1) from awb where catalog = 'TM' 
							and exists (select null from v_ddt_dtl where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
                                       and uld_key = ddt.ULD_KEY and awb_no = awb.awb_no and  awb_date = awb.awb_date )) > 0 then 'TM' 
              else awb.catalog end  catalog,
	ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
	pkg_common.get_flt_sta(ddt.flt_key, ddt.flt_Date,'A') shpStd,
    pkg_common.get_flt_eta(ddt.flt_key, ddt.flt_Date,'A') shpEtd,
	nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TIME_DIFF' ) timeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TR_TYPE' ) proposeTrfType,
	decode(ddt.CNTG_FLT_KEY,null,'Y') awbNoRecInd,	  
   	ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   	nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) cntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') cntgFltDate,  
   	REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') cntgFltNo,
   	decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) trfType,
   	ddt.BRK_BULK brkBulk, ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt, 
   	(select  sum(shp_trf_pc) from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfPc,
	(select sum(shp_trf_wt) from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfWt,	
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and flt_Type ='A')  finalizedInd,
    TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta              
	from V_DDT_DTL ddt
	join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
	join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
	left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date	
	where ddt.SHP_CNTG_FLT_KEY = #fltKey# and ddt.SHP_CNTG_FLT_DATE = #fltDate# 
  and (ddt.TRF_TYPE = 'TT' or ddt.SHP_TRF_TYPE = 'TT')
	ORDER BY  ddt.awb_no
	   ]]>
	</select>

		<select id="fetchTCCFinalizePendingList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[ 
			SELECT opr.flt_key as fltKey, 
				to_char(opr.sch_date,'DDMONYY') as fltDate
				FROM flt_opr opr, flt_opr_events events , mast_carrier mast
				WHERE opr.flt_key = events.flt_key
				AND opr.sch_date  =events.sch_date
				AND opr.flt_type  = 'A' and opr.carr_code = mast.CODE
				AND opr.flt_type  = events.flt_type
				AND events.DDT_FINALISE_DATE IS NULL AND NVL(events.MANUAL_HANDLED_TCC,'N') = 'N'
				AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='AUTO_TCC_FINALIZE')/(24*60) < SYSDATE
				AND NVL(FUN_GET_FFM_FOR_TCC(opr.flt_key,to_char(opr.sch_date,'DDMONYY')),'F') = 'T'
        		and nvl(TCC_FINALIZE_YN,'N') = 'Y'
        		AND not exists (SELECT null  FROM MAST_CARRIER where CODE = opr.carr_code and nvl(VESSEL_FLT_YN,'N') = 'Y')
	   ]]>
	</select>

<parameterMap id="closeImpAWBMap" class="map" >	
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
</parameterMap>

<procedure id="imp_AWB_CLOSE" parameterMap="closeImpAWBMap" >
	{call PKG_CLOSE_AWB.CLOSE_AWB_IMPORT(?)}
</procedure>


<parameterMap id="closeEXPAWBMap" class="map" >	
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
</parameterMap>

<procedure id="exp_AWB_CLOSE" parameterMap="closeEXPAWBMap" >
	{call PKG_CLOSE_AWB.CLOSE_AWB_EXPORT(?)}
</procedure>

	<select id="checkOffloadExists"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM EXP_OFFLOAD_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND CONFIRMED_YN='Y' AND ROWNUM=1
		]]>
   	</select>   	

	<select id="getAccsHandlerFromCAR"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select DECODE(ACCS_HANDLER,'','CPCT',ACCS_HANDLER) from imp_car_awb where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')			
	</select>
	
	<select id="chkEPHSHCCount"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE (spl_code1 = 'EPH' OR spl_code2     = 'EPH' OR spl_code3     = 'EPH' OR spl_code4     = 'EPH' OR spl_code5     = 'EPH'
			OR spl_code6     = 'EPH' OR spl_code7     = 'EPH' OR spl_code8     = 'EPH' OR spl_code9     = 'EPH') AND awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')				
	</select>
	
	<select id="check_outstanding_charge_for_EPH" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE  upper(status)='PENDING' and srf_no= #srfNo#
	</select>
	
	<update id="update_epd_srfFLT" parameterClass="java.lang.String">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(INV_PCS, 0),   DLV_WT    = NVL(INV_WT, 0) WHERE SRF_NO= #srfNo#
	</update>
	
	<update id="update_epd_awbinv" parameterClass="java.lang.String">
		UPDATE AWB_INVENTORY SET DLV_YN = 'Y' WHERE SRF_NO= #srfNo#
	</update>
	
	<update id="update_epd_srfawbInv" parameterClass="java.lang.String">
		UPDATE IMP_SRF_AWB_INVENTORY SET DLV_PCS = NVL(LOCN_PCS, 0) , DLV_WT = NVL(LOCN_WT, 0), DLV_DATE  =SYSDATE,   DLV_IND   ='Y' WHERE SRF_NO = #srfNo#
	</update>
	
	<select id="find_srf_lstEPH" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			A.SRF_NO as srfNo, A.SRF_PCS as pcs, A.SRF_WT as wt, 'Y' as selSRF,
 			A.AWB_NO as awbNo, A.COLL_NAME as collBy, 
 			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.CARR_CODE as carrCode, A.SRF_PCS as, A.CR_DATE as crDate, 
      		A.DOC_LINE_NO as docLineNo, SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp,
      		decode((select sum(NVL(dlv_pcs, 0))+sum(NVL(cdif_pc, 0)) from IMP_SRF_AWB_INVENTORY where SRF_NO = A.SRF_NO),A.SRF_PCS,'Y','N') dlvComp
		FROM 
			IMP_SRF A
		WHERE A.SRF_NO = #srfNo#
 	</select>
 	
 	<select id="validateEPDPcWt"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP C
		JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE
		WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	and C.FLT_KEY = #FLT_KEY# AND C.FLT_DATE =to_date(#FLT_DATE#,'DDMONYY')
		AND (NVL(A.PCS,0) =  NVL(C.MANIFEST_PCS,0) AND NVL(A.WT,0) =  NVL(C.MANIFEST_WT,0))
	</select>
	
	<select id="validateNegativePcWtAWB"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 <![CDATA[
		SELECT COUNT(1) FROM IMP_CAR_AWB C
		JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE
		WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	AND ( NVL(bulk_pcs,0) < 0 OR NVL(bulk_wt,0) < 0 OR NVL(bup_pcs,0) < 0 OR NVL(bup_wt,0) < 0 )
	 ]]>
	</select>
	
	<select id="validateNegativePcWtSHP"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	  <![CDATA[
			SELECT COUNT(1) FROM IMP_CAR_SHP C
			JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE 
			WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	AND C.FLT_KEY = #FLT_KEY# AND C.FLT_DATE =to_date(#FLT_DATE#,'DDMONYY')
	    AND ( NVL(bulk_pcs,0) < 0 OR NVL(bulk_wt,0) < 0 OR NVL(bup_pcs,0) < 0 OR NVL(bup_wt,0) < 0 )
	   ]]>
	</select>

	<select id="validateHandlingModeforNBK"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select chkin_yn from IMP_RAMP_CHK_DTL where flt_key=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY = #uldKey#
	</select>
 	<select id="check_accept_transfer_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	</select>
 	<select id="check_accept_transfer_shp_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND FLT_KEY=#FLT_KEY# AND FLT_DATE=#FLT_DATE#
	</select>
	<select id="check_accept_transfer_owner_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB_OWNER WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND CARR_CODE=#CARR_CODE#
	</select>
 	
	<select id="check_accept_transfer_AWBRecordExists" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	</select>
	
	
	<select id="check_accept_flight_transfer_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#FLT_KEY# AND SCH_DATE=#FLT_DATE# AND FLT_TYPE = 'A'
	</select>
	
	<select id="checkFWBIscreateornot" parameterClass="map" resultClass="java.util.HashMap">
		SELECT PCS AS FWB_PCS,WGT AS FWB_WT FROM EDI_FWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
		UNION
		SELECT PCS AS FWB_PCS,WT AS FWB_WT FROM EXP_CAR WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND NOT EXISTS (SELECT NULL FROM EDI_FWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#)
	</select>
	<select id="getAWBContentFromAWB_trans" parameterClass="map" resultClass="java.lang.String" >
	SELECT CONTENT FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND AWB_CLOSED_YN = 'N' AND ROWNUM=1 
	</select>

	<select id="sqlGetinvPcsForaccept_transfer_transhipment" parameterClass="map" resultClass="java.lang.String" >
	SELECT LOCN_PCS FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo#
	</select>
	
	<select id="sqlGetSeqNoForaccept_transfer_transhipment" parameterClass="map" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #AWB_NO#
     AND AWB_DATE = #AWB_DATE#
     AND NVL(FLT_KEY,'*')  = NVL(#FLT_KEY#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#FLT_DATE#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#LOC_CODE#,'*')
     AND NVL(LSP_NO,0)   = NVL(#LSP_NO#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#ULD_KEY#,'*')
   </select>
   <update id="updatePcsWtForaccept_transfer_transhipment" parameterClass="map">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #LOC_PCS#),
		    LOCN_WT    = (LOCN_WT  + #LOC_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>

     <update id="decPcsWtForaccept_transfer_transhipment" parameterClass="map">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS - #LOC_PCS#),
		    LOCN_WT    = (LOCN_WT  - #LOC_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>
    <delete id="delete_inv_accept_transfer_transhipment" parameterClass="map">
		delete from AWB_INVENTORY where  SEQ_NO = #seqNo# and  LOCN_PCS = 0                
	</delete>
	
    <insert id="ins_awbinv_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#CARR_CODE#,#LSP_NO#,#LOC_CODE#,
	 #LOC_PCS#,#LOC_WT#,'N',#USER#, sysdate,
	 #USER#, sysdate,TO_DATE(#FLT_DATE#,'DDMONYY'),#FLT_KEY#,'I',#ULD_KEY#,AWB_INV_SEQ.NEXTVAL,SYSDATE,#CATALOG#)
	</insert>
	<insert id="ins_impcarawb_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,BUP_PCS,BUP_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE) 
	VALUES(#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), #AWB_PFX#,NVL(#PPK_TYPE#, 'B'), #DEST#,#ORIG#, 
		DECODE(#FWB_IND#,'Y',nvl(#FWB_PCS#,'0'),nvl(#AWB_PC#,'0')),DECODE(#FWB_IND#,'Y',nvl(#FWB_WT#,'0'),nvl(#AWB_WT#,'0')),DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0'),DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0'),DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0'),DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0'),#CONTENT#,#CATALOG#,
		#SPLCODE1#,#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,  
		#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,#CONS_CODE#,#CONS_NAME#,#AGENT_CODE#,#AGENT_NAME#,
		#USER#,SYSDATE,#USER#,SYSDATE,'A',
		decode((select 1 from mast_code_dtl where code = #CONTENT# and code_type='CONSOLIDATION'),'1','Y','N'),
		#CNSGN_ADDR1#,#CNSGN_ADDR2#,#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CNSGN_ADDR5#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
		#APP_ADDR1#,#APP_ADDR2#,#APP_ADDR3#,#APP_ADDR4#,#APP_ADDR5#,#APP_PLACE#,#APP_CTRY_CODE#,#APP_PIN_CODE#,#ECT_HDLR#,'DUMMY') 
 	</insert> 
        <insert id="ins_awb_accept_transfer_transhipment" parameterClass="map">
		<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,
			CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,ACCEPT_MODE) 
		VALUES(#AWB_TYPE#,#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), 
			#CATALOG#,#SPLCODE1#,
			#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,
			#RMK#,#USER#,SYSDATE,#USER#,SYSDATE,#PPK_TYPE#,#CARR_CODE#,#CAR_IND#,#ORIG#,#DEST#,#AGENT_CODE#,#CONS_CODE#,
			#AGENT_NAME#,#shprName#,nvl(#AWB_PC#,0),nvl(#AWB_WT#,0),
			DECODE(#AWB_TYPE#,'T',NVL(#AWB_PC#,0),0),DECODE(#AWB_TYPE#,'T',NVL(#AWB_WT#,0),0),'DUMMY','TIT')  
		]]>
	</insert>
 	<insert id="ins_impcarshp_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,BUP_PCS,BUP_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#AWB_NO# ,TO_DATE(#AWB_DATE#,'DDMONYY'),#AWB_PFX#,#CARR_CODE#,TO_DATE(#FLT_DATE#,'DDMONYY'),#FLT_KEY#, 
	DECODE(#PPK_TYPE#,'B',NVL(#MANF_PCS#,0),'0'),	DECODE(#PPK_TYPE#,'B',NVL(#MANF_WT#,0),'0'),	DECODE(#PPK_TYPE#,'M',NVL(#MANF_PCS#,0),'0'),	DECODE(#PPK_TYPE#,'M',NVL(#MANF_WT#,0),'0'),	NVL(#MANF_PCS#,0), NVL(#MANF_WT#,0), #PPK_TYPE#, #USER#,SYSDATE,'A',#USER#,SYSDATE,#ORIG#,#DEST#,'Y',NVL(#MANF_PCS#,0), NVL(#MANF_WT#,0),'DUMMY')	
 	</insert>
 	<insert id="ins_expcar_accept_transfer_transhipment" parameterClass="map">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE) 
	      VALUES(#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#AWB_PFX#,#ORIG#,#DEST#, 
				nvl(#AWB_PC#,0),nvl(#AWB_WT#,0),#CONTENT#,#CATALOG#,#SPLCODE1#,
				#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,
				#CONS_NAME#, #AGENT_CODE#,
				#ECT_HDLR#,'',#USER#,SYSDATE,#USER#,SYSDATE,
				#CNSGN_ADDR1#,#CNSGN_ADDR2#,#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
				#CNSGN_ADDR1#,#CNSGN_ADDR2#,	
				#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CONS_NAME#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
				'N',#CARR_CODE#,#ACCEPT_MODE#) 
		]]>
	</insert>
	<insert id="ins_awbowner_accept_transfer_transhipment" parameterClass="map">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#AWB_NO#,to_date(#AWB_DATE#,'DDMONYY'),#CARR_CODE#,#AWB_PC#,#AWB_WT#,#USER#,sysdate,#USER#,sysdate,null,null)
	</insert>	
	<update id="upd_impcarawb_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_AWB SET CATALOG = 'TG',
			AWB_PCS   = (AWB_PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    AWB_WT    = (AWB_WT  + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    BULK_PCS = (BULK_PCS + DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT + DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS + DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT + DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
	<update id="upd_awb_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB SET	AWB_TYPE = 'T',CATALOG = 'TG',
		    PCS = (PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    WT = (WT + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    NON_PMAN_PCS = (NON_PMAN_PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    NON_PMAN_WT = (NON_PMAN_WT + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate,
		    ACCEPT_MODE = 'TIT'
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
  <update id="upd_impcarshp_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS = (BULK_PCS + DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT + DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS + DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT + DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    MANIFEST_PCS = (MANIFEST_PCS + NVL(#AWB_PC#,0)),
		    MANIFEST_WT = (MANIFEST_WT + NVL(#AWB_WT#,0)),
		    RECD_PCS = (RECD_PCS + NVL(#AWB_PC#,0)),
		    RECD_WT = (RECD_WT + NVL(#AWB_WT#,0)),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			FLT_KEY = #FLT_KEY# AND
			FLT_TYPE = 'I'				
	</update> 
 	<update id="upd_expcar_accept_transfer_transhipment" parameterClass="map">
		UPDATE EXP_CAR SET CATALOG = 'TG',
			PCS   = (PCS + #AWB_PC#),
		    WT    = (WT  + #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
    <update id="upd_awbowner_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #AWB_PC#),
		    WT    = (WT  + #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND	
			CARR_CODE = #CARR_CODE#				
	</update>
	<select id="generateTRFNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
 	SELECT TO_CHAR(RCL_NO_SEQ.NEXTVAL, '00000000') FROM DUAL
	</select>
	
		<insert id="INSERT_TRF_HD_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">					  
		INSERT INTO TRF_ACCEPT_HD (TRF_NO, TRF_DATE, PPK_TYPE,AWB_NO,AWB_PFX,AWB_DATE,AWB_DEST,RCL_PCS, RCL_WT, RCL_FBL, CARR_CODE, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY,FLT_KEY,FLT_DATE,FLT_TYPE, HCARRY_IND, SPL_CODE1, SPL_CODE2, SPL_CODE3,SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9, REF_TRM_NO, TRANS_CARR_CODE, ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,DUM_FLT_KEY,DUM_FLT_DATE,TR_TYPE_EVT,TARMAC_YN) VALUES
					(#TRF_NO#, SYSDATE, #PPK_TYPE#,#AWB_NO#,#AWB_PFX#,#AWB_DATE#,#DEST#, #AWB_PC#, #AWB_WT#, 'N', #CARR_CODE#, #ULD_TYPE#,#ULD_NO#,#ULD_CARR#,#ULD_KEY#,#IMP_FLT_KEY# ,#IMP_FLT_DATE# ,'I' ,'N',#SPLCODE1#,#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,#TRF_NO#, #TRANF_CARR#, #ACCEPT_MODE#, 'S', 'AC', 'N', #USER#, SYSDATE, #USER#, SYSDATE,#FLT_KEY#,#FLT_DATE#,'ACAWB',#TARMAC_YN#)
	</insert>			      
	<insert id="INSERT_TRF_DTL_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">	
		INSERT INTO TRF_ACCEPT_DTL ( TRF_NO, DOC_LINE_NO, PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR
				, ULD_KEY, LOC_CODE, LSP_NO, PCS, NET_WT, GROSS_WT, TARE_WT, CONTR_CODE
				, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE )
				VALUES (#TRF_NO#, TRF_DOCLINE_SEQ.NEXTVAL, #PPK_TYPE#, #ULD_TYPE#,#ULD_NO#,#ULD_CARR#,#ULD_KEY#,
        #LOC_CODE#,#LSP_NO#, NVL(#LOC_PCS#,0), NVL(#LOC_WT#,0), NVL(#GROSS_WT#,0), nvl(#TARE_WT#, 0), (SELECT MAX(a.CONTR_CODE) FROM ULD_TYPE_CONTR a WHERE ULD_TYPE=SUBSTR(#ULD_KEY#,0,3) and rownum=1 GROUP BY a.ULD_TYPE)
				, 'AC', 'T', #USER#,  SYSDATE, #USER#, SYSDATE)
	</insert>	
	<insert id="INSERT_TRF_BRKDN_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">		
		INSERT INTO TRF_ACCEPT_BRKDN( TRF_NO, AWB_NO, AWB_DATE, ULD_KEY, PCS, WEIGHT, DEST, CONTENT, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, TRM_IND,TR_TYPE_EVT)
							VALUES (
							#TRF_NO#, #AWB_NO#,  TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_KEY#, NVL(#RCL_AWB_PCS#,0), NVL(#RCL_AWB_WT#,0), 
              #DEST#,  #CONTENT#, 'AC', 'T', #USER#, SYSDATE, #USER#, SYSDATE, 'Y','ACMIX')
	</insert>
	<insert id="INSERT_TRF_DMN_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">
                INSERT INTO TRF_ACCEPT_DMN(TRF_NO, DOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS,
                        TR_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
                                values (#TRF_NO#, TRF_DMN_DOCLINE_SEQ.NEXTVAL, #LENGTH#, #WIDTH#, #HEIGHT#, #PCS#,
                                        'AC', #USER#, SYSDATE, #USER#, SYSDATE)
    </insert>
    <select id = "getTranshipmentListTransferCargo" parameterClass="java.lang.String"  resultClass="cargo.cms.export.bo.ListTransferCargoBO">
	select ppk_type as v_ppk_type, 
	       awb_no as v_awb_no, 
	       to_char(awb_date, 'DDMONYY') as v_awb_date,
	       accpt_mode as v_accpt_mode, 
	       uld_key as v_uld_key, 
	       ref_trf_no as v_ref_trf_no
           from   trf_accept_hd
           where  trf_no = #rclNoMap#
	</select>
	<select id = "getTranshipmentAwbNoStatusListTrns" parameterClass="java.lang.String"  resultClass="java.lang.String">
	 select substr(t1.awb_no, 1, 3)||'-'||substr(t1.awb_no, 4)
	            as   v_awb_no
	            from   exp_car t1, TRF_ACCEPT_BRKDN t2
	            where  t1.awb_no = t2.awb_no
	            and    t1.awb_date = t2.awb_date
                and    t2.TRF_NO = #rclNoMap#
	            and    rownum = 1
	            
	</select>
	<update id="upd_void_impcarawb_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_AWB SET
			AWB_PCS   = (AWB_PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    AWB_WT    = (AWB_WT  - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    BULK_PCS = (BULK_PCS - DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT - DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS - DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT - DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update>
	<delete id="delete_void_impcarawb_accept_transfer_transhipment" parameterClass="map">
		delete from IMP_CAR_AWB where  awb_no   = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and  BULK_PCS = 0 and BUP_PCS = 0               
	</delete>
	
	<update id="upd_void_awb_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB SET	
		    PCS = (PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    WT = (WT - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    NON_PMAN_PCS = (NON_PMAN_PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    NON_PMAN_WT = (NON_PMAN_WT - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
 	<delete id="del_void_awb_accept_transfer_transhipment" parameterClass="map">
		delete from AWB where  awb_no   = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and  PCS = 0 and WT = 0               
	</delete>
	<update id="upd_void_impcarshp_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS = (BULK_PCS - DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT - DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS - DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT - DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    MANIFEST_PCS = (MANIFEST_PCS - NVL(#AWB_PC#,0)),
		    MANIFEST_WT = (MANIFEST_WT - NVL(#AWB_WT#,0)),
		    RECD_PCS = (RECD_PCS - NVL(#AWB_PC#,0)),
		    RECD_WT = (RECD_WT - NVL(#AWB_WT#,0)),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			FLT_KEY = #FLT_KEY# AND
			FLT_TYPE = 'I'				
	</update> 
 	<delete id="del_void_impcarshp_accept_transfer_transhipment" parameterClass="map">
		delete from IMP_CAR_SHP where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND	FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND FLT_KEY = #FLT_KEY# AND FLT_TYPE = 'I' and MANIFEST_PCS = 0 and BULK_PCS = 0 and BUP_PCS = 0		               
	</delete>
	<update id="upd_void_expcar_accept_transfer_transhipment" parameterClass="map">
		UPDATE EXP_CAR SET
			PCS   = (PCS - #AWB_PC#),
		    WT    = (WT  - #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
    <delete id="del_void_expcar_accept_transfer_transhipment" parameterClass="map">
		delete from EXP_CAR where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND	PCS = 0		               
	</delete>
	<update id="upd_void_awbowner_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB_OWNER SET
			PCS   = (PCS - #AWB_PC#),
		    WT    = (WT  - #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND	
			CARR_CODE = #CARR_CODE#				
	</update>
	<select id="getOldCarrCountForAccepTransfer" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(cnt) FROM (
	SELECT COUNT(1) AS cnt FROM TRF_ACCEPT_HD WHERE AWB_NO = #AWB_NO# AND AWB_DATE=#AWB_DATE# AND CARR_CODE != #CARR_CODE# AND STATUS != 'V'
	UNION ALL
	SELECT COUNT(1) AS cnt FROM TRF_ACCEPT_HD A, trf_accept_brkdn B WHERE B.TRF_NO = A.TRF_NO AND B.AWB_NO=#AWB_NO# AND B.AWB_DATE=#AWB_DATE# AND A.STATUS != 'V' AND A.CARR_CODE != #CARR_CODE#) C where C.cnt > 0
	]]>
	</select>
	<select id="getOldAWBDestination" parameterClass="map" resultClass="java.lang.String">
	select DEST from awb where awb_no=#AWB_NO# and awb_date=#AWB_DATE#
	</select>
	
	 <delete id="del_void_awbowner_accept_transfer_transhipment" parameterClass="map">
		delete from AWB_OWNER where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND CARR_CODE = #CARR_CODE# AND	PCS = 0		               
	</delete>
	<select id="getTransAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT AWB_NO AS awbNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate,PCS as pc,WEIGHT as wt FROM TRF_ACCEPT_BRKDN WHERE TRF_NO = #rclNo#
	</select>
	<select id="getTransBulkAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT AWB_NO AS awbNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate,RCL_PCS as pc,RCL_WT as wt FROM TRF_ACCEPT_HD WHERE TRF_NO = #rclNo#
	</select>
	<select id="getTransBulkAwbLocnList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		select b.uld_key as uldNo,loc_code as locn,b.lsp_no as lspNo,b.pcs as locnPcs,TRIM(TO_CHAR(NVL(b.net_wt,0), '9999999.99')) locnWt from trf_accept_hd a,trf_accept_dtl b where b.trf_no = a.trf_no and a.trf_no=#rclNo#
	</select>
	<select id="getExpBulkAwbLocnList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		select b.uld_key as uldNo,loc_code as locn,b.lsp_no as lspNo,b.pcs as locnPcs,TRIM(TO_CHAR(NVL(b.net_wt,0), '9999999.99')) locnWt from exp_rcl_hd a,exp_rcl_dtl b where b.rcl_no = a.rcl_no and a.rcl_no=#rclNo#
	</select>
	<select id="getExpMixMileAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT BRKDN.AWB_NO as awbNo,TO_CHAR(BRKDN.AWB_DATE,'DDMONYY') as awbDate,BRKDN.PCS as locnPcs,TRIM(TO_CHAR(NVL(BRKDN.WEIGHT,0), '9999999.99')) locnWt,HD.ULD_KEY as uldNo,(SELECT LOC_CODE FROM ULD_INVENTORY WHERE ULD_KEY=HD.ULD_KEY AND ROWNUM=1) locn FROM EXP_RCL_HD HD,EXP_RCL_BRKDN BRKDN WHERE BRKDN.RCL_NO = HD.RCL_NO AND HD.RCL_NO=#rclNo#
	</select>
	<select id="getExpBulkMileAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT HD.AWB_NO as awbNo,TO_CHAR(HD.AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_HD HD WHERE HD.RCL_NO=#rclNo#
	</select>
	
	<select id = "getTransFltDetails" parameterClass="java.lang.String"  resultClass="cargo.cms.export.bo.ListTransferCargoBO">
	SELECT CARR_CODE AS carr,trans_carr_code transCarr,TO_CHAR(NVL(DUM_FLT_DATE,TRF_DATE),'DDMONYY') AS flt_date,dum_flt_key as flt_key FROM TRF_ACCEPT_HD WHERE TRF_NO = #rclNoMap#
	</select>
	<update id="upd_void_trfhd_accept_transfer_transhipment" parameterClass="map">
		UPDATE TRF_ACCEPT_HD SET STATUS = 'V',VOID_USER_ID = #voidUser#, VOID_DATE = SYSDATE WHERE TRF_NO = #rclNo#			
	</update>
	<update id="upd_void_trfhd_accept_vcl_transhipment" parameterClass="map">
		update val_vcl_hd set void_user_id=#voidUser#,void_date = sysdate where vcl_no = (select vcl_no from trf_accept_hd where trf_no = #rclNo# and rownum = 1)			
	</update>
	<select id="fetchTransAcceptlInventoryList" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
		select * from (		
			SELECT A.lsp_no lspNo,
				  A.uld_key uldKey,
				  A.locn_pcs locnPcs,
				  A.locn_wt locnWt,
				  A.SEQ_NO seqNo,
				  1 orderNo
				FROM awb_inventory A WHERE
				A.awb_no = #awbNo#
				AND A.AWB_DATE = #awbDate#
				AND (a.flt_key in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_AAT') 
		        OR a.flt_key in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_HACTL'))
		    UNION
	        SELECT A.lsp_no lspNo,
					  A.uld_key uldKey,
					  A.locn_pcs locnPcs,
					  A.locn_wt locnWt,
					  A.SEQ_NO seqNo,
					  2 orderNo
					FROM awb_inventory A WHERE
					A.awb_no = #awbNo#
					AND A.AWB_DATE = #awbDate#
					AND a.flt_key not in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_AAT') 
		            AND a.flt_key not in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_HACTL')
			       ) 
				ORDER BY orderNo,locnPcs,locnWt ASC
	</select>
	<select id="findhandlrForCarr" parameterClass="java.lang.String" resultClass="java.lang.String">
	select HANDLED_BY_TERMINAL from MAST_CARRIER where code = #PARAM#
	</select>
	<select id="getAATDummyFlight" parameterClass="java.lang.String" resultClass="java.lang.String">
	select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'
	</select>
	<select id="getHACTLDummyFlight" parameterClass="java.lang.String" resultClass="java.lang.String">
	select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'
	</select>
	
	<insert id="InsertUldInventoryForTransAcceptTransferCargo"  parameterClass="map">
		INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,TR_TYPE,ENTRY_TIME,cfm_status,contr_code) 
			values(#ULD_KEY#,#OWN_CARR#,sysdate,sysdate,#USER#,'ATC',NVL(#TARE_WT#,0),NVL(#GROSS_WT#,0),#ULD_NO#,#ULD_TYPE#,#ULD_CARR#,#LOC_CODE#,'Y',#HDLG_MODE#,'N','N','Y','ATULD',SYSDATE,'CONFIRMED',#CONTR_CODE#) 
	</insert>
	<select id="select_uld_inv_trfhd_accepttranshipment" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY where ULD_KEY = #ULD_KEY#
	</select>
	<select id="select_uld_from_trfhd_accepttranshipment" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT ULD_KEY FROM TRF_ACCEPT_HD WHERE TRF_NO=#PARAM# AND ROWNUM =1
	</select>
		<update id="upd_uld_inv_trfhd_accepttranshipment" parameterClass="map">
		UPDATE ULD_INVENTORY
			SET 
			  OWNER_ID           = #OWN_CARR#,
			  STRG_DATE            = sysdate,
			  LM_DATE              = sysdate,
			  LM_USER_ID           = #USER#,
			  SOURCE_CODE          = 'ATC',
			  TARE_WEIGHT          = NVL(#TARE_WT#,0),
			  GROSS_WEIGHT         = NVL(#GROSS_WT#,0),
			  ULD_NO               = #ULD_NO#,
			  ULD_TYPE             = #ULD_TYPE#,
			  ULD_CARR             = #ULD_CARR#,
			  LOC_CODE             = #LOC_CODE#,
			  OWNED_INV            = 'Y',
			  HANDLING_MODE        = #HDLG_MODE#,
			  EMPTY_FLG            = 'N',
			  MIX_PPK_IND          ='N',
			  TRANSIT_FLG          ='Y' ,
			  CFM_STATUS           ='CONFIRMED',
			  GEN_RMK              = NULL,
			  DAM_IND              = 'N',			  
			  DAM_RMK              = NULL,
			  EIC_FLG              = 'N',
			  AGENT_INV            = 'N',
			  REF_TR_NO            = #ULD_KEY#,
			  REF_TR_TYPE          = 'IR',
			  REF_TR_DATE          = SYSDATE,
			  REF_TR_EVENT         = 'ATC',
			  BASE_PLT             = NULL,
			  EIC_UNLDG_PT         = NULL,
			  EIC_TYPE             = NULL,
			  BASE_PAL_FLG         = 'N',
			  ASV_INV              = 'N',
			  FLT_NO               = NULL,
			  FLT_TYPE             = NULL,
			  FLT_DATE             = NULL,
			  FLT_KEY              = NULL,
			  RESV_FLG             = 'N',
			  RESV_DATE            ='',
			  RESV_RMK             ='',
			  RMV_RMK              ='',
			  IMP_FLT_CARR         ='',
			  IMP_FLT_DATE         ='',
			  IMP_FLT_KEY          ='',
			  IMP_FLT_NO           ='',
			  PPK_IND              ='N',
			  MAN_WT_IND           = 'N',
			  man_wt_ind2          = 'N',
			  man_wt_ind3          = 'N',
			  PARENT_OWNER         = #ULD_CARR#,
			  FIRST_WT             = NVL(#GROSS_WT#,0),
			  SECOND_WT            ='',
			  THIRD_WT             ='',
			  REF_WT               ='',
			  ULDENTRY_MSG_RCVD_YN = 'N',
			  TARGET               = '',
			  ULD_FLOW             = '',
        	  FINAL_WEIGHT         = 'N',
        	  TR_TYPE              = 'ATULD',
        	  contr_code           = #CONTR_CODE#
			WHERE uld_key          = #ULD_KEY#			
	</update>
	<update id="upd_void_uld_inv_trfhd_accepttranshipment" parameterClass="map">
		UPDATE ULD_INVENTORY SET STRG_DATE = sysdate,LM_DATE = sysdate, SOURCE_CODE = '', TARE_WEIGHT = '0', GROSS_WEIGHT = '0',LOC_CODE = '',OWNED_INV = 'N',HANDLING_MODE = '', EMPTY_FLG = 'Y',MIX_PPK_IND = 'N',TRANSIT_FLG = 'N' WHERE uld_key = (SELECT ULD_KEY FROM TRF_ACCEPT_HD WHERE TRF_NO=#rclNo# AND ROWNUM =1)			
	</update>
	
	<select id="trans_rcl_by_uld"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE                                                        AS pkgType,
			   TRF_NO                                                          AS rclNum,
			   ULD_KEY                                                         AS awbNum,
			   AWB_DEST                                                        AS destination,
			   AWB_CONTENT                                                     AS awbContent,
			   RCL_PCS                                                         AS rclPcs,
			   RCL_WT                                                          AS rclWt,
			   TRF_DATE                                                        AS rclIssueDate,
			   DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			   pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			   RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE ULD_KEY=#uldNum#
			ORDER BY TRF_DATE DESC
		]]>
   	</select>
	<select id="trans_rcl_by_awb"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				   TRF_NO        AS rclNum,
				   SUBSTR(awb_no,1,3)
				   ||'-'
				   ||SUBSTR(awb_no,4)                                              AS awbNum,
				   AWB_DEST                                                        AS destination,
				   AWB_CONTENT                                                     AS awbContent,
				   RCL_PCS                                                         AS rclPcs,
				   RCL_WT                                                          AS rclWt,
				   TRF_DATE                                                        AS rclIssueDate,
				   DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				   pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				   RTN_IND                                                         AS cargoRetInd
				 FROM TRF_ACCEPT_HD
				 WHERE AWB_NO=#awbNum#
				 AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
				 ORDER BY TRF_DATE DESC
			]]>
   		</select>
	<select id="trans_rcl_by_rcl_no"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT 
				A.TRF_NO as rclNum, 
				decode(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key) AS awbNum,
				decode(A.ppk_type,'B',CONCAT(CONCAT(SUBSTR(A.awb_no,0,3),'-'),SUBSTR(A.awb_no,4)),
				'P',CONCAT(CONCAT(SUBSTR(A.awb_no,0,3),'-'),SUBSTR(A.awb_no,4))
				,'M',A.uld_key) as awbNumDisplay,TO_CHAR(A.TRF_DATE,'DDMONYY HH24:MI') as rclIssueDate,
				to_char(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate,A.PPK_TYPE as pkgType, A.RCL_PCS as rclPcs, 
				A.RCL_WT as rclWt,A.RTN_PCS as rtnPcs, A.RTN_WT as rtnWt, B.code_desc as agentName, B.CO_IATA_CODE as iataCode, '' as preRCLNum, 
				A.FLT_NO as flightNum, TO_CHAR(A.FLT_DATE,'DDMONYY') as flightDate, A.CARR_CODE as carrCode, A.AWB_DEST as awbDest, A.TRUCK_NO as truckNum, 
				A.AWB_CONTENT as awbContent, A.SEC_CHECK as secCheck, A.THICK_IND as thickInd, A.RMK as remarks, decode(UPPER(A.STATUS), 'V', 'Y','N') as voidInd,
				pkg_exp_val.get_rcl_car_ind(A.awb_no, A.awb_date, A.TRF_NO, A.ppk_type) as carInd, A.RTN_IND as cargoRetInd, 
				A.SPL_CODE1 splCode1,A.SPL_CODE2 splCode2,A.SPL_CODE3 splCode3,A.SPL_CODE4 splCode4,A.SPL_CODE5 splCode5,A.SPL_CODE6 splCode6,A.SPL_CODE7 splCode7,A.SPL_CODE8 splCode8,A.SPL_CODE9 splCode9,
				(A.SPL_CODE1 || ' ' ||  A.SPL_CODE2 || ' ' ||  A.SPL_CODE3 || ' ' ||  A.SPL_CODE4 || ' ' ||  A.SPL_CODE5 || ' ' ||  A.SPL_CODE6 || ' ' ||  A.SPL_CODE7 || ' ' ||  A.SPL_CODE8 || ' ' ||  A.SPL_CODE9) AS splCodes, 
				DUT_COMMODITY as dutCommodity, A.QCP_IND as qcpInd, A.LM_USER_ID as lmUserID, ASIDE_ACCEPT as airsideAccept, A.VOID_RMK as voidRemark ,
				(select sum(LOCN_PCS) from awb_inventory where awb_no=A.awb_no and awb_date=A.awb_date) AS invPcs,
				(select sum(LOCN_WT) from awb_inventory where awb_no=A.awb_no and awb_date=A.awb_date)  AS invWt,A.CUST_NO AS agntCode,A.REJECT_IND AS reject,A.DLV_BY AS dlvBy,A.DLV_BY_HKID AS HKID,A.RMK AS remarks,
				A.ENDORSED_BY AS endorsedBy,A.REJECT_REASON AS rejectReason, A.uld_key as uldNum,A.TR_TYPE as trType,A.TR_STATUS as trStatus,A.FLT_KEY as flightKey,
				A.ACCPT_MODE as accptMode, A.SEC_RMK as secRemarks, A.STATUS as status ,				
				(select flt_key as impFltKey from cdt_inb_flt_dtls  where RCL_NO = A.TRF_NO and rownum = 1) as impFlightKey, 
				(select to_char(flt_date,'DDMONYY') as impFltDate from cdt_inb_flt_dtls  where RCL_NO = A.TRF_NO and rownum = 1) as impFlightDate  
			FROM TRF_ACCEPT_HD A, cust_company B
      		WHERE B.CODE(+)=A.CUST_NO AND (A.TRF_NO = #rclNum# or  A.VCL_NO =#rclNum# )
			]]>
   		</select>
   		<select id="trans_rcl_by_date"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') +1		
		   ]]>
   		</select>
   		<select id="trans_rcl_by_all"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			AND STATUS    =#status#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			AND STATUS    =#status#
	]]>
   </select>
  <select id="trans_rcl_by_date_status"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND STATUS=#status#
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND STATUS=#status#
		]]>
   		</select>
   		<select id="trans_rcl_by_date_carr"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND CARR_CODE = #carrCode#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND CARR_CODE = #carrCode#
		]]>
   		</select>
   		<select id="trans_rcl_by_date_status_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND ULD_TYPE = #uldType#
				AND STATUS   =#status#
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND ULD_TYPE = #uldType#
				AND STATUS   =#status#
			]]>
</select>
<select id="trans_rcl_by_date_carr_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
		]]>
   		</select> 
   		<select id="trans_rcl_by_date_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE = #uldType#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE = #uldType#
					]]>
   	</select>
   	<select id="trans_void_by_rcl_no"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT A.TRF_NO                                                                                                                                                   AS rclNum,
			  A.ENDORSED_BY                                                                                                                                                   AS endrosementBY ,
			  A.REJECT_IND                                                                                                                                                    AS rejectInd ,
			  A.REJECT_REASON                                                                                                                                                 AS rejReason,
			  CONCAT(CONCAT(SUBSTR(DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key),0,3),'-'),SUBSTR(DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key),4)) AS awbNumDisplay,
			  DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key)                                                                                                      AS awbNum,
			  TO_CHAR(A.TRF_DATE,'DDMONYY HH24:MI')                                                                                                                           AS rclIssueDate,
			  A.PPK_TYPE                                                                                                                                                      AS pkgType,
			  A.RCL_PCS                                                                                                                                                       AS rclPcs,
			  A.RCL_WT rclWt,
			  A.RTN_PCS                                                               AS rtnPcs,
			  A.RTN_WT                                                                AS rtnWt,
			  B.code_desc                                                             AS agentName,
			  B.CODE                                                                  AS iataCode,
			  ''                                                              AS preRCLNum,
			  A.FLT_KEY                                                               AS flightNum,
			  TO_CHAR(A.FLT_DATE,'DDMONYY')                                           AS flightDate,
			  A.CARR_CODE                                                             AS carrCode,
			  A.AWB_DEST                                                              AS destination,
			  A.TRUCK_NO                                                              AS truckNum,
			  A.AWB_CONTENT                                                           AS awbContent,
			  A.SEC_CHECK                                                             AS secCheck,
			  A.THICK_IND                                                             AS thickInd,
			  A.RMK                                                                   AS remarks,
			  DECODE(UPPER(A.STATUS), 'V', 'Y','N')                                   AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(A.awb_no, A.awb_date, A.TRF_NO, A.ppk_type) AS carInd,
			  A.RTN_IND                                                               AS cargoRetInd,
			  (A.SPL_CODE1
			  || ' '
			  || A.SPL_CODE2
			  || ' '
			  || A.SPL_CODE3
			  || ' '
			  || A.SPL_CODE4
			  || ' '
			  || A.SPL_CODE5
			  || ' '
			  || A.SPL_CODE6
			  || ' '
			  || A.SPL_CODE7
			  || ' '
			  || A.SPL_CODE8) AS splCode1,
			  A.STATUS        AS status
			FROM TRF_ACCEPT_HD A,
			  cust_company B
			WHERE B.CODE(+) = A.cust_no
			AND (A.TRF_NO   = #rclNum#
			OR A.TRF_NO     ='$rclNum$m')
			AND A.STATUS!   ='V'
		]]>
   	</select>
   <select id="trans_rcl_by_carrier_code"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT PPK_TYPE                                                   AS pkgType,
			  TRF_NO                                                          AS rclNum,
			  ULD_KEY                                                         AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE CARR_CODE = upper(#carrCode#)
			ORDER BY TRF_DATE DESC
		]]>
   	</select>
   	<select id="qtransissuercllocation" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkLocBO">   	
   	SELECT A.TRF_NO                    AS rclNum,
		  A.DOC_LINE_NO                    AS docLineNum,
		  TO_CHAR(A.GROSS_WT,999999999.9)  AS grossWt,
		  A.PCS                            AS locationPcs,
		  TO_CHAR(A.NET_WT,999999999.9)    AS netWeight,
		  TO_CHAR(A.FSCALE_WT,999999999.9) AS flrScaleWt,
		  TO_CHAR(A.TARE_WT,999999999.9)   AS tareWt,
		  A.LOC_CODE                       AS locationCode,
		  A.LSP_NO                         AS lspNum,
		  A.BT_NO                          AS btNum,
		  A.ULD_KEY                        AS uldNum,
		  A.CONTR_CODE                     AS contourCode,
		  (A.NET_WT + A.TARE_WT)           AS grossWt ,
		  A.MAN_WT_YN                      AS manWtYN,
		  (SELECT DECODE(COUNT(1),0,'N','Y')
		  FROM uld_inventory
		  WHERE owned_inv = 'Y'
		  AND uld_key     = A.uld_key
		  ) AS inULDInv,
		  A.OHG ohg
		FROM TRF_ACCEPT_DTL A,
		  TRF_ACCEPT_HD B
		WHERE A.TRF_NO=B.TRF_NO
		AND A.TRF_NO  =#rclNum# 
		<isNotEmpty property="packageType">
		AND A.PPK_TYPE=#packageType# 
		</isNotEmpty>
   	</select>
   	<select id="qtransbulkdimension" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
		SELECT A.TRF_NO AS rclNum,
			  A.DOC_LINE_NO AS docLineNum,
			  A.LENGTH      AS LENGTH,
			  A.WIDTH       AS width,
			  A.HEIGHT      AS height,
			  A.PCS         AS pieces,
			  A.REMARKS     AS remarks
			FROM TRF_ACCEPT_DMN A,
			  TRF_ACCEPT_HD B
			WHERE A.TRF_NO=#rclNum#
			AND B.TRF_NO  =A.TRF_NO 
	</select>
	   	<select id="qtransbulkhawbdetails" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
	SELECT distinct hawb.hawb_no hawbNo,
  mail.orig hawbOrg,
  mail.dest hawbDest,
  hawb.pc avlPcs,
  TRIM(TO_CHAR(NVL(hawb.wt,0), '9999999.9')) avlWt
FROM trf_accept_hd hd,
  trf_accept_hawb hawb,
  imp_xps_obc_mail mail
WHERE hawb.trf_no = hd.trf_no
AND mail.tag_no   = hawb.hawb_no
AND mail.awb_no   =hd.awb_no
AND mail.awb_date = hd.awb_date
AND hd.trf_no     =#rclNum#
	</select>
	<select id="Trans_Bulk_Inventory"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[
		SELECT t.awb_no awbNo,
			  t.awb_date awbDate,
			  SUM(locn_pcs) strgPcs,
			  SUM(locn_wt) strgWt
			FROM awb_inventory t
			JOIN TRF_ACCEPT_HD r
			ON r.awb_no    = t.awb_no
			AND r.awb_date = t.awb_date
			WHERE TRF_NO   = #rclNum#
			GROUP BY t.awb_no,
			  t.awb_date
		 ]]>
	</select>
	<select id="Trans_Void_RCL_Blank_List"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[
		 SELECT t.seq_no seqNo,
			  t.loc_code locCode,
			  t.uld_key uldKey,
			  t.lsp_no lspNo,
			  t.LOCN_PCS locnPcs,
			  t.locn_wt locnWt ,
			  'N' disableVoidPcWt
			FROM awb_inventory t
			JOIN TRF_ACCEPT_HD r
			ON r.awb_no    = t.awb_no
			AND r.awb_date = t.awb_date
			WHERE TRF_NO   = #rclNum#
		 ]]>
	</select>
	<select id="Trans_Void_RCL_List"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[	 
		 SELECT t.seq_no seqNo,
				  t.loc_code locCode,
				  t.uld_key uldKey,
				  t.lsp_no lspNo,
				  t.LOCN_PCS locnPcs,
				  t.locn_wt locnWt ,
				  t.LOCN_PCS voidPcs,
				  t.locn_wt voidWt ,
				  'Y' disableVoidPcWt
				FROM awb_inventory t
				JOIN TRF_ACCEPT_HD r
				ON r.awb_no    = t.awb_no
				AND r.awb_date = t.awb_date
				WHERE TRF_NO   = #rclNum#
		 ]]>
	</select>
	<select id="trans_rcl_break_down"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
	<![CDATA[
		SELECT SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                   AS awbNumDisp,
			  awb_no                               AS awbNum,
			  DEST                                 AS destination,
			  PCS                                  AS pieces,
			  ltrim(TO_CHAR(WEIGHT,99999999999.9)) AS netWeight,
			  (SPL_CODE1
			  || ' '
			  || SPL_CODE2
			  || ' '
			  || SPL_CODE3
			  || ' '
			  || SPL_CODE4
			  || ' '
			  || SPL_CODE5
			  || ' '
			  || SPL_CODE6
			  || ' '
			  || SPL_CODE7
			  || ' '
			  || SPL_CODE8)      AS splCode,
			  CONTENT            AS awbContent,
			  NVL(SEC_CHECK,'N') AS secChk
			FROM TRF_ACCEPT_BRKDN
			WHERE TRF_NO = #rclNum#
		]]>
   	</select>
   	<select id="getTransInvPcWtEnqRCL" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
   		SELECT SUM(pc) AS invPcs,
			  SUM(wt)      AS invWt
			FROM
			  (SELECT SUM(LOCN_PCS) AS pc,
			    SUM(LOCN_WT)        AS wt,
			    hd.awb_no
			  FROM TRF_ACCEPT_HD hd
			  LEFT OUTER JOIN awb_inventory ivt
			  ON ivt.awb_no   =hd.awb_no
			  AND ivt.awb_date=hd.awb_date
			  WHERE hd.TRF_NO =#param#
			  GROUP BY hd.awb_no
			  ) 
   		</select>
   		<select id="getTransInvPcWtEnqRCLMix" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
   		SELECT SUM(pc) AS invPcs,
			  SUM(wt)      AS invWt
			FROM
			  (SELECT SUM(LOCN_PCS) AS pc,
			    SUM(LOCN_WT)        AS wt,
			    brk.awb_no
			  FROM TRF_ACCEPT_HD hd
			  JOIN TRF_ACCEPT_BRKDN brk
			  ON hd.TRF_NO=brk.TRF_NO
			  LEFT OUTER JOIN awb_inventory ivt
			  ON ivt.awb_no   =brk.awb_no
			  AND ivt.awb_date=brk.awb_date
			  WHERE hd.TRF_NO =#param#
			  GROUP BY brk.awb_no
			  ) 
   		</select>
   		
   		
	<select id="getPendingListToAutoSendRCF"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT shp.flt_key                AS fltKey ,
			  TO_CHAR(shp.flt_date,'DDMONYY') AS fltDate,
			  shp.awb_no                      AS awbNo ,
			  TO_CHAR(shp.awb_date,'DDMONYY') AS awbDate,
			  NVL(shp.recd_pcs,0)             AS recdPcsToUpdate,
			  opr.CGO_ACFT_TYPE               AS aircraftType
			FROM imp_car_shp shp
			JOIN flt_opr opr ON opr.flt_key = shp.flt_key AND opr.sch_date = shp.flt_date AND opr.flt_type = 'A'
			WHERE NVL(pending_rcf,'N') = 'Y' AND opr.act_date IS NOT NULL	
	</select>	
	
		<select id="checkPassengerConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='Y_MINS_PAX_RCF') / (24 * 60) )
	</select>
	
	<select id="checkFrighterConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='Y_MINS_FRE_RCF') / (24 * 60) )	
	</select>
	
	<select id="checkCombiConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' 
			and SYSDATE > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' )
	</select>
	
	<update id="resetPendingRCFIndicator" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'N',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #awbNo#
		  AND AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#fltKey#)
		  AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<update id="resetPendingRCFIndicatorAfterRCF" parameterClass="map">	
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'N',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #AWB_NO#
		  AND AWB_DATE    = TO_DATE(#AWB_DATE#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#FLT_KEY#)
		  AND FLT_DATE    = TO_DATE(#FLT_DATE#,'DDMONYY')
		  AND pending_rcf = 'Y'
	</update>	
	
	<update id="setPendingRCFIndicator" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'Y',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #awbNo#
		  AND AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#fltKey#)
		  AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<select id="getFlightAircraftType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT CGO_ACFT_TYPE as aircraftType FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A'
	</select>
	
	<select id="getChkConfigBasedRCFIND" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from mast_carrier where code = #carrCode# and NVL(RCF_CONFIG,'N') = 'Y'
	</select>
	
	
	<select id="checkPassengerConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='X_MINS_PAX_RCF') / (24 * 60) )
	</select>
	
	<select id="checkFrighterConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='X_MINS_FRE_RCF') / (24 * 60) )		
	</select>
	
	<select id="checkCombiConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' )
	</select>

	<select id="validateULDCheckedOUTFromFlt"  parameterClass="map" resultClass="java.lang.String">	
			select count(1) from exp_chkout_dtl where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_BT_NO# and chkout_date is not null
	</select>

	<select id="fetchXTShipmentList"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="cargo.cms.imprt.bo.XTShipmentBO">
		select A.*, 
		<![CDATA[
		case WHEN  to_number(A.remTimeInMins) > 0 then 
	      LPAD(TRUNC(A.remTimeInMins/60),2,0) || ':' || RPAD((A.remTimeInMins - TRUNC(A.remTimeInMins/60)*60),2,0)
	      else '0' end as remTime
	    ]]>  
	    from (
		<![CDATA[	
			SELECT xt.imp_flt_key AS impFltKey,
			  TO_CHAR(iopr.SCH_DATE,'DDMONYY') impFltDate,
			  TO_CHAR(iopr.EST_DATE,'DDMONYY') impEstDate,			  
			  CASE WHEN iopr.ACT_DATE IS NOT NULL    THEN 'Y'    ELSE 'N'  END AS ataIndicator,
			  DECODE( PKG_COMMON.GET_FLT_ATA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD'),NULL, NVL(PKG_COMMON.GET_FLT_ETA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD'),PKG_COMMON.GET_FLT_STA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD')), PKG_COMMON.GET_FLT_ATA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD')) AS etaAta,
			  ( to_date( (TO_CHAR( DECODE(eopr.EST_DATE,NULL,eopr.SCH_DATE,eopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(eopr.EST_DATE,NULL,eopr.SCH_TIME,eopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' )
			    -  to_date( (TO_CHAR( DECODE(iopr.EST_DATE,NULL,iopr.SCH_DATE,iopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(iopr.EST_DATE,NULL,iopr.SCH_TIME,iopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' ) ) * 24 * 60 * 60 / 3600 AS xtType,
			    
			  case when chk.CHKIN_YN = 'Y' THEN 
			    ( ( to_date( (TO_CHAR( DECODE(eopr.EST_DATE,NULL,eopr.SCH_DATE,eopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(eopr.EST_DATE,NULL,eopr.SCH_TIME,eopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' ) - ( ( (NVL( (SELECT TIME_MINS FROM MAST_ACFT_TYPE_CONFIG WHERE ACFT_TYPE = eopr.CGO_ACFT_TYPE), 0) ) /60 )/ 24) 
         				- to_date(to_char(SYSDATE,'DDMONYY HH24MI'),'DDMONYYHH24MI') ) * 24 * 60 )
			  else 0 end as remTimeInMins,   
			   
			  CASE WHEN NVL(shp.manifest_pcs,0) > 0  THEN ROUND( (shp.recd_pcs/shp.manifest_pcs) * 100 ,2)     || '%'    ELSE '0'      || '%'  END AS bdPercentage,
			  xt.awb_no   AS awbNumber,
			  TO_CHAR(xt.awb_date,'DDMONYY') AS awbDate,	
			  SUBSTR(xt.awb_no,1,3) ||'-' ||SUBSTR(xt.awb_no,4) AS awbNumDisp,
			  DECODE(awb.spl_code1, NULL, '', awb.spl_code1 || DECODE(awb.spl_code2, NULL, '', ','))
                    || DECODE(awb.spl_code2, NULL, '', awb.spl_code2 || DECODE(awb.spl_code3, NULL, '', ','))
                    || DECODE(awb.spl_code3, NULL, '', awb.spl_code3 || DECODE(awb.spl_code4, NULL, '', ','))
                    || DECODE(awb.spl_code4, NULL, '', awb.spl_code4 || DECODE(awb.spl_code5, NULL, '', ','))
                    || DECODE(awb.spl_code5, NULL, '', awb.spl_code5 || DECODE(awb.spl_code6, NULL, '', ','))
                    || DECODE(awb.spl_code6, NULL, '', awb.spl_code6 || DECODE(awb.spl_code7, NULL, '', ','))
                    || DECODE(awb.spl_code7, NULL, '', awb.spl_code7 || DECODE(awb.spl_code8, NULL, '', ','))
                    || DECODE(awb.spl_code8, NULL, '', awb.spl_code8 || DECODE(awb.spl_code9, NULL, '', ','))
                    || DECODE(awb.spl_code9, NULL, '', awb.spl_code9) splCode,	
       (CASE WHEN decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND (SPLCODE.SPL_CODE = awb.SPL_CODE1 OR SPLCODE.SPL_CODE = awb.SPL_CODE2 OR SPLCODE.SPL_CODE = awb.SPL_CODE3 OR SPLCODE.SPL_CODE = awb.SPL_CODE4 
       OR SPLCODE.SPL_CODE = awb.SPL_CODE5 OR SPLCODE.SPL_CODE = awb.SPL_CODE6 OR SPLCODE.SPL_CODE = awb.SPL_CODE7 OR SPLCODE.SPL_CODE = awb.SPL_CODE8 OR SPLCODE.SPL_CODE = awb.SPL_CODE9)) > 0
       THEN 'Q' ELSE decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) ELSE decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType,
			  xt.uld_key  AS uldKey,
			  
			   CASE WHEN (xt.uld_key IS NOT NULL AND xt.uld_key = 'BULK') THEN (SELECT shp_trf_type FROM v_ddt_dtl where awb_no = xt.awb_no AND awb_date = xt.awb_date and shp_trf_type is not null and rownum = 1) 
                WHEN xt.uld_key IS NOT NULL THEN (SELECT TRANSIT_TYPE FROM uld_inventory WHERE uld_key = xt.uld_key)  
                ELSE ''  END as transitType,
			  
			  awb.pcs                                AS shpPcs,
			  awb.wt                                 AS shpWt,
			  TO_CHAR(chk.CHKIN_DATE,'HH24:MI')      AS checkinTime,
			  TO_CHAR(chk.TIME_OF_ARRIVAL,'HH24:MI') AS timeOfArrival,
			  CASE
			    WHEN chk.BRKDN_COMPL_DATE IS NOT NULL
			    THEN 'C'
			    WHEN (chk.BRKDN_COMPL_DATE IS NULL
			    AND chk.BRKDN_START_DATE   IS NOT NULL)
			    THEN 'S'
			    ELSE ''
			  END                                     AS brkDownStatus,
			  TO_CHAR(chk.BRKDN_COMPL_DATE,'HH24:MI') AS bdComplTime,
			  NVL(strgDtl.uld_key,strgDtl.lsp_no) AS lspULD,			  
		      case when strgDtl.uld_key is not null then (select loc_code from uld_inventory  where uld_key = strgDtl.uld_key)
		           when strgDtl.lsp_no is not null then (select loc_code from lsp_inventory  where lsp_no = strgDtl.lsp_no)
		      END as currLoc,        
			    strgDtl.TARGET AS target,
			    strgDtl.TARGET_ID AS targetID,
		        strgDtl.ULD_KEY AS strgULD,
		        strgDtl.LSP_NO AS strgLSP,
			  xt.exp_flt_key AS expFltKey,
			  TO_CHAR(xt.exp_flt_date,'DDMONYY') AS expFltDate,
			  DECODE( PKG_COMMON.GET_FLT_ATA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD'),NULL, NVL(PKG_COMMON.GET_FLT_ETA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD'),
			        PKG_COMMON.GET_FLT_STA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD')), PKG_COMMON.GET_FLT_ATA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD')) AS etdAta,
			  eopr.FLT_MODULE1 AS expModule,
			  xt.REMARKS AS xtRmks
			FROM xt_imp_car_shp_dtl xt
			JOIN AWB awb ON awb.awb_no    = xt.awb_no AND awb.awb_date = xt.awb_date
			LEFT JOIN imp_awb_strg_dtl strgDtl ON strgDtl.awb_no = xt.awb_no AND strgDtl.awb_date = xt.awb_date AND strgDtl.flt_key = xt.imp_flt_key 
				AND strgDtl.flt_date = xt.imp_flt_date AND NVL(CHKIN_ULD_KEY,'BULK') = xt.uld_key
			JOIN imp_car_shp shp ON shp.flt_key = xt.imp_flt_key AND shp.flt_date = xt.imp_flt_date AND shp.awb_no   = xt.awb_no AND shp.awb_date = xt.awb_date
			LEFT JOIN flt_opr iopr ON iopr.flt_key   = xt.imp_flt_key AND iopr.sch_date = xt.imp_flt_date AND iopr.flt_type = 'A'
			LEFT JOIN flt_opr eopr ON eopr.flt_key   = xt.exp_flt_key AND eopr.sch_date = xt.exp_flt_DATE AND eopr.flt_type = 'D'
			LEFT JOIN imp_ramp_chk_dtl chk ON chk.flt_key         = xt.imp_flt_key AND chk.flt_date       = xt.imp_flt_date AND chk.uld_key = xt.uld_key
			WHERE 1 =1 
			AND to_date( (TO_CHAR( DECODE(iopr.EST_DATE,NULL,iopr.SCH_DATE,iopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(iopr.EST_DATE,NULL,iopr.SCH_TIME,iopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' )
      			BETWEEN to_date( #fromEtaSta# , 'DDMONYYHH24MI' ) AND  to_date( #toEtaSta# , 'DDMONYYHH24MI' ) 			
			]]> 			
			<isNotEmpty property="fltModule">
				AND iopr.FLT_MODULE1 = #fltModule#
			</isNotEmpty>			
			<isNotEmpty property="cargoArcftType">
				AND	iopr.cgo_acft_type = #cargoArcftType#
			</isNotEmpty>			
			<isNotEmpty property="impFltKey">
				AND	iopr.flt_key = #impFltKey#
			</isNotEmpty>	
			<isNotEmpty property="fltKey">
				AND	eopr.flt_key = #fltKey#
			</isNotEmpty>
			<isNotEmpty property="fltDate">
				 AND NVL(eopr.EST_DATE,eopr.SCH_DATE) = to_date(#fltDate#,'DDMONYY')
			</isNotEmpty>
			<isEqual compareValue="Y" property="bdOutstanding">
			  <![CDATA[
				AND NVL(shp.manifest_pcs,0) - NVL(shp.recd_pcs,0) > 0
			   ]]>
			</isEqual>
			<isEqual compareValue="Y" property="dlvOutstanding">
				AND not exists (select null from RTRV_MOVE_ORDER where mhcs_msg_id = strgDtl.TARGET_ID and status = 'COMPLETED' AND  AWB_NO = strgDtl.awb_no)
			</isEqual>) A
	</select>	
	
	<select id="findUldInInventoryAndLinkedToFlight"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY WHERE IMP_FLT_KEY = #FLT_KEY# AND IMP_FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY#
	</select>
	
	
	<select id="validateULDTransferType"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM v_ddt_dtl
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY# AND  (trf_type IN ('TT','IF') OR shp_trf_type IN ('TT','IF'))
	</select>
	
<select id="getDGNotocShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT #awbNo# AS awbNo,A.SPL_CODE AS splCode
	FROM CUST_AIRL_SPL_CODE A,
  	AWB B
	WHERE 
  	((A.CARR_CODE  = B.carr_code) OR (B.agent_code is not null and A.CUST_NO = B.AGENT_CODE))
	AND A.spl_type     ='SPL_DANG'
	AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  UNION ALL 
  SELECT  #awbNo# AS awbNo,decode(S.spl_code1, null, '', S.spl_code1 || decode(S.spl_code2, null, '', ','))
		|| decode(S.spl_code2, null, '', S.spl_code2 || decode(S.spl_code3, null, '', ','))
		|| decode(S.spl_code3, null, '', S.spl_code3 || decode(S.spl_code4, null, '', ','))
		|| decode(S.spl_code4, null, '', S.spl_code4 || decode(S.spl_code5, null, '', ','))
		|| decode(S.spl_code5, null, '', S.spl_code5 || decode(S.spl_code6, null, '', ','))
		|| decode(S.spl_code6, null, '', S.spl_code6 || decode(S.spl_code7, null, '', ','))
		|| decode(S.spl_code7, null, '', S.spl_code7 || decode(S.spl_code8, null, '', ','))
		  || decode(S.spl_code8, null, '', S.spl_code8 || decode(S.spl_code9, null, '', ','))
		|| decode(S.spl_code9, null, '', S.spl_code9) AS splCode 
			FROM CUST_AIRL_COMB_SPL_CODE S,AWB P
        WHERE ((S.CARR_CODE  =P.carr_code) OR (p.agent_code is not null and S.CUST_NO = P.AGENT_CODE))
        AND S.spl_type     ='SPL_DANG'
        AND P.AWB_NO       = #awbNo#
        AND P.AWB_DATE  = #awbDate#
	</select>
	<select id="getPmanFltList_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT FLT_KEY AS fltKey, TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM EXP_PMANIFEST_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="getPmanTarmacFltList_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT FLT_KEY AS fltKey, TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	
	<select id="getSpecialLoadShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT #awbNo# AS awbNo,A.SPL_CODE AS splCode
	FROM CUST_AIRL_SPL_CODE A,
  	AWB B
	WHERE 
  ((A.CARR_CODE  = B.carr_code) OR (B.agent_code is not null and A.CUST_NO = B.AGENT_CODE))
	AND A.spl_type     ='SPL_NOTOC'
	AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  UNION ALL 
  SELECT  #awbNo# AS awbNo,decode(S.spl_code1, null, '', S.spl_code1 || decode(S.spl_code2, null, '', ','))
		|| decode(S.spl_code2, null, '', S.spl_code2 || decode(S.spl_code3, null, '', ','))
		|| decode(S.spl_code3, null, '', S.spl_code3 || decode(S.spl_code4, null, '', ','))
		|| decode(S.spl_code4, null, '', S.spl_code4 || decode(S.spl_code5, null, '', ','))
		|| decode(S.spl_code5, null, '', S.spl_code5 || decode(S.spl_code6, null, '', ','))
		|| decode(S.spl_code6, null, '', S.spl_code6 || decode(S.spl_code7, null, '', ','))
		|| decode(S.spl_code7, null, '', S.spl_code7 || decode(S.spl_code8, null, '', ','))
		  || decode(S.spl_code8, null, '', S.spl_code8 || decode(S.spl_code9, null, '', ','))
		|| decode(S.spl_code9, null, '', S.spl_code9) AS splCode 
			FROM CUST_AIRL_COMB_SPL_CODE S,AWB P
        WHERE ((S.CARR_CODE  =P.carr_code) OR (p.agent_code is not null and S.CUST_NO = P.AGENT_CODE))
        AND S.spl_type     ='SPL_NOTOC'
        AND P.AWB_NO       = #awbNo#
        AND P.AWB_DATE  = #awbDate#
	</select>
	<select id="getawbShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	select decode(AW.spl_code1, null, '', AW.spl_code1 || decode(AW.spl_code2, null, '', '/'))
		|| decode(AW.spl_code2, null, '', AW.spl_code2 || decode(AW.spl_code3, null, '', '/'))
		|| decode(AW.spl_code3, null, '', AW.spl_code3 || decode(AW.spl_code4, null, '', '/'))
		|| decode(AW.spl_code4, null, '', AW.spl_code4 || decode(AW.spl_code5, null, '', '/'))
		|| decode(AW.spl_code5, null, '', AW.spl_code5 || decode(AW.spl_code6, null, '', '/'))
		|| decode(AW.spl_code6, null, '', AW.spl_code6 || decode(AW.spl_code7, null, '', '/'))
		|| decode(AW.spl_code7, null, '', AW.spl_code7 || decode(AW.spl_code8, null, '', '/'))
		  || decode(AW.spl_code8, null, '', AW.spl_code8 || decode(AW.spl_code9, null, '', '/'))
		|| decode(AW.spl_code9, null, '', AW.spl_code9) splCode
		FROM AWB AW WHERE AW.AWB_NO=#awbNo# AND AW.AWB_DATE=#awbDate#
	</select>
	<select id="fetchNotocIndfromAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#
	</select>
	<update id="updateNotocIndInAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#
	</update>
	<select id="fetchNotocIndfromExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMANIFEST_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="fetchNotocIndfromBupAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMANIFEST_ULD_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#
	</select>
	<select id="fetchNotocIndfromTarmacExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<update id="updateNotocIndInExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateNotocIndInBUPExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_AWB SET NOTOC_IND = #bupInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateNotocIndInBUP" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_ULD_AWB SET NOTOC_IND = #bupInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#
	</update>
	
	<update id="updateNotocIndInBUP1" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_ULD_AWB SET NOTOC_IND = #dgInd#,TR_TYPE='' WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	
	<update id="updateNotocIndInTarmacExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMAN_TARMAC_AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<select id="fetchNotocBuildupSHC" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT 
	SHC    AS shcOne,
			  SHC2        AS shcTwo,
			  SHC3        AS shcThree,
			  SHC4        AS shcFour,
			  SHC5        AS shcFive,
			  SHC6        AS shcSix,
			  SHC7        AS shcSeven,
			  SHC8        AS shcEight,
			  SHC9        AS shcNine
	FROM EXP_PMANIFEST_ULD_AWB A,  EXP_PMANIFEST_ULD_AWB_SHC B WHERE B.TR_NO = A.TR_NO AND A.AWB_NO = #awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.ULD_BT_NO=#uldKey#
	</select>
	<select id="fetchNotocCountinpam" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.Integer">
	SELECT SUM(CNT) FROM (
	SELECT COUNT(1) AS CNT FROM EXP_PMANIFEST_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	UNION ALL
	SELECT COUNT(1) AS CNT FROM EXP_PMAN_TARMAC_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#)
	</select>
	<select id="fetchNotocCountinBUP" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) AS CNT FROM EXP_PMANIFEST_ULD_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="fetchNotocIndfromFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM FLT_OPR_EVENTS WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D'
	</select>
	<select id="fetchAcknowledgeIndfromFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_ACK_IND,'N') FROM FLT_OPR_EVENTS WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D'
	</select>
	<update id="updateNotocIndInFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE FLT_OPR_EVENTS SET NOTOC_IND = #notocInd#,TR_TYPE='NCYN' WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D' 
	</update>
	<update id="updateAcknowledgeIndInFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE FLT_OPR_EVENTS SET NOTOC_ACK_IND = 'N',NOTOC_ACK_USER='SYSUSER',NOTOC_ACK_DATE=SYSDATE,TR_TYPE='ACYN' WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D' 
	</update>	
	<select id="getInbFltDetailsForAWB"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT ICS.flt_key                AS fltKey ,
			  TO_CHAR(ICS.flt_date,'DDMONYY') AS fltDate,
			  ICS.RECD_PCS        AS recPcs,
			  ICS.RECD_WT         AS recWt,
			  NVL(ai.locPcs,0) AS invPcs,
			  NVL(ai.locWt,0)  AS invWt
			FROM imp_car_shp ics
			LEFT JOIN (select awb_no, awb_date , flt_type , flt_key , flt_date , SUM(Locn_pcs) as locPcs ,  SUM(Locn_wt) as locWt from awb_inventory group by awb_no,awb_date,flt_type,flt_key,flt_date) ai
			ON ics.awb_no    = ai.awb_no AND ics.awb_date = ai.awb_date AND ai.flt_type  = 'I' and ai.flt_key  = ics.flt_key and ai.flt_date  = ics.flt_date
			WHERE ics.awb_no = #awbNo#
			AND ics.awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="getAWBInventoryCount" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">
		select count(1) from awb_inventory where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	<update id="updateAWBInventoryWithINBFlt" parameterClass="map" >
		update awb_inventory set flt_date = to_date(#fltDate#,'DDMONYY'), flt_key = #fltKey#, flt_type = 'I' where seq_no = #seqNumber#
	</update>	
	<select id="getExistingAWBInvForFlight" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.String" >  	
		SELECT SEQ_NO seqNo FROM AWB_INVENTORY
	    WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	    AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
		AND NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	    AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
	    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	    AND NVL(SRF_NO,'*')  = NVL(#srfNo#,'*')
	    AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
	    AND NVL(CDIF_NO,'*') = NVL(#cdifNo#,'*')
	    AND NVL(RTN_NO,'*') = NVL(#rtnNo#,'*')    
  </select>  
  <update id="incress_awbInvtory" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0) + NVL(#newLocPcs#,0),
			locn_wt = NVL(locn_wt,0) + NVL(#newLocWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqExists#
	</update>	
	
	<update id="reduce_awbInvtory" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)  - NVL(#newLocPcs#,0),
			locn_wt = NVL(locn_wt,0) - NVL(#newLocWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<delete id="deleteAwbInvOnLocZero" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		DELETE FROM awb_inventory WHERE SEQ_NO = #seqNo# and locn_pcs = 0
	</delete>
	<insert id="insertAwbInventoryWithFlight" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		INSERT INTO AWB_INVENTORY
		 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
		 LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, STRG_DATE,CR_USER_ID, CR_DATE,
		 SRF_NO, CDIF_NO, TRM_NO,
		 LM_USER_ID, LM_DATE,  FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,
		 REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,
		 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,WH_DAM_IND,DAM_TYPE,DAM_PCS,DAM_WT,RTN_NO,REF_AWB_EVENT)
		 VALUES
		 (#awbNo#,#awbDate#,#carrCode#,#lspNo#,#locCode#,
		 #newLocPcs#,#newLocWt#,#damInd#, #ppkInd#,sysdate, #lmUserId#, sysdate,
		 #srfNo#, #cdifNo#, #trmNo#,#lmUserId#, sysdate,#fltDate#,#fltKey#,#fltType#,#uldKey#,AWB_INV_SEQ.NEXTVAL,
		 '','',#trNo#,#trType#,sysdate,#docLineNo#,#locCode#,#relocType#,#rmk#,#locCode#,#whDamInd#,#damType#,#damPcs#,#damWt#,#rtnNo#,#trtypeEvt#)
	</insert>
	<!-- Uplift Priority -->
	<select id="sqlGetAWBListForULDPriority" parameterClass="java.lang.String"
		resultClass="cargo.cms.common.admin.bo.SHCUpliftPriority">
		<![CDATA[
	    	SELECT
	    	AWB_NO awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') awbDate
	    	FROM AWB_INVENTORY
	    	WHEE ULD_KEY = #PARAM#
		]]>
	</select>
		<update id="sqlUpdateAWBUpliftPriority" parameterClass="java.util.Map">
		<![CDATA[
	    	UPDATE AWB
	    	SET
    		UPLIFT_PRIORITY = #PRIORITY#, LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND NVL(UPLIFT_PRIO_MANUAL_YN, 'N') = 'N'
			AND AWB_TYPE IN ('E', 'T')
		]]>
	</update>
        <select id="getAWBFinalUpliftPriority" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
	    	select FUN_GET_AWB_UPLIFT_PRIORITY(#AWB_NO#,TO_DATE(#AWB_DATE#, 'DDMONYY')) from DUAL
		]]>
	</select>
	<update id="updateAWBFinalUpliftPriority" parameterClass="java.util.Map">
		<![CDATA[
	    	UPDATE AWB
	    	SET
    		AWB_UPLIFT_PRIORITY = #PRIORITY#, TR_TYPE = 'AWBUPL', LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND NVL(UPLIFT_PRIO_MANUAL_YN, 'N') = 'N'
			AND AWB_TYPE IN ('E', 'T')
		]]>
	</update>

	<select id="getloadTypeEmptyData" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT case when COUNT(1) >0 then 'N' else 'Y' end AS emptyInd
		     FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP, EDI_FFM_ULD ULD, ULD_INVENTORY U
		    WHERE 
		    MSG.TR_NO = SHP.TR_NO AND MSG.TR_NO = ULD.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		    AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NOT NULL
        AND MSG.FLT_KEY=U.FLT_KEY AND MSG.FLT_DATE = U.FLT_DATE AND U.ULD_KEY = ULD.ULD_KEY AND 
        U.ULD_KEY=#uldKey#
        ]]>
	</select>

<select id="getULDStatEmptyData" parameterClass="java.lang.String" resultClass="java.lang.String">
	select (select code_desc from mast_code_dtl where code_type = 'ULD_STATE' and code = FUN_GET_ULD_STATE(#uldKey#)) from dual
	</select>

    <update id="sqlUpdateLoadType_TM" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO">
			UPDATE ULD_INVENTORY SET LOAD_TYPE=#loadType#,empty_flg=#emptyInd#,LM_DATE=SYSDATE,LM_USER_ID=#userID#,TR_TYPE='MHCN',GEN_RMK = #uldRemark# WHERE ULD_KEY=#uldKey#
	</update>

<select id="getLoadTypeDesc" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO" resultClass="java.lang.String">
	SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='LOAD_TYPE' AND code=#loadType# AND GROUP_CODE='38' AND ROWNUM=1
	</select>

	<update id="sqlUpdateLoadType" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO">
			UPDATE ULD_INVENTORY SET LOAD_TYPE=#loadType#,empty_flg=#emptyInd#,LM_DATE=SYSDATE,LM_USER_ID=#userID#,TR_TYPE='MHCN',GEN_RMK = #uldRemark#, TARGET = #target# WHERE ULD_KEY=#uldKey#
	</update>

<select id="getEligibleULDListForTimeOUT"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			SELECT inv.uld_key uldKey, rtv.mhcs_msg_id AS mhcsId
			FROM uld_inventory inv
			JOIN
			  (SELECT WH_GROUP AS code FROM mast_wh_group WHERE NVL(preannouncement_ind,'N') = 'Y'
			    UNION
			   SELECT WH_AREA AS code FROM mast_wh_area WHERE NVL(preannouncement_ind,'N') = 'Y'
			    UNION
			    SELECT CODE AS code  FROM mast_wh_loc  WHERE NVL(preannouncement_ind,'N') = 'Y'
			  ) loc ON loc.code = inv.TARGET
			JOIN
			  (SELECT ULD, MAX(mhcs_msg_id) AS mhcs_msg_id  FROM rtrv_move_order
			    WHERE (status   IS NULL  OR ( status     <>'CANCELLED'  AND status      <> 'COMPLETED'  AND status      <> 'TIMEOUT'
			          AND status      <> 'FCOMPLETED') )  AND mhcs_msg_id IS NOT NULL  GROUP BY ULD  ) rtv ON rtv.ULD = inv.ULD_KEY
			WHERE inv.TARGET IS NOT NULL
			AND (TARGET_DATE + (SELECT TO_NUMBER(rule_value) FROM CMSRULES WHERE RULE_CODE ='AUTO_TIME_OUT_JO' )/1440 ) < SYSDATE
			AND NVL(ULDENTRY_MSG_RCVD_YN,'N') = 'N'	
		 ]]>
	</select>	

       <update id="resetTargetOnULDInventory" parameterClass="cargo.cms.imprt.bo.CarShpBO">
			UPDATE ULD_INVENTORY SET TARGET = '' , LM_DATE = SYSDATE, LM_USER_ID = 'SYSTEM' WHERE ULD_KEY = #uldKey#
	</update>
	
	<update id="updateJOBOrderToTimeOUT" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			UPDATE rtrv_move_order SET status='TIMEOUT', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE WHERE ULD = #uldKey#
				AND ( status IS NULL OR (status <>'CANCELLED' AND status <> 'COMPLETED' AND status <> 'TIMEOUT') ) 
		 ]]>
				<isNotEmpty property="mhcsId">
	  				AND mhcs_msg_id = #mhcsId#                                    
				</isNotEmpty>
	</update>

	<select id="getBULKXTShipment"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select exp_flt_key as obFltKey, to_char(exp_flt_date,'DDMONYY') as obFltDate,imp_flt_key as impFltKey, to_char(imp_flt_date,'DDMONYY') as impFltDate,
		awb_no as awbNumber,to_char(awb_date,'DDMONYY') as awbDate, NVL(#CHK_IN_ULD#,'BULK') as uldKey
		from xt_imp_car_shp_dtl shp where awb_no = #AWB_NO# and awb_date = #AWB_DATE# and imp_flt_key = #IMP_FLT_KEY# and imp_flt_date = #IMP_FLT_DATE#
		AND NOT EXISTS ( select null from xt_imp_car_shp_dtl where IMP_FLT_KEY  = shp.imp_flt_key AND IMP_FLT_DATE = shp.imp_flt_date and awb_no = shp.awb_no AND awb_date = shp.awb_date and ULD_KEY = NVL(#CHK_IN_ULD#,'BULK') )
		AND rownum = 1
	</select>	
		
	<insert id="insertXTShipment" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		Insert into xt_imp_car_shp_dtl (IMP_FLT_KEY,IMP_FLT_DATE,EXP_FLT_KEY,EXP_FLT_DATE,AWB_NO,AWB_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,SEQ_NO,TR_TYPE) 
		values (#impFltKey#,#impFltDate#,#obFltKey#,#obFltDate#,#awbNumber#,#awbDate#,#uldKey#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,xt_imp_car_shp_seq.nextval,'XTSHP')
	</insert>

	<select id="imp_IssueSRF_checkForOrgDest"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1)
        FROM imp_car_awb c
        JOIN awb b
        ON c.AWB_NO        =b.AWB_NO
        AND c.AWB_DATE     =b.AWB_DATE
        AND ((c.awb_origin IS NULL or b.orig IS NULL)  
        or (c.awb_dest IS NULL or b.dest IS NULL))where c.AWB_NO = #AWBNO# and c.AWB_DATE = #AWBDATE# 
	]]>
	</select>
	<select id="fetchShipmentDeliveryTimeForULD"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="java.lang.String">
		select TO_CHAR(LM_DATE,'HH24:MI') from RTRV_MOVE_ORDER where mhcs_msg_id = #targetID# and ULD = #strgULD# and status = 'COMPLETED' AND AWB_NO = #awbNumber#
	</select>
	
	<select id="fetchShipmentDeliveryTimeForLSP"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="java.lang.String">
		select TO_CHAR(LM_DATE,'HH24:MI') from RTRV_MOVE_ORDER where mhcs_msg_id = #targetID# and LSP = #strgLSP# and status = 'COMPLETED' AND AWB_NO = #awbNumber# 
	</select>
	<select id="checkTotalInvWithBrkCnt" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer" >  
		<![CDATA[	
			select case when (recPcs = invPcs ) AND (recWt = invWt) then 1 else 0 end as result from (
			SELECT  SUM(ICS.RECD_PCS) AS recPcs, SUM(ICS.RECD_WT) AS recWt,
						  (SELECT SUM(LOCN_PCS)FROM awb_inventory WHERE awb_no = ics.awb_no AND awb_date = ics.awb_date) AS invPcs,
						  (SELECT SUM(LOCN_WT)FROM awb_inventory WHERE awb_no = ics.awb_no AND awb_date = ics.awb_date)  AS invWt
						FROM imp_car_shp ics WHERE ics.awb_no = #awbNo# AND ics.awb_date = TO_DATE(#awbDate#,'DDMONYY') 
			      group by ics.awb_no,ics.awb_date )
		]]>
	</select>

	<select id="checkConfigLoadType" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO" resultClass="java.lang.String">
	  <![CDATA[
	SELECT COUNT(1)	FROM ULD_INVENTORY A
	WHERE A.ULD_KEY=#uldKey# 
	AND instr(nvl(UPPER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='DEF_LOAD_TYPE_UAF')),'*'), nvl(UPPER(#loadType#),'**')) > 0
	  	]]>
	</select>
	<select id="getShipmentToTriggerNFD"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO"> 
		SELECT shp.awb_no                    AS awbNo,
		  TO_CHAR(shp.awb_date,'DDMONYY')    AS awbDate,  
		  flt_key                        AS fltKey,
		  TO_CHAR(flt_date,'DDMONYY')    AS fltDate
		FROM IMP_CAR_SHP shp,
		AWB B
		WHERE B.AWB_NO  = shp.AWB_NO AND B.AWB_DATE  = shp.AWB_DATE AND B.AWB_TYPE !='T'
		AND RCF_SENT_DATE IS NOT NULL 
		AND NFD_SENT_DATE IS NULL 
		AND (SELECT COUNT(1) FROM mast_carrier WHERE code = (SELECT pkg_fsu.get_carr_code(shp.awb_no,shp.awb_date) FROM dual) AND NVL(AUTO_TRIGGER_NFD,'N') = 'Y') > 0
		AND SYSDATE > (RCF_SENT_DATE + ((SELECT NVL(NFD_OFFSET_MINS,0)  FROM mast_carrier  WHERE code = (SELECT pkg_fsu.get_carr_code(shp.awb_no,shp.awb_date) FROM dual ) ) / (24 * 60)))
	</select>	
	<select id="checkNFDConfiguration" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
 	  select count(1) from mast_carrier where code = (select pkg_fsu.get_carr_code(#AWB_NO#,#AWB_DATE#) from dual) AND NVL(AUTO_TRIGGER_NFD,'N') = 'N'
 	</select>
	<select id="getConfirmOffloadFSUList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadBO">
	SELECT
                              FLT_KEY AS fltKey,
                              TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate,
                              AWB_NO AS awbNo,
                              TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
                              (CASE WHEN OFFLOAD_PCS > ASSIGNED_PCS THEN ASSIGNED_PCS
                              ELSE OFFLOAD_PCS
                              END) AS loadedPc
                              FROM EXP_OFFLOAD_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND CONFIRMED_YN='Y'
	</select>
	
	
	<insert id="awbEventFORNOA" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', 'NND', 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="awbEventFORFORNOADTLS" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS,COD_HWB_NUM, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', '961', #desHisDtls#,#transactionNUM#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
        <select id="checkTMAWBExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	 </select>

	

	  <!-- Charges for Special Cargo & General Cargo -->
	<select id="sqlGetNeedStorageChargeWarningForIssueSRF" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[			
			WITH SHC_SPECIAL_CARGO AS (
			  SELECT item_code AS SPECIAL FROM MAST_STRG_CHARGES_CONFIG WHERE SEQ_NUM = (SELECT PKG_CALCULATE.FUN_GET_CARGO_TYPE_SC(#AWB_NO#,TO_DATE(#AWB_DATE#, 'DDMONYY')) FROM DUAL)
			),
			STORAGE_CHARGE_PAID AS (
				SELECT SUM(NVL(CHRG_AMT, 0) + NVL(ADJ_AMT, 0)) CHRG_AMT, ITM_CODE
				FROM BILL_CHARGE_DTL BILL
				WHERE STATUS = 'PAID'
				AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
				AND ITM_CODE like 'SCIM%'
				GROUP BY ITM_CODE
			)
			SELECT
          	CASE
			      WHEN (SELECT CHRG_AMT FROM STORAGE_CHARGE_PAID WHERE ITM_CODE != SPECIAL ) > 0 THEN 'Y'
			      ELSE 'N'
			END
      		WARNING_REQUIRED
			FROM SHC_SPECIAL_CARGO WHERE 1 = 1
		]]>
	</select>
	
	<select id="getctAWBListforMileStone" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
			SELECT T1.awb_no awbNo, TO_CHAR(T1.AWB_DATE,'DDMONYY') awbDate, T1.LSP_NO AS lspNo,
                     T1.ULD_KEY as uldKey, T1.locn_pcs transferPcs, DECODE(T1.locn_wt,'0','',TRIM(to_char(locn_wt,9999999999.9))) transferWt,T1.LOC_CODE AS warehouseLocation
            from   awb_inventory t1, awb t2
            where  t1.awb_no = t2.awb_no
            and    TRUNC(t1.awb_date) = TRUNC(t2.awb_date)    
            and    t1.awb_no=#awbNo#
            and t1.awb_date=#awbDate#
            and t1.trm_no=#trmNo#
	</select>
	<select id="isInternalUser"  parameterClass="map"  resultClass="java.lang.Integer">
	   select count(1) from sec_user where user_type='I' and code=#USER_ID#
	</select>
	
	
	<select id="fetchDanglingDataExists" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.FlightBO">
		SELECT A.awb_no as awbNo, TO_CHAR(A.awb_date,'DDMONYY') as awbDate , awbType as awbType FROM 
		(
		  SELECT awb_no,awb_date ,  CASE    WHEN org = 'HKG'    THEN 'E'    ELSE 'T'  END awbType FROM EDI_FBL a, EDI_FBL_SHP f
			WHERE a.TR_NO = f.TR_NO  AND a.FBL_STATUS='P'
			AND f.awb_no IS NOT NULL AND ( sysdate - f.cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB') )
			AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
			AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , 'E' awbType FROM awb_pouch f  WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , CASE WHEN awb_org = 'HKG' then 'E' WHEN awb_dest = 'HKG' THEN 'I' ELSE 'T' END awbType FROM edi_fhl f WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date, 'E' awbType FROM exp_pre_rcl_brkdn f WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , 'E' awbType FROM exp_pre_rcl_hd f where awb_no is not null AND ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) ) 
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , flt_type as awbType from cst_recv f where awb_no is not null AND ( sysdate - recv_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
      	  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
	      SELECT f.awb_no, f.awb_date, CASE WHEN f.org = 'HKG' THEN 'E' WHEN f.dest = 'HKG' THEN 'I' ELSE 'T' END awbType FROM edi_ffm_msg m join edi_ffm_shp f on m.tr_no = f.tr_no
	  	  WHERE (m.ffm_status = 'P' OR m.ffm_status = 'CONT') AND f.awb_no IS NOT NULL AND ( sysdate - f.cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB') )
	  	  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
	  	  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		) A
	</select>
	
	<select id="checkDanglingAWBExists"  parameterClass="cargo.cms.imprt.bo.FlightBO"  resultClass="java.lang.Integer">
	   select count(1) from AWB where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="checkCcCodeAWBExists"  parameterClass="cargo.cms.imprt.bo.FlightBO"  resultClass="java.lang.Integer">
	   select count(1) from CST_RECV where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<insert id="insertDanglingAWBRecord" parameterClass="cargo.cms.imprt.bo.FlightBO">
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,awb_closed_yn,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE) 
			VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),'Y',#username#,SYSDATE,#username#,SYSDATE)
	</insert>
	<select id = "sqlgetshpbulkwtforCIR"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
		select BULK_WT as bulkWt,BUP_WT as bupWt from IMP_CAR_SHP where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>

<select id="getSequenceMonitoringList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.FlightBO">
	  <![CDATA[
	  SELECT A.SEQUENCE_NAME as sequenceName FROM (
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'RCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'ERCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'TOW_ORDER_IN_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'TOW_ORDER_OUT_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'EXP_RAMP_HOFORM_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'EXP_SID_SEQ' AND (LAST_NUMBER/lpad(max_value, 5, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'INVOICE_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'ADJUSTMENT_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 6, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'URF_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'LUC_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 5, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'CT_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 6, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'VCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		) A
	  ]]>
	</select>
	<update id="sqlCloseTrcFltDtlsLocJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_LOC TRCLOC SET TRCLOC.DCRPNCY_STS='Close',TRCLOC.lm_user_id='SYSTEM',TRCLOC.LM_DATE=SYSDATE  WHERE (TRCLOC.AWB_NO,TO_CHAR(TRCLOC.AWB_DATE,'DDMONYY'),TRCLOC.DCRPNCY_TYP) IN (
    select a.awb_no,TO_CHAR(A.AWB_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=b.awb_no 
    and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
	
	<update id="sqlCloseTrcFltDtlsJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_FLT TRCFLT SET TRCFLT.DCRPNCY_STS='Close',TRCFLT.remarks=substr((REMARKS||' '||'Automatically Closed by System'),0,65),TRCFLT.lm_user_id='SYSTEM',TRCFLT.LM_DATE=SYSDATE WHERE (TRCFLT.AWB_NO,TO_CHAR(TRCFLT.AWB_DATE,'DDMONYY'),TRCFLT.FLT_KEY,TO_CHAR(TRCFLT.FLT_DATE,'DDMONYY'),TRCFLT.DCRPNCY_TYP) IN (    
    select a.awb_no,TO_CHAR(A.AWB_DATE,'DDMONYY'),A.FLT_KEY,TO_CHAR(A.FLT_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=b.awb_no 
    and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
	
	<update id="sqlCloseTrcWoutFltDtlsJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_LOC TRCLOC SET TRCLOC.DCRPNCY_STS='Close',TRCLOC.remarks=substr((REMARKS||' '||'Automatically Closed by System'),0,65),TRCLOC.lm_user_id='SYSTEM',TRCLOC.LM_DATE=SYSDATE  WHERE (TRCLOC.AWB_NO,TO_CHAR(TRCLOC.AWB_DATE,'DDMONYY'),TRCLOC.DCRPNCY_TYP) IN (
		select a.awb_no as awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_loc a, trc_awb b where a.awb_date= b.awb_date 
		and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    and a.AWB_NO NOT IN (select c.awb_no from trc_flt c, trc_awb d where c.awb_date= d.awb_date and c.awb_no=d.awb_no and (upper(c.DCRPNCY_STS) not in ('CLOSE','VOID')  or  c.DCRPNCY_STS is null))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
		<select id="sqlgetErrMessage" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT ERR_DESC FROM ERR_MSG WHERE ERR_CODE= #PARAM# AND ERR_LCODE = 'en_US' AND ROWNUM=1
	</select>
		<select id="sqlgetjobdetails" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT A.JOB_ID AS batchJob1,B.REF_KEY AS refKey,B.SRF_NO AS srfNo,DECODE(b.SRF_NO,'','N',null,'N','Y') AS result,
		B.REMARKS AS errorRemarks FROM BATCH_JOB_HD A,BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE = #jobType# AND A.JOB_ID = #jobId# ORDER BY b.job_id,b.docline_no ASC
		]]>
	</select>
	<select id="selectUrfUldsforbatchissuesrf"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT uld.uld_key urfUld,
		  awb.flt_key flightNoKey,
		  TO_CHAR(awb.flt_date,'DDMONYY') flightDate, awb.awb_date 
		FROM uld_inventory uld,
		  awb_inventory awb
		WHERE uld.uld_key            =awb.uld_key
		AND awb.awb_no               =#awbNo#
		AND awb.awb_date             =#awbDate#
		AND (awb.FLT_KEY = #fltKey# OR awb.CDIF_NO = #fltKey#) 
		AND awb.FLT_DATE = #fltDate#
		AND (uld.HANDLING_MODE      IS NOT NULL
		AND (upper(uld.HANDLING_MODE)='PPK'))
	</select>
	<select id="sqlgetAWBBatchJobStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(JOB_ID)
		FROM
		  (SELECT DISTINCT A.JOB_ID
		  FROM BATCH_JOB_HD A,
		    BATCH_JOB_DTL B
		  WHERE B.JOB_ID   = A.JOB_ID
		  AND B.awb_no=#PARAM#
		  AND B.COMP_DATE IS NULL
		  )
		]]>
	</select>
	<select id="getTransitCtrlProShcList" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
		select off_point unldgpt, leg_ord legOrd, prohibit_shc1 prShc1, prohibit_shc2 prShc2, prohibit_shc3 prShc3
		from flt_opr_leg 
		where  flt_type = 'D' and flt_key=#fltKey# and sch_date=#fltDate#
		order by leg_ord
	</select>


<insert id="sql_batch_hd" parameterClass="java.util.HashMap" >
		INSERT INTO BATCH_JOB_HD (JOB_ID,JOB_TYPE,ACT_USER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES ( #JOB_ID#,#JOB_TYPE#,#USER#,#USER#,SYSDATE,#USER#,SYSDATE)
	</insert>
	
	<insert id="sql_insert_batch_dtl" parameterClass="java.util.HashMap" >
		INSERT INTO BATCH_JOB_DTL (JOB_ID,REF_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOCLINE_NO)
    		VALUES (#JOB_ID#,#REF_KEY#,#AWB_NO#,#AWB_DATE#,#FLT_KEY#,#FLT_DATE#,#USER#,SYSDATE,#USER#,SYSDATE,nvl(#DOCLINE_NUM#,'1'))
	</insert>

	<select id="checkCarConfirmedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) FROM IMP_CAR_SHP where flt_key =#FLT_KEY# and flt_date =to_date(#FLT_DATE#,'DDMONYY') and awb_no =#AWB_NO# and awb_date =to_date(#AWB_DATE#,'DDMONYY') and CAR_CREATED = 'Y'	
	</select>
	
	<select id="checkFWBReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) FROM EDI_FWB where awb_no =#AWB_NO# and awb_date =to_date(#AWB_DATE#,'DDMONYY')	
	</select>

	<select id="viewCARCharges"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	<![CDATA[
	  select 
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'WCS' AND ROWNUM=1) as valChrgPrepd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'VCS' AND ROWNUM=1) as ppdValVcAmt,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'TAX' AND ROWNUM=1) as taxChrgPrepd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'ACS' AND ROWNUM=1) as agentChgPrpd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'CCS' AND ROWNUM=1) as carrChrgPrepd,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'WCS' AND ROWNUM=1) as valChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'VCS' AND ROWNUM=1) as colValVcAmt,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'TAX' AND ROWNUM=1) as taxChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'ACS' AND ROWNUM=1) as agentChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'CCS' AND ROWNUM=1) as carrChrg
    from imp_car_awb a where awb_no=#awbNo# AND AWB_DATE = #awbDate#
    ]]>
	</select>

	<select id="getReportlicenceDetails"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" 		resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	<![CDATA[
	SELECT carawb.CC_FEE as ccFee,Decode(carawb.ppk_type,'B','No','Yes') as bupInd,carawb.appntd_agent as appointAgent,
	(SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=carawb.awb_date AND AWB_NO=carawb.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=carawb.awb_date AND AWB_NO=carawb.awb_no) AND 
	                               carawb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,
(CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END) AS creditAgent,
    (SELECT nvl(to_char(sum(amount),'999999,999,999.99'),0) FROM awb_isac_charges WHERE AWB_NO=carawb.awb_no and awb_date=carawb.awb_date) as isacCharge,
    (SELECT exch_rate FROM MAST_CURR_EXRATE E, MAST_CURRENCY C	WHERE		C.CODE= E.CURR_CODE	
    and E.CURR_CODE= NVL(carawb.CURR_CODE,carawb.DECLN_CURR_CODE)    AND E.CARR_CODE= awb.carr_code    AND EFF_DATE >= NVL((select max(i.EFF_DATE) from MAST_CURR_EXRATE i
										  where i.CURR_CODE	= E.CURR_CODE	and NVL(i.CARR_CODE, '**') = NVL(E.CARR_CODE, '**')),sysdate))  AS currencyCode    
FROM IMP_CAR_AWB carawb,AWB awb WHERE awb.awb_no = carawb.awb_no and awb.awb_date=carawb.awb_date and carawb.AWB_NO = #awbNo# AND carawb.AWB_DATE = #awbDate#
]]>
	</select>

<select id="getReportChargesListdata"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" 		resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		<![CDATA[
		
		select awbNo, awbDate, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, qty, unitPrice, 
        CASE WHEN (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) END amt,
        (chamt - nvl(waiveAmount,0)) chrgAmt, minChrgInd, maxChrgInd,
	    a.AGENT_CODE custNo, a.AGENT_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
		m.WAVR_IND waiveCharges
		from 
			 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
					  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
					 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
					 from GT_SRF_CHARGES G
					 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0) + nvl(WAVR_AMT,0)),0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
							 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
							 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							 	   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								   	  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
							 	   	  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
					 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					 
					  and G.RMODE = 'SRF'
					 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
			  union
			  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
			  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
					 'N', 'N'
					  from IMP_CHRG_ITM_REV_AWB 
					  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
					  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
			  ) c
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(ica.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(NET_AMT+WAVR_AMT) pchrg  from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%' group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')  
		]]>
	</select>
	<select id="fetchEctHandlerDetails"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	select bank_endos as bankEndos,bank_type as bankType,spl_code1 as splCode1,spl_code2 as splCode2,spl_code3 as splCode3,spl_code4 as splCode4,spl_code5 as splCode5,spl_code6 as splCode6,spl_code7 as splCode7,spl_code8 as splCode8,spl_code9 as splCode9,ect_handler as ectHandler from imp_car_awb where AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select>
	<select id="viewNTAWBReptA"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT
		EDI_FWB.tr_no as trNo,
		EDI_FWB.ORG as orginAa,
		EDI_FWB.RTG_APT_CODE as depAportName,
		EDI_FWB.RTG_DES_CARR as carrAgent,
		(select code_desc from mast_city where code = EDI_FWB.DES) as		finalAirportName,
		(select code_desc from cust_company where carr_code = (select carr_code from		mast_awb_prefix where code=SUBSTR(SUBSTR(EDI_FWB.AWB_NO,1,3),1,3)		and rownum=1)) as compName,
		to_char(edi_fwb.isu_awb_iss_date,'DDMONYY') as execnDate,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'9999990.00')) as ttlWtChrgPpd,
		SUBSTR(EDI_FWB.AWB_NO,1,3) ||'   '|| EDI_FWB.ORG||'   '||SUBSTR(EDI_FWB.AWB_NO,4) as	awbNoSfx,
		SUBSTR(EDI_FWB.AWB_NO,1,3)||'-'||SUBSTR(EDI_FWB.AWB_NO,4) AS awbNo,
		to_char(EDI_FWB.AWB_DATE,'DDMONYY') as awbDate,
		EDI_FWB.ORG as ediFwbOrig,
    EDI_FWB.DES as dest,
		EDI_FWB.SHPR_ACC_NO as shprAccNo,
		EDI_FWB.SHPR_NAME as shprName,
		EDI_FWB.SHPR_ADDR as shprAddr1,	
		EDI_FWB.SHIP_DESC_C as shipDescC,
		EDI_FWB.PCS as pcs,
		EDI_FWB.WGT_UNIT as wgtUnit,
		EDI_FWB.WGT as wgt,
		EDI_FWB.FLT_CARR1||EDI_FWB.FLT_NUM1 ||'/'||EDI_FWB.FLT_DATE1 as finalFltCarr1,
		EDI_FWB.FLT_NUM1 as finalFltNo1,
		EDI_FWB.FLT_KEY1 fltKey1,
		EDI_FWB.FLT_DATE1 as finalFltDt1,
		EDI_FWB.FLT_CARR2||EDI_FWB.FLT_NUM2 ||'/'||EDI_FWB.FLT_DATE2 as finalFltCarr2,
		EDI_FWB.FLT_NUM2 as finalFltNo2,
		EDI_FWB.FLT_KEY2 fltKey2,
		EDI_FWB.FLT_DATE2 as finalFltDt2,
		EDI_FWB.RTG_APT_CODE as rtgAptCode,
		EDI_FWB.RTG_DES_CARR as rtgDesCarr,	
		EDI_FWB.RTG_ONWARD_CODE1 as rtgOnwardCode1,
		EDI_FWB.RTG_ONWARD_CARR1 as rtgOnwardCarr1,
		EDI_FWB.RTG_ONWARD_CODE2 as rtgOnwardCode2,
		EDI_FWB.RTG_ONWARD_CARR2 as rtgOnwardCarr2,
		EDI_FWB.SHPR_PLACE as shprCity,
		(select code_desc from mast_country mcntr where mcntr.code = EDI_FWB.SHPR_CTRY_CODE) as shpCountry,
EDI_FWB.SHPR_STATE_PROVINCE as shprState,
		 EDI_FWB.SHPR_PIN_CODE as shpPostal,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelNo,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpFax,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelexNO,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelNo,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnFax,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelexNO,
	
		EDI_FWB.SHPR_CONT_NO as shpFax,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		EDI_FWB.CSGNE_NAME as csgnName,
		EDI_FWB.CSGNE_ADDR as csgnAddr1,
		EDI_FWB.CSGNE_PLACE as csgnCity,
		(select code_desc from mast_country mcntr where mcntr.code = EDI_FWB.CSGNE_CTRY_CODE) as csgnCountry,
    EDI_FWB.CSGNE_STATE_PROVINCE as csgnState,
		EDI_FWB.CSGNE_PIN_CODE as csgnPostal,
		EDI_FWB.CSGNE_CONT_ID as csgnContact,
		EDI_FWB.CSGNE_CONT_NO as csgnContact,
		EDI_FWB.AGENT_ACC_NO as agentAccNo,
		decode(EDI_FWB.AGENT_IATA_CODE,'0',' ',EDI_FWB.AGENT_IATA_CODE) as agentIata,
		decode(EDI_FWB.AGENT_IATA_ADDR,'0',' ',EDI_FWB.AGENT_IATA_ADDR) as
		agentIataAddr,
		EDI_FWB.AGENT_PART_ID as agentPartId,
		EDI_FWB.AGENT_NAME as agentName,
		 EDI_FWB.AGENT_PLACE as agentCity,
		EDI_FWB.AGENT_SPL_SERV1 as hndlgInfo1,
		EDI_FWB.AGENT_SPL_SERV2 hndlgInfo2,
		EDI_FWB.AGENT_SPL_SERV3 hndlgInfo3,
		EDI_FWB.AGENT_SPL_SERV3 agentSplServ3,
		EDI_FWB.NOTIFY_NAME notifyName,
		EDI_FWB.NOTIFY_ADDR notifyAddr,
		EDI_FWB.NOTIFY_ADDR2 notifyAddr2,
		EDI_FWB.NOTIFY_PLACE notifyPlace,
		EDI_FWB.NOTIFY_CTRY_CODE notifyCtryCode,
		EDI_FWB.NOTIFY_STATE_PROVINCE notifyStateProvince,
		EDI_FWB.NOTIFY_PIN_CODE notifyPinCode,
		EDI_FWB.NOTIFY_CONT_ID notifyContId,
		EDI_FWB.NOTIFY_CONT_NO notifyContNo,
		(SELECT  NVL(STRAGG(STRINGDELIM(cont_id  ||  ' ' ||  cont_name, ' ')),'')   FROM   EDI_FWB_CONTACT WHERE tr_no= EDI_FWB.tr_no AND edi_fwb_contact.cont_type = 'NFY') as notifyContInfo, 
		EDI_FWB.CVD_ISO_CURR_CODE as currCode,
		EDI_FWB.CVD_CHG_CODE as declChrgCode,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_WT_AMT,'',decode(PPD_VALUE_VC_AMT,0,'','','','P'),0,decode(PPD_VALUE_VC_AMT,0,'','','','P'),'P'))
		pcsWtPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_WT_AMT,'',decode(COL_VALUE_VC_AMT,0,'','','','C'),0,decode(COL_VALUE_VC_AMT,0,'','','','C'),'C'))
		pcsWtColl,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_OA_AMT,'',decode(PPD_TOTAL_OC_AMT,0,'','','','P'),0,decode(PPD_TOTAL_OC_AMT,0,'','','','P'),'P'))
		pcsOtherPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_OA_AMT,'',decode(COL_TOTAL_OC_AMT,0,'','','','C'),0,decode(COL_TOTAL_OC_AMT,0,'','','','C'),'C'))
		pcsOtherColl,
		EDI_FWB.CVD_ISO_CURR_CODE AS cvdIsoCurrCode,
		EDI_FWB.CVD_CHG_CODE AS cvdChgCode,
		EDI_FWB.CVD_CHG_DECL_WGT AS cvdChgDeclWgt,
		EDI_FWB.CVD_CHG_DECL_OTH AS cvdChgDeclOth,
		decode(EDI_FWB.CVD_CHG_CARR_VAL,'0',' ',EDI_FWB.CVD_CHG_CARR_VAL) AS cvdChgCarrVal,
		EDI_FWB.CVD_CHG_CARR_IND AS cvdChgCarrInd,
		decode(EDI_FWB.CVD_CHG_CUST_VAL,'0',' ',EDI_FWB.CVD_CHG_CUST_VAL) AS cvdChgCustVal,
		EDI_FWB.CVD_CHG_CUST_IND AS cvdChgCustInd,
		decode(EDI_FWB.CVD_CHG_INSUR_VAL,'0',' ',EDI_FWB.CVD_CHG_INSUR_VAL) AS cvdChgInsurVal,
		EDI_FWB.CVD_CHG_INSUR_IND AS cvdChgInsurInd,
		(case when nvl(EDI_FWB.CVD_CHG_CARR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CARR_VAL) else 'NVD' end) as declValCarr,
		(case when nvl(EDI_FWB.CVD_CHG_CUST_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CUST_VAL) else 'NCV' end)as declValCustoms,
		(case when nvl(EDI_FWB.CVD_CHG_INSUR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_INSUR_VAL) else 'XXX' end) as insuranceAmt,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrgPrepd,
		decode(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as ppdValVcAmt,
		decode(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrgPrepd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChgPrpd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrgPrepd,
		decode(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totWtChrgPrepd,
		decode(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrg,
		decode(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as colValVcAmt,
		decode(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrg,
		decode(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totCollChrgPrepaid,
		EDI_FWB.CER_SIGNATURE as shpSign,
		to_char(EDI_FWB.ISU_AWB_ISS_DATE,'DDMONYY') as sdate,
		EDI_FWB.ISU_AWB_ISS_PLACE as place,
		EDI_FWB.ISU_SIGNATURE as carrSign,
		EDI_FWB.OSI_SERVICE_INFO1 osiServiceInfo1,
		EDI_FWB.OSI_SERVICE_INFO2 osiServiceInfo2 ,
		EDI_FWB.OSI_SERVICE_INFO3 osiServiceInfo3,
		EDI_FWB.CDC_ISO_CURR_CODE cdcIsoCurrCode,
		EDI_FWB.CDC_CURR_RATE cdeCurrRate,
		EDI_FWB.CDC_CC_INDES_AMT cdeCcIndesAmt,
		EDI_FWB.CDC_CC_ATDES_AMT cdeCcAtdesAmt,
		EDI_FWB.CDC_TOTAL_CHG_AMT cdeTotalChgAmt,
		EDI_FWB.COR_CUST_ORI_CODE corCustOriCode,
		 pkg_common.get_fwb_splcodes(EDI_FWB.TR_NO)  splCodes
		FROM EDI_FWB
		where EDI_FWB.TR_NO = (select max(a.tr_no) from edi_fwb a where a.awb_no = #awbNo#)
	</select>
	<select id="viewEAWBReptA"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT
		EDI_FWB.tr_no as trNo,
		IMP_CAR_AWB.EXCH_RATE as exchRate,
		IMP_CAR_AWB.AWB_ORIGIN as orginAa,
		EDI_FWB.RTG_APT_CODE as depAportName,
		EDI_FWB.RTG_DES_CARR as carrAgent,
		(select code_desc from mast_city where code = IMP_CAR_AWB.AWB_DEST) as
		finalAirportName,
		(select code_desc from cust_company where carr_code = (select carr_code from
		mast_awb_prefix where code=SUBSTR(SUBSTR(IMP_CAR_AWB.AWB_NO,1,3),1,3)
		and rownum=1)) as compName,
		to_char(edi_fwb.isu_awb_iss_date,'DDMONYY') as execnDate,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'9999990.00'))
		as ttlWtChrgPpd,
		SUBSTR(IMP_CAR_AWB.AWB_NO,1,3) ||' '|| IMP_CAR_AWB.AWB_ORIGIN||' '||SUBSTR(IMP_CAR_AWB.AWB_NO,4) as	awbNoSfx,
		SUBSTR(IMP_CAR_AWB.AWB_NO,1,3)||'-'||SUBSTR(IMP_CAR_AWB.AWB_NO,4) AS awbNo,
		to_char(IMP_CAR_AWB.AWB_DATE,'DDMONYY') as awbDate,
		IMP_CAR_AWB.AWB_ORIGIN as ediFwbOrig,
		IMP_CAR_AWB.AWB_DEST as dest,
		EDI_FWB.SHPR_ACC_NO as shprAccNo,
		IMP_CAR_AWB.SHPR_NAME as shprName,
		IMP_CAR_AWB.SHPR_ADD1 as shprAddr1,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		IMP_CAR_AWB.CSGNE_NAME as csgnName,
		IMP_CAR_AWB.CSGNE_ADDR1 as csgnAddr1,
		IMP_CAR_AWB.CONTENT as shipDescC,
		IMP_CAR_AWB.AWB_PCS as pcs,
		EDI_FWB.WGT_UNIT as wgtUnit,
		IMP_CAR_AWB.AWB_WT as wgt,
		EDI_FWB.FLT_CARR1||EDI_FWB.FLT_NUM1 ||'/'||EDI_FWB.FLT_DATE1 as finalFltCarr1,
		EDI_FWB.FLT_NUM1 as finalFltNo1,
		EDI_FWB.FLT_KEY1 fltKey1,
		EDI_FWB.FLT_DATE1 as finalFltDt1,
		EDI_FWB.FLT_CARR2||EDI_FWB.FLT_NUM2 ||'/'||EDI_FWB.FLT_DATE2 as finalFltCarr2,
		EDI_FWB.FLT_NUM2 as finalFltNo2,
		EDI_FWB.FLT_KEY2 fltKey2,
		EDI_FWB.FLT_DATE2 as finalFltDt2,
		EDI_FWB.RTG_APT_CODE as rtgAptCode,
		EDI_FWB.RTG_DES_CARR as rtgDesCarr,	
		EDI_FWB.RTG_ONWARD_CODE1 as rtgOnwardCode1,
		EDI_FWB.RTG_ONWARD_CARR1 as rtgOnwardCarr1,
		EDI_FWB.RTG_ONWARD_CODE2 as rtgOnwardCode2,
		EDI_FWB.RTG_ONWARD_CARR2 as rtgOnwardCarr2,
		IMP_CAR_AWB.SHPR_PLACE as shprCity,
		(select code_desc from mast_country mcntr where mcntr.code =
		IMP_CAR_AWB.SHPR_CTRY_CODE) as shpCountry,
		IMP_CAR_AWB.SHPR_STATE_PROVINCE as shprState,
		IMP_CAR_AWB.SHPR_PIN_CODE as shpPostal,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelNo,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpFax,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelexNO,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelNo,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnFax,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelexNO,
	
		EDI_FWB.SHPR_CONT_NO as shpFax,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		EDI_FWB.CSGNE_NAME as csgnName,
		IMP_CAR_AWB.CSGNE_ADDR as csgnAddr1,
		IMP_CAR_AWB.CSGNE_PLACE as csgnCity,
		(select code_desc from mast_country mcntr where mcntr.code =
		IMP_CAR_AWB.CSGNE_CTRY_CODE) as csgnCountry,
		IMP_CAR_AWB.CSGNE_STATE_PROVINCE as csgnState,
		IMP_CAR_AWB.CSGNE_PIN_CODE as csgnPostal,
		EDI_FWB.CSGNE_CONT_ID as csgnContact,
		EDI_FWB.CSGNE_CONT_NO as csgnContact,
		EDI_FWB.AGENT_ACC_NO as agentAccNo,
		decode(EDI_FWB.AGENT_IATA_CODE,'0',' ',EDI_FWB.AGENT_IATA_CODE) as agentIata,
		decode(EDI_FWB.AGENT_IATA_ADDR,'0',' ',EDI_FWB.AGENT_IATA_ADDR) as
		agentIataAddr,
		EDI_FWB.AGENT_PART_ID as agentPartId,
		EDI_FWB.AGENT_NAME as agentName,
		EDI_FWB.AGENT_PLACE as agentCity,
		EDI_FWB.AGENT_SPL_SERV1 as hndlgInfo1,
		EDI_FWB.AGENT_SPL_SERV2 hndlgInfo2,
		EDI_FWB.AGENT_SPL_SERV3 hndlgInfo3,
		EDI_FWB.AGENT_SPL_SERV3 agentSplServ3,
		EDI_FWB.NOTIFY_NAME notifyName,
		EDI_FWB.NOTIFY_ADDR notifyAddr,
		EDI_FWB.NOTIFY_ADDR2 notifyAddr2,
		EDI_FWB.NOTIFY_PLACE notifyPlace,
		EDI_FWB.NOTIFY_CTRY_CODE notifyCtryCode,
		EDI_FWB.NOTIFY_STATE_PROVINCE notifyStateProvince,
		EDI_FWB.NOTIFY_PIN_CODE notifyPinCode,		
		(SELECT  NVL(STRAGG(STRINGDELIM(cont_id  ||  ' ' ||  cont_name, ' ')),'')  FROM   EDI_FWB_CONTACT WHERE tr_no= EDI_FWB.tr_no AND edi_fwb_contact.cont_type = 'NFY')  as notifyContInfo, 
		EDI_FWB.NOTIFY_CONT_ID notifyContId,
		EDI_FWB.NOTIFY_CONT_NO notifyContNo,
		EDI_FWB.CVD_ISO_CURR_CODE as currCode,
		EDI_FWB.CVD_CHG_CODE as declChrgCode,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_WT_AMT,'',decode(PPD_VALUE_VC_AMT,0,'','','','P'),0,decode(PPD_VALUE_VC_AMT,0,'','','','P'),'P'))
		pcsWtPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_WT_AMT,'',decode(COL_VALUE_VC_AMT,0,'','','','C'),0,decode(COL_VALUE_VC_AMT,0,'','','','C'),'C'))
		pcsWtColl,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_OA_AMT,'',decode(PPD_TOTAL_OC_AMT,0,'','','','P'),0,decode(PPD_TOTAL_OC_AMT,0,'','','','P'),'P'))
		pcsOtherPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_OA_AMT,'',decode(COL_TOTAL_OC_AMT,0,'','','','C'),0,decode(COL_TOTAL_OC_AMT,0,'','','','C'),'C'))
		pcsOtherColl,
		EDI_FWB.CVD_ISO_CURR_CODE AS cvdIsoCurrCode,
		EDI_FWB.CVD_CHG_CODE AS cvdChgCode,
		EDI_FWB.CVD_CHG_DECL_WGT AS cvdChgDeclWgt,
		EDI_FWB.CVD_CHG_DECL_OTH AS cvdChgDeclOth,
		decode(EDI_FWB.CVD_CHG_CARR_VAL,'0',' ',EDI_FWB.CVD_CHG_CARR_VAL) AS cvdChgCarrVal,
		EDI_FWB.CVD_CHG_CARR_IND AS cvdChgCarrInd,
		decode(EDI_FWB.CVD_CHG_CUST_VAL,'0',' ',EDI_FWB.CVD_CHG_CUST_VAL) AS cvdChgCustVal,
		EDI_FWB.CVD_CHG_CUST_IND AS cvdChgCustInd,
		decode(EDI_FWB.CVD_CHG_INSUR_VAL,'0',' ',EDI_FWB.CVD_CHG_INSUR_VAL) AS cvdChgInsurVal,
		EDI_FWB.CVD_CHG_INSUR_IND AS cvdChgInsurInd,
		(case when nvl(EDI_FWB.CVD_CHG_CARR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CARR_VAL) else 'NVD' end) as declValCarr,
		(case when nvl(EDI_FWB.CVD_CHG_CUST_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CUST_VAL) else 'NCV' end)as declValCustoms,
		(case when nvl(EDI_FWB.CVD_CHG_INSUR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_INSUR_VAL) else 'XXX' end) as insuranceAmt,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrgPrepd,
		decode(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as ppdValVcAmt,
		decode(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrgPrepd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChgPrpd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrgPrepd,
		decode(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totWtChrgPrepd,
		decode(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrg,
		decode(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as colValVcAmt,
		decode(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrg,
		decode(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totCollChrgPrepaid,
		EDI_FWB.CER_SIGNATURE as shpSign,
		to_char(EDI_FWB.ISU_AWB_ISS_DATE,'DDMONYY') as sdate,
		EDI_FWB.ISU_AWB_ISS_PLACE as place,
		EDI_FWB.ISU_SIGNATURE as carrSign,
		EDI_FWB.OSI_SERVICE_INFO1 osiServiceInfo1,
		EDI_FWB.OSI_SERVICE_INFO2 osiServiceInfo2 ,
		EDI_FWB.OSI_SERVICE_INFO3 osiServiceInfo3,
		EDI_FWB.CDC_ISO_CURR_CODE cdcIsoCurrCode,
		EDI_FWB.CDC_CURR_RATE cdeCurrRate,
		EDI_FWB.CDC_CC_INDES_AMT cdeCcIndesAmt,
		EDI_FWB.CDC_CC_ATDES_AMT cdeCcAtdesAmt,
		EDI_FWB.CDC_TOTAL_CHG_AMT cdeTotalChgAmt,
		EDI_FWB.COR_CUST_ORI_CODE corCustOriCode,
		pkg_common.get_awb_splcodes(IMP_CAR_AWB.awb_no,IMP_CAR_AWB.awb_date) splCodes
		FROM IMP_CAR_AWB
		LEFT JOIN (select * from edi_fwb a where TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))) 
			EDI_FWB ON EDI_FWB.awb_no = IMP_CAR_AWB.awb_no AND EDI_FWB.awb_date = IMP_CAR_AWB.awb_date
		where IMP_CAR_AWB.AWB_NO = #awbNo# AND IMP_CAR_AWB.AWB_DATE = #awbDate#
	</select>
	
			<select id="viewEAWBReptB"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		<![CDATA[	
		SELECT * FROM (SELECT 
		 DECODE(EDI_FWB_CHR_RATE.RATE_PCS,'','','0','',EDI_FWB_CHR_RATE.RATE_PCS) as rcpPcs,
    	 trim(to_char(EDI_FWB_CHR_RATE.RATE_GWT,'9999990.0')) as grossWt, 
		 DECODE(EDI_FWB_CHR_RATE.RATE_GWT,'','',EDI_FWB_CHR_RATE.RATE_GWT_CODE) as wgtType,
		 EDI_FWB_CHR_RATE.RATE_CL_CODE as rateClass,
		 EDI_FWB_CHR_RATE.RATE_COMM_N as itemNo,
     	 trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRGBLE_WT,'9999990.0')) as chrgWt,
		 trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRG_RATE,'9999990.00')) as chrgDiscount,
     	trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRG_A,'999999999999999999999.99')) as totchrg,
     	substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,0,20) as goodsDesc,substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,21,20) as goodsDesc1,substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,41,20) as goodsDesc2
     	FROM EDI_FWB,EDI_FWB_CHR_RATE 
		WHERE EDI_FWB_CHR_RATE.TR_NO=EDI_FWB.TR_NO
    	AND EDI_FWB.TR_NO = ( select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY') )
    	order by edi_fwb_chr_rate.doc_line_no) T
    	WHERE (T.rcpPcs IS NOT NULL OR T.grossWt IS NOT NULL OR T.itemNo IS NOT NULL OR T.chrgWt IS NOT NULL OR T.chrgDiscount IS NOT NULL
    	OR T.totchrg IS NOT NULL OR T.goodsDesc IS NOT NULL)
		]]>
	</select>
	
	<select id="viewEAWBReptE"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT LENGTH as length,widht as width,HEIGHT as height,PCS as pieces,rtd_awb_vol_amt as volume,rtd_awb_vol_CODE as volCode FROM edi_fwb_dmn WHERE TR_NO=#trNo#
	</select>

	<select id="viewEAWBReptExtendE"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT LENGTH as length,widht as width,HEIGHT as height,rtd_awb_dim_unit as dimUnit,PCS as pieces,
		rtd_awb_vol_amt as volume,rtd_awb_vol_CODE as volCode,rtd_slac as slacInfo, RTD_HARM_COMM_C harmComm FROM edi_fwb_dmn WHERE TR_NO=#trNo#
	</select>
	<select id="viewEAWBMSID170CAWBPrint"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT 
			DECODE(b.OTH_CHRG_C1||b.OTH_ENTLEMT_C1,null,'',b.OTH_CHRG_C1||' '||b.OTH_ENTLEMT_C1||' :'||trim(to_char(nvl(b.OTH_CHRG1,0),'9999999999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C2||b.OTH_ENTLEMT_C2,null,'',b.OTH_CHRG_C2||' '||b.OTH_ENTLEMT_C2||' :'||trim(to_char(nvl(b.OTH_CHRG2,0),'9999999999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C3||b.OTH_ENTLEMT_C3,null,'',b.OTH_CHRG_C3||' '||b.OTH_ENTLEMT_C3||' :'||trim(to_char(nvl(b.OTH_CHRG3,0),'9999999999990.00'))) as othPcI1
		FROM  EDI_FWB c,EDI_FWB_OTH_CHARGES b
		WHERE c.TR_NO=b.TR_NO
		AND c.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>

	<select id="viewEAWBMSID170C"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT 
			DECODE(b.OTH_CHRG_C1||b.OTH_ENTLEMT_C1,null,'',b.OTH_PC_I1 ||' '|| b.OTH_CHRG_C1||' '||b.OTH_ENTLEMT_C1||' :'||trim(to_char(nvl(b.OTH_CHRG1,0),'9999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C2||b.OTH_ENTLEMT_C2,null,'',b.OTH_PC_I2 ||' '|| b.OTH_CHRG_C2||' '||b.OTH_ENTLEMT_C2||' :'||trim(to_char(nvl(b.OTH_CHRG2,0),'9999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C3||b.OTH_ENTLEMT_C3,null,'',b.OTH_PC_I3 ||' '|| b.OTH_CHRG_C3||' '||b.OTH_ENTLEMT_C3||' :'||trim(to_char(nvl(b.OTH_CHRG3,0),'9999990.00'))) as othPcI1
		FROM  EDI_FWB c,EDI_FWB_OTH_CHARGES b
		WHERE c.TR_NO=b.TR_NO
		AND c.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="viewEAWBMSID170D"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">	
		SELECT 
		 EDI_FWB_ACCT_INFO.ACC_INFO_IND accInfoInd,
		 EDI_FWB_ACCT_INFO.ACC_INFO as accInformation
		 FROM  EDI_FWB,EDI_FWB_ACCT_INFO 
		 WHERE 
		 EDI_FWB_ACCT_INFO.TR_NO = EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
		
	<select id="viewEAWBMSID170F"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	     select
			 sum(R.RATE_PCS)as totPcs,
			 to_char(nvl(sum(R.RATE_GWT),0),'99999990.0') as totWgt,
			 to_char(nvl(sum(R.RATE_CHRG_A),0),'999999999990.00') as totChrgs
		  FROM EDI_FWB,EDI_FWB_CHR_RATE R 
		 WHERE R.TR_NO=EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="getTnAgentList" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		<![CDATA[
			select sum(countShp) as noOfShipment,agentName,agentCode from ( 		
		SELECT  count(a.awb_no) as countShp,b.appntd_agent agentName,C.code agentCode 
				FROM IMP_CAR_SHP A
        join IMP_CAR_AWB B on A.AWB_NO          = B.AWB_NO AND A.AWB_DATE          = B.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT join cust_company C on UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'
				WHERE 
				NVL(a.recd_pcs,0)  > 0
				AND NVL(a.recd_wt,0)   > 0
        		AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#fltDateFrom#,'DDMONYY') and TO_DATE(#fltDateTo#,'DDMONYY')
        		AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE=A.AWB_DATE AND INV.FLT_KEY=A.FLT_KEY AND INV.FLT_DATE=A.FLT_DATE AND A.FLT_TYPE='I' AND INV.LOCN_PCS > 0)
             	AND NOT EXISTS (SELECT NULL FROM IMP_SRF T1,IMP_SRF_FLT T2 WHERE  T2.SRF_NO = T1.SRF_NO AND T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE=A.AWB_DATE AND T2.FLT_KEY=A.FLT_KEY AND T2.FLT_DATE = A.FLT_DATE 
            	AND ((T1.STATUS  ='ISSUED' AND sysdate  < T1.srf_expy_date)
                  OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = T1.SRF_NO AND T1.STATUS = 'ISSUED' AND dlv_pcs  > 0) 
                  OR T1.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))
				]]>
				<isNotEmpty property="priority">
				AND NVL(c.priority,'NORMAL')= #priority#
				</isNotEmpty>
				<isNotEmpty property="dayBefore">
				<![CDATA[
				 AND (FLT.ACT_DATE is not null OR FLT.SCH_DATE IS NOT NULL) and (TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')) <= #dayBefore#)
				]]>
				</isNotEmpty>
				<isNotEmpty property="carrier">
					 AND UPPER(A.carr_code) = UPPER(#carrier#)
				</isNotEmpty>
				<isNotEmpty property="agentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#agentName#)
				</isNotEmpty>
				<isNotEmpty property="agentCode">
					 AND C.code = #agentCode#
				</isNotEmpty>
				<isNotEmpty property="status">
				AND #status# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				
				<isEqual property="isanytick" compareValue="Y" prepend="AND" >
				 	( 1=2
				</isEqual>
				<isEqual property="isDg" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isSpecialCargo" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				)
				</isEqual>
				<isEqual property="isVal" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isOthers" compareValue="Y">
				 OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isanytick" compareValue="Y" >
				)
				</isEqual>
				group by a.awb_no,a.awb_date,b.appntd_agent,C.code) group by agentName,agentCode
		</select>
		
		<select id="getTnEmailFaxDetails" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		select CUST_NO AS customerNo,EMAIL1 AS email1,EMAIL2 AS email2,EMAIL3 AS email3,EMAIL4 AS email4,EMAIL5 AS email5,FAX1 AS fax1,FAX2 AS fax2,FAX3 AS fax3,FAX4 AS fax4,FAX5 AS fax5 from cust_contact WHERE CUST_NO IN (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #PARAM#) AND CONTACT_TYPE = 'ECA' AND ROWNUM=1
		</select>
		
		<select id="getTnShpListForInv" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		<![CDATA[
				SELECT * FROM (
				 SELECT  NVL((SELECT A.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) A WHERE ROWNUM=1),'1 New') AS status,
				  a.flt_key AS printfltKey,
				  TO_CHAR(a.flt_date,'DDMONYY') AS printfltDate,
				  a.awb_no awbNo,
				  to_char(a.awb_date, 'DDMONYY') awbDate,
				  SUBSTR(a.awb_no,0,3)||'-'||SUBSTR(a.awb_no,4) awbNoDisplay,
				  a.recd_pcs||'/'||a.recd_wt pcsWts,
				  a.manifest_pcs||'/'||a.manifest_wt manPcsWts,
				  NVL(
				  (SELECT cc_code
				  FROM V_CST_IMP_CC_CODE_ALL WHERE flt_key=a.flt_key
				  AND flt_date =a.flt_date AND awb_no=a.awb_no AND awb_date=a.awb_date
				  AND rownum=1
				  ),'N/A') ccCode,
				  nvl(b.csgne_name,(select csgne_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) consignee,
				  nvl(b.appntd_agent,(select agent_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) appointedAgent,
				  b.appntd_agent agentName,
				  C.code agentCode,
				  NVL(decode((SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO),0,'N','Y'),'N') licenseUnder,
				  (SELECT COUNT(hawb_no) FROM edi_fhl_hawb WHERE tr_no IN (SELECT tr_no FROM edi_fhl WHERE awb_no=a.awb_no AND awb_date=a.awb_date)) fhlInd,
				  TO_CHAR(a.flt_date,'DD/MM/YYYY')||' '|| NVL(PKG_COMMON.get_flt_ata(a.flt_key, a.flt_date, 'A', 'DD'),pkg_common.get_flt_sta(a.flt_key, a.flt_date,'A')) fltDateTime,
				  (DECODE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'','',NULL,'',TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')))) dayBefore,
				   NVL(B.CHRG_MODE,NVL((SELECT (CASE WHEN col_total_wt_amt IS NOT NULL AND col_total_wt_amt > 0 THEN 'C' ELSE CASE WHEN ppd_total_wt_amt IS NOT NULL AND ppd_total_wt_amt > 0 THEN 'P' ELSE 'N/A' END END) FROM EDI_FWB WHERE AWB_NO =A.AWB_NO AND AWB_DATE=A.AWB_DATE AND ROWNUM=1),'N/A')) chargMode,
				  '0' totalCharg,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWB,
				  decode((select count(1) from cust_contact_dtl where cust_no=c.code and contact_type='ECA'),0,'N/A','Y') telWOS,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWB,
				  decode((select count(1) from cust_contact where cust_no=c.code and contact_type='ECA' AND (fax1 is not null or fax2 is not null or fax3 is not null or fax4 is not null or fax5 is not null)),0,'N/A','Y') faxWOS,
				  NVL(A.CAR_CREATED,'N') as carInd,
				  decode((select count(1) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date),0,'N','Y') fwbInd,
				  A.carr_code awbCarrier
				FROM IMP_CAR_SHP A
        join IMP_CAR_AWB B on A.AWB_NO          = B.AWB_NO AND A.AWB_DATE          = B.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT join cust_company C on UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'
				WHERE 
				NVL(a.recd_pcs,0)  > 0
				AND NVL(a.recd_wt,0)   > 0
        		AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#fltDateFrom#,'DDMONYY') and TO_DATE(#fltDateTo#,'DDMONYY')
        		AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE=A.AWB_DATE AND INV.FLT_KEY=A.FLT_KEY AND INV.FLT_DATE=A.FLT_DATE AND A.FLT_TYPE='I' AND INV.LOCN_PCS > 0)
           		AND NOT EXISTS (SELECT NULL FROM IMP_SRF T1,IMP_SRF_FLT T2 WHERE  T2.SRF_NO = T1.SRF_NO AND T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE=A.AWB_DATE AND T2.FLT_KEY=A.FLT_KEY AND T2.FLT_DATE = A.FLT_DATE 
            	AND ((T1.STATUS  ='ISSUED' AND sysdate  < T1.srf_expy_date)
                  OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = T1.SRF_NO AND T1.STATUS = 'ISSUED' AND dlv_pcs  > 0) 
                  OR T1.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))
				]]>
				<isNotEmpty property="priority">
				AND NVL(c.priority,'NORMAL')= #priority#
				</isNotEmpty>
				<isNotEmpty property="dayBefore">
				<![CDATA[
				 AND (FLT.ACT_DATE is not null OR FLT.SCH_DATE IS NOT NULL) and (TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')) <= #dayBefore#)
				]]>
				</isNotEmpty>
				<isNotEmpty property="carrier">
					 AND UPPER(A.carr_code) = UPPER(#carrier#)
				</isNotEmpty>
				<isNotEmpty property="agentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#agentName#)
				</isNotEmpty>
				<isNotEmpty property="agentCode">
					 AND C.code = #agentCode#
				</isNotEmpty>
				<isNotEmpty property="status">
				AND #status# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				
				<isEqual property="isanytick" compareValue="Y" prepend="AND" >
				 	(  1=2
				</isEqual>
				<isEqual property="isDg" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isSpecialCargo" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				)
				</isEqual>
				<isEqual property="isVal" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isOthers" compareValue="Y">
				 OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isanytick" compareValue="Y" >
				)
				</isEqual>
				)order by appointedAgent, status, awbNo
		</select>
		
			<select id="getTnShpListForFfm" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
				 SELECT * FROM (
				  SELECT  NVL((SELECT A.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) A WHERE ROWNUM=1),'1 New') AS status,
				  a.awb_no awbNo,
				  to_char(a.awb_date, 'DDMONYY') awbDate,
				  SUBSTR(a.awb_no,0,3)||'-'||SUBSTR(a.awb_no,4) awbNoDisplay,
				   a.flt_key AS printfltKey,
				  TO_CHAR(a.flt_date,'DDMONYY') AS printfltDate,
				  a.recd_pcs||'/'||a.recd_wt pcsWts,
				  a.manifest_pcs||'/'||a.manifest_wt manPcsWts,
				  NVL(
				  (SELECT cc_code
				  FROM V_CST_IMP_CC_CODE_ALL WHERE flt_key=a.flt_key
				  AND flt_date =a.flt_date AND awb_no=a.awb_no AND awb_date=a.awb_date
				  AND rownum=1
				  ),'N/A') ccCode,
				  nvl(b.csgne_name,(select csgne_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) consignee,
				  nvl(b.appntd_agent,(select agent_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) appointedAgent,
				  b.appntd_agent agentName,
				  C.code agentCode,
				  NVL(decode((SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO),0,'N','Y'),'N') licenseUnder,
				  (SELECT COUNT(hawb_no) FROM edi_fhl_hawb WHERE tr_no IN (SELECT tr_no FROM edi_fhl WHERE awb_no=a.awb_no AND awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) fhlInd,
				  TO_CHAR(a.flt_date,'DD/MM/YYYY')||' '|| NVL(PKG_COMMON.get_flt_ata(a.flt_key, a.flt_date, 'A', 'DD'),pkg_common.get_flt_sta(a.flt_key, a.flt_date,'A')) fltDateTime,
				  'N/A' dayBefore,
				   NVL(B.CHRG_MODE,NVL((SELECT (CASE WHEN col_total_wt_amt IS NOT NULL AND col_total_wt_amt > 0 THEN 'C' ELSE CASE WHEN ppd_total_wt_amt IS NOT NULL AND ppd_total_wt_amt > 0 THEN 'P' ELSE 'N/A' END END) FROM EDI_FWB WHERE AWB_NO =A.AWB_NO AND AWB_DATE=A.AWB_DATE AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE)),'N/A')) chargMode,
				  '0' totalCharg,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWB,
				  decode((select count(1) from cust_contact_dtl where cust_no=c.code and contact_type='ECA'),0,'N/A','Y') telWOS,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWB,
				  decode((select count(1) from cust_contact where cust_no=c.code and contact_type='ECA' AND (fax1 is not null or fax2 is not null or fax3 is not null or fax4 is not null or fax5 is not null)),0,'N/A','Y') faxWOS,
				  NVL(A.CAR_CREATED,'N') as carInd,
				  decode((select count(1) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date),0,'N','Y') fwbInd,
				  A.carr_code awbCarrier
				FROM IMP_CAR_SHP A
        JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT JOIN cust_company C ON UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'        
				WHERE NVL(a.recd_pcs,0)   = 0
				AND NVL(a.recd_wt,0)    = 0
			    and exists (SELECT NULL FROM edi_ffm_msg msg,edi_ffm_shp shp where  msg.ffm_status = 'P'  and msg.flt_key=a.flt_key and msg.flt_date=a.flt_date
                and shp.tr_no= msg.tr_no  AND shp.awb_no=a.awb_no and shp.awb_date = a.awb_date)
		        AND NVL(a.cir_wt_type,'SP') &lt;&gt; 'SL'
				AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#ffmFltDateFrom#,'DDMONYY') and TO_DATE(#ffmFltDateTo#,'DDMONYY')
		        AND ((B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
   		        )
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				))
				<isNotEmpty property="ffmCarrier">
					 AND UPPER(A.carr_code) = UPPER(#ffmCarrier#)
				</isNotEmpty>
				<isNotEmpty property="ffmAgentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#ffmAgentName#)
				</isNotEmpty>
				<isNotEmpty property="ffmAgentCode">
					 AND C.code = #ffmAgentCode#
				</isNotEmpty>
				<isNotEmpty property="ffmStatus">
				AND #ffmStatus# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				) order by appointedAgent, status, awbNo
		</select>
		
		<select id="getTnShpListStyle" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
				select code as status,code_desc_spl as statusColour from mast_code_dtl where group_code=38 and code_type='STATUS' and code_desc_spl is not null
		</select>
		
	<select id="getEAWBRemarks" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				Select remark as RMK From INTL_CHK_RESULT where Function_Code = 'EAWB' and Awb_No = #awbNumber#
		</select>
	
		<select id="flightCloseCount"  parameterClass="map"  resultClass="java.lang.String">
			SELECT  COUNT(1)
			FROM   FLT_OPR_EVENTS 
			WHERE  FLT_KEY	= #FLTKEY# 
				   AND SCH_DATE	= TO_DATE(#FLTDATE#,'DDMONYY') 
				   AND FLT_TYPE = 'A'
				   AND FLT_CLS_DATE IS NOT NULL
		 </select>
		 
		 <select id="isCustExist"  parameterClass="cargo.cms.imprt.bo.TnNotificationBO"  resultClass="java.lang.String">
			SELECT decode(count(1),0,'N','Y') FROM CUST_COMPANY WHERE CODE_DESC = #agentName#
		 </select>


	<!-- Transform AWB Start-->
	<select  id="get_awb_tag_list" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT DISTINCT
			TO_CHAR(mail.AWB_DATE,'DDMONYY') oldAwbDate,
			mail.CATALOG catalog,
		 	mail.TAG_NO tagNo, 
		 	mail.ACT_PCS actPcs, 
			mail.ACT_WT actWt,
			mail.EST_PCS estPcs,
			mail.EST_WT estWt,			
		 	mail.FLT_TYPE fltType,
		 	mail.FLT_KEY fltKey,	
		 	TO_CHAR(mail.FLT_DATE,'DDMONYY') fltDate,
			mail.ORIG orig, 
			mail.DEST dest, 
			inventory.loc_code locn, 
			inventory.LSP_NO lspNo,
			inventory.ULD_KEY uldKey, 
			mail.BD_ULD_KEY bduldno,			
			mail.DAM_IND damInd, 
			mail.RMK rmk, 		
			mail.LM_USER_ID lmUserId,
			mail.LM_DATE lmDate,
			mail.seq_no mailSeq,
			inventory.LOC_CODE invLocn, 
			inventory.ULD_KEY invUldKey,
			inventory.LSP_NO invLspNo,
			inventory.SEQ_NO invSeq 
		 FROM 
			IMP_XPS_OBC_MAIL mail
			LEFT OUTER JOIN IMP_HAWB_STRG_DTL st ON st.AWB_NO = mail.AWB_NO AND st.AWB_DATE = mail.AWB_DATE AND st.HAWB_NO = mail.TAG_NO AND st.HAWB_BRKDN_PCS > 0
			INNER JOIN AWB_INVENTORY inventory ON inventory.AWB_NO = mail.AWB_NO AND inventory.AWB_DATE = mail.AWB_DATE
			INNER JOIN HAWB_INVENTORY hinventory ON inventory.SEQ_NO = hinventory.SEQ_NO AND hinventory.HAWB_NO = mail.TAG_NO
		WHERE
			mail.AWB_NO = #oldAwbNo# AND mail.AWB_DATE=to_date(PKG_COMMON.GET_AWB_DATE(mail.AWB_NO,''),'DDMONYY')
		ORDER BY
			tagNo asc
	</select>
	
	<select  id="check_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) awbNo FROM AWB WHERE AWB_NO = #awbNo# AND AWB_CLOSED_YN = 'N'
	</select>
	
	<select  id="check_old_awb_pman" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) oldAwbNo FROM
		(
			SELECT epa.AWB_NO FROM EXP_PMANIFEST_AWB epa WHERE epa.AWB_NO=#oldAwbNo# AND epa.AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
			UNION
			SELECT ept.AWB_NO FROM EXP_PMAN_TARMAC_AWB ept WHERE ept.AWB_NO=#oldAwbNo# AND ept.AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
		)
	</select>
	
	<select  id="check_old_awb_offload" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) oldAwbNo FROM EXP_OFFLOAD_ULD_AWB WHERE CONFIRMED_YN = 'Y' AND AWB_NO=#oldAwbNo# AND AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
	</select>
	
	<select  id="check_old_awb_partialct" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(itd.AWB_NO) oldAwbNo FROM IMP_TRM_DTL itd
		INNER JOIN IMP_TRM_HD ith ON ith.TRM_NO = itd.TRM_NO
		WHERE itd.AWB_NO = #oldAwbNo# AND itd.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND ith.VOID_DATE IS NULL
	</select>
	
	<select  id="check_resdit_tag_old_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ertd.TAG_NO) tagNo FROM EDI_RESDIT_TAG_DTL ertd
        INNER JOIN EDI_RESDIT_AWB_DTL erad ON ertd.TR_AWB_NO = erad.TR_AWB_NO
        WHERE ertd.TAG_NO = #tagNo# AND erad.AWB_NO = #oldAwbNo# AND erad.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')
	</select>
	
	<select  id="check_cardit_new_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ech.AWB_NO) awbNo FROM EDI_CARDIT_HD ech WHERE ech.AWB_NO = #awbNo# AND ech.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select  id="check_tag_in_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ectd.TAG_NO) tagNo FROM EDI_CARDIT_TAG_DTL ectd
        INNER JOIN EDI_CARDIT_HD ech ON ech.TR_NO = ectd.TR_NO AND
        (ech.AWB_NO = #oldAwbNo# AND ech.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')) 
        OR (ech.AWB_NO = #awbNo# AND ech.AWB_DATE = to_date(#awbDate#,'DDMONYY')) 
		WHERE ectd.TAG_NO=#tagNo#
	</select>
	
	<select  id="get_new_awb_tag_orig_dest" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		 SELECT ORIG||'-'||DEST||'-'||TO_CHAR(AWB_DATE,'DDMONYY') awbOrigin from AWB WHERE AWB_NO=#awbNo# AND AWB_CLOSED_YN='N'
	</select>
	
	<update id="update_tag_to_new_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE
        EDI_CARDIT_TAG_DTL
        SET 
        TR_NO=(SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #awbNo# AND edi.AWB_DATE = to_date(#awbDate#,'DDMONYY')), LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE
        WHERE TR_NO=(SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #oldAwbNo# AND edi.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')) AND TAG_NO = #tagNo#
	</update>
	
	<insert id="insert_tag_to_new_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		Insert INTO EDI_CARDIT_TAG_DTL (TR_NO,DOC_LINE_NO,TAG_NO,TAG_WT,CR_USER_ID,
		CR_DATE,LM_USER_ID,LM_DATE) VALUES ((SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')),EDI_CARDIT_DOC_HD_SEQ.NEXTVAL,
		#tagNo#, #actWt#,
		#lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
	</insert>
	
	<update id="close_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB 
		SET AWB_CLOSED_YN = 'Y',LM_DATE  = SYSDATE,LM_USER_ID = #lmUserId#
        WHERE AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND PCS = 0 AND WT = 0
	</update>
	
	<update id="close_pawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB 
		SET AWB_CLOSED_YN = 'Y',LM_DATE  = SYSDATE,LM_USER_ID = #lmUserId#
        WHERE AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') 
        AND not Exists (select null from IMP_XPS_OBC_MAIL where AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') )
	</update>
	
	<delete id="delete_old_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM (SELECT * FROM EDI_CARDIT_TAG_DTL ect
  		INNER JOIN EDI_CARDIT_HD ech ON ech.TR_NO = ect.TR_NO
 		WHERE ech.AWB_NO = #oldAwbNo# AND ech.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND ect.TAG_NO = #tagNo#)
	</delete>
	
	<select id = "getAWBDetailsforAcceptTransferCargo" parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.TransformAWBBO">
	select distinct * from(
SELECT HD.AWB_NO oldAwbNo,
  TO_CHAR(HD.AWB_DATE,'DDMONYY') oldAwbDate,
  HD.DUM_FLT_KEY fltKey,
  TO_CHAR(HD.DUM_FLT_DATE,'DDMONYY') fltDate,
  INV.SEQ_NO invSeq,
  hawb.HAWB_NO tagNo,
  inv.locn_pcs actPcs,
  TRIM(TO_CHAR(NVL(INV.locn_wt,0), '9999999.9')) actWt,
  INV.uld_key invUldKey,
  INV.lsp_no invLspNo
FROM TRF_ACCEPT_HD HD
JOIN TRF_ACCEPT_HAWB HAWB
ON HAWB.TRF_NO = HD.TRF_NO
JOIN AWB_INVENTORY INV
ON INV.AWB_NO    = HD.AWB_NO
AND INV.AWB_DATE = HD.AWB_DATE
LEFT JOIN HAWB_INVENTORY HAWBINV
ON HAWBINV.SEQ_NO = INV.SEQ_NO
WHERE HD.TRF_NO   = #PARAM# and HAWBINV.HAWB_NO is null
union all
SELECT HD.AWB_NO oldAwbNo,TO_CHAR(HD.AWB_DATE,'DDMONYY') oldAwbDate,HD.DUM_FLT_KEY fltKey,TO_CHAR(HD.DUM_FLT_DATE,'DDMONYY') fltDate,
INV.SEQ_NO invSeq,HAWBINV.HAWB_NO tagNo,hawbinv.strg_pcs actPcs,TRIM(TO_CHAR(NVL(hawbinv.strg_wt,0), '9999999.9')) actWt,
INV.uld_key invUldKey,INV.lsp_no invLspNo FROM TRF_ACCEPT_HD HD,TRF_ACCEPT_HAWB HAWB,AWB_INVENTORY INV,HAWB_INVENTORY HAWBINV 
	WHERE HAWB.TRF_NO = HD.TRF_NO
	AND INV.AWB_NO = HD.AWB_NO
	AND INV.AWB_DATE = HD.AWB_DATE
	AND HAWBINV.SEQ_NO = INV.SEQ_NO
	AND HAWBINV.HAWB_NO = HAWB.HAWB_NO
	AND HD.TRF_NO=#PARAM# and HAWBINV.HAWB_NO is not null)
	</select>
	
	<update id="update_hawb_inventory_accepttranscargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE HAWB_INVENTORY HAWB SET HAWB.STRG_PCS=HAWB.STRG_PCS - #actPcs#,HAWB.STRG_WT=HAWB.STRG_WT-#actWt# where SEQ_NO=#invSeq# and HAWB_NO=#tagNo# 
	</update>
	<delete id="delete_hawb_inventory_accepttranscargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM 
		(
		  SELECT * FROM HAWB_INVENTORY hi
		  INNER JOIN AWB_INVENTORY ai ON ai.SEQ_NO = hi.SEQ_NO
		  WHERE hi.SEQ_NO = #invSeq# AND hi.HAWB_NO = #tagNo# and hi.STRG_PCS <=0
		)
		]]>
	</delete>
	<update id="updateHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#,
		HAWB_PCS = HAWB_PCS - #actPcs#,HAWB_WT = HAWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo# and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I'
	</update>
	<update id="updatePawbHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo# and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I'
	</update>
	<delete id="deleteteHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_HAWB_STRG_DTL where awb_no=#oldAwbNo# and awb_date=to_date(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I' and hawb_no=#tagNo# and (hawb_pcs is null or hawb_pcs <=0)
		]]>
	</delete>
	<update id="update_accept_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#,
		MANIFEST_PCS = (MANIFEST_PCS - #actPcs#),
		MANIFEST_WT = (MANIFEST_WT - #actWt#),
		BULK_PCS   = (BULK_PCS - NVL(#actPcs#,0)),
		BULK_WT    = (BULK_WT  - NVL(#actWt#,0))
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	<update id="update_pawb_accept_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="update_accept_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE edi_fhl_hawb SET hawb_pcs=hawb_pcs-#actPcs#,hawb_net_wt=hawb_net_wt-#actWt# WHERE tr_no in (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY')) and hawb_no=#tagNo#
	</update>
	<delete id="delete_accept_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM edi_fhl_hawb WHERE tr_no in (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY')) and hawb_no=#tagNo# AND (hawb_pcs IS NULL OR hawb_pcs <=0)
		]]>
	</delete>
	<delete id="delete_accept_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM EDI_FHL WHERE TR_NO IN (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND NOT EXISTS (SELECT NULL FROM EDI_FHL_HAWB HAWB WHERE HAWB.TR_NO=FHL.TR_NO))
		]]>
	</delete>
	<update id="update_accept_mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE MAST_HAWB HAWB SET HAWB.HAWB_PCS=HAWB.HAWB_PCS-#actPcs#,HAWB.HAWB_WT=HAWB.HAWB_WT-#actWt# WHERE AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO=#tagNo#
	</update>
	<delete id="delete_accept_mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM MAST_HAWB WHERE AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO=#tagNo# AND (HAWB_PCS IS NULL OR HAWB_PCS <=0)
		]]>
	</delete>
	<delete id="deleteImpXpsOBCMail" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM IMP_XPS_OBC_MAIL WHERE TAG_NO=#tagNo# and AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY')
		]]>
	</delete>
	<update id="update_accept_impstrgdtl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	update IMP_AWB_STRG_DTL set strg_pcs=strg_pcs-#actPcs#,strg_wt=strg_wt-#actWt# where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I' and (uld_key=#uldKey# or lsp_no=#lspNo# or (uld_key is null and lsp_no is null and loc_code=#locn#))
	</update>
	<delete id="delete_accept_impstrgdtl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_AWB_STRG_DTL where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I' and (uld_key=#uldKey# or lsp_no=#lspNo# or (uld_key is null and lsp_no is null and loc_code=#locn#) and (strg_pcs is null or strg_pcs <=0)
		]]>
	</delete>
	
	<select id="getTransferrecordCount" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO =#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND STATUS != 'V'
		]]>
	</select>
		
	<select id="checkvoidacceptcargoForTM" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO =#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND CATALOG = 'TM'
	</select>	
	
	<select id="checkpremanrecordforvoidacceptcargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		select COUNT(1) from (
    	select count(1) cnt from exp_pmanifest_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY')
    	union all
    	select count(1) cnt from exp_pman_tarmac_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY')) pman where pman.cnt>0
		]]>
	</select>
	<select id="checkoffloadrecordforvoidacceptcargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) cnt from exp_offload_uld_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') AND confirmed_yn='Y'
		]]>
	</select>
	<select id="getvoidacceptuldCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM AWB_INVENTORY WHERE locn_pcs > 0 AND (ULD_KEY=#PARAM# OR LSP_NO=#PARAM#)
		]]>
	</select>
	<update id="updatevoiduldemptyflag" parameterClass="java.lang.String">
	UPDATE ULD_INVENTORY SET EMPTY_FLG = 'Y' WHERE ULD_KEY=#PARAM#
	</update>
	<update id="updatevoidCSDemptyflag" parameterClass="java.lang.String">
	UPDATE LSP_INVENTORY SET EMPTY_FLG = 'Y' WHERE lsp_no=#PARAM#
	</update>
	
		<delete id="delete_accept_impcarshp" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_CAR_SHP where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I'
		]]>
	</delete>
	<delete id="delete_accept_AWBOWNER" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from AWB_OWNER	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_IMPCARAWB" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM IMP_CAR_AWB	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_EXPCAR" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from EXP_CAR	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from AWB	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_IMPCARCHRGITM" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from IMP_CAR_CHRG_ITM WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	
	<delete id="delete_hawb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM 
		(
		  SELECT * FROM HAWB_INVENTORY hi
		  INNER JOIN AWB_INVENTORY ai ON ai.SEQ_NO = hi.SEQ_NO
		  WHERE hi.SEQ_NO = #invSeq# AND hi.HAWB_NO = #tagNo# 
		)
	</delete>
	
	<update id="update_awb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB_INVENTORY ai
		SET ai.LOCN_PCS = ai.LOCN_PCS - #actPcs#,ai.LOCN_WT = ai.LOCN_WT - #actWt#
		WHERE ai.SEQ_NO = #invSeq# 
	</update>
	
	<delete id="delete_awb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM AWB_INVENTORY
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND LOCN_PCS = 0 AND LOCN_WT = 0
	</delete>
	
	<update id="update_hawb_strg" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</update>
	
	
	<update id="updateHawbStrgDummy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#,
		HAWB_PCS = HAWB_PCS - #actPcs#,HAWB_WT = HAWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</update>
	
       <update id="update_car_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_AWB
		SET AWB_PCS = AWB_PCS - #actPcs#, AWB_WT = AWB_WT - #actWt# , BULK_PCS = BULK_PCS - #actPcs# , BULK_WT  = BULK_WT  - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	
	
	<update id="update_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#	
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="updateCarShpDummyWOMNF" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET MANIFEST_PCS = (MANIFEST_PCS - #actPcs#),MANIFEST_WT = (MANIFEST_WT - #actWt#)	
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	AND EXISTS (select null from AWB where AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND 
		'N' = (SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') )
	</update>
	
        <update id="update_car_shp" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="update_exp_car" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE EXP_CAR
		SET PCS = PCS - #actPcs#,WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_awb_owner" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB_OWNER
		SET PCS = PCS - #actPcs#,WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB
		SET PCS = PCS - #actPcs#, WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE EDI_FHL 
      	SET AWB_PCS = AWB_PCS - #actPcs#, AWB_WT = AWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<delete id="delete_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM EDI_FHL
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND AWB_PCS = 0 AND AWB_WT = 0
	</delete>
	
	<delete id="delete_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM EDI_FHL_HAWB
		WHERE TR_NO = (SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY'))
	</delete>
	
	<delete id="mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	  DELETE FROM MAST_HAWB
	  WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</delete>
	
<select id = "getAwbCarrierCode" parameterClass="cargo.cms.imprt.bo.TransformAWBBO"  resultClass="java.lang.String">
		SELECT CARR_CODE FROM AWB WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</select>
	
	 <select id="check_flt_opr_closed" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT FLT_KEY||'/'||TO_CHAR(SCH_DATE,'DDMONYY') fltKey FROM FLT_OPR_EVENTS WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate#
		AND (SELECT NVL(MAIL_AS_CARGO,'X') FROM MAST_CARRIER where code = FLT_OPR_EVENTS.carr_code) = 'Y'
		AND flt_type = 'A' and flt_key not like 'XA%' and flt_cls_yn = 'Y' AND ROWNUM = 1

	</select>
	
	<select id="check_old_awb_cir_created" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM imp_car_shp where AWB_NO = #oldAwbNo# and awb_date = #oldAwbDate# and CIR_PROC_USER is not null
		
	</select>
	
	<select id="check_new_awb_cir_created" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM imp_car_shp where AWB_NO = #awbNo# and awb_date = #awbDate# and CIR_PROC_USER is not null
		
	</select>
	
	 <!-- Transform AWB End-->
		 
	<select id="chkFHLCreatedForAWBDummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
			select TR_NO as tr_number FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
			
	<delete id="deleteFHLHAWBCreatedForDummy" parameterClass="java.lang.String">
			delete edi_fhl_hawb WHERE  TR_NO	  =   #fhlTrNumber# 
	</delete>
	
	<delete id="deleteFHLCreatedForDummy" parameterClass="java.lang.String">
			delete edi_fhl WHERE  TR_NO	  =   #fhlTrNumber# 
	</delete>
	
	<delete id="deleteFHLMASTCreatedForDummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			delete MAST_HAWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</delete>
	
	<delete id="deleteHAWB_StorageDtl" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			delete IMP_HAWB_STRG_DTL WHERE  AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</delete>
	
	<update id="updateHAWB_StorageDtl" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	  UPDATE IMP_HAWB_STRG_DTL SET
		    HAWB_BRKDN_PCS = '0', 
			HAWB_BRKDN_WT = '0',
		    LM_USER_ID	= #lmUserId#  ,
			LM_DATE		= SYSDATE
			WHERE	AWB_DATE = #awbDate#  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey#  AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	
	<update id="upd_transitmailtag_MTMT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bduldno# AND DEST = #dest#
	</update>
	
	<update id="upd_transitmailtag_ACCEPT_TRANSFER" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY IS NULL AND DEST = #dest#
	</update>
	
	<insert id="ins_impcarawb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,HOUSE_FLG,LOCK_IND) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #dest#,#orig#, 
		nvl(#awbPcs#,0),nvl(#awbWt#,0),nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#rmk#,#ccFee#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,'A','Y',
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,#trtype#,#houseFlg#,#locked#) 
 	</insert> 
 
 
 <insert id="ins_impcarawb_transitmailcarAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,HOUSE_FLG,LOCK_IND) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #dest#,#orig#, 
		(select nvl(pcs,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(wt,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(pcs,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(wt,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#rmk#,#ccFee#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,'A','Y',
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,#trtype#,#houseFlg#,#locked#) 
 	</insert> 
 	
 	<update id="upd_impcarawb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_AWB SET
			AWB_PCS   = (AWB_PCS + nvl(#awbPcs#,0)),
		    AWB_WT    = (AWB_WT  + nvl(#awbWt#,0)),
		    BULK_PCS = (BULK_PCS + nvl(#awbPcs#,0)),
		    BULK_WT = (BULK_WT + nvl(#awbWt#,0)),
		    HOUSE_FLG = #houseFlg#,	
		    LOCK_IND = #locked#,	   
		    LM_USER_ID = #crUserId#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
	        CONSOLE_IND = 'Y',
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
 
 
 <update id="upd_impcarawb_transitmailcarPAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_AWB SET			
		    HOUSE_FLG = #houseFlg#,	
		    CONSOLE_IND = 'Y',
		    LOCK_IND = #locked#,	   
		    LM_USER_ID = #crUserId#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
	
 	<insert id="ins_awb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,FINALLOCK_IND,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,HOUSE_FLG,EXP_AWB_LOCK) 
		VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
			nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#rmk#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#ppkType#,#carrCode#,#carCreated#,#orig#,#dest#,#appointedAgentCode#,#consigneeCode#,
			#appointedAgent#,#shprName#,#finaliseLockInd#,nvl(#awbPcs#,0),nvl(#awbWt#,0),
			DECODE(#awbType#,'T',NVL(#awbPcs#,0),0),DECODE(#awbType#,'T',NVL(#awbWt#,0),0),#trtype#,#houseFlg#,#locked#) 
		]]>
	</insert>
	
	<update id="upd_awb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB SET			
			BLDUP_BULK_PCS   = (BLDUP_BULK_PCS + nvl(#awbPcs#,0)),
		    BLDUP_BULK_WT    = (BLDUP_BULK_WT  + nvl(#awbWt#,0)),
		    PCS = (PCS + nvl(#awbPcs#,0)),
		    WT = (WT + nvl(#awbWt#,0)),
		    NON_PMAN_PCS = (NON_PMAN_PCS + DECODE(#awbType#,'T',NVL(#awbPcs#,0),0)),
		    NON_PMAN_WT = (NON_PMAN_WT + DECODE(#awbType#,'T',NVL(#awbWt#,0),0)),
		    HOUSE_FLG = #houseFlg#,	
		    EXP_AWB_LOCK = #locked#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
 
	
 	<update id="upd_awb_transitmailcar_ForPAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB SET
		    HOUSE_FLG = #houseFlg#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
	
	<insert id="ins_impcarshp_transitmailcarDummyMailAsCargo" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 
		0, 0, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert> 	
	
	<insert id="ins_impcarshp_transitmailcarDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 
		NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert> 	
 	
 	<insert id="ins_impcarshp_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert>
 	
 	<insert id="ins_impcarshp_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,#trtype#)	
 	</insert>
 	
 	
 	<update id="upd_impcarshp_transitmailcar_DummyMailAsCargo" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS   = (BULK_PCS + NVL(#mnfstPcs#,0)),
		    BULK_WT    = (BULK_WT  + NVL(#mnfstWt#,0)),		  
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		    CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update>
	
 	<update id="upd_impcarshp_transitmailcar_Dummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS   = (BULK_PCS + NVL(#mnfstPcs#,0)),
		    BULK_WT    = (BULK_WT  + NVL(#mnfstWt#,0)),
		    MANIFEST_PCS = (MANIFEST_PCS + NVL(#mnfstPcs#,0)),
		    MANIFEST_WT = (MANIFEST_WT + NVL(#mnfstWt#,0)),
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		    CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
 	
 	
 	<update id="upd_impcarshp_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET			
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		     CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
	
	<update id="upd_impcarshp_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET			
		    RECD_PCS = 0,
		    RECD_WT = 0,
		     CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
	
 	<insert id="ins_gtcms_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO GT_CMS
	 		(COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6)
	 VALUES
	 	   (#awbNo#, #awbDate#, #fltKey#, #fltDate#, '', #carCreated#)
	</insert>	
	
	<insert id="ins_awbevents_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,'ADIUCAR', 'Amend Dummy IU CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPcs#,0), nvl(#awbWt#,0), #crUserId#,  sysdate, #crUserId#,  sysdate)
		]]>
	</insert>
	
	<insert id="ins_expcar_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE) 
	      VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#orig#,#dest#, 
				nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
				#consigneeName#, #appointedAgentCode#,
				#ectHandler#,#rmk#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,
				#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consCity#,#consCountry#,#consPin#,
				#shprAddrOne#,#shprAddrTwo#,	
				#shprAddrThree#,#shprAddrFour#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
				#locked#,#carrCode#,'TRN') 
		]]>
	</insert>	
	
	<update id="upd_expcar_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE EXP_CAR SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LOCK_IND = #locked#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')				
	</update> 	
	
	
	<insert id="ins_awbowner_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#carrCode#,#awbPcs#,#awbWt#,#crUserId#,sysdate,#crUserId#,sysdate,null,null)
	</insert>	
	
	<insert id="ins_awbowner_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#ctRecvCarr#,#awbPcs#,#awbWt#,#crUserId#,sysdate,#crUserId#,sysdate,null,null)
	</insert>
	
	<update id="upd_awbowner_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
			CARR_CODE = #carrCode#				
	</update> 		 
	 
	<update id="upd_awbowner_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
			CARR_CODE = #ctRecvCarr#				
	</update> 		
	
	<insert id="ins_awbinv_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG,REF_AWB_EVENT)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locn#,
	 #actPcs#,#actWt#,#damInd#,#crUserId#, sysdate,
	 #crUserId#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldKey#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM',#mbleTrType#)
	</insert>
	
	<select id="getSeqNoForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)     
     AND NVL(LOC_CODE,'*') = NVL(#locn#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
   </select>
   
  <update id="updatePcsWtForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #actPcs#),
		    LOCN_WT    = (LOCN_WT  + #actWt#),
		    REF_AWB_EVENT = nvl(#mbleTrType#,REF_AWB_EVENT),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>
    
    
    <select id="isCarAwbExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1) FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="isExpCarExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1) FROM EXP_CAR WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="chkHAWBInventoryDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbStrgCnt FROM HAWB_INVENTORY WHERE HAWB_NO = #tagNo# AND SEQ_NO = #seqNo#
	</select>
	
	<select id="get_shipment_mailCargo_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		SELECT 
		  NVL(d.content,e.content) AS content,
		  e.spl_code1 AS shc1,
		  e.spl_code2 shc2,
		  e.spl_code3 AS shc3,
		  e.spl_code4 shc4,
		  e.spl_code5 shc5,
		  e.spl_code6 shc6,
		  e.spl_code7 shc7,
		  e.spl_code8 shc8,
		  e.spl_code9 shc9,
		  E.spl_code1 oldShc1,
		  E.spl_code2 oldShc2,
		  E.spl_code3 oldShc3,
		  E.spl_code4 oldShc4,
		  E.spl_code5 oldShc5,
		  E.spl_code6 oldShc6,
		  E.spl_code7 oldShc7,
		  E.spl_code8 oldShc8,
		  E.spl_code9 oldShc9,
		  DECODE(
		  (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE1),0,'N','Y') AS shcVal1,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE2),0,'N','Y') AS shcVal2,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE3),0,'N','Y') AS shcVal3,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE4),0,'N','Y') AS shcVal4,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE5),0,'N','Y') AS shcVal5,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE6),0,'N','Y') AS shcVal6,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE7),0,'N','Y') AS shcVal7,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE8),0,'N','Y') AS shcVal8,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE9),0,'N','Y') AS shcVal9, 
		  D.AWB_DEST DEST,
		  D.CC_CODE CCCODE,
		  D.CONTENT,
		  D.AWB_RMK RMK,
		  D.AIRLN_RMK AWBAIRLRMK,
		  'N' CAR,
		  'N' Qt_bu,
		  'N' IMXRQS,
		  NULL DLVRQS,
		  'N' MSG_FLG,
		  NULL SHC,
		  'M'                           AS loadType, 
		  E.AWB_TYPE                    AS awbType,
		  F.car_created                 AS carCreated,
		  'M'                           AS loadType,
		  'M'                           AS oldloadType,
		  R.* FROM (SELECT 
		  B.AWB_NO     AS awbNo,
		  rtrim(SUBSTR(B.AWB_NO,1,3)  ||'-'  ||SUBSTR(B.AWB_NO,4), '-')     AS awbNoDisp,
		  TO_CHAR(B.AWB_DATE, 'DDMONYY') AS awbDate,
		  B.AWB_NO,
		  B.AWB_DATE,
		  C.tagPcs  AS awbPcs,
		  C.tagWt        AS awbWt,
		  C.CONTAINER_NO AS uldKey,
		  A.FLT_KEY                     AS flightKey,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') AS arrDate
		FROM EDI_RESDIT_HD A
		JOIN EDI_RESDIT_AWB_DTL B ON B.TR_NO = A.TR_NO
		JOIN (SELECT TR_AWB_NO,CONTAINER_NO,SUM(tag_wt)   AS tagWt,COUNT(tag_no) AS tagPcs FROM EDI_RESDIT_TAG_DTL GROUP BY TR_AWB_NO,CONTAINER_NO) C ON C.TR_AWB_NO = B.TR_AWB_NO 
		WHERE A.flt_key =  #flightKey# AND A.flt_date  = TO_DATE(#arrDate#, 'DDMONYY')
		) R ,
		  IMP_CAR_AWB D,
		  AWB E,
		  imp_car_shp F
		WHERE 
		D.AWB_NO = R.AWB_NO
		AND D.AWB_DATE = R.AWB_DATE
		AND E.AWB_NO   = R.AWB_NO
		AND E.AWB_DATE =R.AWB_DATE
		AND F.AWB_NO = R.AWB_NO
		AND F.AWB_DATE = R.AWB_DATE
		AND F.FLT_KEY =  #flightKey#
		AND F.FLT_DATE = TO_DATE(#arrDate#, 'DDMONYY')
	</select>	
	<select id="getTagList" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
	SELECT distinct C.TAG_NO AS tagNo, C.TAG_WT AS tagWt

	FROM EDI_RESDIT_HD A,
	EDI_RESDIT_AWB_DTL B,
	EDI_RESDIT_TAG_DTL C,
	IMP_CAR_AWB D

	WHERE A.TR_NO = B.TR_NO
	AND B.TR_AWB_NO = C.TR_AWB_NO
	AND B.AWB_NO = D.AWB_NO
	AND TO_CHAR(B.AWB_DATE, 'DDMONYY') = TO_CHAR(D.AWB_DATE, 'DDMONYY')
	
	<isNotEmpty property="uldKey">
		AND C.CONTAINER_NO =#uldKey#
	</isNotEmpty>
	<isEmpty property="uldKey">
		AND C.CONTAINER_NO is null
	</isEmpty>
	AND A.FLT_KEY = #flightKey#
	AND TO_CHAR(A.FLT_DATE,'DDMONYY') = #arrDate#
	AND B.AWB_NO = #awbNo#
  	AND TO_CHAR(B.AWB_DATE,'DDMONYY') = #awbDate#
</select>
<select id="getUldCountByNestingId"  parameterClass="map"  resultClass="java.lang.Integer" >
		SELECT COUNT(A.NESTING_ID) AS COUNT FROM EDI_RESDIT_TAG_DTL A JOIN EDI_RESDIT_AWB_DTL B ON B.TR_AWB_NO=A.TR_AWB_NO
    	JOIN EDI_RESDIT_HD C ON C.TR_NO=B.TR_NO
    	WHERE A.CONTAINER_NO=#uldKey# AND C.FLT_KEY=#fltKey# AND C.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
   	</select>

	<select id="getAWBContentForTransitControlCheckList"  parameterClass="map"  resultClass="java.lang.String" >
		select content from awb where awb_no=#awbNo# and awb_date=#awbDate#
	</select>
<!-- <update id="upd_imp_awb_resdit_sphcode" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				
	WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	<update id="upd_imp_resdit_sphcode" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			WH_RMK = DECODE(#awbWhRmk#,'NULL',null,NVL(#awbWhRmk#,WH_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				
	WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update> -->

<select id="fetchAWBTagListCardit" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo,
			  B.TAG_WT tagWt ,
			  '1' AS tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId
			FROM EDI_CARDIT_HD A
			JOIN EDI_CARDIT_TAG_DTL B
			ON A.TR_NO     = B.TR_NO
			WHERE A.AWB_NO = #awbNo#
			AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="fetchAWBTagListResdit" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo, B.TAG_WT tagWt , '1' as tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId			 
			  FROM EDI_RESDIT_AWB_DTL A 
			  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
			  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
			  WHERE C.flt_key =  #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY')  AND B.CONTAINER_NO = #uldKey# AND A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="fetchAWBTagListResditBULK" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo, B.TAG_WT tagWt , '1' as tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId			 
			  FROM EDI_RESDIT_AWB_DTL A 
			  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
			  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
			  WHERE C.flt_key =  #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY')  AND B.CONTAINER_NO IS NULL AND A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>

	
	
	<select id="checkCarditPcWt" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
			SELECT count(1) as carditCnt
			FROM EDI_CARDIT_HD A WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND A.TOT_NO_RECEPTACLE = #trfPcs# AND A.TOT_WT_RECEPTACLE = #trfWt#
	</select>
	
	<select id="checkResditPcWtUld"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"   resultClass="java.lang.Integer">			
		  SELECT count(1) as resditCnt FROM EDI_RESDIT_AWB_DTL A 
		  JOIN (SELECT TR_AWB_NO, CONTAINER_NO, sum(tag_wt) as tagWt,COUNT(tag_no) as tagPcs FROM EDI_RESDIT_TAG_DTL group by  TR_AWB_NO, CONTAINER_NO) B ON A.TR_AWB_NO = B.TR_AWB_NO 
		  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
		  WHERE C.flt_key = #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY') AND B.CONTAINER_NO = #uldKey# AND awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
      	  AND B.tagPcs = #trfPcs# AND  B.tagWt = #trfWt#
	</select>
	
	<select id="checkResditPcWtBulk"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"   resultClass="java.lang.Integer">
		  SELECT count(1) as resditCnt FROM EDI_RESDIT_AWB_DTL A 
		  JOIN (SELECT TR_AWB_NO, CONTAINER_NO, sum(tag_wt) as tagWt,COUNT(tag_no) as tagPcs FROM EDI_RESDIT_TAG_DTL where CONTAINER_NO IS NULL group by  TR_AWB_NO, CONTAINER_NO) B ON A.TR_AWB_NO = B.TR_AWB_NO  
		  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO		   
	      	WHERE C.flt_key = #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY') AND awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	      	AND B.tagPcs = #trfPcs# AND  B.tagWt = #trfWt#
	</select>
	
	<select id="checkPmanCreatedBySystem" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
			SELECT count(1) as pmanCnt
			FROM EXP_PMANIFEST_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND NVL(MANUAL_IND,'N') = 'N' AND CR_USER_ID = 'SYSTEM'  AND flt_key = #cntgFltKey# AND flt_date = TO_DATE(#cntgFltDate#, 'DDMONYY')
	</select>
	
	<delete id="deletePmanCreatedBySystem" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
			delete EXP_PMANIFEST_AWB  WHERE  AWB_NO  =  #awbNo#  AND AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY')  AND flt_key = #cntgFltKey# AND flt_date = TO_DATE(#cntgFltDate#, 'DDMONYY')
	</delete>

	<select id="getAwbHouseFlgInfo" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT HOUSE_FLG AS houseFlg FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND ROWNUM=1
	</select>
	 
	<select id="imp_ctrm_get_trm_tags_by_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT hinv.HAWB_NO hawbNo, hinv.STRG_PCS hawbPc, hinv.STRG_WT hawbWt FROM HAWB_INVENTORY hinv
		WHERE hinv.SEQ_NO IN (SELECT inv.SEQ_NO FROM AWB_INVENTORY inv WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = #awbDate#
		)
	</select>
	
	<select id="get_carrier_mail_as_cargo"  parameterClass="map"  resultClass="java.lang.String">
		SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where CODE = #CARRIERCODE# and NVL(MAIL_AS_CARGO,'X') = 'Y'
	 </select>
	 
	 <insert id="imp_ctrm_trm_hawb" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT
		INTO IMP_TRM_AWB_HAWB
		  (
		    TRM_NO,
		    DOC_LINE_NO,
		    HAWB_NO,
		    AWB_NO,
		    AWB_DATE,
		    PC,
		    WT,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE
		  )
		  VALUES
		  (
		    #trmNo#,
		    #doclineNo#,
		    #hawbNo#,
		    #awbNo#,
		    TO_DATE(#awbDate#,'DDMONYY'),
		    #hawbPc#,
		    #hawbWt#,
		    #lmUser#,
		    SYSDATE,
		    #lmUser#,
		    SYSDATE
		  )
	</insert>
	
	<update id="imp_ctrm_hawb_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS + #hawbPc# , WT = WT + #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and carr_code=#carrCode#
	</update>
	
	<insert id="imp_ctrm_hawb_owner_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT INTO AWB_OWNER_HAWB (SEQ_NO,HAWB_NO,AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
       	VALUES (#hawbSeqNo#,#hawbNo#,#awbNo#,#awbDate#,#carrCode#,#hawbPc#,#hawbWt#,#lmUser#,sysdate,#lmUser#,sysdate)   
	</insert>
	
	<update id="imp_ctrm_hawb_owner_trfCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS - #hawbPc# , WT = WT - #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
        WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<update id="imp_ctrm_recv_hawb_hse_flg_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB SET HOUSE_FLG = #houseFlag# WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<select id="imp_ctrm_get_awb_date" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT PKG_COMMON.GET_AWB_DATE(#awbNo#,'') FROM DUAL
	</select>
	
	<select id="imp_ctrm_get_awb_tags" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT ct.TAG_NO hawbNo, ct.TAG_WT hawbWt, 1 hawbPc  FROM EDI_CARDIT_TAG_DTL ct
      	INNER JOIN EDI_CARDIT_HD ch ON ch.TR_NO = ct.TR_NO 
      	WHERE ch.AWB_NO = #awbNoSearch# AND ch.AWB_DATE = TO_DATE(PKG_COMMON.GET_AWB_DATE(ch.AWB_NO,''),'DDMONYY')

	</select>
	
	<select id="imp_ctrm_get_awb_inv" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT inv.LOC_CODE invLoc,inv.LOCN_PCS invLocPc,inv.LOCN_WT invLocWt,inv.SEQ_NO invSeqNo,
		PKG_COMMON.GET_AWB_DATE(#awbNoSearch#,'') pawbDate,#awbNoSearch# pawbNo FROM AWB_INVENTORY inv
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = #awbDate#

	</select>
	
	<!-- <select id="checkULDWithHouse" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(*) FROM awb_inventory uawb, AWB awb 
		WHERE uawb.awb_no = awb.awb_no AND uawb.awb_DATE = awb.awb_DATE and NVL(awb.house_flg,'N') = 'Y' and
		uawb.uld_key = #uldKey#

	</select> -->
	
	 
	 <!-- <delete id="imp_ctrm_hawb_inv_delete" parameterClass="cargo.cms.imprt.bo.TrmBO">
			DELETE FROM HAWB_INVENTORY WHERE SEQ_NO = 
			(SELECT SEQ_NO FROM AWB_INVENTORY WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#)
	</delete> -->
        <select id="getTagListForUnpostCT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT TRM_NO AS trmNo, DOC_LINE_NO AS doclineNo, a.hawb_no  AS hawbNo, PC  AS hawbPc, WT  AS hawbWt
		FROM imp_trm_awb_hawb A WHERE TRM_NO = #trmNo#
	</select>
	<select id="getLocationTagList" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT HAWB_NO AS hawbNo, STRG_PCS  AS hawbPc, STRG_WT  AS hawbWt
		FROM hawb_inventory  WHERE SEQ_NO = #seqNo#
	</select>
	
	<insert id="ins_trm_detail_hawbInvtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
	    Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#seqNo#,#hawbNo#,#locationPcs#,#locationWt#,#lmUser#,sysdate,#lmUser#,sysdate)     	
	</insert>
	
	<update id="upd_trm_hawbInvtory_rem_pc" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE HAWB_INVENTORY SET
			STRG_PCS = STRG_PCS- #locationPcs#,
			STRG_WT =STRG_WT - #locationWt#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</update>
	
	<select  id="getTrmHawbInvLocationPcWt" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
    	 SELECT NVL(STRG_PCS,0)||'/'||NVL(STRG_WT,0) 
		 FROM HAWB_INVENTORY
	     WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</select>
	
	<delete id="deleteTrmHawbInv" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM hawb_inventory WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</delete>
	
	<delete  id="del_trm_hawb_Invtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 DELETE FROM hawb_inventory where seq_no in (select seq_no from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#)
  	</delete>
  	
  	<select  id="isAWBHouseFlag" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	 SELECT count(*) FROM AWB awb WHERE awb.awb_no=#AWB_NO# AND awb.awb_DATE=to_date(#AWB_DATE#,'DDMONYY') and NVL(awb.house_flg,'N') = 'Y' 
	</select>
	
	<insert id="ins_hawbInvtory_UnpostCT" parameterClass="map">
		Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values (#seqNo#,#hawbNo#,#locationPcs#,#locationWt#,#lmUser#,sysdate,#lmUser#,sysdate)  
	</insert>	
	
	<update id="imp_unpost_hawb_owner_recvCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS - #hawbPc# , WT = WT - #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
        WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND carr_code = #recevCarrier#
	</update>
	
	<select id="getAccetTransferCargoCTInfoListforCrossTerminalHawb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select 'Y' sel,tab3.trm_no,tab3.hawb_no hawbNo,tab3.pc hawbPc,tab3.wt hawbWt from IMP_trm_hd tab1, IMP_trm_DTL tab2, imp_trm_awb_hawb tab3
      where tab1.TRM_NO = tab2.TRM_NO and tab2.TRM_NO = tab3.TRM_NO and tab3.TRM_NO=#trmNo# and tab1.status = 'RETRIEVED'  
 	</select> 
 	
 	<update id="imp_ctrm_scan_tag_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE IMP_XPS_OBC_MAIL SET TAG_NO = NVL(SCAN_TAG_NO, TAG_NO), LM_DATE = SYSDATE, LM_USER_ID = #lmUser#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<delete id="delete_hawb_strg" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE IMP_HAWB_STRG_DTL
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')
	</delete>
	
	<delete id="delHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TrmBO">
	  DELETE FROM IMP_HAWB_STRG_DTL
	  WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<delete id="delete_edi_fhl_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM EDI_FHL
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<delete id="delete_edi_fhl_hawb_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM EDI_FHL_HAWB
		WHERE TR_NO = (SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</delete>
	
	<delete id="mast_hawb_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
	  DELETE FROM MAST_HAWB
	  WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
<select id="validateTransitMail" parameterClass="map" resultClass="java.lang.String" >
   		SELECT CATALOG FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="sqlamenddeleteawbdetailstrc" parameterClass="cargo.cms.imprt.bo.PreManifestSearchBO"  resultClass="cargo.cms.imprt.bo.PrePackCargoBO">
		SELECT rownum as recordID,V.AWB_NO as awbno, 
		CONCAT(CONCAT(SUBSTR(V.AWB_NO,0,3),'-'),SUBSTR(V.AWB_NO,4)) as awbnoDispaly, 
		to_char(V.AWB_DATE,'DDMONYY') as awbdate, 
		V.FLT_KEY as fltNo, to_char(V.FLT_DATE,'DDMONYY') as fltDate, 
		V.PMAN_PCS as preManfPc, V.PMAN_WT as preManfWt
		FROM   V_EXP_PMAN_AWB_FLT V
			<isNotEmpty property="loginCarrier">
				join flt_opr t1
				on t1.flt_key = v.flt_key
				and t1.sch_date = v.flt_date
				and t1.flt_type = 'D'
			</isNotEmpty>
		WHERE  AWB_NO = #awb1#
		AND AWB_DATE = to_char((SELECT AWB_DATE FROM AWB WHERE AWB_NO =#awb1# AND (AWB_TYPE='E' OR AWB_TYPE='T') AND AWB_CLOSED_YN='N'),'DDMONYY')
		AND PMAN_PCS > 0
		<isNotEmpty property="loginCarrier">
	       	AND   (t1.CARR_CODE = #loginCarrier#
					OR t1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
	</select>
	<select id="sqlamenddeleteawbheadertrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.PreManifestAWBBO">
			SELECT A.CATALOG catalog,EPA.AWB_NO as awbNo, 
			CONCAT(CONCAT(SUBSTR(EPA.AWB_NO,0,3),'-'),SUBSTR(EPA.AWB_NO,4)) as awbNoDisplay, 
			to_char(EPA.AWB_DATE,'DDMONYY') as awbDate, 
			EPA.DEST as dest, EPA.AWB_PCS as awbPCs, EPA.AWB_WT as awbWt, 
			EPA.NON_PMAN_PCS as totalNonPreManfPc, EPA.NON_PMAN_WT as totalNonPreManfWt, 
       		FLT_KEY as fltNo, to_char(FLT_DATE,'DDMONYY') as fltDate, 
       		to_char(EPA.EST_DATE,'DDMONYY') as fltEstDate,
       		PKG_COMMON.get_flt_eta(EPA.FLT_KEY, EPA.FLT_DATE, 'D', 'DD') as fltEstTime, 
       		EPA.FLT_PORTS as fltPort,EPA.CARR_CODE as fltpfx,EPA.FLT_NO as fltsfx, EPA.car_yn carCreated
			FROM   V_EXP_PMAN_AWB EPA JOIN AWB A ON A.AWB_NO=EPA.AWB_NO AND A.AWB_DATE=EPA.AWB_DATE
			WHERE  EPA.AWB_NO =#awbno#
				AND EPA.AWB_DATE =to_date(#awbdate#,'DDMONYY')
				AND EPA.FLT_KEY =#fltNo# 
				AND EPA.FLT_DATE =to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="sqlamenddeletebulkppkheadertrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.PreManifestAWBBO">
			SELECT PMAN_PCS AS premanfbulkpc,
		    NON_PMAN_PCS AS nonpremanfbulkpc,
		    PMAN_WT AS premanfbulkwt,
		    NON_PMAN_WT AS nonpremanfbulkwt,
        	PMAN_PCS AS premanfppkpc,
        	NON_PMAN_PCS  AS nonpremanfppkpc,
        	PMAN_WT AS premanfppkwt,
        	NON_PMAN_WT AS nonpremanfppkwt 
			FROM  AWB 
			WHERE  
		    AWB_NO =#awbno#
		    AND AWB_DATE =to_date(#awbdate#,'DDMONYY')
	</select>	
	<select id="sqlamenddeletebulkdetailstrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.BulkCargoBO">
				SELECT ROWNUM, UNLDG_PT as bulk_UnldgPT,
						UNLDG_PT as bulk_UnldgPT_DB, 
						GROUP_NO as bulk_Grp_No, 
						(p.PMAN_PCS) as bulk_Pc, 
						(p.PMAN_WT) as bulk_Wt,
						UNASSIGNED_BULK_PCS as unAsgnbulk_Pc, 
						UNASSIGNED_BULK_WT as unAsgnbulk_Wt,  
						p.PMAN_PCS as manfBulkPc, 
						p.PMAN_WT as manfBbulkWt,	
						(NON_PMAN_PCS) as nonPman_Pc, 
						(NON_PMAN_WT) as nonPman_Wt,  
						MAN_RMK as bulk_ManfRem, 
						BLDUP_INSTR as bulk_BuldpInstr ,
						(ASSIGNED_BULK_PCS) as assigned_bulk_pcs,
						(ASSIGNED_BULK_WT) as assigned_bulk_wt,
						p.AWB_NO as awbNo,
						to_char(p.AWB_DATE,'DDMONYY') as awbDate ,
						FLT_KEY as fltNo,
						to_char(FLT_DATE,'DDMONYY') as fltDate,
						CAR_YN carCreated ,
						p.bulk_pcs oldBulkPcs,
						p.bulk_wt oldBulkWt,
						(NVL(p.ppk_pcs,0)+NVL(p.mix_pcs,0)) oldBupPcs,
						(NVL(p.ppk_wt,0)+NVL(p.mix_wt,0)) oldBupWt,
						( decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', '/'))
		               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', '/'))
		               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', '/'))
		              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', '/'))
		               		|| decode(a.spl_code5, null, '', a.spl_code5 || decode(a.spl_code6, null, '', '/'))
		              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', '/'))
		               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', '/'))
		               		|| decode(a.spl_code8, null, '', a.spl_code8)) splCode
			FROM   EXP_PMANIFEST_AWB p
			join awb a on a.awb_no = p.awb_no and a.awb_date = p.awb_date
			WHERE  p.AWB_NO = #awbno#
			AND   to_char(p.AWB_DATE,'DDMONYY') =to_date(#awbdate#,'DDMONYY')
			AND    FLT_KEY = #fltNo#
			AND    FLT_DATE =to_date(#fltDate#,'DDMONYY')
		
	</select>	
	
	<delete id="sqldeleteawbbulkdetailstrc" parameterClass="cargo.cms.imprt.bo.BulkCargoBO" >
		DELETE FROM EXP_PMANIFEST_AWB 
			WHERE
			  AWB_NO =#awbNo#
			  AND AWB_DATE = #awbDate#
			  AND FLT_KEY = #fltNo#
			  AND FLT_DATE = #fltDate#
			  AND UNLDG_PT = #bulk_UnldgPT_DB#
	</delete>
	
	<update id="sqlupdatelmuserinexppmantrc" parameterClass="cargo.cms.imprt.bo.BulkCargoBO" >
			UPDATE EXP_PMANIFEST_AWB SET LM_USER_ID = #userID# 
			WHERE
			  AWB_NO =#awbNo#
			  AND AWB_DATE = #awbDate#
			  AND FLT_KEY = #fltNo#
			  AND FLT_DATE = #fltDate#
			  AND UNLDG_PT = #bulk_UnldgPT_DB#
	</update>
	
	<select id="sqlamenddelete_flt_leg_details1trc" parameterClass="map"  resultClass="cargo.cms.imprt.bo.BulkCargoBO">
		select leg_status as portClosed,a.OFF_POINT as bulk_UnldgPT from flt_opr_leg a ,flt_opr b
			 where
				 a.tr_no = b.tr_no
				 and a.flt_key= b.flt_key
				 and a.sch_date = b.sch_date
				 and a.flt_key=#fltkey#
				 and a.flt_type = 'D'
				 and to_char(a.sch_date,'DDMONYY') =to_date(#schdate#,'DDMONYY')
				 
	</select>
	
	<select id="imp_uld_checkin_ttsl"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	 SELECT *
			   FROM
			  (SELECT dtl.CARR_CODE                                    AS carrierCode ,
				( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.FLT_KEY=b.FLT_KEY
        		AND a.FLT_DATE=b.FLT_DATE
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
        (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=dtl.FLT_KEY  AND hd.FLT_DATE=dtl.FLT_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    dtl.LOC_CODE                                           AS locCode,
			    dtl.DAM_IND											   AS damInd      ,
			    dtl.EMPTY_IND                                          AS empty       ,
			    dtl.EIC_IND                                            AS eic         ,
			    dtl.HT                                           	   AS ht          ,
			    dtl.CONTR                                            AS contour     ,
			    dtl.RMK                                                AS remark      ,
			    dtl.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    inb.FFM_IND                                            AS ffmInd      ,
			    inb.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,			  				    	    
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         ,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,			   	 
				m.h_cont_ind as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampCompleteStatus,				    
			    NVL(dtl.CHKIN_YN,'N') AS actualCheckIn           ,
			    (CASE WHEN (nvl(DOLLYDTL.reject_ind,'N') = 'Y' OR DOLLYDTL.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
			    dtl.SURPLUS_IND AS surPlusInd,
				uld.HANDLING_MODE									   AS handlingMode,
				uld.TRANSIT_IND 									   AS transitInd,	
			  NULL                             AS defContr, 
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='N'  THEN '2'
		        ELSE CASE  WHEN  dtl.EIC_IND='Y'  THEN '3'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='Y'  THEN '4'
		        END END END END as displayOrder,
		        nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
                DOLLYDTL.reject_rmk as rejectRmk
			   	FROM IMP_RAMP_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
          JOIN IMP_RAMP_DOLLY_HD DOLLYHD ON DOLLYHD.FLT_KEY = f.FLT_KEY AND DOLLYHD.FLT_DATE = f.SCH_DATE
          JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.ULD_KEY = dtl.ULD_KEY
          left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
        		LEFT JOIN IMP_RAMP_INB_CHK_DTL inb on inb.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND inb.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				
        	    WHERE				  
			   	dtl.FLT_NO    = #flightNo#
			  	AND dtl.CARR_CODE = upper(#carrierCode#)
			  	AND TO_CHAR(dtl.FLT_DATE,'DDMONYY') = #flightDate#		
          AND DOLLYHD.DOLLY_ID=#tripNumber#

			UNION ALL
			   
			    SELECT 
          dtl.CARR_CODE                                    AS carrierCode ,
          ( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
        (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=dtl.FLT_KEY  AND hd.FLT_DATE=dtl.FLT_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    ''			                                           AS locCode     ,
			    DOLLYDTL.DAM_IND											   AS damInd      ,
			    chk.EMPTY_IND                                          AS empty       ,
			    chk.EIC_IND                                            AS eic         ,
			    chk.HT                                           	   AS ht          ,
         		case when (uld.handling_mode in('NBK','PPK') 
         			and (select count(1) from v_ddt_dtl v join awb a on a.awb_no=v.awb_no and a.awb_date=v.awb_date where v.flt_key=dtl.flt_key 
         					and v.flt_date=dtl.flt_date and v.uld_key=dtl.uld_key and a.awb_type='T')>0) 
         		then  NVL(edi.cntr,chk.CONTR)  else chk.CONTR end AS contour,			   
			    dtl.RMK                                                AS remark      ,
			    chk.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		       AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    dtl.FFM_IND                                            AS ffmInd      ,
			    dtl.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,		    						
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,				
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				   	 
				m.h_cont_ind 											as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  					AS rampCompleteStatus,		
			    NVL(chk.CHKIN_YN,'N') 									AS actualCheckIn,
			    (CASE WHEN (nvl(DOLLYDTL.reject_ind,'N') = 'Y' OR DOLLYDTL.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
			    chk.SURPLUS_IND          								AS surPlusInd,
				uld.HANDLING_MODE									    AS handlingMode,
				uld.TRANSIT_IND 									    AS transitInd,				
				edi.CNTR                                                AS defContr,	
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
	            ELSE CASE  WHEN  chk.EMPTY_IND='N'  THEN '2'
	            ELSE CASE  WHEN  chk.EIC_IND='Y'  THEN '3'
	            ELSE CASE  WHEN  chk.EMPTY_IND='Y'  THEN '4'
	            END END END END as displayOrder,
              nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
              DOLLYDTL.reject_rmk as rejectRmk
			    FROM IMP_RAMP_INB_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
          JOIN IMP_RAMP_DOLLY_HD DOLLYHD ON DOLLYHD.FLT_KEY = F.FLT_KEY AND DOLLYHD.FLT_DATE = F.SCH_DATE
          JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.ULD_KEY = dtl.ULD_KEY
 
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
				LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(chk.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND chk.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(edi.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND edi.ULD_KEY=dtl.ULD_KEY 				   
			    WHERE 		  
			    dtl.ULD_KEY NOT IN
			    (SELECT ULD_KEY
			     FROM IMP_RAMP_CHK_DTL
			     WHERE TR_NO = dtl.TR_NO
			     AND CHKIN_YN  = 'Y'
			    )
			    AND dtl.FLT_NO    = #flightNo#
			    AND dtl.CARR_CODE = upper(#carrierCode#)
			    AND TO_CHAR(dtl.FLT_DATE,'DDMONYY')  = #flightDate#	
			     AND DOLLYHD.DOLLY_ID=#tripNumber#
			         UNION ALL
   SELECT F.CARR_CODE AS carrierCode ,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd a,
          imp_ramp_dolly_dtl b
        WHERE b.uld_key= B.ULD_KEY
        AND a.ho_no   IS NOT NULL
        AND a.dolly_id =b.dolly_id
        AND a.flt_key  = B.FLT_KEY
        AND a.flt_date =B.FLT_DATE )>0
      THEN 'Y'
      ELSE 'N'
    END )                                       AS handoverInd,
    (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=f.FLT_KEY  AND hd.FLT_DATE=f.SCH_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
    (select tr_no from IMP_RAMP_CHK_HD HD where HD.FLT_KEY = b.flt_key and HD.flt_date = b.flt_date and rownum=1)                                    AS trNo ,
    dtl.DOC_LINE_NO                           AS docLineNo ,
    F.FLT_NO                                  AS flightNo ,
    F.FLT_KEY                                 AS flightKey ,
    TO_CHAR(F.SCH_DATE,'DDMONYY')             AS flightDate ,
    b.ULD_KEY                                 AS uldKey ,
    INV.LOC_CODE                                AS locCode,
    B.DAM_IND                                 AS damInd ,
    B.EMPTY_IND                               AS empty ,
    B.EIC_IND                                 AS eic ,
    dtl.HT                                      AS ht ,
    dtl.CONTR                                   AS contour ,
    dtl.RMK                                     AS remark ,
    dtl.RHO_STAFF                               AS rhoStaffId,
    TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
    (SELECT MAX(ULD_IMAGE_NAME)
    FROM ULD_IMAGE
    WHERE ULD_KEY=B.ULD_KEY
    )                                                             AS transactionId,
    'Y'                                                           AS updateRecord,
    inb.FFM_IND                                                   AS ffmInd ,
    inb.CPM_IND                                                   AS cpmInd ,
    PKG_IMP.fun_get_ho_area(B.FLT_KEY,B.FLT_DATE,B.ULD_KEY) AS plannedHoAreaFFMCPM,
    (SELECT TRF_TYPE
    FROM v_ddt_DTL
    WHERE FLT_KEY = F.FLT_KEY
    AND FLT_DATE  = B.FLT_DATE
    AND ULD_KEY   = B.ULD_KEY
    AND rowNum    = 1
    )                                                           AS transferType,
    PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A','DD') AS ata ,
    (SELECT CODE_DESC
    FROM MAST_CODE_DTL
    WHERE CODE   = f.WTHR_COND
    AND CODE_TYPE='WTH_CONDN'
    )                                     AS weatherCondition,
    null                         AS hcontainer,
    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N') AS rampCompleteStatus,
    'N'                AS actualCheckIn ,
    (CASE WHEN (nvl(B.reject_ind,'N') = 'Y' OR B.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
    'N'                      AS surPlusInd,
    uld.HANDLING_MODE                     AS handlingMode,
    uld.TRANSIT_IND                       AS transitInd,
    NULL                                  AS defContr,
    null AS displayOrder,
    nvl(b.reject_ind,'N') as rejectInd,
    b.reject_rmk as rejectRmk       
     FROM imp_ramp_dolly_hd a
  LEFT JOIN imp_ramp_dolly_dtl b
  ON b.flt_key  =a.flt_key
  AND b.flt_date=a.flt_date
  AND b.dolly_id=a.dolly_id
  LEFT JOIN ULD_INVENTORY INV
  ON INV.ULD_KEY=B.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON dtl.flt_key= b.flt_key
  and dtl.FLT_DATE=b.flt_date
  and dtl.uld_key=b.uld_key
   AND dtl.CHKIN_YN='N'
   left JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = a.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(a.FLT_DATE,'DDMONYY')
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.flt_key                  = a.flt_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL inb
  ON inb.FLT_KEY                      = b.FLT_KEY
  AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND inb.ULD_KEY                     = b.ULD_KEY
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      =b.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND uld.ULD_KEY                     =b.ULD_KEY
  WHERE a.FLT_key                   = #carrierCode#||#flightNo# 
  AND TO_CHAR(a.FLT_DATE,'DDMONYY') = #flightDate#
  AND  A.DOLLY_ID=#tripNumber#
  AND NOT EXISTS(SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY=B.ULD_KEY
  AND FLT_KEY=B.FLT_KEY
  AND FLT_DATE=B.FLT_DATE)
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=B.ULD_KEY
    AND FLT_KEY  =B.FLT_KEY
    AND FLT_DATE =B.FLT_DATE
    ) 			     
			  )	          
      order by displayOrder,uldKey 
</select>


<select id="searchtowingTripSummaryList" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="cargo.cms.imprt.bo.TTSummaryListBO">
SELECT list.*, (CASE WHEN status = 'Handover' then '1'
                else case when status = 'Towing' then '2' else '3' end end
                ) orderstat FROM (
	SELECT DOLLYHD.DOLLY_ID tripNumber,
  SUBSTR(DOLLYHD.DOLLY_ID,(INSTR(DOLLYHD.DOLLY_ID, '_', -1)+1),2) tripNumberDis,
  DOLLYHD.FLT_KEY                     AS flightNo,
  TO_CHAR(DOLLYHD.FLT_DATE,'DDMONYY') AS flightDate,
  '' shc,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE DOLLYHD.STATUS END)  AS status,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE 
  CASE WHEN #locale# = 'en' then DOLLYHD.STATUS else  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='TOWING_CHN_STATUS' AND CODE=DOLLYHD.STATUS) END
  END)  AS mbleStatus,
  TO_CHAR(DOLLYHD.IHOTC_ACTION_TIME,'DDMONYY HH24:MI') AS handoverTime,
(SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )
  ) AS checkinTime,
  (CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_DTL DTL
      WHERE DTL.FLT_KEY      = DOLLYHD.FLT_KEY
      AND DTL.FLT_DATE       = DOLLYHD.FLT_DATE
      AND DTL.DOLLY_ID       = DOLLYHD.DOLLY_ID
      AND DTL.COOL_DOLLY_ID IS NOT NULL) >0
    THEN 'Y'
    ELSE 'N'
  END) AS coolDollyInd,
   OPR.CARR_CODE AS carrCode,
 OPR.FLT_NO as fltNo,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'N' ELSE
  CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL DTL WHERE DTL.DOLLY_ID=DOLLYHD.DOLLY_ID AND NVL(REJECT_IND,'N') = 'Y') > 0 THEN 'R'
  ELSE CASE WHEN (
  (ROUND((SYSDATE-DOLLYHD.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TT_OFF_SET_TIME_HOVER_COMP'))) AND 
  ((SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL DTL WHERE NVL(DTL.CHKIN_YN,'N')='N' AND DTL.FLT_KEY=DOLLYHD.FLT_KEY AND DTL.FLT_DATE=DOLLYHD.FLT_DATE 
    AND DTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DOLLYDTL WHERE DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID))>0)
    )
  THEN 'Y'
  ELSE CASE WHEN ((ROUND((SYSDATE-DOLLYHD.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TT_OFF_SET_TIME_HOVER')) AND DOLLYHD.HOVER_DATE IS NULL))  THEN 'Y' ELSE 'N' END END
  END END
 ) AS indicator
FROM IMP_RAMP_DOLLY_HD DOLLYHD, FLT_OPR OPR
WHERE 1=1
AND dollyhd.task_assign_uid IS NOT NULL
AND OPR.FLT_KEY = DOLLYHD.FLT_KEY AND OPR.SCH_DATE = DOLLYHD.FLT_DATE
AND OPR.FLT_TYPE='A'
<isEqual property="fromFunction" compareValue="Mobile">
<![CDATA[
AND (SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL DTTL WHERE DTTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND NVL(REJECT_IND,'N')='N' AND RTN_LOCN IS NULL AND RTN_DATE IS NULL) > 0
]]> 
</isEqual>
<isNotEmpty property="searchFlt">
         and DOLLYHD.FLT_KEY=#searchFlt#
</isNotEmpty>
 <isNotEmpty property="flightDate">
         and DOLLYHD.FLT_DATE=#flightDate#
</isNotEmpty> 
<isNotEmpty property="status">
<isNotEqual property="status" compareValue="Completed">
         and DOLLYHD.STATUS=#status#
AND OPR.FLT_KEY = DOLLYHD.FLT_KEY AND OPR.SCH_DATE = DOLLYHD.FLT_DATE
		AND (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NULL
</isNotEqual>
<isEqual property="status" compareValue="Completed">
		AND (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL
</isEqual>
</isNotEmpty>
<isNotEmpty property="uldKey">
        <isNotEmpty property="uldDate">
        AND DOLLYHD.DOLLY_ID IN (
SELECT DOHD.DOLLY_ID FROM IMP_RAMP_DOLLY_HD DOHD, IMP_RAMP_DOLLY_DTL DODTL WHERE
DODTL.FLT_KEY = DOHD.FLT_KEY AND DODTL.FLT_DATE = DOHD.FLT_DATE AND DODTL.DOLLY_ID = DOHD.DOLLY_ID
AND DODTL.ULD_KEY = #uldKey# AND TO_CHAR(DOHD.CR_DATE,'DDMONYY') = #uldDate#
)     
      </isNotEmpty>
</isNotEmpty>
<isNotEmpty property="ttCrtDateFrom">  
<isNotEmpty property="ttCrtDateFromTime">
<isNotEmpty property="ttCrtDateFromMin">
<isNotEmpty property="ttCrtDateTo">  
<isNotEmpty property="ttCrtDateToTime">
<isNotEmpty property="ttCrtDateToMin">
AND DOLLYHD.CR_DATE BETWEEN TO_DATE(#ttCrtDateFrom#||#ttCrtDateFromTime#||#ttCrtDateFromMin#,'DDMONYYHH24MI')
				  AND TO_DATE(#ttCrtDateTo#||#ttCrtDateToTime#||#ttCrtDateToMin#,'DDMONYYHH24MI')
 </isNotEmpty> 
</isNotEmpty>  
 </isNotEmpty>
 </isNotEmpty> 
</isNotEmpty>  
 </isNotEmpty>
 ) list where 1=1 
<isNotEmpty property="ttCrtDateFrom">
<isEqual property="fromFunction" compareValue="Mobile">
<![CDATA[ 
	and nvl(list.status,'XXXXXXX') != 'Completed'
]]>    
</isEqual>
</isNotEmpty>
order by orderstat asc
 
</select> 

<select id="chKImportFlightDetl_Desktop" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TTSummaryListBO" >
SELECT FLT_KEY as fltKey,TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM IMP_RAMP_DOLLY_HD WHERE DOLLY_ID=#PARAM#
</select>
<update id="deleterampdollydtl_desktop"  parameterClass="java.util.HashMap">
DELETE FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId# AND ULD_KEY = #uldKey#
</update>
<select id="getCountFromDollyDTL_desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
</select>
<update id="deleterampdollyhd_desktop"  parameterClass="java.util.HashMap">
DELETE FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
</update>
<update id="updaertrampDUMMYdollyuldinv_desktop"  parameterClass="java.util.HashMap">
UPDATE uld_inventory SET tr_type='DUMMY' where uld_key = #uldKey#
</update>
<update id="updateTIStatus_desktop"  parameterClass="java.util.HashMap">
UPDATE IMP_RAMP_DOLLY_HD SET STATUS=#hostatus#,LM_USER_ID=#userID#,LM_DATE=SYSDATE WHERE DOLLY_ID=#tripNumber#
</update>

<update id="updaertrampdollyuldinv_desktop"  parameterClass="java.util.HashMap">
UPDATE uld_inventory SET ULD_UNLOAD = #uldUnload#,DAM_IND=#damInd#,H_OVER='N',lm_user_id=#userID#,lm_date=sysdate,tr_type='UIU' where uld_key = #uldKey#
</update>
<select id="checkInImportFlight_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
    SELECT COUNT(1) FROM imp_ramp_chk_dtl WHERE FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND CHKIN_YN = 'Y' AND ULD_KEY = #uldKey#
</select>

<select id="tt_uld_list" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="cargo.cms.imprt.bo.TTSummaryListBO">
	  SELECT   (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE DOLLYHD.STATUS END)  AS status,DOLLYDTL.ULD_KEY AS uld,DOLLYDTL.REJECT_IND AS rejectIND,DOLLYDTL.REJECT_RMK AS rejectRemarka,
(SELECT TO_CHAR(CHKIN_DATE,'DDMONYY HH24:MI') FROM IMP_RAMP_CHK_HD RAMPHD, IMP_RAMP_CHK_DTL RAMPDTL
   WHERE RAMPDTL.TR_NO = RAMPHD.TR_NO 
   AND RAMPDTL.FLT_KEY = RAMPHD.FLT_KEY
   AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
   AND RAMPHD.FLT_KEY = DOLLYHD.FLT_KEY
   AND RAMPHD.FLT_DATE = DOLLYHD.FLT_DATE
   AND RAMPDTL.ULD_KEY = DOLLYDTL.ULD_KEY) AS checkinTime,
   DECODE(DOLLYDTL.RTN_LOCN,'','N','Y') AS returnIND,
   DOLLYDTL.RTN_LOCN AS returnLocation,
   DOLLYDTL.RETURN_RSN AS returnReason,
   DOLLYDTL.Cool_Dolly_Id AS coolDollyId
FROM IMP_RAMP_DOLLY_HD DOLLYHD, IMP_RAMP_DOLLY_DTL DOLLYDTL WHERE DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
AND DOLLYHD.DOLLY_ID=#tripNumber#
</select>

<update id="returnULDLocation" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set RTN_LOCN = #returnLocation#,
			RTN_USER = #modifiedUserId#,
			RETURN_RSN = #returnReason#,
			RTN_DATE = sysdate
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty>
		AND ULD_KEY = #uld#
	</update>
	
	<update id="updateReject" parameterClass="map">
	UPDATE IMP_RAMP_DOLLY_DTL SET REJECT_IND='Y',REJECT_RMK=NVL(#rejectRemarka#,REJECT_RMK),
	REJECT_DATE=SYSDATE,dam_ind=nvl(#damInd#,'N') where DOLLY_ID = #tripNumber# AND ULD_KEY = #uld#
	</update>
	
	<update id="deleteReturn" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set RTN_LOCN = '',
			RTN_USER = '',
			RTN_DATE = '',
			return_rsn = ''
		where 1=1 
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty> 
		AND ULD_KEY = #uld#
	</update>
	
	<update id="deleteReject" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set REJECT_IND = 'N',
			REJECT_RMK = '',
			REJECT_DATE = ''
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty> 
		AND ULD_KEY = #uld#
	</update>

<select id="tiSummeryLists" parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="cargo.cms.imprt.bo.TISummaryListBO">
<![CDATA[
 SELECT TIHD.TI_NO   AS tiNumber ,
  TIHD.FLT_KEY  AS flightNo ,
  TO_CHAR(TIHD.FLT_DATE,'DDMONYY') AS flightDate,  
  TO_CHAR(TIHD.TI_START_TIME,'DDMONYY HH24:MI') AS tiTransferStartTime,
  TO_CHAR(TIHD.TI_COMPL_TIME,'DDMONYY HH24:MI') AS tiTransferCompleteTime,   
   TIHD.PRINT_IND AS printeIND,
   TIHD.STATUS AS status,	  	
   PKG_COMMON.get_flt_ata(TIHD.FLT_KEY, TIHD.FLT_DATE, 'A','DD') AS ata,
   PKG_COMMON.get_flt_sta(TIHD.FLT_KEY, TIHD.FLT_DATE, 'A') as sta,
   (CASE WHEN TIHD.STATUS = 'Issued' THEN '1' ELSE CASE WHEN TIHD.STATUS='Started' THEN '2' ELSE '3' END END) orderStatus,	  	
  TIHD.TI_HDLG_USER AS tiHandlingUser,
   (SELECT ULD_KEY FROM IMP_RAMP_TI_DTL WHERE TI_NO=TIHD.TI_NO AND SEQ_NO=(SELECT MIN(TO_NUMBER(NVL(SEQ_NO,'1'))) FROM IMP_RAMP_TI_DTL WHERE TI_NO=TIHD.TI_NO)) AS uldKey,
   '' AS SHC,
      (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = TIHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = TIHD.FLT_DATE
  and RAMPDTL.uld_key in (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID=TIHD.DOLLY_ID)
  ) AS checkinTime,
  (CASE WHEN STATUS = 'Completed' THEN 'N' ELSE CASE WHEN TI_START_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_PICKUP'))/24/60)  THEN 'Y' ELSE 'N' END END) AS tiPickupColor,
  (CASE WHEN STATUS = 'Completed' THEN 'N' ELSE CASE WHEN TI_COMPL_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_COMPLETE'))/24/60) THEN 'Y' ELSE 'N' END END) AS tiCompleteColor,
  (CASE WHEN ( SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND 
        SPL.CODE IN (SELECT VSHC.SHC FROM IMP_RAMP_TI_DTL TIDTL,V_IMP_FLT_ULD_SHC VSHC
        WHERE VSHC.FLT_KEY = TIDTL.FLT_KEY
        AND VSHC.FLT_DATE = TIDTL.FLT_DATE
        AND VSHC.ULD_KEY = TIDTL.ULD_KEY
        AND TIDTL.TI_NO = TIHD.TI_NO))              > 0
    THEN 'Y'
    ELSE 'N'
  END) AS shcPriorColor,
  (
  CASE WHEN STATUS = 'Completed' THEN 'N' ELSE
  CASE WHEN TI_START_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_PICKUP'))/24/60) THEN 'Y' ELSE 
  CASE WHEN TI_COMPL_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_COMPLETE'))/24/60) THEN 'O' ELSE 
  CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND SPL.CODE IN (SELECT VSHC.SHC FROM IMP_RAMP_TI_DTL TIDTL,V_IMP_FLT_ULD_SHC VSHC WHERE VSHC.FLT_KEY = TIDTL.FLT_KEY  AND VSHC.FLT_DATE = TIDTL.FLT_DATE  AND VSHC.ULD_KEY = TIDTL.ULD_KEY  AND TIDTL.TI_NO = TIHD.TI_NO)) > 0 THEN 'P' ELSE 'N' END  END  END END) AS indicator,
  (SELECT TO_CHAR(DOLLYHD.IHOTC_ACTION_TIME,'DDMONYY HH24:MI') FROM IMP_RAMP_DOLLY_HD DOLLYHD WHERE DOLLYHD.DOLLY_ID=tihd.dolly_id) AS handoverTime
  FROM IMP_RAMP_TI_HD TIHD WHERE 1=1
  ]]>
 <isNotEmpty property="searchFlt">
         and TIHD.FLT_KEY=#searchFlt#
</isNotEmpty>
 <isNotEmpty property="flightDate">
         and TIHD.FLT_DATE=#flightDate#
</isNotEmpty> 
<isNotEmpty property="status">
         and TIHD.STATUS=#status#
</isNotEmpty>
  <isNotEmpty property="ttCrtDateFrom">  
   <isNotEmpty property="ttCrtDateFromTime">
     <isNotEmpty property="ttCrtDateFromMin">
       <isNotEmpty property="ttCrtDateTo">  
         <isNotEmpty property="ttCrtDateToTime">
           <isNotEmpty property="ttCrtDateToMin">
AND TIHD.CR_DATE BETWEEN TO_DATE(#ttCrtDateFrom#||#ttCrtDateFromTime#||#ttCrtDateFromMin#,'DDMONYYHH24MI')
				  AND TO_DATE(#ttCrtDateTo#||#ttCrtDateToTime#||#ttCrtDateToMin#,'DDMONYYHH24MI')
          </isNotEmpty> 
        </isNotEmpty>  
       </isNotEmpty>
      </isNotEmpty> 
     </isNotEmpty>  
    </isNotEmpty>
    <isNotEmpty property="fromFunction">
    <isEqual property="fromFunction" compareValue="Mobile">
    AND TIHD.STATUS != 'Completed' 
    </isEqual>
    </isNotEmpty>
    order by orderStatus
 </select> 

<select id="gettiSummeryDetails" parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="cargo.cms.imprt.bo.TISummaryListBO">
SELECT TIHd.FLT_KEY as flightNo,
TO_CHAR(TIHd.FLT_DATE,'DDMONYY') AS flightDate,  
 (CASE WHEN (select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) IS NOT NULL THEN
 TIDEL.ULD_KEY||'/'||(select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) ELSE TIDEL.ULD_KEY END) AS uldKey,
  (CASE WHEN B.DAM_IND IS NOT NULL THEN  NVL(B.DAM_IND,'N') ELSE NVL(TIDEL.DAM_IND,'N') END)   AS damInd,
  (CASE WHEN B.EMPTY_IND IS NOT NULL THEN  NVL(B.EMPTY_IND,'N') ELSE NVL(TIDEL.EMPTY_IND,'N') END) AS emptyInd ,
  (CASE WHEN B.EIC_IND IS NOT NULL THEN  NVL(B.EIC_IND,'N') ELSE NVL(TIDEL.EIC_IND,'N') END)  AS eicInd,
  (select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) as cpmType,    
  (SELECT cool_dolly_id FROM IMP_RAMP_DOLLY_DTL DOLDTL WHERE DOLDTL.DOLLY_ID=TIHD.DOLLY_ID AND DOLDTL.ULD_KEY=TIDEL.ULD_KEY) AS tripNumber,
  (SELECT HO_AREA FROM TOW_ORDER_IN INHD, TOW_ORDER_IN_DTL INDTL WHERE INHD.TO_NO = INDTL.TO_NO AND INHD.FLT_KEY=TIHD.FLT_KEY AND INHD.FLT_DATE=TIHD.FLT_DATE AND INDTL.ULD_KEY=TIDEL.ULD_KEY) AS hoZone,
  TIHD.TI_START_TIME AS tiTransferStartTime,
  TIHD.TI_COMPL_TIME AS tiTransferCompleteTime,
  DECODE(f.ACT_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),0,2)|| ':' || SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),3,4)) as ata,
 DECODE(f.EST_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),3,4)) as eta,
 DECODE(f.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),0,2) || ':' || SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),3,4)) as sta,
 <![CDATA[
 (CASE WHEN ( SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND 
        SPL.CODE IN (SELECT VSHC.SHC FROM V_IMP_FLT_ULD_SHC VSHC
        WHERE VSHC.FLT_KEY = TIDEL.FLT_KEY
        AND VSHC.FLT_DATE = TIDEL.FLT_DATE
        AND VSHC.ULD_KEY = TIDEL.ULD_KEY
        ))              > 0
    THEN 'Y'
    ELSE 'N'
  END) as priority
  ]]>
FROM IMP_RAMP_TI_HD TIHd
join IMP_RAMP_TI_DTL TIDEL ON TIDEL.TI_NO=TIHD.TI_NO
join flt_opr f ON f.flt_key =  TIHD.FLT_KEY AND f.sch_date =  TIHD.FLT_DATE
LEFT JOIN IMP_RAMP_CHK_DTL B ON B.FLT_KEY=TIHD.FLT_KEY AND B.ULD_KEY=TIDEL.ULD_KEY AND B.FLT_DATE=TIHD.FLT_DATE 
WHERE TIDEL.TI_NO=#tiNumber#
ORDER BY TIDEL.SEQ_NO,
  TIDEL.ULD_KEY
</select>



<update id="updatetiPickUp" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET TI_START_TIME=SYSDATE, 
	TI_HDLG_USER=#tiHandlingUser#,STATUS=#status#  where TI_NO = #tiNumber#
</update>

<update id="tiComplete" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET TI_COMPL_TIME=SYSDATE,STATUS='Completed' where TI_NO = #tiNumber#	
</update>

<update id="updatetprintind" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET PRINT_IND='Y' WHERE TI_NO = #tiNumber#	
</update>


<select id="get_Ti_Num_Imp_Ramp_Ti_HD"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select TI_NO from Imp_Ramp_Ti_hd where Flt_Key = #flightKey# and Flt_Date = #flightDate# and DOLLY_ID=#tripNumber# 
</select>


 <insert id="Insert_Imp_Ramp_Ti_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		INSERT INTO Imp_Ramp_Ti_hd (TI_NO,FLT_KEY,FLT_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOLLY_ID) 		
		VALUES (imp_ramp_ti_hd_SEQ.NEXTVAL,#flightKey#,#flightDate#,'Issued',#crUser#,SYSDATE,#lmUser#,SYSDATE,#tripNumber#)
</insert>


 <select id="check_Imp_Ramp_Ti_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Ti_Dtl where Flt_Key = #flightKey# and Flt_Date = #flightDate#  and Uld_Key=#uldKey#
</select>


<insert id="Insert_Imp_Ramp_Ti_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		INSERT INTO Imp_Ramp_Ti_Dtl (TI_NO,FLT_KEY,FLT_DATE, ULD_KEY,SEQ_NO,DAM_IND,EMPTY_IND,EIC_IND, CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,COOL_DOLLY_ID,HO_ZONE) 		
		VALUES (#tiNum#,#flightKey#,#flightDate#,#uldKey#,#tiSeqNum#,#damInd#,#eic#,#empty#,#crUser#,SYSDATE,#crUser#,SYSDATE,'','')
 </insert> 
 
  <select id="checkisExitCheckin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Ti_hd where Flt_Key = #flightKey# and Flt_Date = #flightDate# and DOLLY_ID=#tripNumber# 
</select> 



<select id="get_seq_nub_Imp_Ramp_Dolly_Dtl"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select Seq_No from Imp_Ramp_Dolly_Dtl where Uld_Key = #uldKey# and Dolly_Id=#tripNumber# 
</select>



<select id="getSHCTTSummaryList"  parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.String">
<![CDATA[		
  SELECT STRAGG(STRINGDELIM(SHC, ','))
  FROM (
  (SELECT DISTINCT SHC,
    PRIORITY
  FROM V_IMP_FLT_ULD_SHC
  WHERE (ULD_KEY,FLT_KEY,FLT_DATE) IN
    (SELECT ULD_KEY,FLT_KEY,FLT_DATE
    FROM IMP_RAMP_DOLLY_DTL DTL
    WHERE DTL.dolly_id = #tripNumber#
    )
  ORDER BY PRIORITY DESC
  )) A
  WHERE ROWNUM <= 3
  ]]>
</select>
 <select id="getHawbList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	SELECT
	awb_no as awbNo,
	awb_date as awbDate
	FROM IMP_CAR_AWB

</select>


<select id="getHawbPopupList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">

	SELECT 
		hawb_no as hawbNo,
		content as content,
		status as eligibilityStatus
	FROM
		IMP_HAWB_ESRF_EL_STATUS
	where
		awb_no = #awbNo# and
		awb_date = to_date(#awbDate#,'DDMONYY')
		<isEqual property="amber" compareValue="Y" prepend="AND">
			<isNotEqual  property="grey" compareValue="Y">
			 status='AMBER'
			 </isNotEqual>
		</isEqual>
		<isEqual property="grey" compareValue="Y" prepend="AND">
			 <isNotEqual  property="amber" compareValue="Y">
			 status='GREY'
			 </isNotEqual>
		</isEqual>
		<isNotEqual  property="amber" compareValue="Y">
			<isNotEqual  property="grey" compareValue="Y" prepend="AND">
				(status='AMBER' OR status='GREY')
			</isNotEqual>
		</isNotEqual>

		<isEqual property="amber" compareValue="Y"> 
			 <isEqual property="grey" compareValue="Y" prepend="AND">
				 (status='AMBER' OR status='GREY')
			 </isEqual>
		</isEqual>	
		ORDER BY status desc		
</select> 

<insert id="insertEsrfEligibleConfig" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		INSERT INTO MAST_ESRF_ELIGIBLE_CONFIG (SEQ_NO,CONFIG_TYPE,DESCRIPTION,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (ESRF_ELIGIBLE_CONFIG_PK_SEQ.NEXTVAL,'C',#content#,#lmUserId#,sysdate,#lmUserId#,sysdate)
	</insert>

	<select id="checkEsrfEligibleConfig" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		select count(1) from MAST_ESRF_ELIGIBLE_CONFIG WHERE CONFIG_TYPE = 'C' AND DESCRIPTION = #content#
	</select>

	<select id="getESRFDocPopUpHeaderList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
		select 
		substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4) as awbNoDisp,
		CSGNE_NAME as consignee,
		APPNTD_AGENT as agentName,
		AWB_PCS as awbPieces,
		AWB_WT as awbWeight,
		CONTENT as content,
		(select CASE when status = 'REJECTED' then reject_reason else '' end from imp_esrf_document where awb_no = IMP_CAR_AWB.awb_no and awb_date = IMP_CAR_AWB.awb_date) as rejectReason,
		(select case when (DISCLAIMER is null or DISCLAIMER = 'N' or DISCLAIMER = 'false') then 'N' else 'Y' end  from imp_esrf_document where awb_no = IMP_CAR_AWB.awb_no and awb_date = IMP_CAR_AWB.awb_date) as disclaimer, 
		(decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', ','))|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', ','))|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', ',')) || decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', ','))|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', ','))|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', ','))|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', ','))|| decode(spl_code8, null, '', spl_code8)) shc
		from IMP_CAR_AWB
		WHERE 
		 	AWB_NO = #awbNoDisp# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>

<select id="validateESRFIssued"  parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO"  resultClass="java.lang.Integer">
	  <![CDATA[
		SELECT COUNT(1) FROM IMP_SRF T WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND (STATUS  ='ISSUED' AND sysdate  < srf_expy_date 
              OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) )
          ]]> 
	</select>

<update id="reject_esrf_doc" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
			UPDATE IMP_ESRF_DOCUMENT SET
			STATUS = 'REJECTED',
			REJECT_REASON = #rejectReason#,
			TR_TYPE = #trType#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUserId#
			WHERE 
			TR_NO = #trNo#
</update>


<update id="updateAWBESRFStatus" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
	UPDATE IMP_CAR_AWB set eligibility_status = 'GREEN', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE 
	 WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
</update>	

<update id="approve_esrf_doc" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
			UPDATE IMP_ESRF_DOCUMENT SET
			STATUS = 'APPROVED',
			TR_TYPE = #trType#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUserId#
			WHERE 
			TR_NO = #trNo#
</update>

<select id="get_esrf_eligibility" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="java.lang.String" >	
	SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#)  as eligibilityStatus from DUAL 
</select>



<select id="getESRFDocPopUpHawbList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">

SELECT TR_NO as trNo, hawb_no as hawb,manifest_desc as content,
decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splCode
FROM edi_fhl_hawb
WHERE 
	tr_no 
IN
(SELECT 
	tr_no 
 FROM 
 	edi_fhl 
 WHERE 
 	 	AWB_NO = #awbNoDisp# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
 )
</select>



<select id="getESRFDocList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
	SELECT 
			TR_NO as trNo,
			substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4) as awbNoDisp,
			to_char(AWB_DATE,'DDMONYY') awbDate,
			AGENT_NAME as agentName,
			TO_CHAR(DOC_SUBMIT_DATE, 'DDMONYY HH24:MI')docSubmitDate,
			STATUS as status,
			REJECT_REASON as rejectReason,
			(case when (DISCLAIMER is null or DISCLAIMER = 'N' or DISCLAIMER = 'false') then 'N' else 'Y' end ) as disclaimer,
			IMG_TRANS_ID as transactionId
			FROM IMP_ESRF_DOCUMENT
			where ( nvl(STATUS,'X') = 'APPROVED'  OR  nvl(STATUS,'X') = 'REJECTED'  OR FUN_GET_ESRF_STATUS(AWB_NO,AWB_DATE) = 'AMBER' )
				<isNotEmpty property="agentName">
				          AND AGENT_NAME = #agentName#
				</isNotEmpty> 
				<isNotEmpty property="status">
				          AND STATUS= #status#
				</isNotEmpty> 
				<isNotEmpty property="awbNoDisp">
				          AND AWB_NO= #awbNoDisp#
				</isNotEmpty> 
				<isNotEmpty property="docSubmitFromDt">
				<isNotEmpty property="docSubmitFromHour">
				<isNotEmpty property="docSubmitFromMin">
				<isNotEmpty property="docSubmitToDt">
				<isNotEmpty property="docSubmitToHour">
				<isNotEmpty property="docSubmitToMin">
				       AND DOC_SUBMIT_DATE BETWEEN TO_DATE(#docSubmitFromDt#||#docSubmitFromHour#||#docSubmitFromMin#,'DDMONYYHH24MI')
								  AND TO_DATE(#docSubmitToDt#||#docSubmitToHour#||#docSubmitToMin#,'DDMONYYHH24MI')
				 </isNotEmpty> 
				 </isNotEmpty>  
				 </isNotEmpty>
				 </isNotEmpty> 
				 </isNotEmpty>  
				 </isNotEmpty>
</select>

<select id="getSHCTISummaryList"  parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="java.lang.String">
<![CDATA[

SELECT STRAGG(STRINGDELIM(SHC, ','))
FROM (
  (SELECT DISTINCT SHC,
    PRIORITY
  FROM V_IMP_FLT_ULD_SHC
  WHERE (ULD_KEY,FLT_KEY,FLT_DATE) IN
    (SELECT ULD_KEY,FLT_KEY,FLT_DATE FROM IMP_RAMP_TI_DTL DTL WHERE DTL.TI_NO = #tiNumber#
    )
  ORDER BY PRIORITY DESC
  )) A
WHERE ROWNUM <= 3

]]>
</select>


<select id="isExitChkinULD"  parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Chk_Dtl where Flt_Key = #fltKey# and Flt_Date = #fltDate#  and Uld_Key=#uld# and Chkin_Yn='Y'
</select>

<select id="getTripID"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		 SELECT MAX(TRIP.TRIP_ID) FROM TRUCK_TRIP TRIP WHERE TRIP.CLOSED = 'N' AND TRIP.TRUCK_NO = UPPER(#TRUCK_NO#)
</select>

<select id="truckSRFCount"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	 select count(1) FROM IMP_TRUCK_SRF WHERE TRIP_ID = #TRIP_ID# AND ASSG_COMP = 'Y'
</select>

<update id="truckTripQueueInd" parameterClass="cargo.cms.tcs.bo.TCSBookingBO">
		update TRUCK_TRIP set TRUCK_QUEUE_IND = 'Y' where TRUCK_NO = UPPER(#truckNo#) and TRIP_ID = #tripId#
		
</update>

<select id="isExitDeleteReject" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.Integer">
   SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uld# and nvl(reject_ind,'N')='Y'
</select>

<select id="isExitReturns" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.Integer">
   SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uld# and nvl(reject_ind,'N')='Y'
</select>
	

<select id="checkAgents" parameterClass="java.lang.String" resultClass="java.lang.Integer">
        select count(1) as agtCnt  from cust_company where code = #agentCode#  and nvl(agent_yn,'N') = 'Y' 
</select>
	
<select id="checkAgentAllowEsrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM  cust_company where code = #agentCode# and nvl(allow_esrf_aa,'N') = 'Y'
</select>

<select id="checkCarrierAllowEsrf" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.Integer">
	Select count(1)  FROM  AWB  WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') 
	AND exists (SELECT null FROM mast_carrier where code = carr_code and NVL(ALLOW_ESRF,'N') = 'Y')	 
</select>


<select id="getCustomClearanceResult" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
  select Srf_No as srfNo,Cdif_No as cdifSrfNo, Clr_Completed as clrCompleted ,Clr_Department as clrDepartment,Clr_Result as clrResult, 
  Clr_Inspector AS inspID from IMP_SRF_REGULATOR_CLR_DTL where Srf_No=#srfNoDisp#
</select>
 
<select id="getHoldInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		select HOLD_SRF_IND as holdSrf from IMP_SRF where Srf_No=#srfNoDisp#	
</select>
 
<update id="updateHoldSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set HOLD_SRF_IND='Y', HOLD_SRF_DATE=sysdate, LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE where Srf_No=#srfNoDisp#	
</update>

<update id="updateUnHoldSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set HOLD_SRF_IND='N',HOLD_SRF_DATE=null, UNLOCK_SRF_DATE=sysdate , LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE  where Srf_No=#srfNoDisp#	
</update>

<update id="cargoReleaseOK" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set CARGO_RELEASE_STS='OK', cargo_release=sysdate, LM_USER_ID = NVL(#userId#,'SYSTEM'), LM_DATE = SYSDATE where Srf_No=#srfNoDisp#	
</update>


<select id="getImageTransIdESRF" parameterClass="java.lang.String"  resultClass="java.lang.String">
      SELECT img_trans_id FROM imp_srf where Srf_No=#srfNO#
</select>
	
<select id="checkForCdifExists" parameterClass="java.lang.String"  resultClass="java.lang.String">
	SELECT cdif_no FROM IMP_cdif where srf_no = #srfNO# and void_date is  null and rownum = 1
</select>


<select id="getCdifCreatedUser" parameterClass="java.lang.String"  resultClass="java.lang.String">
	SELECT cr_user_id FROM IMP_cdif where cdif_no = #cdifNo#  and rownum = 1
</select>


<update id="updatetransactionIdSRF" parameterClass="map">
		update imp_srf set img_trans_id=#transactionID# where Srf_No=#srfno#
</update>

<select id="getImageLocation"  parameterClass="java.lang.String"  resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	     select Img_Name AS imageName,Img_Path AS imagePath,Img_Session_Id AS imageTraID, Mask_Img_Fun AS maskFun from FW_IMAGE_STORE where IMG_SESSION_ID=#imagetraID#
	     and   Mask_Img_Fun is null order by img_upload_date desc
	</select>
	
	
	
	<insert id="insertFWImageStore_Mobile_srf" parameterClass="map">
		<![CDATA[
						INSERT INTO FW_IMAGE_STORE(
			IMG_ID,	
			IMG_SIZE, IMG_NAME, IMG_SESSION_ID, IMG_PATH, 
			IMG_UPLOAD_DATE,VIDEO_YN,UPLOAD_STAT,TAG,MASK_IMG_FUN
			)
			VALUES(
			FW_IMAGE_SEQ.NEXTVAL, 
			#fileSize#, #fileName#, #imgtransactionID#, #folderPath#, 
			CURRENT_TIMESTAMP,#videoYN#,#uploadSta#,#tag#,#maskImgFun#
			)
		]]>
	</insert>
	
	
	<select id="getIssueSRFQueueListAAHK"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		 SELECT 
			  agent_name as agentName,
			  tr_no as trNo,
			  agent_code as agentId,
			  AWB_NO as awbNo, 
			  SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) as awbNoDisp,
			  TO_CHAR(awb_date,'DDMONYY') as awbDate,
			  hkid as hkId,
			  auth_rep_name as authName,
			  request_id as esrfPaymentID,
			  agent_hkid as nationalID,
  			  agent_full_name as agentFullName,
  			  HKID_HASH as nationalIdHash
			FROM imp_payment_process_queue
			WHERE status   = 'P'
			AND comp_date IS NULL  AND (sysdate - 10/1400) &gt; CR_DATE  ORDER BY CR_DATE ASC
	</select>

	<select id="getIssueSRFTxnListAAHK"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		 SELECT 
			  agent_name as agentName,
			  tr_no as trNo,
			  agent_code as agentId,
			  AWB_NO as awbNo, 
			  SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) as awbNoDisp,
			  TO_CHAR(awb_date,'DDMONYY') as awbDate,
			  hkid as hkId,
			  auth_rep_name as authName,
			  request_id as esrfPaymentID,
			  agent_hkid as nationalID,
  			  agent_full_name as agentFullName,
  			  HKID_HASH as nationalIdHash
			FROM imp_payment_process_queue
			WHERE status   = 'P'
			AND comp_date IS NULL AND TXN_NO = #txnNo# ORDER BY CR_DATE ASC
	</select>
	
<select id="getIssueSRFListAAHK"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 	<![CDATA[
			SELECT * FROM (
					SELECT list.*,
					(CASE  
                		   WHEN (list.recd_pcs != NVL((list.pcs + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirPcsType = 'SL' THEN -1 * list.cirPc ELSE list.cirPc END END),'0')) THEN 'IMPRT_167' 
					       WHEN (TO_CHAR(list.recd_wt,'99999990D9') != TO_CHAR(NVL((TO_NUMBER(NVL(list.wt,0)) + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirWtType = 'SL' THEN -1 * TO_NUMBER(NVL(list.cirWt,0)) ELSE TO_NUMBER(NVL(list.cirWt,0)) END END),0),'99999990D9')) THEN 'IMPRT_167' 
					       WHEN list.strCC IS NULL THEN 'IMPRT_170'  
                 		   WHEN (SELECT COUNT(1) FROM MAST_CONSTRAINT_CODE A WHERE CODE = list.strCC AND IMP_SRF_ISS_YN = 'N') > 0 THEN 'IMPRT_172' 
		                   WHEN (list.pcs != list.recd_pcs or list.wt != list.recd_wt) AND (
			                    Select count(1)
			                      from CST_SUBM s
			                      join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
			                          s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
			                      where s.Flt_KEY =  list.flightkey and S.FLT_DATE = list.flt_DATE and 
			                          s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = list.awbno and
			                          c.brkdn_code in ('LP', 'LC', 'SP', 'SC') ) = 0 THEN 'IMPRT_168'  ELSE 'N' END) disableInd
					FROM (
					 					  
					  SELECT 'Normal' as srfType,awb.AGENT_CUST_NO,shp.carr_code,shp.awb_no awbNo,
					  SUBSTR(shp.AWB_NO,1,3)
					  ||'-'
					  ||SUBSTR(shp.AWB_NO,4) AS awbNoDisp ,
					  TO_CHAR(shp.awb_date,'DDMONYY') awbDate,
					  a.awb_type awbType,
					  shp.flt_key flightKey,
					  shp.recd_pcs as recd_pcs,
					  TRIM(TO_CHAR(shp.recd_wt,'99999990D9')) as recd_wt,
					  shp.manifest_pcs pcs,
					  TRIM(TO_CHAR(shp.manifest_wt, '99999990D9')) wt,
					  awb.doc_chk_comp docChkCompl,
					  awb.doc_chk_req docChkReqd,
					  shp.flt_date,
					  awb.SPL_CODE1 AS splCode1,
					  awb.SPL_CODE2 AS splCode2,
					  awb.SPL_CODE3 AS splCode3,
					  awb.SPL_CODE4 AS splCode4,
					  awb.SPL_CODE5 AS splCode5,
					  awb.SPL_CODE6 AS splCode6,
					  awb.SPL_CODE7 AS splCode7,
					  awb.SPL_CODE8 AS splCode8,
					  awb.SPL_CODE9 AS splCode9,
					  awb.CONTENT   AS contents ,
					  awb.lock_ind lockInd,
					    (SELECT cc_code
					    FROM
					  (SELECT t1.cc_code
					  FROM V_CST_IMP_CC_CODE_AWB t1
					  WHERE awb_no                             = SHP.AWB_NO
					  AND FLT_KEY=SHP.FLT_KEY
					  AND TO_CHAR(FLT_DATE,'DDMONYY')=SHP.FLT_DATE
					  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
					  AND t1.flt_key NOT LIKE 'NB%'
					  ) WHERE rownum = 1)  AS strCC,
					  TO_CHAR(shp.FLT_DATE,'DDMONYY') AS flightDate,
					  awb.APPNTD_AGENT                AS agentName,
					  (SELECT SUM(inv.locn_pcs)
					  FROM awb_inventory inv
					  WHERE inv.awb_no = shp.awb_no
					  AND inv.awb_date = shp.awb_date
					  AND inv.flt_key  = shp.flt_key
					  AND inv.flt_date = shp.flt_date
					  ) AS invenPc,
					  (SELECT TRIM(TO_CHAR(SUM(inv.locn_wt), '99999990D9'))
					  FROM awb_inventory inv
					  WHERE inv.awb_no = shp.awb_no
					  AND inv.awb_date = shp.awb_date
					  AND inv.flt_key  = shp.flt_key
					  AND inv.flt_date = shp.flt_date
					  )             AS invenWt,
					  awb.CHRG_MODE AS chargeMode,
					   (
					  CASE
					    WHEN (SELECT COUNT(*)
					      FROM CUST_UNDERTAKING CU
					      WHERE CU.AGENT_CODE =
					        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
					        )
					      AND CU.CARR_CODE =
					        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
					        )
					      AND awb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
					    THEN 'Y'
					    ELSE 'N'
					  END)                                     AS licUnder,
					  shp.CIR_PROC_USER as CIR_PROC_USER,
					  shp.cir_pcs_type                          AS cirPcsType,
					  shp.cir_wt_type                          AS cirWtType,
					  shp.cir_wt_type                          AS cirType,
					  shp.cir_pcs                              AS cirPc,
					  TRIM(TO_CHAR(shp.cir_wt, '99999990D9')) AS cirWt,
					  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=awb.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)  AS valInd,
					  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
					  (SELECT COUNT(b.hawb_no)
					  FROM EDI_FHL A,
					    EDI_FHL_HAWB B
					  WHERE AWB_NO = shp.awb_no
					  AND awb_date = shp.awb_date
					  AND A.TR_NO  =B.TR_NO
					  ) AS fhlCount,
					  (
					  CASE
					    WHEN (SELECT sum(coun) from (
					        SELECT decode(count(1),0,0,1) coun
					        FROM IMP_CHRG_ITM_REV_AWB
					        WHERE AWB_NO = shp.awb_no
					        AND AWB_DATE = shp.awb_date
					        AND ITM_CODE = 'TCPREP'
					        UNION
					        SELECT decode(count(1),0,0,2) coun
					        FROM IMP_CHRG_ITM_REV_AWB
					        WHERE AWB_NO = shp.awb_no
					        AND AWB_DATE = shp.awb_date
					        AND ITM_CODE = 'TCBULK')) > 2
					    THEN 'MIX'
					    ELSE
					      CASE
					        WHEN (SELECT COUNT(1)
					          FROM IMP_CHRG_ITM_REV_AWB
					          WHERE AWB_NO =shp.awb_no
					          AND AWB_DATE =shp.awb_date
					          AND ITM_CODE ='TCPREP') > 0
					        THEN 'PPK'
					        ELSE
					          CASE
					            WHEN (SELECT COUNT(1)
					              FROM IMP_CHRG_ITM_REV_AWB
					              WHERE AWB_NO =shp.awb_no
					              AND AWB_DATE =shp.awb_date
					              AND ITM_CODE = 'TCBULK') > 0
					            THEN 'Bulk'
					            ELSE ''
					          END
					      END
					  END) AS tcType
					FROM imp_car_shp shp,
					  imp_car_awb awb,
					  awb a
					WHERE shp.awb_no   = awb.awb_no
					AND shp.awb_date   = awb.awb_date
					AND shp.awb_no     = a.awb_no
					AND shp.awb_date   = a.awb_date
					AND a.awb_closed_yn='N'
					AND EXISTS
					  (SELECT NULL
					    FROM awb_inventory av
					    WHERE av.awb_no = shp.awb_no
					    AND av.awb_date = shp.awb_date
					    and av.flt_key = shp.flt_key
					    and av.flt_date = shp.flt_date
					    and av.cdif_no is null
					    AND av.locn_pcs > 0
					  )
					AND (shp.awb_no,shp.awb_date,shp.flt_key,shp.flt_date) NOT IN (
					SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
					UNION ALL
					SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =shp.awb_no AND IMPSRF.AWB_DATE = shp.awb_date 
					AND IMPSRFFLT.FLT_KEY=shp.flt_key AND IMPSRFFLT.FLT_DATE = shp.flt_date AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED'
					)
					AND a.awb_type='I'
					AND a.AWB_CLOSED_YN='N' 
					AND shp.CAR_CREATED = 'Y'
					UNION ALL
					SELECT 'CDIF' AS srfType,car.AGENT_CUST_NO,'' carr_code,a.awb_no awbNo,
					  SUBSTR(a.AWB_NO,1,3)
					  ||'-'
					  ||SUBSTR(a.AWB_NO,4) AS awbNoDisp,
					  TO_CHAR(a.awb_date,'DDMONYY') awbDate,
					  a.awb_type awbType,
					  C.CDIF_NO flightKey,
					  0 as recd_pcs,
					  TRIM(TO_CHAR('0','99999990D9')) as recd_wt,
					  0 pcs,
					  TRIM(TO_CHAR(0, '99999990D9')) wt,
					  'N/A' docChkCompl,
					  'N/A' docChkReqd,
					  C.CDIF_DATE AS flt_date,
					    a.SPL_CODE1 AS splCode1,
					  a.SPL_CODE2 AS splCode2,
					  a.SPL_CODE3 AS splCode3,
					  a.SPL_CODE4 AS splCode4,
					  a.SPL_CODE5 AS splCode5,
					  a.SPL_CODE6 AS splCode6,
					  a.SPL_CODE7 AS splCode7,
					  a.SPL_CODE8 AS splCode8,
					  a.SPL_CODE9 AS splCode9,
					  a.CONTENT   AS contents ,
					  CAR.lock_ind lockInd,
					 (SELECT cc_code
					    FROM
					  (SELECT t1.cc_code
					  FROM V_CST_IMP_CC_CODE_AWB t1
					  WHERE awb_no                             = A.AWB_NO
					  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
					  AND t1.flt_key NOT LIKE 'NB%'
					  ) WHERE rownum = 1)                           AS strCC,
					  TO_CHAR(C.CDIF_DATE,'DDMONYY') AS flightDate,
					  CAR.APPNTD_AGENT               AS agentName,
					  CH.PCS                         AS invenPc,
					  TRIM(TO_CHAR(CH.WT, '99999990D9'))                          AS invenWt,
					  'N/A'                          AS chargeMode,
					    (
					  CASE
					    WHEN (SELECT COUNT(*)
					      FROM CUST_UNDERTAKING CU
					      WHERE CU.AGENT_CODE =
					        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
					        )
					      AND CU.CARR_CODE =
					        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
					        )
					      AND a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
					    THEN 'Y'
					    ELSE 'N'
					  END)  AS licUnder,
					  '' as CIR_PROC_USER,
					  'N/A'                          AS cirPcsType,
					  'N/A'                          AS cirWtType,
					  'N/A' AS cirType,
					  0 AS cirPc,
					  TRIM(TO_CHAR('0','99999990D9')) AS cirWt,
					  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=car.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)                             AS valInd,
					  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
					  (SELECT COUNT(HAWB.hawb_no)
					    FROM EDI_FHL HD,
					      EDI_FHL_HAWB HAWB
					    WHERE HD.AWB_NO = a.awb_no
					    AND HD.awb_date = a.awb_date
					    AND HAWB.TR_NO  =HD.TR_NO
					  )     AS fhlCount,
					  'N/A' AS tcType 
					FROM IMP_CDIF C
					JOIN AWB a
					ON c.awb_no         = a.awb_no
					AND c.awb_date      = a.awb_date
					AND a.awb_closed_yn = 'N'
					AND a.awb_type      ='I'
					JOIN IMP_CAR_AWB CAR
					ON CAR.awb_no    = a.awb_no
					AND CAR.awb_date = a.awb_date
					JOIN
					  (SELECT CDIF_NO,
					    SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS,
					    SUM(NVL(CDIF_UTL_WT, 0)  + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
					  FROM IMP_CDIF_HAWB
					  GROUP BY CDIF_NO
					  ) CH
					ON CH.CDIF_NO = C.CDIF_NO
					LEFT JOIN
					  (SELECT CDIF_NO,
					    MAX(SEQ_NO) SEQ_NO
					  FROM AWB_INVENTORY
					  WHERE CDIF_NO IS NOT NULL
					  GROUP BY CDIF_NO
					  ) AM
					ON AM.CDIF_NO = C.CDIF_NO
					LEFT JOIN AWB_INVENTORY AI
					ON AI.SEQ_NO = AM.SEQ_NO
					WHERE C.VOID_USER IS NULL 
					AND (A.awb_no,A.awb_date,c.CDIF_NO,TRUNC(c.CDIF_DATE)) NOT IN (
					SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
					UNION ALL
					SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =A.awb_no AND IMPSRF.AWB_DATE = A.awb_date 
					AND IMPSRFFLT.FLT_KEY=c.CDIF_NO AND IMPSRFFLT.FLT_DATE = TRUNC(c.CDIF_DATE) AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED')
					AND EXISTS
					    (SELECT NULL
					    FROM awb_inventory av
					    WHERE av.awb_no = a.awb_no
					    AND av.awb_date = a.awb_date
					    and av.cdif_no = c.cdif_no
					    and av.cdif_no is not null
					    AND av.locn_pcs > 0)
				) list WHERE 1=1  ]]>
  				AND list.awbNo  = #awbNo#	
  		) A  order by A.awbNo,A.flt_date,A.flightKey
	</select>

	
	<select id="checkSRFHold"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where  Srf_No=#selectedSRFNo# and Hold_Srf_Ind='Y'				
	</select>
	
	
	<select id="checkCargoRelese"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where Srf_No=#srfNoDisp# and CARGO_RELEASE_STS is not null and cargo_release is not null				
	</select>
	
	<select id="getAWBDetailsSRF"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFBO">
		select Awb_No as awbNo, to_char(Awb_Date,'DDMONYY') as awbDate from imp_srf where Srf_No=#esrfNo#				
	</select>
	
	<select id="checkEsrfCargoReleaseStatus"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select DECODE(COUNT(1),0,'N','Y')  from imp_srf where srf_No=#srfNumber# and cargo_release is not null and cargo_release_sts = 'OK'			
	</select>
	
	<select id="srfRegulatorDTL"  parameterClass="cargo.cms.imprt.report.bo.ImpShipmentReleaseReptBO" resultClass="cargo.cms.imprt.report.bo.ImpShipmentReleaseReptBO">
		select distinct Clr_Department AS clrepartment, Clr_Inspector as clrInspector, Clr_Result as clrResult from IMP_SRF_REGULATOR_CLR_DTL 
		 where Srf_No=#sc_srfNo# and Cdif_No is null	and Clr_Result is not null
		 <!-- AND  not exists (select null from IMP_SRF_REGULATOR_CLR_DTL where Srf_No=#sc_srfNo# and Cdif_No is not null) -->			
	</select>
	
	<select id="cdifRegulatorDTL"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.report.bo.MaintainCDIF556_ReptBO">
		select distinct Clr_Department AS clrepartment, Clr_Inspector as clrInspector , Clr_Result as clrResult 
		from IMP_SRF_REGULATOR_CLR_DTL where cdif_no = #cdifNo# and Clr_Result is not null
		<!--  where srf_no = (SELECT srf_no FROM IMP_CDIF where cdif_no = #cdifNo#)
							AND not exists ( select null from IMP_SRF_REGULATOR_CLR_DTL where Cdif_No= #cdifNo# )
			UNION 
		select Clr_Department AS clrepartment, Clr_Inspector as clrInspector from IMP_SRF_REGULATOR_CLR_DTL where Cdif_No= #cdifNo#		 -->	
	</select>
	
	<select id="sqlSendUpdatedAgentForCarrInd"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		      SELECT nvl(SEND_AGENT_GLS,'N') FROM MAST_CARRIER where CODE = #carrCode#
	 </select>
	
	
	 	
	<select id="checkESRFPost"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where Srf_No=#srfNoDisp# and Post_Date is not null and Post_User is not null				
	</select>
<select id="imp_checkedInOtherFlight_desktop"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT COUNT(1)
   		FROM uld_inventory
  		WHERE uld_key      = #uldKey#
  		AND LOC_CODE IS NOT NULL   
		AND CFM_STATUS NOT  IN ('RELEASED','RESERVED')
		AND NOT (flt_key     = #fltKey#
		AND FLT_DATE         = #fltDate#)
		AND flt_type = 'I' and flt_key is not null	
	]]>
	</select>
	<select id="getDupRecFromDollyDTL_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# and dolly_id != #dollyId#
	]]>
	</select>
	<select id="getSeqNumberFromDollyDTL_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT MAX(TO_NUMBER(SEQ_NO))+1 FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# and dolly_id = #dollyId#
	]]>
	</select>
	<insert id="insertrampdollydtl_Desktop" parameterClass="java.util.HashMap" >
	INSERT INTO IMP_RAMP_DOLLY_DTL (DOLLY_ID,FLT_KEY, FLT_DATE,ULD_KEY,SEQ_NO,DAM_IND,EMPTY_IND,EIC_IND,CR_USER_ID , CR_DATE, LM_USER_ID, LM_DATE,COOL_DOLLY_ID,IHOLA_DROP_LOCN,IHOTC_DROP_LOCN) 
	VALUES (#dollyId#,#fltKey#,#fltDate#,#uldKey#,#seqNo#,#damInd#,nvl(#emptyInd#,'N'),nvl(#eicInd#,'N'),#userID#,SYSDATE,#userID#,SYSDATE,#coolDollyId#,#iholaDropLocn#,#ihotcDropLocn#)
	</insert>
	<select id="getCountFromULDInv_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM uld_inventory WHERE uld_key = #uldKey#
	</select>
	<insert id="insertrampdollyuldinv_Desktop" parameterClass="java.util.HashMap" >
	INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,ULD_UNLOAD,DAM_IND,tr_type) 
			values(#uldKey#,#uldCarr#,sysdate,sysdate,#userID#,'',0,0,#uldNo#,#uldType#,#uldCarr#,'','N','','N','N','N','Y',#damInd#,'UIU')
	</insert>
	
	<update id="updateEsrfEawbPrintInd" parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		update IMP_CAR_SHP set EAWB_PRINT_YN = 'Y' where awb_no = #awbNo# and awb_date = #awbDate# and flt_key= #fltKey# and flt_date = #fltDate#
	</update>
	
	
	<select id="getCarrierEsrfConfig" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(ALLOW_ESRF,'N') FROM mast_carrier where code = #carrierCode# 
	</select>
	
 	<select id="getAgentEsrfConfig" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DECODE(COUNT(1),0,'N','Y') FROM  
		( SELECT null FROM imp_car_awb WHERE awb_no = #AWB_NO# AND awb_date = #AWB_DATE# AND EXISTS ( SELECT NULL FROM cust_company WHERE code = imp_car_awb.agent_cust_no AND NVL(ALLOW_ESRF_AA,'N') = 'Y')
		  UNION 
		  SELECT null FROM edi_fhl WHERE awb_no = #AWB_NO#  AND awb_date = #AWB_DATE#  AND EXISTS ( SELECT NULL FROM cust_company WHERE code = edi_fhl.FHL_OWNER AND NVL(ALLOW_ESRF_AA,'N') = 'Y') 
		)
 	</select> 
 	
 	<select id="getEligiblityStatusLicenceUndertaking" parameterClass="java.util.HashMap" resultClass="java.lang.String">
 			SELECT DECODE(COUNT(1), 0, '', 'GREEN') as eligibilityStatus FROM CUST_UNDERTAKING CU WHERE 
            CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_NO= #AWB_NO# AND AWB_DATE= #AWB_DATE#) AND 
            CU.CARR_CODE = #CARR# AND  #AWB_DATE# BETWEEN CU.EFF_FROM AND CU.EFF_TO
    </select>

	<select id="getAmberEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		WITH HAWB_LST AS ( select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# ) )
		SELECT DECODE(COUNT(1), 0, '', 'AMBER') as eligibilityStatus FROM HAWB_LST WHERE 1 =1 AND CONT is not null and EXISTS (SELECT NULL FROM MAST_ESRF_ELIGIBLE_CONFIG WHERE CONFIG_TYPE = 'C' AND description = CONT )
	</select>
	
	<select id="getGreyEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
				WITH HAWB_LST AS ( select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND  AWB_DATE = #AWB_DATE# ) )
                    SELECT DECODE(COUNT(1), 0, '', 'GREY') as eligibilityStatus FROM HAWB_LST WHERE 1 =1 AND CONT  is not null 
                    and  EXISTS (
                      SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'C' and description like ('%' || CONT  || '%') 
                        UNION
                      SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'C' and CONT like ('%' || description  || '%') 
                    ) 
	</select>
           
    <select id="getRedEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT DECODE(COUNT(1), 0, '', 'RED') as eligibilityStatus FROM edi_fhl_hawb awb where hawb_no = #HAWB_NO# 
    	    AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# )
    		and exists (SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'S' and description in (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))
    </select>   
             
    <select id="checkEsrfHawbELStatusExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM IMP_HAWB_ESRF_EL_STATUS where AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# AND hawb_no = #HAWB_NO# 
	</select>         
        
    <select id="getHawbCont" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# ) 
	</select> 
	
	<update id="insertEsrfHawbELStatus" parameterClass="java.util.HashMap">
			 INSERT INTO  IMP_HAWB_ESRF_EL_STATUS (TR_NO, AWB_NO, AWB_DATE, HAWB_NO, STATUS, CONTENT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
				VALUES ( IMP_HAWB_ESRF_EL_STS_SEQ.nextval, #AWB_NO#,#AWB_DATE#,#HAWB_NO#, #EL_STATUS#, #CONT# , NVL(#USER#,'SYSTEM'), SYSDATE,NVL(#USER#,'SYSTEM'), SYSDATE)
	</update> 
	
	<insert id="updateEsrfHawbELStatus" parameterClass="java.util.HashMap">
		 UPDATE IMP_HAWB_ESRF_EL_STATUS SET STATUS = #EL_STATUS# , CONTENT = #CONT# , LM_USER_ID = NVL(#USER#,'SYSTEM') , LM_DATE = SYSDATE WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# AND hawb_no = #HAWB_NO# 
	</insert>
	
	<select id="getSrfDet"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFImportIncomingBO" >
	 <![CDATA[
		select ESRF_YN  as esrfyn,
		HOLD_SRF_IND as holdSrf 
		from
		 	imp_srf
		where SRF_NO = #esrfNo#		
		]]>
   </select>
   
   <select id="getCollectionRe" parameterClass="cargo.cms.imprt.bo.SRFImportIncomingBO" resultClass="java.lang.Integer" >
		select count(1) from IMP_SRF  where SRF_NO = #esrfNo# AND CARGO_COLLECTED is null	
  </select>
	
    <select id="getAWBTypeForESRF" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT DECODE(hawb_dest,'HKG', 'I', '') FROM edi_fhl_hawb where hawb_no = #HAWB_NO#  AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# )
    </select> 
    
    <select id="chkPrepaymentRecordExists" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT TR_NO as trNum FROM BILL_PRE_PAYMENT_DTL where AWB_NO = #awbNo# 
				and awb_date = #awbDate# and SRF_NO is null and rownum =1
	</select>
	
	<select id="chkBundleRecordExists" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT dtl.BUNDLE_REF_NO FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO  
                 AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND rownum =1
	</select>
	
	<insert id="updatePrePaymentInfo" parameterClass="java.util.HashMap">
		 UPDATE BILL_PRE_PAYMENT_DTL SET SRF_NO = #srfNo# ,  LM_USER_ID = NVL(#userId#,'SYSTEM') , LM_DATE = SYSDATE 
		 WHERE TR_NO = #trNo#  
	</insert>
	
	<select id="checkPrePayDueDate" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT count(1) FROM BILL_PRE_PAYMENT_DTL where  TR_NO = #prePayTrNo# and trunc(SYSDATE) &gt; DUE_DATE
	</select>
	
	<select id="checkChargesWithPrePayAmt" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		SELECT count(1) FROM BILL_PRE_PAYMENT_DTL where  TR_NO = #prePayTrNo#  and  TOTAL_AMT &lt; nvl(#totalCharges#,0)
	</select>
		<select id="getCourierConfigSplCode" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(SPL_CODE, ',')) FROM(
		SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
		WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
		AND SPLCODE.CARR_CODE = AWB.CARR_CODE
		AND AWB.AWB_NO = #awbNo#
		AND AWB.AWB_DATE = #awbDate#)
	</select>
</sqlMap>