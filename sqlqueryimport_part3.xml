'Y'
		where AWB_NO = #awbNo#
		and AWB_DATE = #awbDate#
		and (AWB_TYPE = 'I' OR AWB_TYPE = 'T')
   	 </update>   	 
   	
   	 <update id="sqlUpdateShcLockUldCsd"  parameterClass="map" >
   	 <isNotEmpty property="uldKey">
   	 UPDATE ULD_INVENTORY 
   	 SET LOCK_RQS = 'Y'
   	 WHERE ULD_KEY= #uldKey#
   	 </isNotEmpty>
   	 <isNotEmpty property="lspNo">
   	 UPDATE LSP_INVENTORY 
   	 SET LOCK_RQS = 'Y'
   	 WHERE LSP_NO= #lspNo#
   	 </isNotEmpty>
   	</update> 
   	
   	<select id="getAWBInvSeqNo"  parameterClass="map" resultClass="java.lang.String">	
		SELECT INV.SEQ_NO FROM AWB_INVENTORY INV
	    WHERE INV.AWB_NO = #awbNo# AND INV.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	    AND INV.LOC_CODE = 	#locCode#  and rownum = 1 
	</select>
	
	<select id="checkAWBExistsInInv"  parameterClass="map" resultClass="java.lang.Integer">	
		SELECT count(1) FROM AWB_INVENTORY INV
	    WHERE INV.AWB_NO = #awbNo# AND INV.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	    AND INV.LOC_CODE = 	#locCode#	  
	</select>
   	
   	<select id="getAWBTrfType"  parameterClass="map" resultClass="java.lang.String">	
		select SHP_TRF_TYPE
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'QT' 
                  and rownum = 1
   	
		<!-- select DTL.TRF_TYPE
	    FROM DDT_SHP_TRF_DTL DTL
	    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
	    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	    where SHP.AWB_NO = #awbNo# AND SHP.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	 -->		
	</select>
	
	
	<select id="checkTTTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'TT'                   
	</select>
	
	<select id="checkIFTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'IF'                   
	</select>
	
	<select id="checkQTTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'QT'                   
	</select>
	
	
	<select id="getCntgFltDetailsForQTShip"  parameterClass="map" resultClass="cargo.cms.imprt.bo.CarShpBO">	
		select SHP_CNTG_FLT_KEY shpCntgFltKey, 
		to_char(SHP_CNTG_FLT_DATE,'DDMONYY') as shpCntgFltDate
		from v_ddt_dtl
		where awb_no = #awbNo#
        and awb_date = TO_DATE(#awbDate#,'DDMONYY')
        and flt_key = #fltKey#
        and flt_date = TO_DATE(#fltDate#,'DDMONYY')
        and SHP_TRF_TYPE = 'QT'    
	</select>
	
	<select id="getJoNumberFromExpBuildUp" parameterClass="map" resultClass="java.lang.String">	
		SELECT JO.JO_NO
		FROM EXP_BU_JO JO
		JOIN EXP_BU_JO_DTL DTL ON JO.JO_NO = DTL.JO_NO
		WHERE 
		JO.FLT_KEY = #shpCntgFltKey#
		AND JO.FLT_DATE = TO_DATE(#shpCntgFltDate#,'DDMONYY')
		AND DTL.AWB_NO = #awbNo#
		AND DTL.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="getJoNumberDTLExpBuildUp" parameterClass="map" resultClass="java.util.HashMap">	
		SELECT JO.JO_NO joNo, to_char(nvl(AWB_JO_PC,0) - nvl(locn_jo_pcs,0)) reqPcs,
                to_char(nvl(AWB_JO_WT,0) - nvl(locn_jo_wt,0)) reqWt, to_char(nvl(locn_jo_pcs,0)) locnJoPcs,  to_char(nvl(locn_jo_wt,0)) locnJoWt
		FROM EXP_BU_JO JO
		JOIN EXP_BU_JO_DTL DTL ON JO.JO_NO = DTL.JO_NO
		left join (select JO_NO , AWB_NO, AWB_DATE, nvl(sum(LOCN_JO_PC),0) locn_jo_pcs, nvl(sum(LOCN_JO_Wt),0) locn_jo_wt
                      from EXP_BU_JO_LOCN group by JO_NO , AWB_NO, AWB_DATE) locn  
                      on JO.JO_NO = locn.JO_NO and locn.AWB_NO = DTL.AWB_NO and locn.AWB_DATE = DTL.AWB_DATE
		WHERE 
		JO.FLT_KEY = #shpCntgFltKey#
		AND JO.FLT_DATE = TO_DATE(#shpCntgFltDate#,'DDMONYY')
		AND DTL.AWB_NO = #awbNo#
		AND DTL.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		AND nvl(AWB_JO_PC,0) - nvl(locn_jo_pcs,0) > 0
	</select>	
	
	<select id="checkBUJOLocnExistsULDLSP"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1) from EXP_BU_JO_LOCN where seq_no = #seqNo#and JO_NO =  #joNo#              
	</select>
	
	<update id="updateExpBuildupJoUldBreakdown"  parameterClass="map">   	
				update EXP_BU_JO_DTL
				set AWB_JO_PC = AWB_JO_PC + #locnJoPc#,
				AWB_JO_WT = AWB_JO_WT + #locnJoWt#
   				where AWB_NO = #awbNo#
                and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')               
                and JO_NO =  #joNo#        
   	</update> 
	
	<update id="updateExpBuildupJoLocnUldBreakdown"  parameterClass="map">   	
				update EXP_BU_JO_LOCN
				set LOCN_JO_PC = LOCN_JO_PC + #locnJoPc#,
				LOCN_JO_WT = LOCN_JO_WT + #locnJoWt#
   				where AWB_NO = #awbNo#
                and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
                and LOC_CODE = #locCode#
                <isNotEmpty property="uldKey">
                	and ULD_KEY = #uldKey#
                </isNotEmpty>
                <isNotEmpty property="lsp">
                	and LSP =  #lsp#
                </isNotEmpty>
                and JO_NO =  #joNo#        
   	</update> 
	
	
	<insert id="insertExpBuildupJoLocnUldBreakdown" parameterClass="map">
		INSERT INTO EXP_BU_JO_LOCN(LM_USER_ID,CR_DATE,CR_USER_ID,RET_IND,SEQ_NO,AWB_DATE,LM_DATE,JO_NO,
		AWB_NO,LOCN_JO_WT,LOCN_JO_PC,ULD_KEY,LSP,LOC_CODE,BU_YN)
		values (#lmUserId#,SYSDATE,#crUserId#,#retInd#,#seqNo#,to_date(#awbDate#,'DDMONYY'),SYSDATE,#joNo#,
		#awbNo#,#locnJoWt#,#locnJoPc#,#uldKey#,#lsp#,#locCode#,#buYN#)
	</insert>  	
	
	<select id="getRecdPcsTrmPcsImpCarShp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">			
	  SELECT  RECD_PCS, TRM_PCS
	  FROM IMP_CAR_SHP		
	  WHERE AWB_NO	  =   #awbNo#  AND
		   	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		    FLT_KEY = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	
	</select>
	
	<select id="getTRMHdDtl"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.TrmBO">	
	  SELECT  
      h.TRM_NO AS trmNo, 
      h.TRANSF_CARR AS transferCarrier, 
	  h.RECD_CARR AS recevCarrier, 
      d.PCS AS pcs,
      d.WT AS wt
      FROM IMP_TRM_HD h , IMP_TRM_DTL d
      WHERE d.TRM_NO = h.TRM_NO AND h.Status  = 'ISSUED' 
      AND d.AWB_NO = #awbNo#
      AND d.FLT_KEY = #fltKey#
      AND d.flt_date = TO_DATE(#fltDate#,'DDMONYY')
      AND exists (select null
                  from v_ddt_dtl
                  where awb_no = d.awb_no
                  and flt_key = d.flt_key
                  and flt_date = d.flt_date
                  and SHP_TRF_TYPE = 'QT')
		Order by d.pcs
	</select>
	
	<update id="updateImpCarShpTrmPcs" parameterClass="java.util.HashMap">
	UPDATE IMP_CAR_SHP
	SET     TRM_PCS = TRM_PCS + #pcs#,
			LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#fltKey#) AND
		   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
	</update>	

 <!-- ##################### Inbound ULD Breakdown start  : Santosh : End    ###############################################-->
 
 <!-- Issue SRF Backend :: Anup :: End -->
 
  <parameterMap id="cdifFltMap" class="map" >
		<parameter property="p_cdif_no" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="V_FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="V_FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="V_CARR" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="imp_prc_cdif_flt" parameterMap="cdifFltMap" >
		{ call PRC_GET_CDIF_FLT(?,?,?,?)}
	</procedure>
 
	<select id="bkg_record_by_truck_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
      		B.AUTH_REP_NAME as authPerson, B.AUTH_REP_ID as authPersonId, A.COLL_PERSON_NAME as collectedBy, A.COLL_PERSON_ID as hkId, 
      		A.BOOKING_NO as bookingNo
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			B.BOOKING_NO=A.BOOKING_NO AND A.SRF_ISSUED='N' AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			<isEmpty prepend="AND" property="bookingNo">
				(TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND 
        		TO_DATE(BKG_SLOT_DATE || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DD-MON-YY HH24MI') 
        		BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24MI')
			</isEmpty>
			<isNotEmpty prepend="AND" property="bookingNo">
				A.BOOKING_NO=#bookingNo#
			</isNotEmpty>
	</select>
	<select id="cdif_record_by_truck_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			DISTINCT(A.AWB_NO) as awbNo, B.AUTH_REP_NAME as authPerson, B.COLL_NAME as collectedBy, 
			B.COLL_HKID as hkId, B.AUTH_REP_ID as authPersonId, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.CDIF_NO as fltKey, 
      		TO_CHAR(A.CDIF_DATE, 'DDMONYY') as fltDate 
		FROM 
			IMP_CDIF A, IMP_SRF B WHERE B.SRF_NO=A.SRF_NO AND 
			A.FOLLOW_ON_TRUCK=#truckNo# AND A.CR_DATE>=TO_DATE(#cdifFromTime#, 'DDMONYY HH24MI')
			AND A.CDIF_SRF_NO IS NULL
		]]>
	</select>
	
	<select id="cargo_record_by_rtn_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		SELECT 
			  DISTINCT(A.AWB_NO) as awbNo, 
		      A.COLL_NAME as authPerson, 
		      A.AGENT_NAME as authPerson, 
		      A.COLL_NAME as collectedBy, 
			  A.COLL_HKID as hkId, 
		      A.COLL_HKID as authPersonId, 
		      TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
		      A.RTN_NO as fltKey, 
		      TO_CHAR(A.CR_DATE, 'DDMONYY') as fltDate 
		FROM 
			  EXP_RTN_HD A	
		WHERE
		      A.RTN_NO = #listPrintRTNNo#
	</select>
	
	<select id="find_trip_id_by_truck_no" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			TRIP_ID 
		FROM 
			TRUCK_TRIP 
		WHERE 
			TRUCK_NO=#truckNo# AND CLOSED='N'
	</select>
	<insert id="insert_truck_trip" parameterClass="java.util.HashMap">
		INSERT INTO 
			TRUCK_TRIP (TRIP_ID, TRUCK_NO, PURPOSE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(TRUCK_TRIP_SEQ.nextval, #truckNo#, 
			#purpose#, #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<insert id="insert_imp_truck_srf" parameterClass="java.util.HashMap">
		INSERT INTO 
			IMP_TRUCK_SRF (TRIP_ID, SRF_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES
			(#tripId#, #srfNo#, #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<update id="issue_srf_update_imp_bkg" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING 
		SET 
			SRF_ISSUED=#srfIssued# 
		WHERE 
			BOOKING_NO=#bookingNo#
		]]>
	</update>
	<update id="issue_srf_update_imp_bkg_dtl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING_DTL 
		SET 
			ERR_RMK=#errorRemarks#, SRF_NO=#srfNo# 
		WHERE 
			AWB_NO=#awbNo# AND BOOKING_NO=#bookingNo#
		]]>
	</update>
	<select id="get_app_agt_for_backend" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			APPNTD_AGENT 
		FROM 
			IMP_CAR_AWB 
		WHERE 
			AWB_NO = #awbNo# AND TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</select>
	
	<!--  Changed for QR -->
	<select id="srf_move_job_order_by_trk_no" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		<![CDATA[
		SELECT 
			C.AWB_NO as awbNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.TARGET as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt, E.WH_TYPE as whType, 
			F.CC_CODE as ccCode, TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B, AWB_INVENTORY C 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=C.FLT_KEY AND F.FLT_DATE=C.FLT_DATE AND F.AWB_NO=C.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', 
			MAST_WH_LOC D, MAST_WH_GROUP E 
		WHERE A.STATUS not in ('CANCEL') 
			and A.BOOKING_NO=B.BOOKING_NO 
			AND B.AWB_NO=C.AWB_NO AND B.AWB_Date=C.AWB_Date AND B.flt_key=C.flt_key AND B.flt_Date=C.flt_Date 
			AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND (TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR 
			TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND TO_DATE((BKG_SLOT_DATE || ' ' || SUBSTR(TRIM(TO_CHAR
			(NVL(BKG_SLOT_FROM,0),'0000')),0,2) || SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)), 
			'DD-MON-YY HH24MI')<TO_DATE(#bkgSlot#, 'DDMONYY HH24MI')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="srf_move_job_order_by_bkg_no" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		SELECT 
			C.AWB_NO as awbNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.DEL_ZONE as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt, E.WH_TYPE as whType, 
			F.CC_CODE as ccCode, TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B, AWB_INVENTORY C 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=C.FLT_KEY AND F.FLT_DATE=C.FLT_DATE AND F.AWB_NO=C.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', 
			MAST_WH_LOC D, MAST_WH_GROUP E  
		WHERE A.STATUS not in ('CANCEL') and A.BOOKING_NO=B.BOOKING_NO 
			AND B.AWB_NO=C.AWB_NO AND B.AWB_Date=C.AWB_Date AND B.flt_key=C.flt_key AND B.flt_Date=C.flt_Date
			AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND A.BOOKING_NO=#bookingNo#
	</select>
	
	<!--  Changed for QR -->
	<select id="srfMoveJobOrderByTruckNo" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		SELECT 
			B.AWB_NO as awbNo, C.CODE as locCode, B.LSP_NO as lspNo, B.ULD_KEY as uldKey, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, 
			B.LOCN_PCS as pcs, B.LOCN_WT as wt, A.SRF_NO as refNo, D.WH_TYPE as whType, F.CC_CODE as ccCode, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_SRF A, AWB_INVENTORY B 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=B.FLT_KEY AND F.FLT_DATE=B.FLT_DATE AND 
      		F.AWB_NO=B.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', MAST_WH_LOC C, MAST_WH_GROUP D 
		WHERE 
			A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE AND A.srf_no = B.srf_no AND B.LOC_CODE = C.CODE AND C.WH_GROUP = D.WH_GROUP 
			AND A.TRUCK_NO = #truckNo#
	</select>
	<select id="findFuncNameForRtrvMoveOrder" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM MAST_CODE_DTL WHERE CODE_TYPE='RTRV_MONITORING' AND CODE_DESC=#param#
	</select>
	<insert id="ins_move_job_order" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,REF_NO,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE) 
		VALUES 
			(#function#, #refNo#, #awbNo#, #locCode#, #lspNo#, #uldKey#, #pcs#, #wt#, #target#, #status#, 
			#crUserid#, SYSDATE, #lmuserid#, SYSDATE, #type#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'))
	</insert>
	
	<!--  Changed for QR -->
	<select id="find_bkg_record" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			BOOKING_NO as bookingNo 
		FROM 
			IMP_BOOKING 
		WHERE STATUS not in ('CANCEL') and
			NOT_READY='N' AND BKG_SLOT_DATE > SYSDATE 
			AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DDMONYY HH24MI') <= TO_DATE(#bkgCutOffTime#, 'DDMONYY HH24MI')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="find_awb_dtls_from_bkg" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			A.AWB_NO as awbNo, A.AWB_DATE as awbDate, F.CC_CODE as ccCode, 
			C.RECD_PCS as recdPcs, C.MANIFEST_PCS as manifestPcs, C.CIR_PCS as cirPcs 
		FROM IMP_BOOKING_DTL A
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.AWB_NO=A.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000'
      		,IMP_CAR_AWB B, IMP_CAR_SHP C 
		WHERE C.AWB_NO=A.AWB_NO AND B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND B.AWB_DATE=A.AWB_DATE AND A.FLT_KEY=C.FLT_KEY AND A.FLT_DATE=C.FLT_DATE 
			and A.BOOKING_NO=#bookingNo#
	</select>
	<select id="find_issue_srf_by_cc_code" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT IMP_SRF_ISS_YN FROM MAST_CONSTRAINT_CODE WHERE CODE=#ccCode#
	</select>
	<update id="upd_imp_bkg_not_ready" parameterClass="java.lang.String">
		UPDATE
			IMP_BOOKING 
		SET 
			NOT_READY = 'Y' 
		WHERE 
			BOOKING_NO = #bookingNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="upd_cdif_srf_in_imp_cdif" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_CDIF 
		SET 
			CDIF_SRF_NO = #srfNo#, ERR_RMK = #errorRemarks# 
		WHERE 
			AWB_NO=#awbNo# and CDIF_NO = #cdifNo#
	</update>
	<select id="findSRFGeneratedForAWB" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		SELECT 
			DISTINCT(SRF_NO) 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	<update id="associateTruckWithSRFNo" parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET TRUCK_NO=#truckNo# WHERE SRF_NO=#srfNo#
	</update>
	<select id="generateSRFForTruck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT(B.AWB_NO) as awbNo, A.AUTH_REP_NAME as authPersonId, A.AUTH_REP_ID as authPerson, 
			A.AUTH_REP_NAME as collectedBy, A.AUTH_REP_ID as hkId 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='Y' AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltKey# AND B.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (A.TRUCK1=#truckNo# OR A.TRUCK2=#truckNo# 
			OR A.TRUCK3=#truckNo# OR A.TRUCK4=#truckNo# OR A.TRUCK5=#truckNo#)
	</select>
	<select id="findErrDescForErrCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ERR_DESC FROM ERR_MSG WHERE ERR_CODE=#errCode#
	</select>
	<select id="findAwbByBookingRecord" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			B.BOOKING_NO=A.BOOKING_NO AND A.SRF_ISSUED='N' 
			<isEmpty prepend="AND" property="bookingNo">
				(TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND 
        		TO_DATE(BKG_SLOT_DATE || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DD-MON-YY HH24MI') 
        		BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24MI')
			</isEmpty>
			<isNotEmpty prepend="AND" property="bookingNo">
				A.BOOKING_NO=#bookingNo#
			</isNotEmpty>
	</select>
	<select id="findAwbInCdifByTruckNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			DISTINCT(A.AWB_NO) as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.SRF_NO as srfNo , A.cdif_NO as cdifNo 
		FROM 
			IMP_CDIF A, IMP_SRF B WHERE B.SRF_NO=A.SRF_NO AND 
			A.FOLLOW_ON_TRUCK=#truckNo# AND A.CR_DATE>=TO_DATE(#cdifFromTime#, 'DDMONYY HH24MI')
			AND A.CDIF_SRF_NO IS NULL
		]]>
	</select>
	<select id="findAWBByTruckManifestNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.TRUCK_MANF_NO=#truckMnfNo# AND A.SRF_ISSUED='N'
	</select>
	<select id="findAWBDtlsByTruckManifestNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate,  B.FLT_KEY as fltKey, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate, 
			A.AUTH_REP_NAME as collectedBy, A.AUTH_REP_ID as hkId, A.AUTH_REP_NAME as authPerson, A.AUTH_REP_ID as authPersonId 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.TRUCK_MANF_NO=#truckMnfNo# AND A.SRF_ISSUED='N' AND B.AWB_NO=#awbNo# AND 
			B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findAWBByConfRlsNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			SRF_CREATED_YN='N' AND CFM_RLS=#confirmRlsSeqNo#
	</select>
	
	<select id="findAwbByListPrintRTNNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			EXP_RTN_HD 
		WHERE 
			RTN_NO = #listPrintRTNNo#
			
	</select>
	
	<update id="updateSRFForReturnCargo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			EXP_RTN_HD 
		SET 
			SRF_NO = #srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
		WHERE 
			RTN_NO = #listPrintRTNNo#
	</update>
	
	<select id="findAWBDtlsByConfRlsNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
			AGENT_ID as agentId 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			SRF_CREATED_YN='N' AND CFM_RLS=#confirmRlsSeqNo# AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findAgtNameByAgtCode" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			A.CODE as agentId, A.CODE_DESC as agentName 
		FROM 
			CUST_COMPANY A, IMP_CAR_SHP B, IMP_CAR_AWB C 
		WHERE 
			B.AWB_NO=C.AWB_NO AND B.AWB_DATE=C.AWB_DATE AND C.AGENT_CUST_NO=A.CODE AND B.SRF_CREATED_YN='N' AND 
			B.CFM_RLS=#confirmRlsSeqNo# AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND ROWNUM=1
	</select>
	<update id="updSrfIssueInTrkMnf" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			TRUCK_MANIFEST 
		SET 
			SRF_ISSUED=#srfIssued#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
		WHERE 
			TRUCK_MANF_NO=#truckMnfNo#
	</update>
	<update id="updSrfIssueInTrkMnfDtls" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			TRUCK_MANIFEST_DTL 
		SET 
			SRF_NO=#srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE, ERR_RMK=#errorRemarks# 
		WHERE 
			TRUCK_MANF_NO=#truckMnfNo# AND AWB_NO=#awbNo#
	</update>
	
	<update id="updSrfIssueInImpCarShp" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			IMP_CAR_SHP 
		SET 
			SRF_CREATED_YN=#srfIssued#, SRF_NO=#srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE, ERR_RMK=#errorRemarks# 
		WHERE 
			CFM_RLS=#confirmRlsSeqNo# AND AWB_NO=#awbNo#
	</update>
	
	<update id="postSrfFromConfirmByPass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE 
			imp_srf 
		SET 
			post_date = SYSDATE,post_user = #userId#,post_time = to_char(SYSDATE, 'HH24MI'),status = 'POSTED'
		WHERE 
			SRF_NO = #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<select id="findAuthRepByAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		 SELECT 
			AUTH_REP_NAME as authPerson, AUTH_REP_ID as authPersonId, AUTH_REP_NAME as collectedBy, AUTH_REP_ID as hkId 
		FROM 
			CUST_AGENT_AUTH_REP 
		WHERE 
			CUST_NO IN(SELECT AGENT_CUST_NO FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')) AND ROWNUM=1
	</select>
	<select id="findSRFGeneratedByTruckNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			SRF.SRF_NO as srfNo 
		FROM 
			IMP_SRF SRF 
		WHERE 
			SRF.TRUCK_NO=#truckNo# AND SRF_EXPY_DATE>SYSDATE AND VERIFIED='N' AND STATUS='ISSUED' AND NOT EXISTS (SELECT TRKSRF.SRF_NO FROM 
			IMP_TRUCK_SRF TRKSRF, TRUCK_TRIP TRIP WHERE TRIP.TRIP_ID=TRKSRF.TRIP_ID AND TRIP.CLOSED='N' AND SRF.SRF_NO=TRKSRF.SRF_NO)
	</select>
	<select id="findSeqNoFromSrfAwbInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SEQ_NO FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#
	</select>
	<select id="findTruckDockFromTruckTrip" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TRUCK_DOCK FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND CLOSED='N' AND ROWNUM=1
	</select>
	<select id="findRtrvMOJOExistsForAwb" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM RTRV_MOVE_ORDER WHERE (STATUS IS NULL OR STATUS = 'STARTED')
		<isNotEmpty property="uldKey">
		AND NVL(ULD,'N')=#uldKey#
		</isNotEmpty>
		<isNotEmpty property="lspNo">
		AND NVL(LSP,'N') = NVL(#lspNo#,'N') 
		</isNotEmpty>
	</select>
	<update id="updateCancelToRtrvMOJO" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
	<![CDATA[
		UPDATE RTRV_MOVE_ORDER SET STATUS='CANCELLED' WHERE (status IS NULL OR (status <> 'E' AND status <>'CANCELLED' AND status <>'COMPLETED'))
		]]>  
		<isNotEmpty property="uldKey">
		AND NVL(ULD,'N')=#uldKey#
		</isNotEmpty>
		<isNotEmpty property="lspNo">
		AND NVL(LSP,'N') = NVL(#lspNo#,'N') 
		</isNotEmpty>
	</update>
	<!-- Issue SRF Backend :: Anup :: End -->
<!-- Print SRF Queries Start -->
	<parameterMap id="tripMap" class="map" >
	<parameter property="TRUCK_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="TRUCK_ACTION" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="TRUCK_PURPOSE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="sqlTruckTripPrc" parameterMap="tripMap" >
		{call PRC_TRUCK_TRIP(?,?,?)}
	</procedure>

	<update id="updateSRFVerified" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_SRF 
		SET 
			VERIFIED = 'Y' ,
			LM_DATE = SYSDATE,
			lm_user_id = #crUserId#,
			VERIFIED_TIME = SYSDATE,
			VERIFIED_HKID = #hkId1#,
			VERIFIED_BY = #crUserId#,
			TR_TYPE = 'VESRF'
		WHERE 
			SRF_NO = #srfNo# AND VERIFIED = 'N'
	</update>
	
	
	
	<update id="updateSRFVerifiedEPH" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_SRF 
		SET 
			VERIFIED = 'Y' ,
			LM_DATE = SYSDATE,
			lm_user_id = #crUserId#,
			VERIFIED_TIME = SYSDATE,
			VERIFIED_HKID = #hkId1#,
			VERIFIED_BY = #crUserId#,
			CARGO_COLLECTED = SYSDATE,
			CARGO_VERIFICATION = SYSDATE,
			TR_TYPE = 'VESRF'
		WHERE 
			SRF_NO = #srfNo# AND VERIFIED = 'N'
	</update>
	
	<select id="getSrfAuthInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
				 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	   SELECT AUTH_REP_NAME as collectPersonReceive, AUTH_REP_ID as hkidOfCollectPerson , srf_no as srfNo FROM imp_srf where SRF_NO = #srfNo#
	</select>

 <select id="fetchPrintSRFList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	srf.awb_cc_code as strCC, SRF.SRF_PRT_CODE srfPtr,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=#srfNo#) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay,
	COLLECT_PERSON_RECVD as collectPersonReceive,
	HKID_COLLECT_PERSON as hkidOfCollectPerson	
	from imp_srf srf, imp_srf_flt flt,imp_car_awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
	   <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchPrintSRFListExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'ReturnCargo' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=#srfNo#) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate ,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay
	from imp_srf srf, imp_srf_flt flt,awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchOldPrintSRFListImpExp"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
 SELECT PRINT_IND as printInd,VERIFIED as verifyInd FROM IMP_SRF WHERE SRF_NO=#PARAM#
 </select>
 
 <select id="fetchPrintSRFListImpExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=srf.srf_no) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay 
	from imp_srf srf, imp_srf_flt flt,imp_car_awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty> 
 	UNION ALL
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'ReturnCargo' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=srf.srf_no) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay  
	from imp_srf srf, imp_srf_flt flt,awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date and awb.awb_type = 'E'
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchPrintULDList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select Decode(lsp_no,null,uld_key,lsp_no) lspUld,lsp_no lsp, loc_code locn, locn_pcs locnPcs, locn_wt locnWt,
	(select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =#srfNo# and b.CLOSED='N' and rownum=1) target 
	from awb_inventory where awb_no=#awbNo# 
	and awb_date=TO_DATE(#awbDate#,'DDMONYY')  and srf_no=#srfNo#
 </select>
 <select id="fetchSRfBkgList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 select bkg.booking_no bookingNo,dtl.awb_no awbNo,SUBSTR(dtl.awb_no,1,3)||'-'||SUBSTR(dtl.awb_no,4) as awbNoDisp ,awb.appntd_agent agentName,bkg.SRF_ISSUED srfIssued,dtl.ERR_RMK errorRemarks,awb.agent_cust_no agentId,	
	bkg.coll_person_name collectedBy,(to_char(bkg.bkg_slot_date,'DDMONYY')||' ' ||SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_FROM,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_FROM,0),'0000')),3,4)||'-'||
	SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_TO,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_TO,0),'0000')),3,4))  timeSlot,bkg.trucker_id truckerCoCode,
	COLLECT_ULD collectULD ,dtl.srf_no as srfNo	from IMP_BOOKING bkg,IMP_BOOKING_DTL dtl,imp_car_awb awb,imp_car_shp shp where bkg.booking_no= dtl.booking_no and 
	awb.awb_no= dtl.awb_no and awb.awb_date = dtl.awb_date and awb.awb_no = shp.awb_no and awb.awb_date = awb.awb_date and shp.flt_key = dtl.flt_key and shp.flt_date = dtl.flt_date and 	
	<isEmpty property="bookingNo">
	(bkg.truck1=#truckNo# or bkg.truck2=#truckNo# or bkg.truck3=#truckNo#
	 or bkg.truck4=#truckNo# or bkg.truck5=#truckNo# or bkg.truck6=#truckNo#
	 or exists (select null from TCS_DOCK_POOL_DOCK where pool_id = bkg.pool_id and truck_dock = #truckDockNo#) ) 
	and (TO_DATE((BKG_SLOT_DATE || ' ' 
	|| SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)), 
	'DD-MON-YY HH24:MI') BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24:MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24:MI'))
	</isEmpty>
	<isNotEmpty property="bookingNo">
	bkg.booking_no=#bookingNo#
	</isNotEmpty>
 </select>
 
 <!--  Changed for QR -->
 <select id="validateCollPerson1"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	 select COUNT(1) from (
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#agentId# and BLACK_LISTED = 'N' and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#)
	 UNION
	 select coll_person_id from imp_booking where status not in ('CANCEL') and booking_no = #bookingNo# and (coll_person_id=#hkId1# or coll_person_id=#hkId2# or coll_person_id=#hkId3#
	 or coll_person_id=#hkId4# or coll_person_id=#hkId5#))
 </select>
 <select id="validateCollPerson2"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	 select COUNT(1) from (
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#agentId# and BLACK_LISTED = 'N'  and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#)
	 UNION
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#truckerCoCode# and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#))
 </select>
 <select id="validateCollPerson3"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	select COUNT(1) from (
	select coll_hkid collId from imp_srf where srf_no=#srfNo# and (coll_hkid=#hkId1# or coll_hkid=#hkId2#
	or coll_hkid=#hkId3# or coll_hkid=#hkId4# or coll_hkid=#hkId5#)
	UNION
	select auth_rep_id collId from CUST_AGENT_AUTH_REP where cust_no=#agentId# and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2#
	or auth_rep_id=#hkId3# or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#) and BLACK_LISTED = 'N')
 </select>
 
 <!--  Changed for QR -->
  <select id="printsrf_move_job_order" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		    SELECT DISTINCT 
			C.AWB_NO as awbNo,A.SRF_NO srfNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.COLL_CENTER as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt ,E.WH_TYPE whType 
		FROM 
			IMP_SRF A, AWB_INVENTORY C, MAST_WH_LOC D, MAST_WH_GROUP E 
		WHERE 
			A.SRF_NO=C.SRF_NO AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND A.SRF_NO=#srfNo# 
	</select>
	<select id="fetchURFListforSRF"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select hd.srf_no srfNo, hd.eir_no urfNo, dtl.uld_req_qty uldReqQty, dtl.uld_type uldType from ULD_ISS_HD hd,ULD_ISS_DTL dtl where 
	hd.srf_no=#srfNo# and hd.eir_no=dtl.eir_no
	</select>
        <update id="updateSRFDtls" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING 
		SET 
			PHONE_NO=#phoneNo# 
		WHERE 
			BOOKING_NO=#bookingNo#
		]]>
	</update>
	<select id="chkTruckDtlsExist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_truck_srf where trip_id in (
		select trip_id from truck_trip where truck_no=#truckNo# and closed='N') and srf_no=#srfNo#
	</select>
	<update id="updateRmkSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set remarks=#reason#,LM_USER_ID=#crUserId#,LM_DATE=sysdate,TR_TYPE=#trtype# , Collect_Person_Recvd = #collectPersonReceive# ,
		Hkid_Collect_Person =#hkidOfCollectPerson#  where srf_no=#srfNo#
	</update>
	<update id="updateCollPerson" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update IMP_SRF set COLL_HKID=#hkidOfCollectPerson#,COLLECT_PERSON_RECVD = #collectPersonReceive#,HKID_COLLECT_PERSON = #hkidOfCollectPerson#,
		TR_TYPE ='DUMMY' where srf_no=#srfNo#
	</update>
	<!--  Changed for QR
	<select id="checkValidPrintTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo#
	</select> -->
		<select id="checkValidClosedTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND NVL(CLOSED,'N')='N'
	</select>
	<select id="checkValidSrfTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_TRUCK_SRF A
		JOIN TRUCK_TRIP B
		ON A.TRIP_ID = B.TRIP_ID
		WHERE B.TRUCK_NO = #truckNo#
	</select>
	
	
 <!-- Print SRF Queries End -->
 <!-- Truck Manifest -->
 <select id="getAgentTopList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
 	<!-- SELECT DISTINCT CAR_AWB.APPNTD_AGENT as agentName,	
       					COMP.CODE as agentCode					
		FROM 
    	IMP_CAR_SHP CAR_SHP
      	JOIN IMP_CAR_AWB CAR_AWB ON CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y'
    	JOIN ( SELECT AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,SUM(LOCN_PCS) LOCNPC,SUM(LOCN_WT) LOCNWT,LSP_NO,LOC_CODE,ULD_KEY FROM AWB_INVENTORY 
           	   WHERE LOCN_PCS>0 AND LOCN_WT>0 GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,LSP_NO,LOC_CODE,ULD_KEY ) INVNT ON CAR_SHP.AWB_NO=INVNT.AWB_NO AND CAR_SHP.AWB_DATE=INVNT.AWB_DATE
    	AND INVNT.FLT_KEY=CAR_SHP.FLT_KEY AND CAR_SHP.FLT_DATE=INVNT.FLT_DATE
    	JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT
    	LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE AND V_CC.AWB_NO=CAR_SHP.AWB_NO
    	LEFT OUTER JOIN MAST_CONSTRAINT_CODE CONS ON V_CC.CC_CODE=CONS.CODE
		LEFT OUTER JOIN IMP_CUST_CLR_LIST CLR_LIST ON CLR_LIST.FLT_KEY=CAR_SHP.FLT_KEY AND CLR_LIST.FLT_DATE=CAR_SHP.FLT_DATE
    	AND CLR_LIST.AWB_NO=CAR_SHP.AWB_NO AND CLR_LIST.AWB_DATE=CAR_AWB.AWB_DATE
    	LEFT OUTER JOIN IMP_CCCL_DOC_LIST DOC_LIST ON CLR_LIST.TR_NO=DOC_LIST.TR_NO AND DOC_LIST.NOT_AVAILABLE='Y'
    	JOIN FLT_OPR FO ON FO.FLT_KEY = CAR_SHP.FLT_KEY and  FO.SCH_DATE = CAR_SHP.FLT_DATE and  FO.FLT_TYPE='A'
		JOIN CUST_AGENT_SCH_COLL_TIME SCT on SCT.CUST_NO = COMP.CODE
		WHERE  not exists (select d.AWB_NO from TRUCK_MANIFEST_DTL d, truck_manifest h where h.truck_manf_no = d.truck_manf_no 
          				and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE
          				and (h.final_truck_manf_ind = 'Y' or (to_date(to_char(h.sch_coll_date,'DDMONYY')||to_char(Sch_coll_to,'0000'), 'DDMONYYHH24MI') > sysdate and h.final_truck_manf_no is null))) 
    	and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          				and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY = CAR_SHP.FLT_KEY AND d.FLT_DATE = CAR_SHP.FLT_DATE
          				and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
        AND not exists (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' and code in (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,
            			CAR_AWB.SPL_CODE4,CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9))
	    				AND NVL(V_CC.CC_CODE,'') NOT IN (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N')
      	AND CAR_SHP.MANIFEST_PCS <> CAR_SHP.CIR_PCS
     	AND NVL(CAR_SHP.CIR_PCS_TYPE, 'NT') <> 'SL'
     	and FO.ACT_DATE is not null
        AND TO_DATE(TO_CHAR(FO.ACT_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI') -->
 	<![CDATA[
		SELECT 
  			DISTINCT CAR_AWB.APPNTD_AGENT as agentName,	COMP.CODE as agentCode
		FROM 
  			IMP_CAR_SHP CAR_SHP 
  			LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE 
  			AND V_CC.AWB_NO=CAR_SHP.AWB_NO
  			left JOIN (select nvl(sum(LOCN_PCS),0) invPcs, nvl(sum(LOCN_WT),0) invWt, awb_no, awb_date, flt_key, flt_date
               			 from awb_inventory  where FLT_TYPE='I' group by awb_no, awb_date, flt_key, flt_date) 
						awb_inv ON awb_inv.AWB_NO=CAR_SHP.AWB_NO AND awb_inv.AWB_DATE=CAR_SHP.AWB_DATE and awb_inv.FLT_KEY = CAR_SHP.FLT_KEY and  awb_inv.FLT_DATE = CAR_SHP.FLT_DATE 
  			, IMP_CAR_AWB CAR_AWB, CUST_COMPANY COMP, FLT_OPR FO, CUST_AGENT_SCH_COLL_TIME SCT 
		WHERE
  			CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y' AND COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT 
  			AND FO.FLT_KEY=CAR_SHP.FLT_KEY AND FO.SCH_DATE=CAR_SHP.FLT_DATE AND FO.FLT_TYPE='A' AND SCT.CUST_NO=COMP.CODE AND SCT.EFF_TO >= SYSDATE AND PURPOSE='CRG' 
  			AND NOT EXISTS (SELECT d.AWB_NO FROM TRUCK_MANIFEST_DTL d, TRUCK_MANIFEST h WHERE h.TRUCK_MANF_NO=d.TRUCK_MANF_NO AND d.AWB_NO=CAR_SHP.AWB_NO AND 
	  			d.AWB_DATE=CAR_SHP.AWB_DATE AND d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE AND (h.FINAL_TRUCK_MANF_IND='Y' OR 
	  			(TO_DATE(TO_CHAR(h.SCH_COLL_DATE, 'DDMONYY') || TO_CHAR(SCH_COLL_TO, '0000'), 'DDMONYYHH24MI') > SYSDATE AND h.FINAL_TRUCK_MANF_NO IS NULL))) AND
 			NOT EXISTS (SELECT d.AWB_NO FROM IMP_BOOKING_DTL d, IMP_BOOKING h WHERE h.BOOKING_NO=d.BOOKING_NO AND d.AWB_NO=CAR_SHP.AWB_NO AND 
	  			d.AWB_DATE=CAR_SHP.AWB_DATE AND d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE AND (h.SRF_ISSUED='Y' OR TO_DATE(TO_CHAR(h.BKG_SLOT_DATE, 'DDMONYY') 
	  			|| TO_CHAR(BKG_SLOT_TO, '0000'), 'DDMONYYHH24MI') > SYSDATE)) AND 
  			NOT EXISTS (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' AND CODE IN (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,CAR_AWB.SPL_CODE4,
  			CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9)) 
  			AND NOT exists (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N' and CODE = NVL(V_CC.CC_CODE,'*'))
  			 AND CAR_SHP.MANIFEST_PCS <> CAR_SHP.CIR_PCS 
  			AND TO_DATE(TO_CHAR(FO.SCH_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI')
  			and NOT(CAR_SHP.RECD_PCS > 0 and awb_inv.invPcs = 0) 
  			and exists (SELECT SCH_COLL.TR_NO 
                            FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL                            
                            WHERE 
                            PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO AND SCH_COLL.cust_no = COMP.CODE )
        ]]>
	   <isNotEmpty property="agentName"> 
		AND CAR_AWB.APPNTD_AGENT=#agentName#
		</isNotEmpty>
		<isNotEmpty property="agentCode"> 
		AND COMP.CODE = #agentCode#
		</isNotEmpty>		
	   <!-- 
	    <isNotEmpty property="loginCarrier">
				   AND ( COMP.carr_code = #loginCarrier# OR  COMP.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>	
        -->
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getAwbList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
		<![CDATA[
			SELECT 
    			CAR_AWB.APPNTD_AGENT as agentName, COMP.CODE as agentCode, CAR_SHP.AWB_NO AS  awbNo, substr(CAR_SHP.AWB_NO,1,3)||'-'||substr(CAR_SHP.AWB_NO,4,8) AS  awbNoDisp,	
    			TO_CHAR(CAR_SHP.AWB_DATE,'DDMONYY') AS awbDate, V_COMMA_SEP_IMP_FLT_ULD_SHC(CAR_SHP.FLT_KEY,CAR_SHP.FLT_DATE,null,CAR_SHP.AWB_NO, 
    			TO_CHAR(CAR_SHP.AWB_DATE,'DDMONYY')) AS shc, CAR_SHP.FLT_KEY AS fltKey, TO_CHAR(CAR_SHP.FLT_DATE, 'DDMONYY') as fltDate ,
				DECODE(CAR_SHP.MANIFEST_PCS,null,'0',CAR_SHP.MANIFEST_PCS) AS manfPc,
				DECODE(CAR_SHP.MANIFEST_WT,null,'0',DECODE(trim(TO_CHAR(NVL(CAR_SHP.MANIFEST_WT,0),'99999990.0')),'0','',trim(TO_CHAR(NVL(CAR_SHP.MANIFEST_WT,0),'99999990.0')))) AS manfWt,
				DECODE(CAR_SHP.RECD_PCS,null,'0',CAR_SHP.RECD_PCS) AS bdPcs,
				DECODE(CAR_SHP.RECD_WT,null,'0',DECODE(trim(TO_CHAR(NVL(CAR_SHP.RECD_WT,0),'99999990.0')),'0.0','0',trim(TO_CHAR(NVL(CAR_SHP.RECD_WT,0),'99999990.0')))) AS bdWt
    		FROM 
    			IMP_CAR_SHP CAR_SHP
    			JOIN IMP_CAR_AWB CAR_AWB ON CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y'
    			JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT
    			LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE AND V_CC.AWB_NO=CAR_SHP.AWB_NO
				JOIN FLT_OPR FO ON FO.FLT_KEY = CAR_SHP.FLT_KEY and  FO.SCH_DATE = CAR_SHP.FLT_DATE and  FO.FLT_TYPE='A'
                left JOIN (select nvl(sum(LOCN_PCS),0) invPcs, nvl(sum(LOCN_WT),0) invWt, awb_no, awb_date, flt_key, flt_date
                			 from awb_inventory  where FLT_TYPE='I' group by awb_no, awb_date, flt_key, flt_date) 
                        			awb_inv ON awb_inv.AWB_NO=CAR_SHP.AWB_NO AND awb_inv.AWB_DATE=CAR_SHP.AWB_DATE and awb_inv.FLT_KEY = CAR_SHP.FLT_KEY and  awb_inv.FLT_DATE = CAR_SHP.FLT_DATE 
			WHERE  
				not exists (select d.AWB_NO from TRUCK_MANIFEST_DTL d, truck_manifest h where h.truck_manf_no = d.truck_manf_no 
          		and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE
          		and (h.final_truck_manf_ind = 'Y' or (to_date(to_char(h.sch_coll_date,'DDMONYY')||to_char(Sch_coll_to,'0000'), 'DDMONYYHH24MI') > sysdate and 
          		h.final_truck_manf_no is null))) 
    			and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          		and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY = CAR_SHP.FLT_KEY AND d.FLT_DATE = CAR_SHP.FLT_DATE
          		and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
        		AND not exists (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' and code in (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,
            	CAR_AWB.SPL_CODE4,CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9))
	    		AND NOT exists (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N' and CODE = NVL(V_CC.CC_CODE,'*'))
      			AND NOT(CAR_SHP.MANIFEST_PCS = CAR_SHP.CIR_PCS AND CAR_SHP.CIR_PCS_TYPE = 'SL')   
      			AND TO_DATE(TO_CHAR(FO.SCH_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI')    			
                        and NOT(CAR_SHP.RECD_PCS > 0 and awb_inv.invPcs = 0)
	   ]]>
	   		<isNotEmpty property="agentName"> 
				AND CAR_AWB.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="agentCode"> 
				AND COMP.CODE = #agentCode#
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
				   AND ( CAR_SHP.CARR_CODE = #loginCarrier# OR  CAR_SHP.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            </isNotEmpty>		
			order by CAR_SHP.AWB_NO
	</select>
	
	<select id="getAwbLocationSubList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
			SELECT 
   				INVNT.AWB_NO AS  awbNo,
    			substr(INVNT.AWB_NO,1,3)||'-'||substr(INVNT.AWB_NO,4,8) AS  awbNoDisp,	
   			 	TO_CHAR(INVNT.AWB_DATE,'DDMONYY') AS awbDate,
    			INVNT.LSP_NO as lspNo,
    			INVNT.LOCN_PCS AS invPc,
    			INVNT.LOCN_WT AS INVWT,
				INVNT.LOC_CODE as locCode,
    			INVNT.ULD_KEY as uldKey,
    			INVNT.FLT_KEY as fltKey,
    			TO_CHAR(INVNT.FLT_DATE,'DDMONYY') as fltDate,
                        (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(INVNT.FLT_KEY,'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(INVNT.FLT_DATE,'31AUG2000')
                                  AND V.AWB_NO =  INVNT.AWB_NO  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS cc
    		From AWB_INVENTORY INVNT
    		Where INVNT.AWB_NO = #awbNo#
    		and INVNT.awb_date = #awbDate#
    		and INVNT.FLT_KEY = #fltKey# and INVNT.FLT_DATE = #fltDate#
    		<!-- and INVNT.LOC_CODE != #locCode# -->	
	</select>
	
	<select id="getCcode" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="java.lang.String">
			SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(#fltKey#,'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(#fltDate#,'31AUG2000')
                AND V.AWB_NO = #awbNo# AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1 
	</select>
	
	<select id="checkCutOffTime" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			select (to_date(#timeSlot#, 'DDMONYY HH24:MI') -  (SELECT RULE_value FROM CMSRULES WHERE RULE_CODE='TRUCK_MANF_CUT_OFF_TIME')) - sysdate from dual
	</select>
	
	<select id="getTimeSlot" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">	
		SELECT SCH_COLL.TR_NO AS timeSlotTr,SCH_COLL.CUST_NO AS agentCode,SCH_COLL.TIME_FROM AS timeFrom,SCH_COLL.TIME_TO AS timeTo,
		SCH_COLL.DAY_FRQ as dayFreq,
		substr(to_char(SCH_COLL.TIME_FROM,'0000'),1,3) ||':'|| substr(to_char(SCH_COLL.TIME_FROM,'0000'),4) AS timeFromDisp,
		substr(to_char(SCH_COLL.TIME_TO,'0000'),1,3) || ':' || substr(to_char(SCH_COLL.TIME_TO,'0000'),4) AS timeToDisp,
		TO_CHAR(SYSDATE,'HH24MI') AS currTime,TO_CHAR(SYSDATE,'HH24:MI') AS currTimeStr, TO_CHAR(SYSDATE,'D') AS currDay,TO_CHAR(SYSDATE,'DDMONYY') as currDate,
		TO_CHAR(SYSDATE,'DD/MM/YYYY') as frmtNextSlot, TO_CHAR(SCH_COLL.EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(SCH_COLL.EFF_TO, 'DDMONYY') as effTo
		FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL
		JOIN CUST_COMPANY COMP ON COMP.CODE=SCH_COLL.CUST_NO 
		WHERE 
 		PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO 
		<isNotEmpty property="agentName"  > 
		AND COMP.CODE_DESC = #agentName#
		</isNotEmpty>
		<isNotEmpty property="agentCode"  > 
		AND COMP.CODE = #agentCode#
		</isNotEmpty>
		ORDER BY 
			TIME_FROM
	</select>
	
	<parameterMap id="FUN_GET_TIME_SLOT_DATE_map" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>                  
	<parameter property="p_agentid" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>              
	<parameter property="v_truck_dock" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>             
	<parameter property="v_time_slot" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/> 
	<parameter property="v_tr_no" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>		

	<procedure id="FUN_GET_TIME_SLOT_DATE"  parameterMap="FUN_GET_TIME_SLOT_DATE_map" >
		{? = call FUN_GET_TIME_SLOT_DATE(?,?,?,?)}
	</procedure>
	
	<select id="getTimeSlot_WITH_TR_NO" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">	
		SELECT SCH_COLL.TR_NO AS timeSlotTr,SCH_COLL.CUST_NO AS agentCode,SCH_COLL.TIME_FROM AS timeFrom,SCH_COLL.TIME_TO AS timeTo,
		SCH_COLL.DAY_FRQ as dayFreq,
		substr(to_char(SCH_COLL.TIME_FROM,'0000'),1,3) ||':'|| substr(to_char(SCH_COLL.TIME_FROM,'0000'),4) AS timeFromDisp,
		substr(to_char(SCH_COLL.TIME_TO,'0000'),1,3) || ':' || substr(to_char(SCH_COLL.TIME_TO,'0000'),4) AS timeToDisp,
		TO_CHAR(SYSDATE,'HH24MI') AS currTime,TO_CHAR(SYSDATE,'HH24:MI') AS currTimeStr, TO_CHAR(SYSDATE,'D') AS currDay,TO_CHAR(SYSDATE,'DDMONYY') as currDate,
		TO_CHAR(SYSDATE,'DD/MM/YYYY') as frmtNextSlot, TO_CHAR(SCH_COLL.EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(SCH_COLL.EFF_TO, 'DDMONYY') as effTo
		FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL
		WHERE 
 		PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO 
		<isNotEmpty property="timeSlotTr"  > 
			AND SCH_COLL.TR_NO = #timeSlotTr#
		</isNotEmpty>
		ORDER BY TIME_FROM
	</select>
	<select id="addDate" parameterClass="java.lang.Integer"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
		select to_char(sysdate + #days#,'DDMONYY') as nextSlot, to_char(sysdate + #days#,'DDMONYY') as currDate,to_char(sysdate+ #days#,'DD/MM/YYYY') as frmtNextSlot from dual	
	</select>
	<select id="check_iata"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
		select CO_IATA_CODE from CUST_COMPANY where CO_IATA_CODE = #iataCode# and AGENT_YN='Y'
		]]>
	</select>
	<insert id="insRtrvMoveOrder" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE,REF_NO) 
		VALUES 
			('TRK_MNFST', #awbNo#, #locCode#, #lspNo#, #uldKey#, #invPc#, #invWt#, #truckDock#, #orderStatus#, 
			#createdUserId#, SYSDATE, #modifiedUserId#, SYSDATE, #orderType#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'),#manfNo#)
	</insert>
	<update id="updSchColl" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		UPDATE IMP_CAR_AWB 
		SET VAL_FOR_SCH_COLL='N'
		WHERE AWB_NO=#awbNo# AND AWB_DATE=to_date(#awbDate#,'DDMONYY') 
	</update>
	<select id="seqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
	 select trim(to_char(TRK_MANF_SEQ.nextval,'000000')) as nextval from dual 
	</select>
	<insert id="insTruckManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			TRUCK_MANIFEST (AGENT_CODE,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID,SCH_COLL_DATE,TIME_SLOT_TR_NO,TRUCK_MANF_NO,SCH_COLL_FROM,SCH_COLL_TO,TRUCK_DOCK) 
		VALUES 
			(#agentCode#,SYSDATE,#createdUserId# ,SYSDATE,#modifiedUserId#, #nextSlot#,#timeSlotTr# , #manfNo#,#timeFrom#,#timeTo#, #truckDock# )
	</insert>
	<select id="getManfNo" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.String">
	 SELECT MAX(TRUCK_MANF_NO) FROM TRUCK_MANIFEST WHERE AGENT_CODE=#agentCode# AND TIME_SLOT_TR_NO=#timeSlotTr#
	</select>
	
	<!--  Changed for QR -->
	<insert id="insTruckManfDtl" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			TRUCK_MANIFEST_DTL (AWB_DATE,AWB_NO,CR_DATE,CR_USER_ID,DOC_LINE_NO,FLT_DATE,FLT_KEY,FLT_TYPE,LM_DATE,
			LM_USER_ID,TRUCK_MANF_NO) 
		VALUES 
			(TO_DATE(#awbDate#, 'DDMONYY'), #awbNo#,SYSDATE,#createdUserId#,#docLine# , TO_DATE(#fltDate#, 'DDMONYY'), #fltKey#, 'I', SYSDATE, #modifiedUserId#, 
			#manfNo#)
	</insert>
	
	<select id="cutOffTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TRUCK_MANF_CUT_OFF_TIME'
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="getAuthRep" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		SELECT AUTH_REP_NAME AS authRepName,AUTH_REP_ID AS authRepId FROM CUST_AGENT_AUTH_REP WHERE CUST_NO=#agentCode# and rownum =1
	</select>
	-->
	<select id="getTruckkDock" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(TRUCK_DOCK,',')) AS truckDock 
			FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK CTD
			JOIN CUST_AGENT_SCH_COLL_TIME SCT on  SCT.TR_NO= CTD.TR_NO
			join CUST_COMPANY  COMP ON COMP.CODE=SCT.CUST_NO 
			where sysdate between eff_from and eff_to and SCT.purpose='CRG' and COMP.CODE_DESC = #agentName#
			AND COMP.CODE = #agentCode# 
	</select>
	<select id="getCurrTime"  resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE,'HH24MI') FROM DUAL
	</select>
	<select id="getLockLspUld" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		SELECT case when INVNT.ULD_KEY is not null THEN (SELECT LOCKED FROM ULD_INVENTORY WHERE ULD_KEY=INVNT.ULD_KEY) 
    	ELSE 'N' END AS uldLock,INVNT.ULD_KEY AS uldKey,INVNT.LSP_NO AS lspNo,
    	CASE WHEN INVNT.LSP_NO IS NOT NULL THEN (SELECT LOCKED FROM lsp_INVENTORY WHERE LSP_NO=INVNT.LSP_NO) ELSE 'N' END AS lspLock,
    	INVNT.LOC_CODE AS locCode,GRP.WH_TYPE AS whType,INVNT.LOCN_PCS AS invPc,INVNT.LOCN_WT AS invWt,INVNT.AWB_NO as awbNo
    	FROM AWB_INVENTORY INVNT
    	JOIN MAST_WH_LOC LOC ON INVNT.LOC_CODE=LOC.CODE
    	JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP
    	WHERE INVNT.AWB_NO=#awbNo# and to_char(INVNT.AWB_DATE,'DDMONYY')= to_date(#awbDate#,'DDMONYY')
    	AND (ULD_KEY is not null or LSP_NO is not null)
	</select>
	
	<select id="checkSplAllow" parameterClass="java.lang.String" resultClass="java.lang.Integer">
           select count(1) from mast_spl_hand_code where code = #shc# and nvl(sch_coll_yn,'N') = 'N'
	</select>
	<select id="countJoMoTrkManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.Integer">
		select count(1) from RTRV_MOVE_ORDER where AWB_NO=#awbNo# and AWB_DATE=TO_DATE(#awbDate#, 'DD-MON-YY') and CURR_LOCN=#locCode#
		<isNotEmpty property="lspNo"  > 
		and LSP=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldKey"  > 
		and ULD=#uldKey#
		</isNotEmpty>
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updateMOJOTrkManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		UPDATE RTRV_MOVE_ORDER SET STATUS='CANCELLED' WHERE AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
		<isNotEmpty property="lspNo"  > 
		and LSP=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldKey"  > 
		and ULD=#uldKey#
		</isNotEmpty>
	</update>
	-->
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="getTruckManfAndDocLineNumber" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		 SELECT MAX(TRUCK_MANF_NO) AS manfNo,
  				MAX(DOC_LINE_NO)   AS docLine
   			FROM truck_manifest
   			WHERE AGENT_CODE = #agentCode#
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<select id="fetchLocnGrpLevel"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManfBO">
	      select loc.loc_level locLevel ,
	      		 grp.wh_type groupType
        	from mast_wh_loc loc 
        			join mast_wh_group  grp on loc.wh_group = grp.wh_group 
        	where loc.code = UPPER(#locCode#)
	</select>
	
	<insert id="insTruckManfInventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
			(TRUCK_MANF_NO,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
		VALUES 
			(#manfNo#,#docLine#,#dtlDocLine#,#awbNo#,#awbDate#,#locCode#,#lspNo#,#uldKey#,#invPc#,#invWt#,#fltKey#,#fltDate#,#createdUserId#,SYSDATE,#modifiedUserId#,SYSDATE,#truckDock#,#locnType#)
	</insert>
	<select id="fetchDummyLocnPcs" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="java.lang.Integer">
		SELECT NVL((SELECT (MANIFEST_PCS - RECD_PCS) FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND 
			FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')), 0) FROM DUAL
	</select>
	<!-- Truck Manifest -->
<!-- Restore Awb Storage :: Ranjith :: Starts -->
	<select id="imp_getAwbDateList"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
	select to_char(awb_date,'DDMONYY') codeId ,		to_char(awb_date,'DDMONYY') codeDesc
	from awb where awb_No = #awbNo# and awb_closed_yn = 'N' Order By awb_date desc
	</select>
	
	<select id="getHeaderRestoreAWBStorage"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   awb.AWB_NO as awbNo,
		   substr(awb.awb_no,0,3) as awbPrefix,		   
		   awb.CONTENT as content,
		   awb.CATALOG as catalog,
		   TO_CHAR(awb.AWB_DATE,'DDMONYY') as awbDate,	
		   awb.PPK_TYPE as ppkType,
		   awb.AWB_CLOSED_YN as awbClosed,
		    awb.ORIG as awbOrigin,  
		   awb.DEST as awbDest ,
		   awb.AWB_TYPE as awbType ,
		   pkg_common.get_awb_splcodes(awb.AWB_NO, awb.AWB_DATE , awb.AWB_TYPE) AS splCodeConcatinated
	FROM AWB awb  
	WHERE awb.AWB_NO = UPPER(#awbNo#)
	 AND awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
</select>	


<select id="querycheckrecdpcsandcountbyawbno"  parameterClass="java.lang.String" 
	 resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	SELECT count(1) as noOfRecords, sum(LOCN_PCS) as locnPcs
		from  AWB_INVENTORY 	
	 WHERE AWB_NO = UPPER(#awbNo#)
</select>	
	
<!-- Changed for QR :: RANJITH -->
<select id="queryawbstrgdtlbyawbno"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	SELECT 
	A.CARR_CODE as carrCode, 
	to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
	A.FLT_KEY as fltKey, 
	A.AWB_NO as awbNo, 
	AWB.AWB_TYPE as awbType,
	to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
	A.ULD_KEY as uldKey,
	A.ULD_KEY as oldUldKey,
	(select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = a.ULD_KEY) as contourCode,
	A.LOC_CODE as locCode, 
	A.LOCN_PCS as locnPcs,
	A.LOCN_WT as locnWt, 
	A.LSP_NO as lspNo, 
	A.LSP_NO as oldLspNo,
	A.DAM_IND as damInd,
	NVL(A.WH_DAM_IND,'N') as whDamInd, 
	A.DAM_PCS	as damPcs, 
	A.DAM_WT as damWt,
	A.SEQ_NO as seqNo,
	decode(UPPER(A.DAM_TYPE),'MAJOR','Y','N') as damIndMajor,
    decode(UPPER(A.DAM_TYPE),'MINOR','Y','N') as damIndMinor,
	(case when (select  count(1) from awb_inventory aa where aa.lsp_no=A.LSP_NO) > 1 then 'Shpm:1+'
	 else (select to_char(l.REF_WT) from lsp_inventory l where l.lsp_no=A.lsp_no) end)  as lspRefWt,
	 case when (select  count(1) from awb_inventory aa where aa.uld_key=A.uld_key) > 1 then 'Shpm:1+' 
  	else (select to_char(u.REF_WT) from uld_inventory u where u.uld_key=A.uld_key) end as uldRefWt,
  	(select to_char(l.REF_WT) from lsp_inventory l where l.lsp_no=A.lsp_no)  as lspRefWt1,
	(select to_char(u.REF_WT) from uld_inventory u where u.uld_key=A.uld_key) as uldRefWt1,
	decode(U.tare_weight,null,M.tare_wt,U.tare_weight) tareWt,
	A.SRF_NO as srfNo, 
	A.TRM_NO as trmNo,
	A.CDIF_NO as cdifNo,
	A.STRG_RMK as strgRmk,
	A.FLT_TYPE as fltType,	 
	decode(AWB.awb_type, 'I', pkg_common.get_flt_ata(a.flt_key, a.flt_date, 'A'), pkg_common.get_flt_eta(a.flt_key, a.flt_date, 'D')) as ata,
  	case when AWB.awb_type =  'E' then awb.car_yn
  	else (select car_created from imp_car_shp s 
  				where s.awb_no = a.awb_no and s.awb_date = a.awb_date 
  				and NVL(a.flt_key,'*') = s.flt_key
  				and NVL(a.flt_date,'13JAN2000') = s.flt_date) end carCreatedYn,
	nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e 
				where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
	decode((select CIR_PROC_USER from imp_car_shp shp WHERE A.FLT_KEY = shp.FLT_KEY AND A.FLT_DATE = shp.FLT_DATE
								  AND A.AWB_NO = shp.AWB_NO AND A.AWB_DATE = shp.AWB_DATE) ,null,'N','Y') maintainCir,
	A.RTN_NO rtnNo,
	DECODE(U.HANDLING_MODE,'NBK','Y','PPK','Y','N') nbkYN,
	NVL(A.DLV_YN,'N') as dlvInd
	From  AWB_INVENTORY A
  	JOIN AWB awb ON awb.AWB_NO = A.AWB_NO AND awb.awb_date = A.awb_date 
  	LEFT JOIN ULD_INVENTORY U ON A.ULD_KEY = U.ULD_KEY  
  	LEFT JOIN MAST_CSD M ON A.LSP_NO = M.CODE  	
	WHERE A.AWB_NO = UPPER(#awbNo#) AND
	A.AWB_DATE = #awbDate# 
	</select>


<update id="updateimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
 UPDATE IMP_AWB_STRG_DTL  
 
 SET 
   ULD_TYPE = #uldType#,	
   ULD_NO = #uldNo#, 
   ULD_CARR = #uldCarr#,
   ULD_KEY = #uldKey#,
   WH_DEST = #whDest#,
   LOC_CODE = #locCode#, 
   LSP_NO = #lspNo#, 
   DAM_IND = #damInd#,
<!--   RMK = #rmk#, -->
   LM_USER_ID =  #userID#, 
   LM_DATE   =  sysdate

 WHERE TR_NO = #trNo# AND
 	   DOC_LINE_NO = #docLineNo#

</update>			
	
<delete id="deleteimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	DELETE IMP_AWB_STRG_DTL  
	WHERE TR_NO = #trNo# AND
			DOC_LINE_NO = #docLineNo#
</delete>

<update id="updateimpcarshprestore" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	UPDATE IMP_CAR_SHP
	SET     LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#fltKey#) AND
		   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		
</update>	  

<select id="getseqforrestoreawbstorage" parameterClass="java.lang.String" resultClass="java.lang.String">	
	SELECT AWB_RELOC_SEQ.nextval as nextVal from dual
</select>	
	
	<!-- Changed for QR :: RANJITH -->
<!--<select id="getpremanifestawbbyawbno" parameterClass="java.lang.String" resultClass="java.lang.String">	
	SELECT count(1) as count from EXP_PMANIFEST_AWB where AWB_NO = #awbNo#
</select>	
	
-->
<insert id="insertawbrelochd" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_HD
  (TR_NO, CR_USER_ID, CR_DATE, LM_USER_ID, 
    LM_DATE,AWB_NO, AWB_DATE, RELOC_TYPE)
values (#trNo#, #userID#, sysdate, #userID#,
	   sysdate, #awbNo#, #awbDate#, #relocType#)
</insert>

<insert id="insertawbrelociss" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_ISS
  (TR_NO, DOC_LINE_NO,
   LOC_CODE, LOCN_PCS, LOCN_WT, 
   LSP_NO, ULD_KEY, 
	<!--PPK_IND, -->
   FLT_NO, FLT_DATE, FLT_TYPE, 
   FLT_KEY, SRF_NO, TRM_NO, 
   CDIF_NO, CR_USER_ID, CR_DATE, 
   LM_USER_ID, LM_DATE,DAM_IND
 <!--  BULK_WT, BUP_WT-->
	) 
values 
   (#trNo#, #docLineNo#,
    #locCode#, #locnPcs#, #locnWt#,
	#lspNo#, #uldKey#, 
	<!--NVL(#pkgInd#,'B'),-->
	#fltNo#, #fltDate#, #fltType#,
	#fltKey#, #srfNo#, #trmNo#,
	#cdifNo#, #userID#, SYSDATE,
	#userID#, SYSDATE, NVL(#damInd#,'N')
	<!--NVL(#bulkWt#,0), NVL(#bupWt#,0)-->
	)			
</insert>	
	
<insert id="insertawbrelocrec" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_RECV
  (TR_NO, DOC_LINE_NO, 
   LOC_CODE, LOCN_PCS, LOCN_WT, 
   LSP_NO, ULD_KEY, 
	<!--PPK_IND, -->
   FLT_NO, FLT_DATE, FLT_TYPE, 
   FLT_KEY, SRF_NO, TRM_NO, 
   CDIF_NO, CR_USER_ID, CR_DATE, 
   LM_USER_ID, LM_DATE, DAM_IND
 <!--  BULK_WT, BUP_WT, RMK-->
	) 
values 
   (#trNo#, #docLineNo#,
    #locCode#, #locnPcs#, #locnWt#,
	#lspNo#, #uldKey#, 
	<!--NVL(#pkgInd#,'B'),-->
	#fltNo#, #fltDate#, #fltType#,
	#fltKey#, #srfNo#, #trmNo#,
	#cdifNo#, #userID#, SYSDATE,
	#userID#, SYSDATE, NVL(#damInd#,'N')
	<!--NVL(#bulkWt#,0), NVL(#bupWt#,0), #strgRmk#-->
	)			
</insert>		

<select id="getHouseDtl" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
select hawb_no hawbNo,strg_pcs hawbPc,strg_wt hawbWt from hawb_inventory where seq_no = #seqNo#
</select>	

<select id="getRelocateTagOldULDDtl" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
SELECT ULD_KEY AS oldUldKey,LSP_NO AS oldLspNo,LOC_CODE AS locCode FROM AWB_INVENTORY WHERE seq_no=#seqNo#
</select>	


<update id="sqlUpdateHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
update hawb_inventory 
set STRG_PCS = NVL(STRG_PCS,0)+NVL(#hawbPc#,0),
	STRG_WT = NVL(STRG_WT,0)+NVL(#hawbWt#,0)
where SEQ_NO = #seqNo# 	AND HAWB_NO = #hawbNo#
</update>

<delete id="sqlDeleteHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
delete from hawb_inventory where SEQ_NO = #seqNo# 
</delete>
<insert id="sqlInsertHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	insert into hawb_inventory
	(SEQ_NO,
	HAWB_NO,
	STRG_PCS,
	STRG_WT,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE)
	values(#seqNo#,
	#hawbNo#,
	#hawbPc#,
	#hawbWt#,
	'ADMIN1',
	sysdate,
	'ADMIN1',
	sysdate)
</insert>
<select id="queryawbstrgdtlbyawbnohht"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
SELECT 
   A.CARR_CODE as carrCode, 
   to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
   A.FLT_KEY as fltKey, 
   A.AWB_NO as awbNo, 
   to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
   A.ULD_KEY as uldKey,
   (select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = A.ULD_KEY) as contourCode,
   A.LOC_CODE as locCode, 
   A.LOCN_PCS as locnPcs,
   A.LOCN_WT as locnWt, 
   A.LSP_NO as lspNo, 
   A.DAM_IND as damInd,
   A.SRF_NO as srfNo, 
   A.TRM_NO as trmNo,
   A.CDIF_NO as cdifNo,
   A.STRG_RMK as strgRmk,
   awb.AWB_TYPE as awbType,
   A.FLT_TYPE as fltType,
   A.SEQ_NO as seqNo,
   nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
   NVL(A.ULD_KEY, NVL(TO_CHAR(A.LSP_NO), RTRIM(A.LOC_CODE, '/'))) uldKeyHht	 ,
   NVL(A.DLV_YN,'N') as dlvInd		
   From  AWB_INVENTORY A 
   JOIN AWB awb ON awb.AWB_NO = A.AWB_NO 
   AND awb.awb_date = A.awb_date
 WHERE 
	<dynamic>
		<isNotEmpty property="awbNo">
			A.AWB_NO = UPPER(#awbNo#) AND
	        A.AWB_DATE = #awbDate#
			<isNotEmpty property="uldKey">
				AND
			</isNotEmpty>
			<isNotEmpty property="lspNo">
				AND
			 </isNotEmpty>		
		</isNotEmpty>	
		<isNotEmpty property="uldKey">
			A.ULD_KEY = #uldKey#
	     </isNotEmpty>	
		<isNotEmpty property="lspNo">
			A.LSP_NO = #lspNo#
	     </isNotEmpty>	
	</dynamic>
</select>

<select id="sqlgetawbclosedYN"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.Integer">
	 select count(1) from AWB where AWB_NO=#awbNo# and AWB_DATE=#awbDate# and AWB_CLOSED_YN is not null and AWB_CLOSED_YN='Y'
</select>



<select id="sqlgetTareWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">	 
	 <isEqual property="key" compareValue="uld">
	select  TARE_WEIGHT tareWt from mast_uld_type where CODE=substr(#value#,0,3)
	 </isEqual>
	 
	 <isEqual property="key" compareValue="lsp">
	select  TARE_WT tareWt from mast_csd where CODE=#value# 
	 </isEqual>  
</select>

<select id="sqlgetUldTareWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">	 
	SELECT TARE_WEIGHT as tareWeight
			 FROM ULD_TYPE_CARR_TARE_WT
			  where ULD_TYPE=UPPER(#uldType#) and ULD_CARR=UPPER(#uldCarr#) 
		 and UPPER(#uldNo#) between ULD_NO_FROM and ULD_NO_TO
</select>



<select id="sqlGetHsePcWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">
	 select HAWB_PCS||'-'||HAWB_WT from MAST_HAWB 
	 where AWB_NO=#awb# and AWB_DATE=#awbDate# AND HAWB_NO=#hawb# and ROWNUM = 1
</select>

 <select id="isValidHawbtoRestore" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  				 select count(1)  from  hawb_inventory
                WHERE  HAWB_NO=#hawb#
                <iterate prepend="AND" property="arrList" open="(" close=")" conjunction="OR" >
                                SEQ_NO = #arrList[]#
                </iterate> 
</select>

<select id="sqlGetPcSum"  parameterClass="java.lang.String" 
	 resultClass="java.lang.Integer">
	 select NVL(sum(STRG_PCS),0) from HAWB_INVENTORY where Seq_no = #seqNo#
</select>

<select id="sqlGetWtSum"  parameterClass="java.lang.String" 
	 resultClass="java.lang.String">
	 select NVL(sum(STRG_WT),0) from HAWB_INVENTORY where Seq_no = #seqNo#
</select>


<select id="sqlgetLSPShpments"  parameterClass="java.lang.String" 
	 resultClass="java.lang.Integer">
	select count(1) from awb_inventory where LSP_NO = #lspNo# 
</select>


<select id="checkULDPPKMixRestoreAwbStrg" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY 
	where ULD_KEY = #PARAM# 
	and (MIX_PPK_IND = 'Y' or PPK_IND = 'Y')
	and REBUILD_YN = 'N' 
	and TOPUP_YN = 'N' 	
</select>
	
	<select id="sqlChkAwbInvNegPcWt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND (LOCN_PCS < 0 OR LOCN_WT < 0)
		]]>
	</select>
		<select id="checkcorrectlocinULDInInventory" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from uld_inventory where uld_key=#uldKey# and loc_code=#loc#
		]]>
	</select>
<!--  Restore AWB storage :: Ranjith :: ENDS -->

<!-- Function for identifying Transfer Group::Ranjith::Starts -->
<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTransferGroupForUld" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		SELECT IUL.ULD_KEY uldKey ,
		  HO.AIR_SIDE airSide,
		  HOAREA.HO_AREA hoArea ,
		  IUL.TRANSFER_TYPE transferType,
		  IUL.TRANSIT_IND transitInd,
		  (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM MAST_SPL_HAND_CODE CD WHERE CD.ECT_HANDLR IS NOT NULL 
            AND CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) ect,
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM MAST_SPL_HAND_CODE CD WHERE SSR = 'Y' 
            AND CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) ssr,      
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM CUST_AIRL_SPL_CODE CD WHERE CD.CARR_CODE = FLT.CARR_CODE AND SPL_TYPE = 'SPL_VAL' 
            AND SPL_CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) val,      
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM CUST_AIRL_SPL_CODE CD WHERE CD.CARR_CODE = FLT.CARR_CODE AND SPL_TYPE = 'SPL_ODD_SIZ' 
            AND SPL_CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) odd,      
		  CNTG_FLT_KEY CNTGFLTKEY,
		  CNTG_FLT_DATE CNTGFLTDATE
		FROM IMP_ULD_LIST IUL
		  JOIN FLT_OPR FLT
		  ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
		LEFT OUTER JOIN MAST_WH_AREA AREA
		ON AREA.WH_AREA = NVL(IUL.SYSTEM_HDLY_AREA, IUL.MANUAL_HDLY_AREA)
		LEFT OUTER JOIN
		  (SELECT AHDR.FLT_KEY,
		    AHDR.FLT_DATE ,
		    ADTL.HO_AREA ,
		    ADTL.OPS_AREA
		  FROM IMP_HOAREA_HD AHDR,
		    IMP_HOAREA_DTL ADTL
		  WHERE AHDR.TR_NO = ADTL.TR_NO
		  ) HOAREA
		ON IUL.FLT_KEY   = HOAREA.FLT_KEY
		AND IUL.FLT_DATE = HOAREA.FLT_DATE
		  AND AREA.WH_OPS_AREA = HOAREA.OPS_AREA
		LEFT OUTER JOIN MAST_WH_AREA HO
		ON HO.WH_AREA = HOAREA.HO_AREA
		  LEFT OUTER JOIN DDT_MSG MSG
		  ON IUL.FLT_KEY   = MSG.FLT_KEY
		AND IUL.FLT_DATE = MSG.FLT_DATE
		LEFT OUTER JOIN DDT_ULD ULD
		ON IUL.ULD_KEY = ULD.ULD_KEY
		  AND MSG.TR_NO = ULD.TR_NO
		WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		AND IUL.ULD_KEY = #uldKey# 
	</select>-->
<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTransferGroupForAwb" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		SELECT '' uldKey,
		  ffm.awb_no awbNo,
		  '' hoArea,
		  shpdtl.TRF_TYPE transferType,
		  'N' transitInd,
		    (select count(1) from mast_spl_hand_code cd where ect_handlr is not null and code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) ect,
		    (select count(1) from mast_spl_hand_code cd where ssr = 'Y' and code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) ssr,
		  (select count(1) from cust_airl_spl_code cd where cd.carr_code = ffm.carr_code and spl_type = 'SPL_VAL' and spl_code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) val,
		  (select count(1) from cust_airl_spl_code cd where cd.carr_code = ffm.carr_code and spl_type = 'SPL_ODD_SIZ' and spl_code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) odd,
		  shpdtl.CNTG_FLT_KEY cntgFltKey,
		    shpdtl.CNTG_FLT_DATE cntgFltDate
		   FROM
		  (SELECT shp.awb_no,
		    msg.flt_key      ,
		    msg.flt_date, msg.carr_code
		     FROM edi_ffm_msg msg,
		    edi_ffm_shp shp      ,
		    edi_ffm_uld uld
		    WHERE msg.tr_no = shp.tr_no
		 	AND msg.tr_no     = uld.tr_no
		    AND uld.doc_line_no = shp.udoc_line_no
		    AND msg.ffm_status = 'P'
		  	AND uld.uld_key  IS NULL
		  ) ffm    
		  LEFT OUTER JOIN ddt_msg msg
		  on ffm.flt_key   = msg.flt_key
		AND ffm.flt_date = msg.flt_date
		LEFT OUTER JOIN ddt_shp shp
		ON shp.awb_no = ffm.awb_no 
		  and shp.tr_no = msg.tr_no
		  left join DDT_SHP_TRF_DTL shpdtl
		  on shpdtl.tr_no = shp.tr_no and shpdtl.sdoc_line_no = shp.doc_line_no
		  left join imp_car_shp cshp on ffm.flt_key = cshp.flt_key and ffm.flt_date = cshp.flt_date and cshp.awb_no = ffm.awb_no
		  left join imp_car_awb cawb on cshp.awb_no = cawb.awb_no and cshp.awb_date = cawb.awb_date
		WHERE
		ffm.flt_key = #fltKey#
		AND ffm.flt_date = TO_DATE(#fltDate#, 'DDMONYY')
		AND ffm.awb_no awbNo = #awbNo#
	</select>-->
	
	<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTranferTypeForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select TRF_TYPE||'-'||DOC_LINE_NO from DDT_ULD where uld_key = #uldKey# and tr_no = (select tr_no from DDT_MSG where flt_key =#fltKey# and  flt_date =#fltDate#)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetShcListForTransferGroup" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
select a.spl_code1 splCode1,
a.spl_code2 splCode2,
a.spl_code3 splCode3,
a.spl_code4 splCode4,
a.spl_code5 splCode5,
a.spl_code6 splCode6,
a.spl_code7 splCode7,
a.spl_code8 splCode8,
a.spl_code9 splCode9
from imp_car_awb a where exists 
(select awb_no from ddt_shp where udoc_line_no=#docLine# and awb_no= a.awb_no and awb_date= a.awb_date)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetValShcTypeForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from CUST_AIRL_SPL_CODE
where spl_type='SPL_VAL'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetOddShcTypeForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from CUST_AIRL_SPL_CODE
where spl_type='SPL_ODD'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!-- <select id="sqlGetTranferGroup" parameterClass="java.lang.String" resultClass="java.lang.String">
select RULE_VALUE from CMSRULES where RULE_CODE=#ruleCode# 
</select> -->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetPriorityForTransferGroup" parameterClass="java.lang.String" resultClass="java.lang.String">
select RULE_VALUE from CMSRULES where RULE_CODE=#ruleCode# 
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetValPriorityForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select max(priority) from mast_spl_hand_code
where code in (select spl_code from CUST_AIRL_SPL_CODE
where spl_type='SPL_VAL'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
))
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetOddPriorityForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select max(priority) from mast_spl_hand_code
where code in (select spl_code from CUST_AIRL_SPL_CODE
where spl_type='SPL_ODD'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
))
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetHOAreaForTransferGroup" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
select HO_AREA mhsHoArea from IMP_HOAREA_DTL where TR_NO = (select MAX(TO_NUMBER(TR_NO)) from IMP_HOAREA_HD where FLT_KEY=#fltKey# and to_char(FLT_DATE,'DDMONYY') = #fltDate#)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckAirSideForTransferGroup" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from MAST_WH_AREA where WH_AREA = #area# and AIR_SIDE is not null and AIR_SIDE = 'Y'
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetUdocLineNoForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select efd.DOC_LINE_NO from EDI_FFM_ULD efd
join  EDI_FFM_MSG efm
on efd.tr_no = efm.tr_no
where efd.FLT_KEY = #fltKey#  and efd.FLT_DATE = #fltDate# and efd.ULD_KEY = #uldKey#
and nvl(efm.ffm_status,'XXX') = 'P'
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckDirectTowForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from MAST_SPL_HAND_CODE
where ECT_HANDLR is null
and (code = #splCode1# or
code = #splCode2# or
code = #splCode3# or
code = #splCode4# or
code = #splCode5# or
code = #splCode6# or
code = #splCode7# or
code = #splCode8# or
code = #splCode9#
)</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckSSRForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from MAST_SPL_HAND_CODE
where ssr is not null and ssr='Y'
and (code = #splCode1# or
code = #splCode2# or
code = #splCode3# or
code = #splCode4# or
code = #splCode5# or
code = #splCode6# or
code = #splCode7# or
code = #splCode8# or
code = #splCode9#
)</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetAwbTrTypeTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select TRF_TYPE||'-'|| doc_line_no from ddt_shp_trf_dtl 
where SDOC_LINE_NO = (
select doc_line_no from ddt_shp where udoc_line_no in (
select doc_line_no from ddt_uld where TR_NO =
(select tr_no from DDT_MSG where flt_key =#fltKey# and  to_char(flt_date,'DDMONYY') =#fltDate#)) and AWB_NO = #awbNo# )
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetSdocLineNoForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select DOC_LINE_NO from EDI_FFM_SHP where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO = #awbNo#
</select>-->

<!-- Function for identifying Transfer Group::Ranjith::Ends -->

	<!-- Finalize Truck Manifest :: Anup :: Starts -->
	<select id="find_agt_coll_sch_time" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT tr_no truckTrNo,
			DAY_FRQ as dayFrq, TIME_FROM as timeFrom, TIME_TO as timeTo, TO_CHAR(EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(EFF_TO, 'DDMONYY') as effTo, TO_CHAR(SYSDATE, 'DDMONYY HH24MI') as currentDt 
		FROM 
			CUST_AGENT_SCH_COLL_TIME 
		WHERE 
			CUST_NO=#agentCode# AND EFF_TO >= SYSDATE and purpose='CRG'
		ORDER BY 
			TIME_FROM
	</select>
	<select id="find_agentCode_by_iataCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CODE 
		FROM 
			CUST_COMPANY 
		WHERE 
			CO_IATA_CODE=#iataCode# AND AGENT_YN='Y'
	</select>
	<select id="find_iataCode_by_agtCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CO_IATA_CODE 
		FROM 
			CUST_COMPANY 
		WHERE 
			CODE=#agentCode# AND AGENT_YN='Y'
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_agt_credit_bal"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT 
			NVL(CR_BAL, 0) creditBal
		FROM 
			CUST_AGENT_CREDIT
		WHERE 
			CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
			AND CUST_NO = #apptdAgtCode# AND ROWNUM = 1	
	]]>
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_truckdock_by_agtCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			B.TRUCK_DOCK 
		FROM 
			CUST_AGENT_SCH_COLL_TIME A, CUST_AGENT_SCH_COLL_TRUCK_DOCK B 
		WHERE 
			B.TR_NO=A.TR_NO AND A.CUST_NO=#agtCode# AND DAY_FRQ LIKE '%'||#dayOfWk#||'%' AND TIME_FROM=#timeFrm# AND TIME_TO=#timeTo#
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_truck_shp_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, B.AWB_NO as awbNo, B.FLT_KEY as fltNo, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate, 
			TO_CHAR(B.CR_DATE, 'DDMONYY') as crDate, B.TRUCK_MANF_NO as truckManifestNo, NVL(C.MANIFEST_PCS, 0) as manPcs, NVL(C.MANIFEST_WT, 0) as manWt, 
			D.DOC_CHK_COMP as docChkComp, D.DOC_CHK_REQ as docChkReq, E.CC_CODE as ccCode, D.CONTENT as cont, 
			(SELECT SUM(LOCN_PCS) FROM AWB_INVENTORY WHERE AWB_NO=B.AWB_NO AND AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE) as locnPcs, 
      		(SELECT SUM(LOCN_WT) FROM AWB_INVENTORY WHERE AWB_NO=B.AWB_NO AND AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE) as locnWt, 
			PKG_COMMON.GET_FLT_ATA(C.FLT_KEY,C.FLT_DATE,'A') AS ata, C.CARR_CODE as carrCode, SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B, IMP_CAR_SHP C LEFT JOIN V_CST_IMP_CC_CODE_AWB E ON E.FLT_KEY=C.FLT_KEY AND E.FLT_DATE=C.FLT_DATE 
			AND E.AWB_NO=C.AWB_NO, IMP_CAR_AWB D, FLT_OPR F 
		WHERE 
			F.FLT_KEY=B.FLT_KEY AND F.SCH_DATE=B.FLT_DATE AND F.FLT_TYPE='A' AND D.AWB_NO=B.AWB_NO AND D.AWB_DATE=B.AWB_DATE AND 
			C.AWB_NO=B.AWB_NO AND C.AWB_DATE=B.AWB_DATE AND C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='N' AND A.AGENT_CODE=#agentCode#
			AND A.FINAL_TRUCK_MANF_NO IS NULL AND B.AWB_NO NOT IN (SELECT AWB_NO FROM IMP_BOOKING_DTL WHERE 
			AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE)
	</select>
	-->
	<select id="find_shc_by_priority" parameterClass="map" resultClass="java.lang.String">
 		SELECT 
 			CODE 
 		FROM 
 			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE=A.SPL_CODE1 OR B.CODE=A.SPL_CODE2 OR B.CODE=A.SPL_CODE3 OR B.CODE=A.SPL_CODE4 OR B.CODE=A.SPL_CODE5 OR B.CODE=A.SPL_CODE6 OR 
			B.CODE=A.SPL_CODE7 OR B.CODE=A.SPL_CODE8 OR B.CODE=A.SPL_CODE9) AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		ORDER BY 
			PRIORITY
 	</select>
 	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_awb_move_order_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			STATUS 
		FROM 
			RTRV_MOVE_ORDER 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	-->
	<select id="fetchAuthPersonForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT AUTH_REP_NAME AS authRepName from CUST_AGENT_AUTH_REP where UPPER(AUTH_REP_NAME) like 
	 	UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and BLACK_LISTED='N' ORDER BY AUTH_REP_NAME
	</select>
	<select id="find_valid_authPerson_for_agt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			COUNT(1) 
		FROM 
			CUST_AGENT_AUTH_REP 
		WHERE 
			CUST_NO=#custNo# AND AUTH_REP_NAME=#agtRepName# AND AUTH_REP_ID=#authRepId#
	</select>
	<update id="upd_sch_coll_notvalid" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET
			VAL_FOR_SCH_COLL = 'N' 
		WHERE 
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	<select id="find_all_truck_manfst" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TRUCK_MANF_NO as truckManifestNo, AGENT_CODE as agentCode, TIME_SLOT_TR_NO as timeSlotTrNo, TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as timeSlot, 
			FINAL_TRUCK_MANF_IND as finalTrkMnfstInd, FINAL_TRUCK_MANF_NO as finalTrkMnfstNo, AUTH_REP_NAME as authPerson, AUTH_REP_ID as authRepId, 
			TRUCK1 as truck1, TRUCK2 as truck2, TRUCK3 as truck3, TRUCK4 as truck4, TRUCK5 as truck5, CPCT_ID as cpctId, SCH_COLL_FROM as schCollFrom, 
			SCH_COLL_TO as schCollTo, DOC_LINE_NO as docLineNo, TRUCK_DOCK truckDock
		FROM 
			TRUCK_MANIFEST 
		WHERE 
			TRUCK_MANF_NO=#truckMnfstNo# AND FINAL_TRUCK_MANF_IND='N'
	</select>
	<select id="find_all_truck_manfst_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TRUCK_MANF_NO as truckManifestNo, DOC_LINE_NO as docLineNo, AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltNo, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, FLT_TYPE as fltType 
		FROM 
			TRUCK_MANIFEST_DTL 
		WHERE 
			TRUCK_MANF_NO=#truckManifestNo# and doc_line_no = #docLineNo# 
	</select>
	<insert id="insert_truck_manifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO 
			TRUCK_MANIFEST 
			(TRUCK_MANF_NO, AGENT_CODE, TIME_SLOT_TR_NO, SCH_COLL_DATE, FINAL_TRUCK_MANF_IND, AUTH_REP_NAME, 
			AUTH_REP_ID, TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, CPCT_ID, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, DOC_LINE_NO, 
			SCH_COLL_FROM, SCH_COLL_TO,TRUCK_DOCK) 
		VALUES 
			(#finalTrkMnfstNo#, #agentCode#, #timeSlotTrNo#, TO_DATE(#timeSlot#, 'DDMONYY'), #finalTrkMnfstInd#, 
			#authPerson#, #authRepId#, #truck1#, #truck2#, #truck3#, #truck4#, #truck5#, #cpctId#, #crUserid#, SYSDATE, #crUserid#, 
			SYSDATE, TRK_MANF_SEQ.nextval, #schCollFrom#, #schCollTo#,#truckDock#)
	</insert>
	<insert id="insert_truck_manifest_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO 
			TRUCK_MANIFEST_DTL 
			(TRUCK_MANF_NO, DOC_LINE_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, FLT_TYPE) 
		VALUES 
			(#finalTrkMnfstNo#, #docLineNo#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #fltNo#, TO_DATE(#fltDate#, 'DDMONYY'), #crUserid#, 
			SYSDATE, #crUserid#, SYSDATE, #fltType#)
	</insert>
	
	<insert id="insert_truck_manifest_InventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
		(TRUCK_MANF_NO,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
		VALUES 
		(#finalTrkMnfstNo#,#docLineNo#,#dtlDocLineNo#,#awbNo#,#awbDate#,#location#,#lspNo#,#uldKey#,#locnPcs#,#locnWt#,#fltNo#,#fltDate#,#crUserid#,SYSDATE,#crUserid#,SYSDATE,#truckDock#,#locnType#)
	</insert>

	<insert id="select_insert_truck_manifest_InventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
				(TRUCK_MANF_NO ,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
			(select #finalTrkMnfstNo#,#docLineNo#,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE
	    from TRUCK_MANIFEST_INVENTORY_INFO 
	    where truck_manf_no = #truckManifestNo# and DOC_LINE_NO=#oldDocLineNo#)
		
	</insert>
	<select id="generate_truck_mnfst_no" resultClass="java.lang.String">
		SELECT LTRIM(TO_CHAR(TRK_MANF_SEQ.NEXTVAL, '000000')) AS truckMnfstNo FROM DUAL
	</select>
	<update id="update_old_truck_manifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		UPDATE 
			TRUCK_MANIFEST 
		SET
			FINAL_TRUCK_MANF_NO = #finalTrkMnfstNo# 
		WHERE
			TRUCK_MANF_NO = #truckManifestNo#
	</update>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="find_truck_overlapping" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRUCK_MANIFEST 
		WHERE 
			TO_DATE((to_char(SCH_COLL_DATE,'DDMONYY') || ' ' || TO_CHAR(NVL(SCH_COLL_FROM,0),'0000')), 'DDMONYY HH24MI') BETWEEN 
			TO_DATE(#timePeriodFrom#, 'DDMONYY HH24MI') AND TO_DATE(#timePeriodTo#, 'DDMONYY HH24MI') 
			AND (TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo#)
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	
	<!--<select id="find_agent_os_charges" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT
			   NVL(SUM(a.osCharge), 0) as totalOSPayment
		FROM (SELECT CA.AGENT_CUST_NO, count(1) cnt , CARR_CODE, APPNTD_AGENT, sum(gt.osCharge) osCharge
			FROM IMP_CAR_SHP CS      
			JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
				GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
			   		   ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
               AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
			JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
			left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
				 ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE         
			WHERE CS.CARR_CODE = NVL('', CS.CARR_CODE)
			GROUP BY CA.AGENT_CUST_NO, CARR_CODE, APPNTD_AGENT) A  
		LEFT JOIN 	CUST_COMPANY CC ON CC.CODE = A.AGENT_CUST_NO 
		WHERE NVL(CC.CODE_DESC, A.APPNTD_AGENT) = #agtName# 
		AND NVL(CC.CO_IATA_CODE, '*') = NVL(#iataCode#, NVL(CC.CO_IATA_CODE, '*'))
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	
	<!--<select id="find_os_cash_Credit" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT     
		  NVL(CC.CODE_DESC, CA.APPNTD_AGENT) as codeDesc,
		  CA.AGENT_CUST_NO as code,
          0 as osCredit,
          0 as osCash,
          CA.CATALOG as catalog,
          nvl(GT.AAT_OS,0) AS aatOSch,
          nvl(GT.AIRL_OS,0) AS  airlOSch
          FROM IMP_CAR_SHP CS
            JOIN (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, count(1) cnt, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT
                   from AWB_INVENTORY 
                   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) AI 
                           ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY
            JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
            LEFT JOIN CUST_COMPANY CC ON CC.CODE = CA.AGENT_CUST_NO
           join FLT_OPR f on f.FLT_KEY  = CS.FLT_KEY  AND f.SCH_DATE =  CS.FLT_DATE  and f.flt_type='A' 
            LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE   
           WHERE NVL(CC.CODE_DESC, CA.APPNTD_AGENT) = #agtName#
          AND CS.AWB_NO=#awbNo# AND CS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
          AND FLT_KEY=#fltNo# AND CS.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	-->
	<select id="findValidAgent" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			CUST_COMPANY 
		WHERE 
			AGENT_YN='Y' AND ACTIVE='Y' AND BLACKLISTED='N' AND CODE_DESC=#agtName#
	</select>
	<select id="findHKIDByRepName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT AUTH_REP_ID FROM CUST_AGENT_AUTH_REP WHERE AUTH_REP_NAME=#authRepName#
	</select>
	<select id="checkTruckSrfErr" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="java.lang.Integer">
		select count(1) from truck_manifest_dtl where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and err_rmk is not null and truck_manf_no = #truckManfNo#
	</select>
	<select id="findAgtCodeByAgtNameTrkMnfst" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agtName#
	</select>
	<select id="findAgtNameByAgtCodeTrkMnfst" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = #agtCode#
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="findTruckDocksForAgent" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
		SELECT 
			STRAGG(STRINGDELIM(TRUCK_DOCK, ', ')) 
		FROM 
			CUST_AGENT_SCH_COLL_TIME A, CUST_AGENT_SCH_COLL_TRUCK_DOCK B 
		WHERE 
			B.TR_NO=A.TR_NO AND A.CUST_NO=#agtCode# AND EFF_TO >= SYSDATE AND EFF_FROM <=SYSDATE and purpose='CRG' 
		]]>
	</select>
	
	<select id="findTruckDocksForAgent_With_TRNO" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
			SELECT STRAGG(STRINGDELIM(TRUCK_DOCK,',')) AS truckDock FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK
		]]>
		 where tr_no in  
		<iterate open="(" close=")" conjunction="," property="arrTruckTrNoList">
		     #arrTruckTrNoList[]#   
		 </iterate>
	</select>
	<select id="findAwbLstInTruckManifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, B.DOC_LINE_NO as docLineNo, 
  			TO_CHAR(B.CR_DATE, 'DDMONYY HH24:MI') as crDate, B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, 
  			SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay,B.FLT_KEY as fltNo, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate 
		FROM 
  			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND C.AWB_NO=B.AWB_NO 
		WHERE 
  			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='N' AND A.FINAL_TRUCK_MANF_NO IS NULL 
  			and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          		and d.awb_no = B.AWB_NO and d.awb_date = B.AWB_DATE and d.FLT_KEY = B.FLT_KEY AND d.FLT_DATE = B.FLT_DATE
          		and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(h.bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
 			AND  to_date(to_char(A.SCH_COLL_DATE,'DDMONYY')||' '||LPAD(A.SCH_COLL_TO, 4, 0),'DDMONYY HH24MI') > sysdate
  			<isNotEmpty property="agent">
				AND A.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#agent#) 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
		<!-- <isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				AND (A.SCH_COLL_DATE||A.SCH_COLL_FROM||A.SCH_COLL_TO) BETWEEN (#schCollDate#||#schCollFrmHrs#||#schCollFrmMin#) AND (#schCollDate#||#schCollToHrs#||#schCollToMin#) 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				AND TO_DATE(A.CR_DATE, 'DDMONYY HH24MI') BETWEEN (#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#) AND (#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#)
								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND B.AWB_NO=#awbNo# 
			</isNotEmpty> -->
	</select>
	<select id="findAwbInvDtlsFrTrkMnfst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT truck_manf_no truckManifestNo, doc_line_no docLineNo, DTL_DOC_LINE_NO dtlDocLineNo,
			LOC_CODE as location, NVL(LSP_NO, ULD_KEY) as lspUldNo, LSP_NO as lspNo, ULD_KEY as uldKey,PCS as locnPcs, WT as locnWt, 
			FLT_KEY as fltNo, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate , TRUCK_DOCK truckDock, LOCN_TYPE locnType
		FROM 
			TRUCK_MANIFEST_INVENTORY_INFO 
		WHERE truck_manf_no = #truckManifestNo# and doc_line_no = #docLineNo# 
	</select>
	<select id="findAliasNameByAgtCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ALIAS_NAME FROM CUST_AGENT_ALIAS WHERE CUST_NO=#agtCode#  AND ROWNUM=1
	</select>
	<select id="enquireFinalizeTruckManifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">		
		SELECT 
			A.TRUCK_MANF_NO as truckManifestNo, B.CODE_DESC as agent, B.CODE as agentCode, (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4) || '-' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) 
			|| ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlot, TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as crDate,
			A.TRUCK_DOCK truckDock 
		FROM 
			TRUCK_MANIFEST A, CUST_COMPANY B 
		WHERE 
			B.CODE=A.AGENT_CODE AND A.FINAL_TRUCK_MANF_IND='Y' 		
			and exists (select 'Y' from TRUCK_MANIFEST h
					left join TRUCK_MANIFEST_DTL dtl on dtl.TRUCK_MANF_NO = h.TRUCK_MANF_NO
					left join TRUCK_MANIFEST_INVENTORY_INFO inv on dtl.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  dtl.doc_line_no = inv.doc_line_no                  
					where    h.TRUCK_MANF_NO = A.TRUCK_MANF_NO 
             <isNotEmpty property="location">
				AND inv.LOCN_TYPE = #location#
			</isNotEmpty>)
			<isNotEmpty property="agent">
				AND B.CODE_DESC=#agent# 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
			<isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				and (to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_FROM, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate#  ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')
     				OR      
    				to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_TO, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate# ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI'))

 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				and A.CR_DATE between 
							to_date(#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#, 'DDMONYY HH24MI') 
							and to_date(#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#, 'DDMONYY HH24MI')

								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND A.TRUCK_MANF_NO IN (SELECT TRUCK_MANF_NO FROM TRUCK_MANIFEST_DTL WHERE AWB_NO=#awbNo#) 
			</isNotEmpty>
	</select>
	<select id="fetchFinalizedTrkMnfstDtls" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, B.doc_line_no docLineNo, TO_CHAR(B.CR_DATE, 'DDMONYY HH24:MI') as crDate, B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, 
  			SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay
		FROM 
  			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
  			LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND C.AWB_NO=B.AWB_NO 
		WHERE 
  			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO  AND A.TRUCK_MANF_NO=#fnlTrkMnfstNo#
	</select>
	<select id="fetchWorksheetAgtLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			B.CODE_DESC as agent, B.CODE as agentCode, (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4) || '-' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) 
			|| ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlot, A.TRUCK_MANF_NO as truckManifestNo ,
			(TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4)) as timeSlotFrom,
                        (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlotTo,
			TRUCK_DOCK truckDock
		FROM 
			TRUCK_MANIFEST A, CUST_COMPANY B 
		WHERE 
			B.CODE=A.AGENT_CODE AND A.FINAL_TRUCK_MANF_IND='N' AND A.FINAL_TRUCK_MANF_NO IS NULL
			and exists (select dtl.TRUCK_MANF_NO from TRUCK_MANIFEST_DTL dtl, TRUCK_MANIFEST_INVENTORY_INFO inv 
                              where  dtl.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  dtl.doc_line_no = inv.doc_line_no and dtl.TRUCK_MANF_NO = A.TRUCK_MANF_NO 
             <isNotEmpty property="location">
				AND LOCN_TYPE = #location#
			</isNotEmpty>) 
			<isNotEmpty property="agent">
				AND B.CODE_DESC=#agent# 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
			<isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				and (to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_FROM, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate#  ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')
     				OR      
    				to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_TO, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate# ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')) 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				and A.CR_DATE between 
							to_date(#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#, 'DDMONYY HH24MI') 
							and to_date(#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#, 'DDMONYY HH24MI')
								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND A.TRUCK_MANF_NO IN (SELECT TRUCK_MANF_NO FROM TRUCK_MANIFEST_DTL WHERE AWB_NO=#awbNo#) 
			</isNotEmpty>
			AND  to_date(to_char(A.SCH_COLL_DATE,'DDMONYY')||' '||LPAD(A.SCH_COLL_TO, 4, 0),'DDMONYY HH24MI') > sysdate
	</select>
	<select id="fetchWorksheetAwbLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			A.ROWID rowNo, A.TRUCK_MANF_NO as truckManifestNo, A.AWB_NO as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, A.RETRIEVED as retrieved, 
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as crDate, SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) as awbNoDisplay,
			 A.doc_line_no docLineNo 
		FROM 
			TRUCK_MANIFEST_DTL A
			LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=A.FLT_KEY AND C.FLT_DATE=A.FLT_DATE AND C.AWB_NO=A.AWB_NO 
		WHERE 
			A.TRUCK_MANF_NO=#truckManifestNo#
			and exists (select inv.TRUCK_MANF_NO from TRUCK_MANIFEST_INVENTORY_INFO inv 
	                         where  A.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  A.doc_line_no = inv.doc_line_no 
				             <isNotEmpty property="location">
								AND inv.LOCN_TYPE = #location#
							</isNotEmpty>)
	</select>
	<select id="fetchWorksheetAwbDtlLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, A.doc_line_no docLineNo , A.dtl_doc_line_no dtlDocLineNo , A.LOC_CODE as orgLocation, nvl(l.loc_code,u.loc_code) as location, NVL(A.LSP_NO, A.ULD_KEY) as lspUldNo, A.PCS as locnPcs, A.WT as locnWt, 
  			A.FLT_KEY as fltNo, TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate , A.TRUCK_DOCK shcTD
		FROM 
  			TRUCK_MANIFEST_INVENTORY_INFO  A
  			left join lsp_inventory l on  l.lsp_no = a.lsp_no
  			left join uld_inventory u on  u.uld_key = a.uld_key  
		WHERE 
  			A.TRUCK_MANF_NO=#truckManifestNo# 
  			AND A.doc_line_no = #docLineNo# 
			<isNotEmpty property="location">
				AND A.LOCN_TYPE = #location#
			</isNotEmpty>
	</select>
	<update id="updateRetrievedIndInTrkMnfstDtls" parameterClass="java.util.HashMap">
		UPDATE 
			TRUCK_MANIFEST_DTL 
		SET 
			RETRIEVED='Y' 
		WHERE 
			TRUCK_MANF_NO=#truckManifestNo# 
			and doc_line_no = #docLineNo# AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</update>
	<!-- Finalize Truck Manifest :: Anup :: End -->
		<!-- Added by Cliff Close/Unclose Import Consignment Starts -->
 <select id="imp_closeunclose_getAWB"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			M.ACCS_HANDLER as accsHandler, 
			M.APPNTD_AGENT as appntdAgent,
			M.CSGNE_NAME as cnsCustNo,
			M.AWB_CLOSE_RMK as closeRmk, 
			A.AWB_CLOSED_YN as closed, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDateDisplay,
			M.AWB_DEST as dest, 
			A.AWB_NO as awbNo, 
			M.AWB_ORIGIN as orig, 
			M.AWB_PCS as pcs, 
			M.AWB_RMK as rmk, 
			TRIM(TO_CHAR(M.AWB_WT, '9999990D9')) as wt, 
			M.CATALOG as catalog, 
			(SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType, 
			M.CONTENT as cont, 
 			M.ECT_HANDLER as ectHandler, 
			M.REL_IND as relInd, 
			M.SPL_CODE1 as splCode1, 
			M.SPL_CODE2 as splCode2,
			M.SPL_CODE3 as splCode3, 
			M.SPL_CODE4 as splCode4,
			M.SPL_CODE5 as splCode5, 
			M.SPL_CODE6 as splCode6,
			M.SPL_CODE7 as splCode7, 
			M.SPL_CODE8 as splCode8,
			AAT_OS + AIRL_OS as osCharges,
			SHPR_NAME AS shipper,
			M.BANK_ENDOS as bankEndos
		FROM AWB A 
		LEFT JOIN IMP_CAR_AWB M ON M.AWB_NO = A.AWB_NO AND M.AWB_DATE = A.AWB_DATE 
		LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = A.AWB_NO AND GT.AWB_DATE = A.AWB_DATE
		WHERE A.AWB_NO = #awbNo# AND TO_CHAR(A.AWB_DATE, 'DDMONYY') like #awbDate#
		ORDER BY M.AWB_CLOSED ASC
   	</select>
	
	<select id="imp_getCloseUnCloseAWB"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT AWB_CLOSED_YN as closed, 
			TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate FROM AWB WHERE AWB_NO = #awbNo#
	</select>
   	
   	 <select id="checkTracRec"  parameterClass="java.lang.String"  
		resultClass="java.lang.String">
		  select 
				case when (select COUNT(1) 
                           from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                            b.awb_no and a.awb_no = #awbNo# and  
                             (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then 'Y'
				else 
				case when (select COUNT(1) value2 from
                              trc_loc a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                              b.awb_no and a.awb_no = #awbNo# and
                              (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then 'Y'
				else 'N'
				end
				end AS ind from dual
   	</select>
   		
   		<!-- Changed for QR :: RANJITH -->
	<select id="imp_closeunclose_getManifestList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ManifestBO">
		SELECT 
			TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			C.TR_NO as trNo,
			B.FLT_KEY as fltKey, 
			PKG_COMMON.get_flt_ata(c.FLT_KEY, c.SCH_DATE, 'A') as ata,
			B.LDG_POINT as ldgPt, 
			B.MANIFEST_PCS as manfPcs, 
			TRIM(TO_CHAR(B.MANIFEST_WT, '9999990D9')) as manfWt, 
			B.RECD_PCS as locnPcs, 
			TRIM(TO_CHAR(B.RECD_WT, '9999990D9')) as locnWt, 
			DECODE(B.CIR_PROC_DATE,NULL,'N','Y') as cir,
			DECODE(B.DAM_PROC_DATE,NULL,'N','Y') as dam, 
			DECODE(B.DIR_PROC_DATE,NULL,'N','Y') as dir,  
			B.ECAN_SEND as sendECan,
			HD.TRM_NO as trmNo,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as cc,
			TO_CHAR(pkg_Calculate.GET_FREE_DAYS(c.SCH_DATE, c.FLT_KEY,B.AWB_NO,B.AWB_DATE), 'DDMONYY') as freeStrgDue,
			HD.RECD_CARR as recvCarr
		FROM IMP_CAR_SHP B 
		JOIN FLT_OPR C ON B.FLT_DATE = C.SCH_DATE AND B.FLT_KEY	 = C.FLT_KEY 
		LEFT JOIN (select * from (SELECT dt.awb_no, dt.awb_date, dt.flt_key, dt.flt_date, HD.TRM_NO TRM_NO,
			dense_rank() over (partition by dt.awb_no, dt.awb_date, dt.flt_key, dt.flt_date order by dt.cr_date) 	rank
			FROM IMP_TRM_HD HD JOIN IMP_TRM_DTL DT ON HD.TRM_NO = DT.TRM_NO
			WHERE HD.VOID_DATE IS NULL) where rank = 1) T 
			ON T.AWB_NO = B.AWB_NO AND TO_CHAR(T.AWB_DATE, 'DDMONYY') = B.AWB_DATE
				AND T.FLT_KEY = B.FLT_KEY AND T.FLT_DATE = B.FLT_DATE
		LEFT JOIN IMP_TRM_HD HD ON HD.TRM_NO = T.TRM_NO
		WHERE C.FLT_TYPE = 'A'	AND
			  B.AWB_NO = 	#awbNo#	AND
			  TO_CHAR(B.AWB_DATE, 'DDMONYY') = #awbDate#
   	</select>
   	
	<select id="imp_closeunclose_getSRFList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpConsSRFBO">
		SELECT
			A.SRF_NO as srfNo, 
			A.SRF_PCS as pcs, 
			TRIM(TO_CHAR(A.SRF_WT, '9999990D9')) as wt, 
			A.STATUS as status, 
			B.CDIF_NO as cdifNo,
			TRIM(TO_CHAR(B.CDIF_UTL_WT, '9999990D9')) as ulWt, 
			B.CDIF_UTL_PCS as ulPcs, 
			TRIM(TO_CHAR(B.CDIF_PS_WT, '9999990D9')) as psWt, 
			B.CDIF_PS_PCS as psPcs, 
			TRIM(TO_CHAR(B.CDIF_DT_WT, '9999990D9')) as dtWt, 
			B.CDIF_DT_PCS as dtPcs
		FROM IMP_SRF A 
		LEFT JOIN IMP_CDIF C  ON A.SRF_NO = C.SRF_NO
		LEFT JOIN IMP_CDIF_HAWB B ON B.CDIF_NO = C.CDIF_NO
		WHERE
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate#
   	</select>
   	
	<update id="imp_closeunclose_updateClose" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB
		SET
			AWB_CLOSED = 'Y',
			AWB_CLOSE_DATE = sysdate,
			AWB_CLOSE_RMK = #closeRmk#,
			AWB_CLOSE_USER = #closeUser#, 
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>

	<update id="imp_closeunclose_updateUnclose" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB
		SET
			AWB_CLOSED = 'N',
			AWB_CLOSE_DATE = NULL,
			AWB_CLOSE_RMK = #closeRmk#,
			AWB_CLOSE_USER = NULL, 
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	
	<update id="imp_closeunclose_updateCloseInAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB
		SET
			AWB_CLOSED_YN = 'Y',TR_TYPE ='CUAWB', AWB_RMK = #closeRmk#, LM_USER_ID = #lmUserId#,LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	<update id="imp_closeunclose_updateUncloseInAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB
		SET
			AWB_CLOSED_YN = 'N',TR_TYPE ='CUAWB', AWB_RMK = #closeRmk#, LM_USER_ID = #lmUserId#,LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	
	<select id="chechStatusInAwbInventory" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer" >
		SELECT 
		      COUNT(1)
		  FROM
		      AWB_INVENTORY 
		 WHERE 
		      AWB_NO = #awbNo# AND
		      AWB_DATE = #awbDate#  and LOCN_PCS > 0 
   </select>
	
	
<parameterMap id="hmap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>
<procedure id="getOSCharges" parameterMap="hmap" >
	{ call PRC_OS_CH(?,?) }
</procedure>	
<!-- Added by Cliff Close/Unclose Import Consignment Ends -->
<!--  LSP PREFIX VALIDATION QUERY :: RANJITH :: STARTS -->
<select id="validLspPrefix"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from mast_code_dtl dtl
	join mast_code_hd  hd on
	dtl.GROUP_CODE = hd.GROUP_CODE
	and dtl.CODE_TYPE = hd.CODE
	where dtl.code_type= 'CSD_PRFX'
	and dtl.Code=#lspPrfx#
</select>

<!--  LSP PREFIX VALIDATION QUERY :: RANJITH :: ENDS -->
<!-- Changed for QR :: RANJITH -->
	<!-- Import Customs Clearance Checklist :: Anup :: Begins -->
	<select id="findCustomsConstrainedShpmntLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" 
		resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
		 E.AWB_NO as awbNo,
      	SUBSTR(TRIM(E.AWB_NO),1,3)||'-'||SUBSTR(TRIM(E.AWB_NO),4) awbNoDisplay, 
      	E.FLT_KEY as fltNo, 
		TO_CHAR(E.FLT_DATE, 'DDMONYY') as arrDate, 
      	D.APPNTD_AGENT as agtName, 
		E.MANIFEST_PCS as manfPcs, 
      	E.MANIFEST_WT as manfWt, 
      	D.DOC_CHK_REQ as docReqYN, 
      	'N' as docRecvYN, 
      	G.CC_CODE as ccCode, 
		SUBSTR(TRIM(TO_CHAR(C.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(C.SCH_TIME,'0000')),3,4) as schTimeFm, 
		D.ALLOW_PACCO as paccoYN, 
      	'' as trNo, 
      	'' as status, 
      	TO_CHAR(E.AWB_DATE, 'DDMONYY') as awbDate, 
		'' as message, 
      	H.CC_CATEGORY as ccCategory, 
      	(SELECT SUM(LOCN_PCS) FROM AWB_INVENTORY WHERE AWB_NO=E.AWB_NO AND AWB_DATE=E.AWB_DATE AND FLT_KEY=E.FLT_KEY AND FLT_DATE=E.FLT_DATE) AS invPcs, 
      	(SELECT SUM(LOCN_WT) FROM AWB_INVENTORY WHERE AWB_NO=E.AWB_NO AND AWB_DATE=E.AWB_DATE AND FLT_KEY=E.FLT_KEY AND FLT_DATE=E.FLT_DATE) AS invWt,
      	S.SRF_NO AS srfNo ,
        S.STATUS AS srfStatus,
        TO_CHAR(S.SRF_DATE,'DDMONYY') AS srfDate
		FROM 
			IMP_CAR_SHP E JOIN FLT_OPR C ON E.FLT_KEY=C.FLT_KEY AND E.FLT_DATE=C.SCH_DATE AND C.FLT_TYPE='A'
			JOIN IMP_CAR_AWB D ON  D.AWB_NO = E.AWB_NO AND D.AWB_DATE = E.AWB_DATE
			JOIN AWB F ON E.AWB_NO = F.AWB_NO AND E.AWB_DATE = F.AWB_DATE
			LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=E.AWB_NO AND  AWB_INV.AWB_DATE=E.AWB_DATE AND AWB_INV.FLT_KEY=E.FLT_KEY AND  AWB_INV.FLT_DATE=E.FLT_DATE
			LEFT JOIN V_CST_IMP_CC_CODE G ON  G.AWB_NO=E.AWB_NO AND G.FLT_KEY=E.FLT_KEY AND G.FLT_DATE=E.FLT_DATE AND NVL(G.HAWB_NO, '000000000000000000') =  '000000000000000000'
			LEFT JOIN MAST_CONSTRAINT_CODE H ON G.CC_CODE=H.CODE
      		LEFT JOIN (SELECT SRF.SRF_NO,SRF.STATUS,SRF.SRF_DATE,SFLT.FLT_KEY,SFLT.FLT_DATE,SRF.AWB_NO,SRF.AWB_DATE FROM IMP_SRF SRF,IMP_SRF_FLT SFLT WHERE  
		      SRF.SRF_NO=SFLT.SRF_NO AND SRF.STATUS='ISSUED' AND SRF.SRF_EXPY_DATE>=SYSDATE) S ON
		      S.FLT_KEY=E.FLT_KEY AND S.FLT_DATE=E.FLT_DATE AND S.AWB_NO = E.AWB_NO AND S.AWB_DATE = E.AWB_DATE
	  WHERE NVL(AWB_CLOSED_YN,'N') = 'N' AND NVL(d.ALLOW_PACCO,'N') = 'Y'  AND NOT(E.RECD_PCS>0 AND NVL(AWB_INV.LOCN_PCS,0)=0)
			<isNotEmpty prepend="AND" property="carrCode">
				<isNotEmpty property="fltNo">
					E.FLT_KEY=#carrCode# || #fltNo#
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrDate">
				E.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="awbPrefix">
				<isNotEmpty property="awbSuffix">
					E.AWB_NO=#awbPrefix# || #awbSuffix#
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccStrtWith">
				G.CC_CODE LIKE #ccStrtWith# || '%'
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccFlag">
				G.CC_CODE IN (#cc1#, #cc2#, #cc3#, #cc4#, #cc5#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ataFromHrs">
				<isNotEmpty property="ataFromMins">
					<isNotEmpty property="ataToHrs">
						<isNotEmpty property="ataToMins">
							C.SCH_TIME BETWEEN #ataFromHrs# || #ataFromMins# AND #ataToHrs# || #ataToMins#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agentCode">
				D.AGENT_CUST_NO=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				 exists (select 1 from IMP_CUST_CLR_LIST IMP_CLR WHERE IMP_CLR.AWB_NO=E.AWB_NO AND IMP_CLR.AWB_DATE=E.AWB_DATE AND 
				 IMP_CLR.FLT_KEY=E.FLT_KEY AND IMP_CLR.FLT_DATE=E.FLT_DATE AND IMP_CLR.HAWB_NO = G.HAWB_NO AND CCCL_STATUS=#status#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="srfStatus">
				<isEqual property = "srfStatus" compareValue="Y">
					S.SRF_NO is NOT NULL
				</isEqual>
				<isEqual property = "srfStatus" compareValue="N">
					S.SRF_NO is NULL
				</isEqual> 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccCategory">
				G.CC_CODE IN (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE CC_CATEGORY=#ccCategory#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="consType">
				<isEqual property = "consType" compareValue="SCH COLLECTION">
					D.VAL_FOR_SCH_COLL='Y'
					AND not exists (SELECT 1 FROM IMP_BOOKING A, IMP_BOOKING_DTL B 
								WHERE 
								A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=E.AWB_NO AND B.AWB_DATE=TO_DATE(TO_CHAR(E.AWB_DATE, 'DDMONYY'), 'DDMONYY') 
								AND B.FLT_KEY=E.FLT_KEY AND B.FLT_DATE=TO_DATE(TO_CHAR(E.FLT_DATE, 'DDMONYY'), 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
								|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) 
				</isEqual>
				<isEqual property = "consType" compareValue="BOOKING">
					 exists (SELECT 1 FROM IMP_BOOKING A, IMP_BOOKING_DTL B 
								WHERE 
								A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=E.AWB_NO AND B.AWB_DATE=TO_DATE(TO_CHAR(E.AWB_DATE, 'DDMONYY'), 'DDMONYY') 
								AND B.FLT_KEY=E.FLT_KEY AND B.FLT_DATE=TO_DATE(TO_CHAR(E.FLT_DATE, 'DDMONYY'), 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
								|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="constrained">
				NVL(H.CONSTRAINT,'N') = #constrained#
			</isNotEmpty>
			ORDER BY  E.AWB_NO,D.APPNTD_AGENT
	</select>	
	<select id="findCustomsConstrainedShpmntHawbLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" 
		resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
		DISTINCT E.AWB_NO as awbNo,
      	SUBSTR(TRIM(E.AWB_NO),1,3)||'-'||SUBSTR(TRIM(E.AWB_NO),4) awbNoDisplay, 
      	E.FLT_KEY as fltNo, 
		TO_CHAR(E.FLT_DATE, 'DDMONYY') as arrDate, 
      	NVL(FH.HAWB_NO, '000000000000000000') as hawbNo, 
      	D.APPNTD_AGENT as agtName, 
		FH.HAWB_PCS as manfPcs, 
      	FH.HAWB_NET_WT as manfWt, 
      	D.DOC_CHK_REQ as docReqYN, 
      	F.DOC_RCV as docRecvYN, 
     	G.CC_CODE as ccCode, 
		D.ALLOW_PACCO as paccoYN, 
      	F.TR_NO as trNo, 
      	F.cccl_status as status,
      	TO_CHAR(E.AWB_DATE, 'DDMONYY') as awbDate, 
		'' as message,
      	H.CC_CATEGORY as ccCategory,
      	(select awb_image_name from awb_image where awb_no=E.AWB_NO and TO_CHAR(awb_date, 'DDMONYY')=TO_CHAR(E.AWB_DATE, 'DDMONYY') and rownum=1) transactionId  
      	FROM 
        IMP_CAR_SHP E 
  		JOIN IMP_CAR_AWB D ON  D.AWB_NO = E.AWB_NO AND D.AWB_DATE = E.AWB_DATE
        LEFT JOIN V_CST_IMP_CC_CODE G ON  G.AWB_NO=E.AWB_NO AND G.FLT_KEY=E.FLT_KEY AND G.FLT_DATE=E.FLT_DATE 
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO 
        FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = G.HAWB_NO AND FH.AWB_NO = E.AWB_NO AND FH.AWB_DATE = E.AWB_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE H ON G.CC_CODE=H.CODE
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=E.AWB_NO AND F.AWB_DATE=E.AWB_DATE AND F.FLT_KEY=E.FLT_KEY AND F.FLT_DATE=E.FLT_DATE AND F.HAWB_NO = G.HAWB_NO
		WHERE E.FLT_KEY=#fltNo# AND E.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND E.AWB_NO=#awbNo# AND E.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
                        
                        
	<select id="findDocListByCC" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
			DOC_NAME as docName, 'N' as selDocNotAv 
		FROM 
			MAST_CC_DOC_LIST 
		WHERE 
			CC=#ccCode# AND DOC_NAME NOT IN (SELECT DOC_NAME as docName FROM IMP_CCCL_DOC_LIST where TR_NO=#trNo#)
		UNION 
		SELECT 
  			DOC_NAME as actionName, NOT_AVAILABLE as selDocNotAv 
		FROM 
  			IMP_CCCL_DOC_LIST 
  		WHERE 
    		TR_NO=#trNo#
	</select>
	<select id="findActionListByCC" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
			ACTION_NAME as actionName 
		FROM 
			MAST_CC_ACTION_LIST 
		WHERE 
			CC=#ccCode#
		UNION
		SELECT 
  			ACTION_NAME as actionName 
		FROM 
  			IMP_CCCL_ACTION_LIST 
  		WHERE 
    		TR_NO=#trNo#
	</select>
	<insert id="insertCCCLDocLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO
			IMP_CCCL_DOC_LIST 
			(TR_NO, DOC_NAME, NOT_AVAILABLE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#trNo#, #docName#, #selDocNotAv#, #crUserid#, SYSDATE, #crUserid#, SYSDATE)
	</insert>
	<insert id="updateCCCLDocLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		UPDATE IMP_CCCL_DOC_LIST SET NOT_AVAILABLE=#selDocNotAv#, LM_USER_ID=#crUserid#, LM_DATE=SYSDATE WHERE TR_NO=#trNo# AND DOC_NAME=#docName#
	</insert>
	<delete id="deleteCCCLDoc" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		DELETE FROM IMP_CCCL_DOC_LIST WHERE TR_NO=#trNo# AND DOC_NAME=#docName#
	</delete>
	<insert id="insertCCCLActionLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO
			IMP_CCCL_ACTION_LIST 
			(TR_NO, ACTION_NAME, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#trNo#, #actionName#, #crUserid#, SYSDATE, #crUserid#, SYSDATE)
	</insert>
	<delete id="deleteCCCLAction" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		DELETE FROM IMP_CCCL_ACTION_LIST WHERE TR_NO=#trNo# AND ACTION_NAME=#actionName#
	</delete>
	<select id="findCustClrLstNextVal" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CUST_CLR_LST_SEQ.NEXTVAL 
		FROM 
			DUAL
	</select>
	<select id="findDataExistInCustClrLst" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CUST_CLR_LIST 
		WHERE 
			TR_NO=#trNo#
	</select>
	<update id="updateCustClrLstByTrNo" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		UPDATE 
			IMP_CUST_CLR_LIST 
		SET 
			CCCL_STATUS=#status#, CCCL_UPDATE_BY=#crUserid#, CCCL_UPDATE_DATE=SYSDATE, CCCL_MSG=#message# ,DOC_REQ = #docReqYN#, 
			<isEqual property="docReqYN" compareValue="Y">
				DOC_RCV='N' 
			</isEqual>
			<isNotEqual property="docReqYN" compareValue="Y">
				DOC_RCV=#docRecvYN# 
			</isNotEqual>
		WHERE 
			TR_NO=#trNo#
	</update>
	<insert id="insertCustClrLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO 
			IMP_CUST_CLR_LIST
			(TR_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, HAWB_NO, CC, CCCL_STATUS, CCCL_UPDATE_BY, CCCL_UPDATE_DATE, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,  FLT_TYPE, DOC_RCV, DOC_REQ, CCCL_MSG) 
		VALUES
			(#trNo#, #awbNo#, #awbDate#, #fltNo#, TO_DATE(#arrDate#, 'DDMONYY'), #hawbNo#, #ccCode#, #status#, #crUserid#, SYSDATE, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, 'I', #docRecvYN#, #docReqYN#, #message#)
	</insert>
	<select id="findAwbInBooking" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_FROM,'0000')),0,2) || ':' ||  
			SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_FROM,'0000')),3,4) || '-' || SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_TO,'0000')),0,2) || ':' 
			|| SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_TO,'0000')),3,4) AS schTime 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltNo# AND B.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
			|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE
	</select>
	<select id="findAwbInSchColl" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_FROM,'0000')),0,2) || ':' || 
			SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_FROM,'0000')),3,4) || '-' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),0,2) 
			|| ':' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),3,4) as schTime 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
	    WHERE 		
        B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND (A.FINAL_TRUCK_MANF_IND='Y' OR(A.FINAL_TRUCK_MANF_IND='N' AND A.final_truck_manf_no is null AND 
        to_date(TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),0,2)	
        || ':' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),3,4),'DDMONYY HH24:MI') > sysdate))
        AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltNo# AND B.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')	 and rownum=1
			
			
			
	</select>
	<select id="findAwbInShipment" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			LTRIM(CNTG_FLT_CARR || CNTG_FLT_NO || '/' || TO_CHAR(CNTG_FLT_DATE, 'DDMONYY'), '/') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(CNTG_FLT_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(CNTG_FLT_TIME,'0000')),3,4), ':') AS schTime 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
	</select>
	<select id="findLatestCCCodeFromView" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			CC_CODE 
		FROM 
			V_CST_IMP_CC_CODE 
		WHERE 
			FLT_KEY=#fltNo# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND AWB_NO=#awbNo# AND HAWB_NO=#hawbNo#
	</select>
	<insert id="insertAWBImage" parameterClass="java.util.HashMap">
		INSERT INTO 
			AWB_IMAGE 
			(SEQ_NO, AWB_IMAGE_NAME, AWB_NO, AWB_DATE, HAWB_NO) 
		VALUES 
			(AWB_IMAGE_SEQ.NEXTVAL, #trnsId#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'),  #hawbNo#)
	</insert>
	<select id="findAgentRemark" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			AGENT_RMK 
		FROM 
			IMP_CUST_CLR_LIST 
		WHERE 
			TR_NO=#trNo#
	</select>
	<select id="findDocExistsInMaster" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CC_DOC_LIST 
		WHERE 
			DOC_NAME=#docName# AND CC=#ccCode#
	</select>
	<select id="findActionExistsInMaster" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CC_ACTION_LIST 
		WHERE 
			ACTION_NAME=#actName# AND CC=#ccCode#
	</select>
	<select id="findDocExistsInCCCL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CCCL_DOC_LIST 
		WHERE 
			TR_NO=#trNo# AND DOC_NAME=#docName#
	</select>
	<select id="findActionExistsInCCCL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CCCL_ACTION_LIST 
		WHERE 
			TR_NO=#trNo# AND ACTION_NAME=#actName#
	</select>
	<select id="findCustomsPassedConstraint" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE 
		WHERE 
			CODE=#ccCode# AND CONSTRAINT='Y'
	</select>
	<select id="findDocNotAvailable" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CCCL_DOC_LIST WHERE TR_NO=#trNo# AND NOT_AVAILABLE='Y'
	</select>
	
	 <select id="findCdifAptAgtName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT AUTH_REP_NAME FROM imp_srf where srf_no = #srfNo# 
	</select>
	
	<select id="findAgtCodeByAgtName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agtName# and rownum = 1
	</select>
		
	<!-- Import Customs Clearance Checklist :: Anup :: Ends -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- Custom Physical Clearance Action List :: Anup :: Begins -->
	<select id="findPhyClrnceLst" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
	SELECT * FROM 
		( SELECT 
  			A.AWB_NO as awbNo,
        SUBSTR(TRIM(a.AWB_NO),1,3)||'-'||SUBSTR(TRIM(a.AWB_NO),4) as AWBNODISPLAY, 
        TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
  			a.FLT_KEY as FLTNO, 
        TO_CHAR(a.FLT_DATE, 'DDMONYY') as ARRDATE, 
        V.HAWB_NO as HAWBNO,
        FH.MANIFEST_DESC HAWBCONTENT, 
        E.APPNTD_AGENT as AGTNAME, 
        NVL(FH.HAWB_PCS,a.MANIFEST_PCS) as MANFPCS, 
  			NVL(FH.HAWB_NET_WT,a.MANIFEST_WT) as MANFWT, 
        F.DOC_REQ as DOCREQYN, 
        F.DOC_RCV as DOCRECVYN, 
        D.CC_CATEGORY as ccCategory, 
        V.CC_CODE as CCCODE, 
  			E.ALLOW_PACCO as PACCOYN, 
        F.RTRV_JO as RTRVJOYN, 
        F.PHY_ACTION_STATUS as STATUS, 
        (a.FLT_KEY || '/' || TO_CHAR(a.FLT_DATE, 'DDMONYY')) as FLTNODTDISPLAY, 
        NVL(decode(V.HAWB_NO,'000000000000000000',(select SUM(LOCN_PCS) from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE),
        (select sum(STRG_PCS) from HAWB_INVENTORY WHERE HAWB_NO = V.HAWB_NO and
        SEQ_NO IN (select SEQ_NO from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE ))),0)
        as INVPCS, 
        NVL(decode(V.HAWB_NO,'000000000000000000',(select SUM(LOCN_WT) from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE),
        (select sum(STRG_WT) from HAWB_INVENTORY WHERE HAWB_NO = V.HAWB_NO and
        SEQ_NO IN (select SEQ_NO from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE ))),0)
        as INVWT, 
        (SELECT B1.TRUCK_DOCK FROM IMP_TRUCK_SRF A1, TRUCK_TRIP B1 WHERE B1.TRIP_ID=A1.TRIP_ID AND 
        A1.SRF_NO=(SELECT SRF.SRF_NO FROM IMP_SRF SRF,IMP_SRF_FLT SFLT WHERE SRF.AWB_NO=A.AWB_NO AND SRF.AWB_DATE=A.AWB_DATE AND SRF.SRF_NO=SFLT.SRF_NO
        AND SFLT.FLT_KEY=A.FLT_KEY AND SFLT.FLT_DATE=A.FLT_DATE AND SRF.STATUS='ISSUED' AND SRF.SRF_EXPY_DATE>=SYSDATE)) AS truckDock ,
        (case when D.CC_CATEGORY IN ('Phy', 'Phy + Doc') and D.IMM_CHK_IND = 'Y' then 'CI' else
         	 case when V.CC_CODE ='TB' then 'TB' else
         	 case when J.AWB_NO IS NOT NULL then 'BKG' else
         	 case when (E.ALLOW_PACCO='Y' AND D.constraint='Y') then 'PACCO' else 
           case when D.constraint='Y' then 'OTHERS' end end end end end) condColumn
		FROM 
  			IMP_CAR_SHP A
        JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE=A.AWB_DATE 
        JOIN IMP_CAR_AWB E ON E.AWB_NO=A.AWB_NO AND E.AWB_DATE=A.AWB_DATE 
        JOIN FLT_OPR C ON C.FLT_KEY=A.FLT_KEY AND C.SCH_DATE=A.FLT_DATE AND C.FLT_TYPE='A'
        LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=A.AWB_NO AND  AWB_INV.AWB_DATE=A.AWB_DATE AND AWB_INV.FLT_KEY=A.FLT_KEY AND  AWB_INV.FLT_DATE=A.FLT_DATE
        LEFT JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = A.AWB_NO AND V.FLT_KEY=A.FLT_KEY AND V.FLT_DATE=A.FLT_DATE
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO,FHAWB.MANIFEST_DESC
        			FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = V.HAWB_NO AND FH.AWB_NO = A.AWB_NO AND FH.AWB_DATE = A.AWB_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE D ON D.CODE=V.CC_CODE  
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=A.AWB_NO AND F.AWB_DATE=A.AWB_DATE AND F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.HAWB_NO = V.HAWB_NO
        LEFT JOIN (SELECT B2.AWB_NO, B2.AWB_DATE, B2.FLT_KEY, B2.FLT_DATE FROM IMP_BOOKING A2, IMP_BOOKING_DTL B2 
            WHERE A2.BOOKING_NO=B2.BOOKING_NO AND TO_DATE((TO_CHAR(A2.BKG_SLOT_DATE, 'DDMONYY') 
				  || ' ' || TO_CHAR(A2.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) J 
            	  ON A.AWB_NO=J.AWB_NO AND A.AWB_DATE=J.AWB_DATE AND J.FLT_KEY=A.FLT_KEY AND J.FLT_DATE=A.FLT_DATE
        	where AWB.AWB_CLOSED_YN='N'   and not(a.RECD_PCS>0 and NVL(AWB_INV.LOCN_PCS,0)=0)
  			<isNotEmpty property="carrCode">
  				<isNotEmpty prepend="AND" property="fltNo">
  				A.FLT_KEY=#carrCode# || #fltNo#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="searchAgtName">
  				E.APPNTD_AGENT=#searchAgtName# 
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="searchAgtCode">
  				E.AGENT_CUST_NO=#searchAgtCode# 
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="arrDate">
  				A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
  			</isNotEmpty>
  			<isNotEmpty property="awbPrefix">
  				<isNotEmpty prepend="AND" property="awbSuffix">
  				A.AWB_NO=#awbPrefix# || #awbSuffix#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="ataFromHr">
				<isNotEmpty property="ataFromMin">
					<isNotEmpty property="ataToHr">
						<isNotEmpty property="ataToMin">
							C.SCH_TIME BETWEEN #ataFromHr# || #ataFromMin# AND #ataToHr# || #ataToMin#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			) WHERE condColumn IS NOT NULL 
			<isNotEmpty prepend="AND" property="srvcType">
					condColumn = #srvcType#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
					upper(status) = upper(#status#)
			</isNotEmpty>
  			<dynamic prepend="ORDER BY ">
  			<isNotEmpty property="sortOrder.sortField">
            	$sortOrder.sortField$
           	</isNotEmpty>
           	<isEmpty property="sortOrder.sortField">
            	awbNo 
           	</isEmpty>
           	</dynamic>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="findPhyClrnceLstCOUNT" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (
		SELECT 
  			 (case when D.CC_CATEGORY IN ('Phy', 'Phy + Doc') and D.IMM_CHK_IND = 'Y' then 'CI' else
         	 case when V.CC_CODE ='TB' then 'TB' else
         	 case when J.AWB_NO IS NOT NULL then 'BKG' else
         	 case when (E.ALLOW_PACCO='Y' AND D.constraint='Y') then 'PACCO' else 
           case when D.constraint='Y' then 'OTHERS' end end end end end) condColumn
		FROM 
  			IMP_CAR_SHP A
        JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE=A.AWB_DATE 
        JOIN IMP_CAR_AWB E ON E.AWB_NO=A.AWB_NO AND E.AWB_DATE=A.AWB_DATE 
        JOIN FLT_OPR C ON C.FLT_KEY=A.FLT_KEY AND C.SCH_DATE=A.FLT_DATE AND C.FLT_TYPE='A'
        LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=A.AWB_NO AND  AWB_INV.AWB_DATE=A.AWB_DATE AND AWB_INV.FLT_KEY=A.FLT_KEY AND  AWB_INV.FLT_DATE=A.FLT_DATE
        LEFT JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = A.AWB_NO AND V.FLT_KEY=A.FLT_KEY AND V.FLT_DATE=A.FLT_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE D ON D.CODE=V.CC_CODE  
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO 
        FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = V.HAWB_NO AND FH.AWB_NO = A.AWB_NO AND FH.AWB_DATE = A.AWB_DATE
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=A.AWB_NO AND F.AWB_DATE=A.AWB_DATE AND F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.HAWB_NO = V.HAWB_NO
        LEFT JOIN (SELECT B2.AWB_NO, B2.AWB_DATE, B2.FLT_KEY, B2.FLT_DATE FROM IMP_BOOKING A2, IMP_BOOKING_DTL B2 
            WHERE A2.BOOKING_NO=B2.BOOKING_NO AND TO_DATE((TO_CHAR(A2.BKG_SLOT_DATE, 'DDMONYY') 
				  || ' ' || TO_CHAR(A2.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) J 
            ON A.AWB_NO=J.AWB_NO AND A.AWB_DATE=J.AWB_DATE AND J.FLT_KEY=A.FLT_KEY AND J.FLT_DATE=A.FLT_DATE
        WHERE AWB.AWB_CLOSED_YN='N'  AND NOT(A.RECD_PCS>0 AND NVL(AWB_INV.LOCN_PCS,0)=0)
  			<isNotEmpty property="carrCode">
  				<isNotEmpty prepend="AND" property="fltNo">
  				A.FLT_KEY=#carrCode# || #fltNo#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="arrDate">
  				A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
  			</isNotEmpty>
  			<isNotEmpty property="awbPrefix">
  				<isNotEmpty prepend="AND" property="awbSuffix">
  				A.AWB_NO=#awbPrefix# || #awbSuffix#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="ataFromHr">
				<isNotEmpty property="ataFromMin">
					<isNotEmpty property="ataToHr">
						<isNotEmpty property="ataToMin">
							C.SCH_TIME BETWEEN #ataFromHr# || #ataFromMin# AND #ataToHr# || #ataToMin#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
		) WHERE condColumn IS NOT NULL
	</select>
	<select id="findLocationForAWB" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		SELECT 
			LOC_CODE as locCode, LSP_NO as lspNo, ULD_KEY as uldKey 
		FROM 
			AWB_INVENTORY A 
		WHERE 
			A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND A.FLT_KEY=#fltNo# AND 
			A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
	</select>
	<select id="findWHTypeByLocationExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_WH_LOC A, MAST_WH_GROUP B 
		WHERE 
			B.WH_GROUP=A.WH_GROUP AND B.WH_TYPE=#whType# AND A.CODE=#locCode#
	</select>
	<select id="findCPCLEventID" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		SELECT 
			B.EVENT_ID as eventID, A.TR_NO as refNo 
		FROM 
			REGISTER_TR_NO A, REGISTER_TR_NO_EVENTS B 
		WHERE 
			B.TR_TYPE=A.TR_TYPE AND A.TR_TYPE=#trType#
	</select>
	<insert id="insertCPCLRtrvMoveOrder" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE, REF_NO) 
		VALUES 
			(#eventID#, #awbNo#, #locCode#, #lspNo#, #uldKey#, #invPcs#, #invWt#, #target#, #status#, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, #orderType#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'), #refNo#)
	</insert>
	<select id="findCPCLRtrvJobOrderExists" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			RTRV_MOVE_ORDER 
		WHERE 
			AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updateCPCLRtrvJO" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			RTRV_MOVE_ORDER
		SET 
			STATUS='CANCELLED', TARGET=#target# 
		WHERE
			AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</update>
	-->
	<update id="updateCPCLJOStatusInCustClr" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			IMP_CUST_CLR_LIST
		SET 
			RTRV_JO='Y',
			PHY_ACTION_STATUS='Started'
		WHERE
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND 
			FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND HAWB_NO=#hawbNo#
	</update>
	<update id="updateCPCLCustClrLst" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			IMP_CUST_CLR_LIST
		SET 
			PHY_ACTION_STATUS=#status#, PHY_ACTION_UPDATE_BY=#crUserid#, PHY_ACTION_UPDATE_DATE=SYSDATE 
		WHERE
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND 
			FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND HAWB_NO=#hawbNo#
	</update>
	<insert id="insertCustClrLstforPhy" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		INSERT INTO 
			IMP_CUST_CLR_LIST
			(TR_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, HAWB_NO, CC, PHY_ACTION_STATUS, PHY_ACTION_UPDATE_BY, PHY_ACTION_UPDATE_DATE, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,  FLT_TYPE) 
		VALUES
			(#trNo#, #awbNo#, #awbDate#, #fltNo#, TO_DATE(#arrDate#, 'DDMONYY'), #hawbNo#, #ccCode#, #status#, #crUserid#, SYSDATE, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, 'I')
	</insert>
		<select id="checkClrncLock" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		select   (select count(1) from lsp_inventory where lsp_no in (select LSP_NO from awb_inventory  where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')) and nvL(lock_rqs,'N') = 'Y')+
     (select count(1) from uld_inventory where uld_key in (select uld_key  from awb_inventory  where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')) and nvL(lock_rqs,'N') = 'Y')  as count from dual
		
	</select>
	
	<!-- Custom Physical Clearance Action List :: Anup :: Ends -->

	<!-- Inbound Shipment Action List :: Mayank :: Starts -->

	
	<select id="imp_shpmt_action_lst" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		<![CDATA[
		select a.* from (
	 			select (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY') fltDate, sta, eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI') estCollDateTime,
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'N', 'Y') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				(SELECT nvl((SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE),'Y') bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'),'Assigned'))  status, 
				booking.BOOKING_NO bookingNo,  
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   
            	(select code_desc  from sec_user where code = shp.TRUCKER_ASSIGN_BY ) asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where CODE = #loginId#) loginHkid,
                shp.Carr_code carrCode
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 
		left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
		 
	left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
      left join (SELECT sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date, sum(sf.DLV_PCS) deliveryPcs,
                  sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN
                FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
                      or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
                group by  sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date) srf
          on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date and srf.flt_Key = shp.flt_Key 
          and  srf.flt_Date = shp.flt_date 
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
       										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			shp.Carr_code = nvl(#carrCode#,shp.Carr_code ) and shp.awb_no = nvl(#awbNo#,shp.awb_no) 
			and shp.flt_date between #fltDateFrom# and #fltDateTo#  
			and ((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			and nvl(trkMnf.trk_manf_flz, 'N') = 'N' and nvl(srf.srfYN,0) = 0 and (shp.recd_pcs = 0 or (shp.recd_pcs > 0 and awbInv.invPcs > 0))) a
			order by sortStatus,  bdcompl desc , estCollDateTime desc, fltKey, fltDate, awbNoDisp
		]]>
	</select>
	

	<select id="imp_shpmt_action_mawb_cdp" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		select 
				SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY HH24:MI') fltDate,to_char(shp.flt_date,'DDMONYY') schFltDate, 
				(select CDIF_NO from awb_inventory where CDIF_NO is not null and awb_no = shp.awb_no  and awb_date = shp.awb_date and flt_key = shp.flt_key and flt_date = shp.flt_date and rownum = 1)as cdifNo,
				 sta, eta, ata,  
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt, 
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,				 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,  
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,    
                shp.Carr_code carrCode,
                carAwb.Content as content,
                carAwb.awb_wt as awbWt,
                carAwb.awb_pcs as awbPcs,
                nvl(trkMnf.trk_manf_flz, 'N') as flightManf, 			  			 
			 	nvl(shp.car_created,'N') as carCreated,
			 	(Select decode(count(*), 0,'N','Y') FROM  CUST_COMPANY  WHERE CODE = carAwb.AGENT_CUST_NO and NVL(allow_esrf_aa,'N') = 'Y') as agentEsrfCnt,
			 	(SELECT decode(count(*), 0,'N','Y') FROM mast_carrier where code = AWB.carr_code and NVL(ALLOW_ESRF,'N') = 'Y') as carrEsrfCnt
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
      		join GT_SHIPMENT_QUERY_AWB qryList ON qryList.awb_no = AWB.awb_no   and qryList.awb_date =  AWB.awb_date
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
    			group by awb_no, awb_date, flt_key, flt_date) awbInv on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key and  awbInv.flt_Date = shp.flt_date  
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          		flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          		SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta,PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  		PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          		from flt_opr flt, flt_opr_events fltEvt where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          		on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
          	 left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, 
		 	 	SCH_COLL_FROM, decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
         	 	where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO  and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          		on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = carAwb.AGENT_CUST_NO
	</select>
	
	<insert id="insertMAWBQueryAWBList" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO">
	      insert into GT_SHIPMENT_QUERY_AWB (AWB_NO,AWB_DATE) values (#awbNo#,#awbDate#) 
	</insert>
	
	
	<select id="imp_shpmt_action_lst_cdp" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		<![CDATA[
		select a.* from (
	 			select (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY HH24:MI') fltDate,to_char(shp.flt_date,'DDMONYY') schFltDate, 
				(select CDIF_NO from awb_inventory where CDIF_NO is not null and awb_no = shp.awb_no  and awb_date = shp.awb_date and flt_key = shp.flt_key and flt_date = shp.flt_date and rownum = 1)as cdifNo,
				 sta, eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI') estCollDateTime,
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'N', 'Y') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				(SELECT nvl((SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE),'Y') bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'),'Assigned'))  status, 
				booking.BOOKING_NO bookingNo,  
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   
            	(select code_desc  from sec_user where code = shp.TRUCKER_ASSIGN_BY ) asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where CODE = #loginId#) loginHkid,
                shp.Carr_code carrCode,
                carAwb.Content as content,
                carAwb.awb_wt as awbWt,
                carAwb.awb_pcs as awbPcs
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 
		left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
		 
		  left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, 
		 	 SCH_COLL_FROM, decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
         	 where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO  and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
     	 
          
     	 
     	 ]]>
     	 
     	 <isNotEmpty property="awbNo">
     	  left join (SELECT sf.awb_no, sf.awb_date, sf.ORIG_FLT_KEY as flt_Key, sf.ORIG_FLT_DATE as flt_date, sum(sf.DLV_PCS) deliveryPcs, 
     	  		sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                  WHERE ( (STATUS  = 'ISSUED' AND sysdate &lt; srf_expy_date)  
                      OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = s.srf_no AND s.status = 'ISSUED' AND dlv_pcs &gt; 0) ) 
             group by  sf.awb_no, sf.awb_date, sf.ORIG_FLT_KEY, sf.ORIG_FLT_DATE) srf on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date             
             and srf.flt_Key = shp.flt_Key and srf.flt_Date = shp.flt_date
     	 </isNotEmpty>
           
     	 <isEmpty property="awbNo">
     	 	left join (SELECT sf.awb_no, sf.awb_date, sum(sf.DLV_PCS) deliveryPcs, sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                  WHERE ( (STATUS  = 'ISSUED' AND sysdate &lt; srf_expy_date)  
                      OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = s.srf_no AND s.status = 'ISSUED' AND dlv_pcs &gt; 0) ) 
             group by  sf.awb_no, sf.awb_date ) srf on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date  
     	 </isEmpty> 
             
           
           <![CDATA[
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#     		
     		left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
       										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			 nvl(trkMnf.trk_manf_flz, 'N') = 'N' 			  			 
			 AND nvl(shp.car_created,'N') = 'Y'
		     AND Exists (SELECT null FROM  MAST_CARRIER where CODE = AWB.carr_code and nvl(allow_esrf,'N') = 'Y' )
		     AND Exists (SELECT null FROM  cust_company where code_desc = carAwb.appntd_agent and nvl(allow_esrf_aa,'N') = 'Y' and rownum = 1 )
		     
		 and ( 
		     		exists (
			               SELECT null FROM V_CREDIT_FECILITY_DTL where cust_no = #loginCustNo# AND NVL(CR_TYPE,'GEN') not like 'E%' and (NVL(CR_BAL,0) > 0 or NVL(VIRTUAL_ACC,'N') = 'Y')
			                    AND instr( nvl(UPPER(CARR_CODE),nvl(UPPER(AWB.carr_code),'*')), nvl(UPPER(AWB.carr_code),'**') ) > 0 
			                     AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
                				 AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
                				 AND nvl(upper(Status),'**') <> 'VOID' AND ROWNUM = 1
			               )  OR exists (
				                SELECT null 
				                 FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO  
				                 AND shp.awb_no = dtl.awb_no and  shp.awb_date = dtl.awb_date and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND  (nvl(COMMITTED_AMT,0) - nvl(USED_AMT,0) ) > 0
				                 AND hd.status = 'COMMITTED'
				         )
		      )
         
		]]>
			
			<isNotEmpty property="carrCode">
			 and shp.Carr_code = nvl(#carrCode#,shp.Carr_code )
			</isNotEmpty>
			
			<isEmpty property="awbNo">
			  and (shp.recd_pcs = 0 or (shp.recd_pcs &gt; 0 and awbInv.invPcs &gt; 0))
			  and nvl(srf.srfYN,0) = 0
			</isEmpty>
			
			<isNotEmpty property="awbNo">
			 and shp.awb_no = nvl(#awbNo#,shp.awb_no)  AND shp.AWB_DATE = to_date(nvl(#awbDate#,shp.AWB_DATE),'DDMONYY')  
			</isNotEmpty>
			
			 <isNotEmpty property="loginCustNo">
			  and ((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			 </isNotEmpty>		 
          
            <isNotEmpty property="fltDateFrom">
			<isNotEmpty property="fltDateTo">
			and shp.flt_date between #fltDateFrom# and #fltDateTo#	
			</isNotEmpty>
			</isNotEmpty>
			) a
	      order by sortStatus,  bdcompl desc , estCollDateTime desc, fltKey, fltDate, awbNoDisp
	</select>


	<select id="frtchAgetCodeCDP" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.String">
	 	select Agent_Cust_No from IMP_CAR_AWB where  Awb_No = #awbNo#  AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
		
	<select id="checkForAWBShipQuery" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.Integer">
	 	select count(1) from AWB where  Awb_No = #awbNo#  AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
	
	<select id="fetchHouseWaybillListCDP" parameterClass="cargo.cms.extsvc.bo.HouseWaybillHAWBBO" resultClass="cargo.cms.extsvc.bo.HouseWaybillHAWBBO">
	SELECT Hawb_No as houseWaybillNumber ,Manifest_Desc as goodsDescription  FROM edi_fhl_hawb where tr_no in (SELECT tr_no FROM edi_fhl where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="houseWaybillTotalCountCDP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.Integer">
	SELECT COUNT(1)  FROM edi_fhl_hawb where tr_no in (SELECT tr_no FROM edi_fhl where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	 <select id="getsrfCounts" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
			AND ( (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 
    		order by srf_date desc
	 	]]>
	</select>  
	
	 <select id="getsrfCountsAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	   <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY = #cdifNo# 
			AND ( (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 
    		order by srf_date desc
	 	]]>
	</select> 	
	
	<select id="getsrfCountPOSTED" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
		  	AND STATUS  = 'POSTED' order by srf_date desc
	 	]]>
	</select> 
	
	<select id="getsrfCountPOSTEDAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
		  	AND STATUS  = 'POSTED' order by srf_date desc
	 	]]>
	</select> 
	
	
	<select id="getsrfIssuedForSHP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
			AND (  STATUS  = 'POSTED' OR (STATUS  = 'ISSUED' AND sysdate < srf_expy_date)  
			 		OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 			  
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
		  	order by srf_date desc
	 	]]>
	</select> 
	
	<select id="getsrfIssuedForAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			AND ( STATUS  = 'POSTED' OR (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) )  
		  	order by srf_date desc
	 	]]>
	</select> 
	
	

	<select id="esrfEligibilityCDP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	      SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) as esrfEligibleStatus from DUAL
	</select>
	

	<insert id="createHKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	      insert into MAST_ESRF_HKID_HASH (TR_NO,HKID,HASH_HKID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values 
	      (MAST_ESRF_HKID_HASH_SEQ.NEXTVAL,#nationalID#,#nationalIdHash#,#createdUserId#,sysdate,#createdUserId#,sysdate)
	</insert>
	
	<delete id="deleteHKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	      delete from MAST_ESRF_HKID_HASH where HASH_HKID=#nationalIdHash#
	</delete>

	
	<select id="isExithKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	SELECT COUNT(1)  FROM MAST_ESRF_HKID_HASH where HASH_HKID=#nationalIdHash#
	</select>

	<select id="fetchHKID" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.String">
	      SELECT HKID from MAST_ESRF_HKID_HASH where Hash_Hkid=#nationalIdHash#
	</select>

       	<select id="validateAPIAuthorized" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	   SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP WHERE cust_no = #agentCode# and auth_rep_id = #nationalID#  and auth_rep_name  = #fullName#
	  <!--  SELECT COUNT(1) FROM
		  (SELECT auth_rep_name, TRIM(SUBSTR(auth_rep_name,0,DECODE(instr(auth_rep_name,' '),0,LENGTH(auth_rep_name),instr(auth_rep_name,' ')))) AS firstName
		      FROM CUST_AGENT_AUTH_REP WHERE cust_no = #agentCode# and auth_rep_id = #nationalID#  )
						WHERE 1 = 1 
						AND ( auth_rep_name  = #fullName#
		        			OR  DECODE( (SUBSTR(auth_rep_name,LENGTH(firstName) + 2,LENGTH(auth_rep_name))),null,firstName, 
		        				(SUBSTR(auth_rep_name,LENGTH(firstName) + 2,LENGTH(auth_rep_name))) || ' ' || firstName) = #fullName#) -->
	</select> 
	
	<select id="checkEsrfPostStatus" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	SELECT count(1) FROM imp_srf where srf_no = #esrfNo# and post_date is not null
	</select> 
	


	<select id="getBookingAgtCreditBalList" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
	 <![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			and crdLvl in ('AGENT_LVL','DM_LVL','CPCT_LVL','CPCT_LVL_GEN') 
      			group by crdLvl	   	
   	]]>
   	</select>

	<select id="getBookingAirlCreditBalList" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
	<![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			 AND CRDLVL IN ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','AIRL_LVL_GEN','AIRL_LVL')
      			group by crdLvl	    
		]]>
	</select>
	
	<select id="getAirlAmtAgnstBkg" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
	     select sum(bkgDtl.AIRL_CHRG) airlChrgs
				from IMP_BOOKING bkg
	      		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
	     		join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date 
	     								and shp.flt_Key = bkgDtl.flt_Key and  shp.flt_Date = bkgDtl.flt_date  
	     Where  status = 'ISSUED'  and ((bkg.agent_id = #agtCode#  ) or (bkg.TRUCKER_id =  #agtCode# )) 
	     and shp.carr_code = #carrCode#
	     and  TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
   	]]>
   	</select>
        
	<select id="getAgtAmtAgnstBkg" parameterClass="java.lang.String" resultClass="java.lang.String">
	 <![CDATA[
     	select sum(bkgDtl.CPCT_CHRG) agtChrgs
		from IMP_BOOKING bkg
		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
		Where  status = 'ISSUED' 
			and TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
			and ((bkg.agent_id = #loginCustNo#  ) or (bkg.TRUCKER_id =  #loginCustNo# ))
   	]]>
   	</select>
   	

	 <update id="upd_booking_airl_withheld_amount" parameterClass="map">
		update CUST_AGENT_AIRL_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# and CARR_CODE = #carrCode# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	 <update id="upd_booking_agt_withheld_amount" parameterClass="map">
		update CUST_AGENT_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode#  and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>

	
	<select id="fetchBookingShowTC" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			select TC_IND from MAINTAIN_TC WHERE FUNCTION_CODE = #functionName#
		]]>
	</select>
	
	<select id="fetch_prc_os_chrgs" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
		select sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES 
		where		AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
				group by AWB_NO, AWB_DATE
		]]>
	</select>
	
	<select id="getAssignTruckerCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select code from cust_company where  code_desc = #asgnTruckerName# and TRUCKER_YN = 'Y'     
	</select>
	
	<update id="assignShipmentmentToTruker" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				TRUCKER_CUST_NO =  #asgnTruckerCode# ,                     
				TRUCKER_ASSIGN_TIME = sysdate , 
				TRUCKER_ASSIGN_BY = #loginId# ,
				LM_USER_ID = #loginId#,
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')				
	</update>
	
	<update id="deleteAssignmentToTruker" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				TRUCKER_CUST_NO =  null ,                     
				TRUCKER_ASSIGN_TIME = null , 
				TRUCKER_ASSIGN_BY = null ,
				LM_USER_ID = #loginId#,
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')				
	</update>
	
	<!-- and LM_DATE = TO_DATE(#lmDate#, 'DDMONYY HH24:MI:SSSSS')  -->
	<update id="updateDLVMode" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				DLV_MODE_RQS  = #dlvModeRqs# ,        
				IMX_RQS = #imxRqs# ,	
				IMX_RQS_DATE = sysdate,		
				LM_USER_ID = #loginId# , 
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')					
	</update>
	
		<select id="getDateList" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		<![CDATA[			
			SELECT CODE codeId ,
			  CODE codeDesc
			FROM
			  ( 
			      SELECT TO_CHAR(FROMDATE + COUNTER, 'DDMONYY') AS CODE
			      FROM (
			        SELECT TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY') FROMDATE, 
			        TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY') + 
			          (NVL((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_TIME_SLOT_DAYS'), 3) - 1) TODATE 
			        FROM DUAL			   
			      ) DTINPUT, XMLTABLE('for $$counter in 0 to xs:int(D) return $$counter'
			      PASSING XMLELEMENT(D, ROUND(TODATE - FROMDATE))
			      COLUMNS COUNTER INTEGER PATH '.')
			  )
			ORDER BY 1
	     ]]>
	</select>        
	
	 <select id="getBookingInitTime" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionLstBookingBO">
		<![CDATA[	
			select 
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') timeSlotDateTime,
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'DDMONYY') timeSlotDate, 
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'HH24:MI') startTimeSlot,
			to_char(trunc(sysdate+2/24+1/48, 'hh') + floor(to_char(sysdate+2/24+1/48, 'mi')/15)*15/1440 ,'HH24:MI') endTimeSlot
			from dual     
	 	]]>
	</select>     
	
	<select id="getTimeSlots" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionListTimeSlotBO">
	<![CDATA[	
			select           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/96,'HH24:MI') ||' - '||           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/48,'HH24:MI') showTimeLabel,    
				to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
				floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') fullDateTime,       
				to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
				floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY') showDate,           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/96,'HH24:MI') startTime,     
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/48,'HH24:MI') endTime    
			from dual
		]]>
	</select>   
	
	<select id="inbdshpGetHandlingMode" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
		<![CDATA[	
			select HANDLING_MODE from AWB_INVENTORY AWBINV, ULD_INVENTORY ULDINV , ULD_GROUP_TYPE ULDGRPTYPE , MAST_ULD_GROUP ULDGRP
			where AWBINV.ULD_KEY = ULDINV.ULD_KEY and ULDINV.ULD_TYPE = ULDGRPTYPE.ULD_TYPE 
			and ULDGRPTYPE.ULD_GROUP = ULDGRP.ULD_GROUP and ULDGRP.PLT_CNT_SIZE = '20 ft' 
			and awb_no = #awbNo# and awb_Date = to_date(#awbDate#,'DDMONYY')
		]]>
	</select>   
	
	<select id="inbdshpGetHkid" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.String">
	<![CDATA[	
		select hkid from sec_user where cust_no = #loginCustNo# and code = #loginId# and rownum = 1
		]]>
	</select>   
	
	 <insert id="insertBooking" parameterClass="cargo.cms.external.bo.InbdShpActionLstBookingBO">
		Insert into IMP_BOOKING (BOOKING_NO,BOOKING_DATE,COLL_PERSON_NAME,COLL_PERSON_ID,TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,
		TRUCK6,PHONE_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BKG_SLOT_DATE,BKG_SLOT_FROM,BKG_SLOT_TO,HK_ID,STATUS,COLLECT_ULD,TRUCKER_ID,AGENT_ID,
		PURPOSE, DOCK_PURPOSE, EXP_DURATION, POOL_ID, DEL_ZONE) 
		values ( #bookingNo#,sysdate,#collByName#,#collByCode#,#truckNoOne#,#truckNoTwo#,#truckNoThree#,#truckNoFour#,#truckNoFive#,
		#truckNoSix#,#phoneNo#,#loginId#,sysdate,#loginId#,sysdate,#timeSlotDate#,#startTime#,#endTime#,#collByHkid#,'ISSUED',#collectedUld#,#truckerId#,#agentId#,
		#bkgPurpose#, #dockPurpose#, #expDuration#, #poolId#, #deliveryZone#)
	</insert> 
	<insert id="insertBookingDtl" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		Insert into IMP_BOOKING_DTL (BOOKING_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CHARGES,AUTH_REP_NAME,AUTH_REP_ID,AIRL_CHRG,CPCT_CHRG) 
		values (#bookingNo#,#bookingDoclineNo#,#awbNo#,#awbDate#,#fltKey#,#fltDate#,#loginId#,sysdate,#loginId#,sysdate,#chrgs#,#asgnTruckerCode#,#asgnLoginId#,#airlChrgs#,#agtChrgs#)
	</insert>
	
	<!--   and FLT_KEY = #fltKey# and FLT_DATE= #fltDate# -->
	
	<parameterMap id="chrgsSrfMap" class="map" >
       <parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="get_prc_enq_charges" parameterMap="chrgsSrfMap" >
		{  call PRC_ENQ_CHARGES(?,?) }
	</procedure>
	
	<select id="ChargesListForBooking" parameterClass="cargo.cms.external.bo.InbdShpActionListChrgsBO" resultClass="cargo.cms.external.bo.InbdShpActionListChrgsBO">
	<![CDATA[	
		select ITM_CODE chrgItemCode, ITM_DESC chrgItem, AMT amount 
		from  GT_SRF_CHARGES where 
		AWB_NO = #awbNo# and 
		AWB_DATE = #awbDate# 
		]]>
	</select> 
	
	<select id="getFreeStrgDateTime" parameterClass="map" resultClass="java.lang.String">
	<![CDATA[	
		select TO_CHAR(pkg_Calculate.GET_FREE_DAYS(#fltDate#, #fltKey#,#awbNo#,to_date(#awbDate#,'DDMONYY')), 'DDMONYY') as freeStrgDate from  dual 
		]]>
	</select> 
	
	
	
	<select id="fetchTruckerForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as truckerName from CUST_COMPANY where ACTIVE = 'Y' AND BLACKLISTED='N' AND TRUCKER_YN='Y' AND UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY code_desc     
	</select>
	
	<select id="checkValidTrucker" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select COUNT(1) from cust_company where  code_desc = #asgnTruckerName# and TRUCKER_YN = 'Y'     
	</select>
	
	<select id="checkValidAuthRepTrucker" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 	select COUNT(1) from  CUST_AGENT_AUTH_REP where  UPPER(AUTH_REP_NAME)=  #asgnTruckerName# AND CUST_NO = #loginCustNo#
	 	and exists (select null from cust_company where  code = #loginCustNo# and TRUCKER_YN = 'Y')  
	</select>

	<select id="checkValidAuthRepTruckerBlackListed" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 	select COUNT(1) from  CUST_AGENT_AUTH_REP where  UPPER(AUTH_REP_NAME)=  #asgnTruckerName# AND CUST_NO = #loginCustNo# and BLACK_LISTED = 'Y'
	</select>
	
	<select id="checkBkgPerDay" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT NVL(
		  (SELECT TO_NUMBER(NVL(NO_OF_BOOKING_PERDAY,0)) FROM CUST_COMPANY WHERE CODE = #CUST_NO#) -
		  (SELECT COUNT(1) FROM IMP_BOOKING WHERE AGENT_ID = #CUST_NO# AND TO_CHAR(BOOKING_DATE,'DDMONYY') = #BKG_DATE# AND STATUS <> 'CANCEL')
		  , 0) NOOFDAYS
		FROM DUAL
  	 ]]>
	</select>
	
	<select id="validateBookingTimeSlot" parameterClass="map" resultClass="java.lang.Double">
    <![CDATA[
     		SELECT TO_CHAR(TO_DATE(#timeSlotDate# ||' ' ||#startTime#,'DDMONYY HH24MI') - sysdate) DAYDIFF FROM DUAL  
      ]]>      
	</select>
	
	<select id="validateBookingTruckNo" parameterClass="map" resultClass="java.lang.Integer">
	 	<![CDATA[
	 		SELECT COUNT(BOOKING_NO)
	 		FROM (	 	
				SELECT BOOKING_NO
				FROM IMP_BOOKING BKG
				WHERE
				TO_DATE(TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM, 0), '0000')), 'DDMONYY HH24MI')
				BETWEEN
				TO_DATE(#timeSlotDate# || ' ' || #startTime#, 'DDMONYY HH24MI') - ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)
				AND
				(TO_DATE(#timeSlotDate# || ' ' || #endTime#, 'DDMONYY HH24MI') + ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)) - (1/24/60)
				AND #truckNo# IN(TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, TRUCK6) AND STATUS = 'ISSUED'
		]]>
	     	<isNotEmpty property="bkgNo">
	        	<![CDATA[ AND BOOKING_NO <> #bkgNo# ]]>
	        </isNotEmpty> 		
		<![CDATA[
				UNION
				SELECT BOOKING_NO
				FROM EXP_BOOKING BKG
				WHERE
				TO_DATE(TO_CHAR(BOOKING_DATE, 'DDMONYY') || ' ' || TRIM(TO_CHAR(NVL(TIME_SLOT_FROM, 0), '0000')), 'DDMONYY HH24MI')
				BETWEEN
				TO_DATE(#timeSlotDate# || ' ' || #startTime#, 'DDMONYY HH24MI') - ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)
				AND
				(TO_DATE(#timeSlotDate# || ' ' || #endTime#, 'DDMONYY HH24MI') + ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)) - (1/24/60)
				AND #truckNo# IN(TRUCK)
			)					
	    ]]> 
	</select>  
	
	<select id="check_dates"  parameterClass="map" resultClass="java.lang.String" >
		SELECT TO_CHAR(TO_DATE(#endDate#,'DDMONYY') - TO_DATE(#startDate#,'DD-MON-YY')) DAYDIFF FROM DUAL
	</select>
		<select id="check_date_Times"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[		
		SELECT TO_CHAR(TO_DATE(#endDateTime#,'DDMONYY HH24MI') - TO_DATE(#startDateTime#,'DDMONYY HH24MI')) DAYDIFF FROM DUAL
		]]>
   	</select>
   	
   	<select id="getImageDocListValues"  parameterClass="map" resultClass="cargo.cms.afw.bo.BoardMsgBO" >
		SELECT IMG_NAME AS doc FROM FW_IMAGE_STORE WHERE IMG_SESSION_ID=#IMG_SESSION_ID#
	</select>
	<!-- Inbound Shipment Action List :: Mayank :: Starts -->
	
	
	<select id="imp_awbstrgdtl_getNextTrNo" parameterClass="map" resultClass="java.lang.Integer">	   	
	   	 SELECT IMP_AWB_STRG_DTL_SEQ.NEXTVAL from DUAL
   	</select>
   	
   	 <select id="imp_awbinv_getSeqNo"  parameterClass="map" resultClass="java.lang.String">
		SELECT seq_no FROM awb_inventory
          WHERE flt_key = #fltKey#
		      AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		      AND awb_no = #awbNo#
		      AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
		      AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
			    AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
			    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')			    
			    AND FLT_TYPE  = #fltType#		  
			    AND SRF_NO IS NULL 
			    AND TRM_NO IS NULL 
			    AND CDIF_NO IS NULL	         
    </select>  
    
    <insert id="imp_awbstrgdtl_insawbinv" parameterClass="map">
    INSERT INTO AWB_INVENTORY
    (AWB_NO, AWB_DATE, 
    CARR_CODE, CATALOG, CC_CODE, SRF_NO, TRM_NO, CDIF_NO,
     SCH_COLL_DATE, LSP_NO, 
     LOC_CODE, LOCN_PCS, LOCN_WT,
     RTRV_DATE, RTRV_USER_ID, STRG_DATE, DAM_IND,
     PPK_IND, BULK_WT, BUP_WT, CR_USER_ID, CR_DATE,
     LM_USER_ID, LM_DATE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, SEQ_NO,REF_LSP_TR_TYPE,
     REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_MOV_FROM,
     REF_AWB_EVENT
    )
    VALUES
    (#awbNo#,NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), 
     #carrCode#,NULL, NULL,NULL, NULL, NULL,
     NULL,#lspNo#, 
     #locCode#, NVL(#strgPcs#,0), NVL(#strgWt#,0),
     SYSDATE, #userID#, SYSDATE, NVL(#damInd#,'N'),
     'B', NVL(#strgWt#,0), NVL(#strgWt#,0), #userID#, SYSDATE,
     #userID#, SYSDATE,NULL, TO_DATE(#fltDate#,'DDMONYY'), #fltType#, #fltKey#,  #uldKey#, #seqNo#,#trType#,
     #trNo#,#trType#,SYSDATE,#docLineNo#,#locCode#,#refTrEvent#,#locCode#,
     #event#
    )
    </insert>
    
    <update id="imp_awbstrgdtl_updawbinv" parameterClass="map">
    UPDATE AWB_INVENTORY
    SET LOCN_PCS   = LOCN_PCS + NVL(#strgPcs#,0),
        LOCN_WT    = LOCN_WT + NVL(#strgWt#,0),
        DAM_IND    = DECODE(DAM_IND,'Y','Y',NVL(#damInd#,'N')),
        BULK_WT    = BULK_WT + NVL(#strgWt#,0),
        BUP_WT     = BUP_WT +  NVL(#strgWt#,0),
        STRG_DATE  = SYSDATE,
        STRG_RMK   = #rmk#,
        LM_USER_ID = #userID#,
        LM_DATE    = SYSDATE,
		REF_LSP_TR_TYPE  = #trType#,
		REF_LSP_TR_EVENT = #refTrEvent#,
        REF_TR_NO      = #trNo#,
        REF_TR_TYPE    = #trType#,
        REF_TR_DATE    =  SYSDATE,
        REF_DOC_LINE_NO  = #docLineNo#,
        REF_LOC_FROM     = #locCode#,
        REF_TR_EVENT     = #refTrEvent#,
        REF_RMK          = #rmk#,
        REF_MOV_FROM     = #locCode#
		WHERE SEQ_NO = #seqNo#
	</update>
	
	 <update id="imp_awbstrgdtl_updcarshp" parameterClass="map">
	UPDATE IMP_CAR_SHP
    SET RECD_PCS   = RECD_PCS + NVL(#strgPcs#,0),
        RECD_WT    = RECD_WT + NVL(#strgWt#,0),
		DAM_PCS	   = DECODE(#damInd#, 'Y', DAM_PCS + #strgPcs#, DAM_PCS) ,
		DAM_WT	   = DECODE(#damInd#, 'Y', DAM_WT + #strgWt#, DAM_WT) ,
        LM_USER_ID = #userID#,
        LM_DATE    = SYSDATE
    WHERE AWB_NO   = #awbNo# AND
	     AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND
	     FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
	     FLT_KEY   = #fltKey#
    </update>
    
   	<!-- Changed for QR :: RANJITH -->
   	<!--<select id="imp_awbinv_getCountForPPK"  parameterClass="map" resultClass="java.lang.Integer">
    SELECT COUNT(1) 
		FROM AWB_INVENTORY I
		LEFT JOIN IMP_CAR_AWB A ON A.AWB_NO = I.AWB_NO AND A.AWB_DATE = I.AWB_DATE 
		WHERE NVL(A.PPK_TYPE, 'B') IN ('M', 'P') AND I.ULD_KEY = #uldKey#
		AND ROWNUM = 1
	</select>
	-->
	<update id="imp_awbstrgdtl_upduldinv" parameterClass="map">
		UPDATE ULD_INVENTORY
		SET EMPTY_FLG = 'N',
		<!--  Commented BY Ranjith  :: UAT internal Issue :: 
		PPK_IND	  = DECODE(PPK_IND, 'Y', 'Y', NVL(#ppkType#, 'N')), -->
	    LM_USER_ID  = #userID#,
	    LM_DATE     = SYSDATE,
	    REF_TR_NO      = #trNo#,
	    REF_TR_TYPE    = #trType#,
	    REF_TR_DATE    = SYSDATE,
	    REF_IN_CARR    = #carrCode#,
	    REF_OUT_CARR   = #carrCode#,
	    REF_DOC_LINE_NO  = #docLineNo#,
	    REF_LOC_FROM     = #locCode#,
	    REF_TR_EVENT     = #refTrEvent#,
	    REF_RMK          = #rmk#,
	    REF_MOV_FROM     = #locCode#
	WHERE ULD_KEY = #uldKey#
	</update>
	
	<insert id="imp_awbstrgdtl_insawbevents" parameterClass="map">
	INSERT INTO AWB_EVENTS
		(AWB_NO,AWB_DATE,EVENT_ID,
		EVENT_DESC,
		FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,ULD_KEY, PCS, WT,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
		)
	VALUES
		(#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #event#,
		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #event#),
		#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), #fltType#, #awbNo#,NULL, #strgPcs#, #strgWt#,
		#userID#,SYSDATE,#userID#, SYSDATE
		)
	</insert>
	
	<insert id="imp_awbstrgdtl_insfltmov" parameterClass="map">
	 INSERT INTO FLT_MOV
		  (ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, FLT_TYPE,
		   CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, 
		   LOC_CODE, STRG_D, STRG_MM, SURP_IND, COND_C,
		   EIC_I, EMPTY_I, CONTR_C, RMK, TR_NO, DOC_LINE_NO,
		   TR_TYPE, CR_USER_ID, CR_DATE,
		   LM_USER_ID, LM_DATE, SEQ_NO, TR_STATUS, EVENT_ID
		  )
		  VALUES
		  (#uldType#, #uldNo#, #uldCarr#, #uldKey#, #fltType#,
		   #carrCode#, #fltNo#, TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 
		   #locCode#,SYSDATE,  NULL,'N','',
		   'N','N',NULL, #fltMovRmk#,#trNo#, #docLineNo#,
		   #trType#, #userID#, SYSDATE,
		   #userID#, SYSDATE,FLT_MOV_SEQ.NEXTVAL, 'A',#refTrEvent#
		   )
	</insert>	
	
	<select id="checkAWBExists" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select Count(1) from AWB where AWB_DATE= TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO = #awbNo#
	</select>
	
	<select id="checkAWBExistsHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		select Count(1) from AWB where AWB_DATE= TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO = #awbNo#
	</select>
	<select id="getFlightDtls" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="cargo.cms.imprt.bo.TrackingBO">
		select orig_flt_key fltKey, to_char(orig_flt_date,'DDMONYY') fltDate from imp_srf_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and rownum=1	
	</select>
	<select id="imp_checkAwbLocked"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from IMP_CAR_AWB 
		where AWB_NO = #AWBNO# and AWB_DATE = #AWBDATE# and lock_ind = 'Y' and rownum = 1
		]]>
	</select>
	<select id="findShpmntAlwdForRetrieve" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE 
		WHERE 
			CODE=#PARAM# AND CONSTRAINT='Y'
	</select>
	<update id="updateEndrSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set PRINT_ENDORSED_BY=#endrName#,PRINT_ENDORSED_DATE=sysdate, LM_DATE=sysdate,SRF_RMK = DECODE(SRF_RMK,null,'Delivery Attend By Supervisor.',SRF_RMK ||' '|| 'Delivery Attend By Supervisor.') where srf_no=#srfNo#
	</update>
	<select id="getSRFPrintInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select print_ind from imp_srf where srf_no=#PARAM#
	</select>
		<select id="srfOutSatndingCharges" parameterClass="java.lang.String" resultClass="java.lang.String">
		select 'Y' from bill_charge_dtl where srf_no=#PARAM# and status = 'PENDING' and net_amt > 0 and rownum = 1
	</select>
	<select id="fetchHouseRecordForReissueSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT HAWB_NO hawbNo,
		SEQ_NO seqNo,
		sum(STRG_PCS) hawbPcs, 
		sum(STRG_WT) hawbWt,
		#crUserId# crUserId,
		#srfNo# srfNo
		FROM
		HAWB_INVENTORY WHERE 
		SEQ_NO in 
		(SELECT SEQ_NO FROM AWB_INVENTORY 
		WHERE AWB_NO = #awbNo# AND 
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
		SRF_NO = #oldSrfNo# ) 
		group BY HAWB_NO,SEQ_NO
	</select>
	<select id="getTruckTripIdandAsgnComplInd" parameterClass="map" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select  trip_id tripId, ASSIGN_COMPL srfAsgnTrkComplYN FROM truck_trip WHERE truck_no = #truckNo# AND CLOSED = 'N' 
    </select>	 
	<insert id="insertSRFTruck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		 INSERT INTO IMP_TRUCK_SRF (
    	 TRIP_ID,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
    	 values (#tripId#,
   		 #srfNo#,
  		 #crUserId#,
    	 sysdate,
    	 #crUserId#,
    	 sysdate)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!-- Added for Departed Cargo Summary Start -->
	<select id="shipment_tracking_getDepartedCargoList"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
			 resultClass="cargo.cms.imprt.bo.DepartedDataBO">		
		select  t2.carr_code as carrCode, 
			t1.awb_no as awbNo, 
			t2.dest as dest, 
			NVL(t2.pcs,0) || '/' || TRIM(TO_CHAR(NVL(t2.wt,0), '99999999D99')) as awbPcsWt,
			NVL(t1.pman_pcs,0) || '/' || TRIM(TO_CHAR(NVL(t1.pman_wt,0), '99999999D99')) as departedPcsWt,
			decode(t6.ACT_DATE,null,decode(t6.EST_DATE,null,
	      	(to_char(t6.SCH_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.SCH_TIME, '0000')),3,4))),
	      	(to_char(t6.EST_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.EST_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.EST_TIME, '0000')),3,4)))),
	      	(to_char(t6.ACT_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.ACT_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.ACT_TIME, '0000')),3,4))))
	      	as fltDate,
			t1.flt_key as fltKey
		from   exp_pmanifest_awb t1, exp_car t2, flt_opr_events t5 , flt_opr t6
		where  t1.awb_no = t2.awb_no
		and    t1.awb_date = t2.awb_date
		and    t1.flt_key = t5.flt_key
		and    t1.flt_date = t5.sch_date
		and    t5.flt_type = 'D'
		and    t5.ctm_out_date is not null
		and    t1.flt_key = t6.flt_key
		and    t1.flt_date = t6.sch_date
		and    t5.flt_type = t6.flt_type	
		and    t2.carr_code = nvl(#carrCode#, t2.carr_code)
		and    t1.flt_date between #dateFrom# and #dateTo#
		<isNotEmpty property="loginCarrier">
			and	t2.carr_code = #loginCarrier#
		</isNotEmpty>	
		<isEmpty property="loginCarrier">
			and (t2.agent_name = #agentCompanyName#
			or t2.shpr_name = #agentCompanyName# )
		</isEmpty>	
		order by t1.flt_date
	</select>

	<select id="shipment_tracking_getDepartedCargoCountList"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
    	 resultClass="cargo.cms.imprt.bo.DepartedDataBO">
		select t2.carr_code as carrCode, count(distinct t1.awb_no) as awbCount, 
		sum(t1.pman_pcs) as departedPcs, 
		TRIM(TO_CHAR(NVL(sum(t1.pman_wt),0), '99999999D99')) as departedWt
		from   exp_pmanifest_awb t1, exp_car t2, flt_opr_events t5
	    where  t1.awb_no = t2.awb_no
		and    t1.awb_date = t2.awb_date
		and    t1.flt_key = t5.flt_key
		and    t1.flt_date = t5.sch_date
		and    t5.flt_type = 'D'
		and    t5.ctm_out_date is not null
		and    t2.carr_code = nvl(#carrCode#, t2.carr_code)
		and    t1.flt_date between #dateFrom# and #dateTo#
		<isNotEmpty property="loginCarrier">
			and	t2.carr_code = #loginCarrier#
		</isNotEmpty>	
		<isEmpty property="loginCarrier">
			and (t2.agent_name = #agentCompanyName#
			or t2.shpr_name = #agentCompanyName# )
		</isEmpty>	
		group by t2.carr_code
	</select> 

	<select id="shipment_tracking_checkValidDateRange"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
			 resultClass="java.lang.String">
		<![CDATA[
		select '1' as chk
		from dual
		where
			 to_date(#dateFrom#, 'DDMONYY') <= to_date(#dateTo#, 'DDMONYY')
			 and to_date(#dateTo#, 'DDMONYY') <= sysdate
			 and to_date(#dateTo#, 'DDMONYY')-to_date(#dateFrom#, 'DDMONYY')<=7
		]]>
	</select>
	<select id="shipment_tracking_getDateRange"	parameterClass="java.lang.String"
			 resultClass="cargo.cms.imprt.bo.DepartedSearchBO">
		select to_char(sysdate, 'DDMONYY') as dateTo, 
		to_char(sysdate-7, 'DDMONYY') as dateFrom
		from dual
	</select>
	<select id="aatHandlerCarriers"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CarrierBO">
		SELECT CODE AS carrCode, CODE_DESC AS carrName FROM MAST_CARRIER ORDER BY CODE
	</select>
    <select id="validateCarrierCode" parameterClass="map" resultClass="java.lang.Integer">
	    SELECT COUNT(CODE) FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' AND CODE=#carrierCode#
	</select>
	<!-- Added for Departed Cargo Summary Start -->
	<select id="validatePmanExists"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from EXP_PMANIFEST_AWB where flt_key=#fltKey# and FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') 
		AND awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="receivedPCCNT"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
	  SELECT (select count(1) as A from imp_car_shp  where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and nvl(recd_pcs,0) > 0 ) +	(select count(1) as A from v_ddt_dtl where 
	  awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and shp_trf_type is not null) as count from DUAL
	</select>
	<!-- ###################### ADDED BY Mayank ON 11-06-07 FOR CT  STARTS ########################### -->

	
	<select id="imp_ctrm_get_awb_details" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.AWBLockBO">
		SELECT AWB_NO AS awbNumber,
		   TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
		   AWB_CLOSED_YN AS lockedYN
		FROM AWB WHERE AWB_NO = #awbNo#	and AWB_CLOSED_YN = 'N'
	</select>
	
	<select id="getCountForOwnedCarrier" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		 select count(1) from awb_owner O where awb_no = #awbNo# AND AWB_DATE = #awbDate# and PCS > 0 
								and exists (select null from mast_carrier mastCarr where code = carr_code and owned_carr = 'Y')
	</select>
	
	<select id="get_checkEITTSubmissionCount" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		<![CDATA[
		  select count(1) from cst_itt_dtl where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ct_no in 
			( select trm_no from imp_trm_hd where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and status <> 'VOID' ) 
		]]>
	</select>
	
	<select id="get_checkEITTSubmApproveStatus" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		 <![CDATA[
			 select count(1) from cst_itt_hd where (itt_req_no,itt_req_date) in (select itt_req_no,itt_req_date from cst_itt_dtl where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ct_no in 
				( select trm_no from imp_trm_hd where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and status <> 'VOID' ) ) 
	  			and itt_auth_code is not null
  		]]>
	</select>

	<select id="imp_ctrm_get_trm_by_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select 
		(SELECT CASE WHEN t.CATALOG = 'TM' THEN decode(count(*), 0,'N','Y') ELSE '' END FROM IMP_TM_TRANSFORM_HD WHERE TRF_FROM_AWB_NO = t.AWBNO AND TRF_FROM_AWB_DATE = t.AWBDATE AND function_name = 'CREATE_CT') AS transformYN,
		(SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_CARRIER where code = t.CARRCODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as transCarrMailAsCargo,
		t.*
		from (SELECT 
		          awb.HOUSE_FLG as houseFlag, TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
		          A.AWB_NO AS awbNo,
		          SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
		          awb.CARR_CODE  carrCode,
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then TO_CHAR (A.FLT_DATE,'DDMONYY') else '' end AS flightDate,    
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then A.FLT_KEY else '' end AS flightKey,
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then a.pcs else 0 end  pcs, 
		          case  when a.WT &gt; NVL(T.WT, 0) then a.wt else 0 end  wt, 
		          NVL(T.PCS, 0) transferPcs,
		          NVL(T.WT, 0) transferWt,
		          B.AWB_ORIGIN AS awbOrign ,
		          B.AWB_DEST AS awbDestination ,
		          B.CATALOG AS catalog ,
		            B.CONTENT content,
		            (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE V WHERE V.AWB_NO = A.AWB_NO     AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
		            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = 'T' ) transferTypeDesc,
		             A.car_Created as carCreated
		          FROM 
		          (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,car_Created,       
		          case  when CIR_PROC_USER is null then MANIFEST_PCS ELSE RECD_PCS end pcs,
		                  case  when CIR_PROC_USER is null then MANIFEST_WT ELSE RECD_WT end wt
		          from  IMP_CAR_SHP ) A
		          join IMP_CAR_AWB B on A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
		          join AWB on A.AWB_DATE = AWB.AWB_DATE AND A.AWB_NO = AWB.AWB_NO          
		          left JOIN     (SELECT inv.AWB_DATE, inv.AWB_NO, inv.FLT_KEY, inv.FLT_DATE, 
		                      SUM(inv.LOCN_PCS) LOCN_PCS,     SUM(inv.LOCN_WT) LOCN_WT   
		                      FROM AWB_INVENTORY inv   
		                      JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO         AND awb.awb_date = inv.awb_date        AND awb.awb_type = 'T'
		                      WHERE inv.TRM_NO IS NULL AND inv.FLT_TYPE = 'I'    GROUP BY inv.AWB_DATE, inv.AWB_NO, inv.FLT_KEY, inv.FLT_DATE) I  
		                      ON B.AWB_DATE = I.AWB_DATE AND B.AWB_NO = I.AWB_NO AND A.FLT_KEY = I.FLT_KEY AND A.FLT_DATE = I.FLT_DATE 
		             LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, td.FLT_KEY, td.FLT_DATE, SUM(td.PCS) PCS, SUM(td.WT) WT 
		                      from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
		                      where STATUS != 'VOID' 
		                      GROUP BY td.AWB_DATE, td.AWB_NO, td.FLT_KEY, td.FLT_DATE) T 
		                      ON A.AWB_DATE = T.AWB_DATE AND A.AWB_NO = T.AWB_NO  AND A.FLT_KEY = T.FLT_KEY AND A.FLT_DATE = T.FLT_DATE     
		                      
		                      WHERE 1 = 1  AND awb.awb_type = 'T' 
				<isEmpty property="awbNo">	
					<isNotEmpty property="flightDateFrom">
						<isNotEmpty property="flightDateTo">
							and A.FLT_Date between to_date(#flightDateFrom#) and to_date(#flightDateTo#)
						</isNotEmpty>
					</isNotEmpty>
					<isNotEmpty property="transferCarrier">
							and awb.CARR_CODE = #transferCarrier#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="awbNo">
					and	TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY') AND A.AWB_NO  =  #awbNo# 
				</isNotEmpty>
				<isNotEmpty property="loginCarrier">
					and (awb.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) OR 	awb.CARR_CODE = #loginCarrier#)
				</isNotEmpty>
			
		union all
		    SELECT 
		          awb.HOUSE_FLG as houseFlag, TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
		          A.AWB_NO AS awbNo,
		          SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
		          O.CARR_CODE  carrCode,
		          '' flightDate,    
		          '' flightKey,
		          case when AWB.carr_code = O.carr_code then nvl(O.PCS,0) - (a.pcs - NVL(T.PCS, 0))
		                when AWB.carr_code &lt;&gt; O.carr_code then nvl(O.PCS,0) else 0 end  pcs, 
		          case  when AWB.carr_code = O.carr_code  then nvl(O.WT,0) - (a.wt - NVL(T.WT, 0))
		                when AWB.carr_code &lt;&gt; O.carr_code then nvl(O.WT ,0) else 0 end  wt, 
		          0 transferPcs,
		          0 transferWt,
		          awb.ORIG AS awbOrign ,
		          awb.DEST AS awbDestination ,
		          awb.CATALOG AS catalog ,
		            awb.CONTENT content,
		            (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE V WHERE V.AWB_NO = A.AWB_NO     AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
		            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = 'T' ) transferTypeDesc,
		             '' as carCreated
		      FROM AWB_OWNER O 
		          join (select AWB_NO, AWB_DATE,       
		              sum(case  when CIR_PROC_USER is null then MANIFEST_PCS ELSE RECD_PCS end) pcs,
		              sum(case  when CIR_PROC_USER is null then MANIFEST_WT ELSE RECD_WT end) wt
		              from  IMP_CAR_SHP 
		              group by awb_no, awb_date) A on A.AWB_NO = O.AWB_NO AND A.AWB_DATE = O.AWB_DATE 
		          join AWB on A.AWB_DATE = AWB.AWB_DATE AND A.AWB_NO = AWB.AWB_NO          
		          join mast_carrier mastCarr on mastCarr.code = O.CARR_CODE AND owned_carr = 'Y' 
		          left JOIN     (SELECT inv.AWB_DATE, inv.AWB_NO, 
		                      SUM(inv.LOCN_PCS) LOCN_PCS,     SUM(inv.LOCN_WT) LOCN_WT   
		                      FROM AWB_INVENTORY inv   
		                      JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO         AND awb.awb_date = inv.awb_date        AND awb.awb_type = 'T'
		                      WHERE inv.TRM_NO IS NULL AND inv.FLT_TYPE = 'I'    GROUP BY inv.AWB_DATE, inv.AWB_NO) I  
		                      ON a.AWB_DATE = I.AWB_DATE AND a.AWB_NO = I.AWB_NO 
		           LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, SUM(td.PCS) PCS, SUM(td.WT) WT 
		                      from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
		                      where STATUS = 'POSTED' and flt_key is not null
		                      GROUP BY td.AWB_DATE, td.AWB_NO) T 
		                      ON  A.AWB_NO = T.AWB_NO and A.AWB_DATE = T.AWB_DATE                          
		           WHERE O.PCS &gt; 0  AND awb.awb_type = 'T' 		  						  
				
					<isNotEmpty property="transferCarrier">
							and O.CARR_CODE = #transferCarrier#
					</isNotEmpty>
					
					<isNotEmpty property="loginCarrier">
						and (O.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) OR 	O.CARR_CODE = #loginCarrier#)
					</isNotEmpty>
					
				<isEmpty property="awbNo">	
					<isNotEmpty property="flightDateFrom">
						<isNotEmpty property="flightDateTo">	
							and exists (select null from  IMP_CAR_SHP where FLT_Date between to_date(#flightDateFrom#) and to_date(#flightDateTo#) and AWB_NO = O.AWB_NO AND AWB_DATE = O.AWB_DATE) 
						</isNotEmpty>
					</isNotEmpty>			
				</isEmpty>
				<isNotEmpty property="awbNo">
						and	TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY') AND A.AWB_NO  =  #awbNo# 
				</isNotEmpty>		
		    ) t
    where t.pcs &gt; 0 and t.pcs - t.transferpcs &gt; 0   
			order by awbNo
	</select>

	<!--  if user choose transfer type = Local Transfer (E) and enter RCL No, RCL Date Range, AWB NO , carrier -->
<select id="exp_ctrm_get_trm_by_rcl_awb_E" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
	<![CDATA[
	select a.* from 
        (
			SELECT		
      		TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
			A.AWB_NO AS awbNo,	
            SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
            '' AS uldKey,
  			O.CARR_CODE  carrCode,
  			nvl(O.PCS,0) locationPcs,
			nvl(O.WT,0)  locationWt, 
 			case  when AWB.carr_code <> O.carr_code then O.PCS                 
           		when AWB.carr_code = O.carr_code then AWB.PCS end pcs,            
           	case  when AWB.carr_code <> O.carr_code then O.WT  
           		when AWB.carr_code = O.carr_code then AWB.WT end wt,    
            decode(AWB.CARR_CODE ,O.CARR_CODE,NVL(T.PCS, 0),'')  transferPcs,
	        decode(AWB.CARR_CODE ,O.CARR_CODE,NVL(T.WT, 0),'')  transferWt,
			A.ORIGIN AS awbOrign ,
			A.DEST AS awbDestination ,
			A.CATALOG AS catalog  ,
            A.CONTENT content ,
            (SELECT V.CC_CODE FROM V_CST_EXP_CC_CODE V
              	WHERE V.AWB_NO = A.AWB_NO 
				AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
           decode(AWB.CARR_CODE ,O.CARR_CODE, (select rcl_no || case when c > 1 then '(+)' else '' end
     			from (select max(rcl_no) rcl_no, count(1) c, awb_no, awb_Date from exp_RCL_HD where status = 'S' group by awb_no, awb_Date)   where awb_no = a.awb_no  and awb_Date = a.awb_Date),'') rclNo	,
               AWB.car_YN carCreated
		FROM EXP_CAR A
			 join AWB on A.AWB_NO = AWB.AWB_NO AND A.AWB_DATE = AWB.AWB_DATE 
			 join AWB_OWNER O on A.AWB_NO = O.AWB_NO AND A.AWB_DATE = O.AWB_DATE  and O.PCS > 0
			 join mast_carrier mastCarr on mastCarr.code = O.CARR_CODE AND owned_carr = 'Y' 

             LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, SUM(td.PCS) PCS, SUM(td.WT) WT  ,th.TRANSF_CARR TRNSF_CARR
             from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
             where STATUS <> 'VOID'
             GROUP BY td.AWB_DATE, td.AWB_NO ,th.TRANSF_CARR) T  ON A.AWB_DATE = T.AWB_DATE AND A.AWB_NO = T.AWB_NO   	AND O.CARR_CODE = T.TRNSF_CARR 
             WHERE O.PCS > 0 
	]]>
		<isNotEmpty property="awbNo">
			 AND A.AWB_NO  = #awbNo#  AND  TO_CHAR(A.AWB_DATE,'DDMONYY') = #awbDate#
		</isNotEmpty>
		<isEmpty property="awbNo">
		  <isNotEmpty property="transferCarrier">
		    and O.CARR_CODE = #transferCarrier#
		  </isNotEmpty>
		  <isNotEmpty property="loginCarrier">
				and O.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#)
		</isNotEmpty>
	      <isNotEmpty property="rclNo">
	       AND ((a.awb_no, a.awb_date) in 
	       				(select rcl.awb_no, rcl.awb_date from exp_uld_awb eu 
								join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no 
	    							where eu.rcl_no = #rclNo# and eu.ppk_type != 'M'
	    				union all
	    				select awb_no, awb_date from exp_rcl_hd where rcl_no = lower(#rclNo#) and ppk_type = 'B'))
	      </isNotEmpty>
	      <isEmpty property="expDateChkInd">
		      <isNotEmpty property="rclDateFrom">
		       	<isNotEmpty property="rclDateTo">
		       	 AND ((a.awb_no, a.awb_date) in 
		       	 			(select rcl.awb_no, rcl.awb_date from exp_uld_awb eu join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no
		       	 											where trunc(eu.rcl_date) between #rclDateFrom# and #rclDateTo# and eu.ppk_type != 'M'
		       	 			union all
		       	 			select awb_no, awb_date from exp_rcl_hd where trunc(rcl_date) between #rclDateFrom# and #rclDateTo#  and ppk_type = 'B'))
		      	</isNotEmpty>
		      </isNotEmpty>
		  </isEmpty> 
   		</isEmpty>   
   union all
   
   select   '' awbDate,   
			'' awbNo,	
            '' awbNoDisp,
            r.uld_key AS uldKey,
            r.carr_code  carrCode,
			r.rcl_pcs pcs,
			r.rcl_wt  wt, 
            r.rcl_pcs locationPcs,
			r.rcl_wt  locationWt,
            nvl((select pcs from IMP_TRM_HD th  where th.status = 'ISSUED' and th.uld_key = r.uld_key and rownum = 1),0) transferPcs,
            nvl((select wt  from IMP_TRM_HD th  where th.status = 'ISSUED' and th.uld_key = r.uld_key and rownum = 1),0)  transferWt,
			'' AS awbOrign ,
			'' AS awbDestination ,
			'' AS catalog  ,
            '' content ,
            '' ccCode,
           (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
            r.rcl_no rclNo,
            null carCreated
		FROM EXP_rcl_hd r
		WHERE r.void_date is null and (r.ppk_type = 'M' and exists (select null from awb_inventory where uld_key = r.uld_key and flt_key is null) and #awbNo# is null) 
	   <isNotEmpty property="transferCarrier">
	     and r.CARR_CODE = #transferCarrier#
	   </isNotEmpty>
	     <isNotEmpty property="loginCarrier">
				and r.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) 
		</isNotEmpty>
	   <isNotEmpty property="rclNo">
	      AND exists (select 1 from exp_uld_awb where rcl_no = lower(#rclNo#) and uld_key = r.uld_key and ppk_type = 'M')
	   </isNotEmpty>
	   <isEmpty property="expDateChkInd">
		   <isNotEmpty property="rclDateFrom">
			   	<isNotEmpty property="rclDateTo">
			      AND exists (select 1 from exp_uld_awb eu join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no     
			             where trunc(eu.rcl_date) between #rclDateFrom# and #rclDateTo# and  eu.uld_key = r.uld_key and  eu.ppk_type = 'M')
			   	</isNotEmpty>
	   		</isNotEmpty>
	   	</isEmpty>
   )a order by awbNo   
 </select>

	
	<select id="imp_ctrm_get_trm_by_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT 	TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
				SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
                A.AWB_NO AS awbNo,	
                A.CARR_CODE  carrCode,
                TO_CHAR (A.FLT_DATE,'DDMONYY') AS flightDate,
                A.FLT_KEY AS flightKey, 
				A.LOCN_PCS AS locationPcs, 
                A.LOCN_WT AS locationWt, 
                A.LOCN_PCS AS transferPcs, 
                A.LOCN_WT AS transferWt, 
				B.Orig AS awbOrign ,
				B.DEST AS awbDestination ,
				A.CATALOG AS catalog  ,
                uldInv.LOC_CODE AS warehouseLocation, 
                uldInv.LOC_CODE AS warehouseDestination,
                uldInv.Handling_mode AS hndlgMode,
                 nvl(uldInv.PPK_IND,'N') AS ppkInd,
                 nvl(uldInv.MIX_PPK_IND,'N') AS mixPpkInd,
                (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
                #transferType# transferType,
                case when  #transferType# = 'T' then
                 (select nvl(car_created,'N') from IMP_CAR_SHP shp where A.AWB_DATE = shp.AWB_DATE AND A.AWB_NO = shp.AWB_NO and A.flt_key = shp.flt_key AND A.flt_Date = shp.flt_Date)
                 else 
                 B.car_YN  end as carCreated
          FROM AWB_INVENTORY A
              	JOIN AWB B ON A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO              	
              	join uld_inventory uldInv on uldInv.ULD_KEY = A.ULD_KEY              	
		WHERE	A.ULD_KEY  = #uldKey#
		<isNotEmpty property="loginCarrier">
				and uldInv.OWNER_ID in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) 
		</isNotEmpty>
	</select>
	
	<select id="check_car_created_type_t" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String" >
		select nvl(car_created,'N') from IMP_CAR_SHP where AWB_DATE = #awbDate# AND AWB_NO = #awbNo# and flt_key = #flightKey# AND flt_Date = #flightDate#
	</select>
	
	<select id="check_car_created_type_e" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String" >
		select nvl(car_YN,'N') from AWB where AWB_DATE = #awbDate# AND AWB_NO = #awbNo#
	</select>
	
	<select id="validate_CT_Transfer_Carr_To_RecvCarr" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
		select count(1) from awb where awb_no = #awbNo# and awb_date = #awbDate# and awb_type = 'T' and carr_code = #recevCarrier# 
	</select>
	
	<select id="count_CT_Transfer_Carr" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
		select count(1) from awb where awb_no = #awbNo# and awb_date = #awbDate# and awb_type = 'T' and carr_code != #transferCarrier#  
	</select>
	
	<select id="get_SUM_Pman_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >      
	select nvl(sum(bulk_pcs),0) pmanPcs , nvl(sum(bulk_wt),0) pmanWt from EXP_PMANIFEST_AWB where awb_no = #awbNo# and awb_date = #awbDate#
	        and  FUN_GET_PARENT_CARR (#transferCarrier#) = FUN_GET_PARENT_CARR ((select carr_code from flt_opr where flt_key = EXP_PMANIFEST_AWB.flt_key and sch_date = EXP_PMANIFEST_AWB.flt_date and flt_type = 'D'))
	</select>
	
	<select id="get_SUM_OWNER_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >     
	select nvl(sum(pcs),0) ownerPcs , nvl(sum(wt),0) ownerWt from awb_owner where awb_no = #awbNo# and awb_date = #awbDate#
	          and  FUN_GET_PARENT_CARR (#transferCarrier#) = FUN_GET_PARENT_CARR (carr_code)
	</select>
	
	<select id="get_SUM_OLD_OWNER_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >     
	select nvl(sum(pcs),0) ownerPcs , nvl(sum(wt),0) ownerWt from awb_owner where awb_no = #awbNo# and awb_date = #awbDate#
	          and  CARR_CODE=#transferCarrier#
	</select>
	<insert id="imp_ctrm_trm_hd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	INSERT INTO IMP_TRM_HD (
			TRM_NO, 
			TRM_TYPE, 
			TRM_DATE, 
			TRANSF_CARR, 
			RECD_CARR,
			RECD_CARR_HANDR, 
			ULD_KEY, 
			ULD_RMK, 
			ULD_WH_DEST, 
			ULD_LOCN, 
			CR_USER_ID, 
			CR_DATE, 
			LM_USER_ID,
			LM_DATE,
			STATUS,
			AWB_NO, 
			AWB_DATE,
			PCS, 
			WT, 			
			RMK,
			SOURCE,
			TRM_REF_NO,
			TR_TYPE) 
		VALUES (#trmNo#,
			nvl(#trmType#,'I'),
			TO_DATE(#trmDate#,'DDMONYY HH24:MI'),
			#transferCarrier#,
			#recevCarrier#,
			#recevCarrierHandler#,
			#uldKey#,
			#uldRemark#,
			#warehouseDestination#,
			#warehouseLocation#,
			#lmUser#,
			SYSDATE,
			#lmUser#,
			SYSDATE,
			'ISSUED',
			#awbNo#,
			TO_DATE(#awbDate#,'DDMONYY'),
			#sumTransferPcs#,
			#sumTransferWt#,			
			#remark#,
			#source#,
			#trmRefNo#,
			'CCT')
	</insert>

	
	<insert id="imp_ctrm_trm_dtl" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT INTO IMP_TRM_DTL (
			TRM_NO, 
			TRM_TYPE, 
			DOC_LINE_NO, 
			AWB_NO, 
			AWB_DATE,
			PCS, 
			WT, 
			FLT_KEY, 
			FLT_DATE, 
			FLT_TYPE, 
			RMK, 
			CATALOG, 
			DEST, 
			CR_USER_ID, 
			CR_DATE, 
			LM_USER_ID, 
			LM_DATE) 
		VALUES (#trmNo#,
			nvl(#trmType#,'I'),
			#doclineNo#,
			#awbNo#,
			TO_DATE(#awbDate#,'DDMONYY'),
			#transferPcs#,
			#transferWt#,
			#flightKey#,
			TO_DATE(#flightDate#,'DDMONYY'),
			'I',
			#remark#,
			#catalog#,
			#awbDestination#,
			#lmUser#,
			SYSDATE,
			#lmUser#,
			SYSDATE)
	</insert>
	
	<select id="imp_ctrm_get_count_awb_owner" parameterClass="cargo.cms.imprt.bo.TrmBO"  resultClass="java.lang.Integer" >
	 select count(1) from  AWB_OWNER
	  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #carrCode#
	</select>
	
	<select id="get_ctrm_handled_by_cpct" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    select HANDLED_BY_TERMINAL from MAST_CARRIER where code = #carrCode# 
	</select>

	<select id="get_ctrm_handled_by_terminal" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    select count(1) from MAST_CARRIER where OWNED_CARR = 'Y' and code = #carrCode# 
	</select>
	
	<update id="imp_ctrm_awb_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS + #transferPcs# , wt = wt + #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #carrCode#
	</update>
	
	<update id="uld_inv_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update ULD_INVENTORY set OWNER_ID = #carrCode# ,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="imp_ctrm_awb_owner_trfCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS - #transferPcs# , wt = wt - #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #transferCarrier#
	</update>
	
	<insert id="imp_ctrm_awb_owner_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#awbNo#,#awbDate#,#carrCode#,#transferPcs#,#transferWt#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<update id="update_trm_header_status_post" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET STATUS ='POSTED',
		POST_DATE = SYSDATE,
		POST_USER = #lmUser#,
		LM_DATE = sysdate,
		LM_USER_ID =  #lmUser#,
		TR_TYPE='PCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="sqlUpdateAwbCloseForPostCT" parameterClass="map">
		<![CDATA[
		update awb set awb_closed_yn='Y',LM_DATE = sysdate,LM_USER_ID =  'SYSTEM'
		where (awb_no, awb_date) in (
		select a.awb_no, a.awb_date 
			from awb a
			left join (select d.awb_no, d.awb_date, sum(d.pcs) pcs, sum(d.wt) wt from imp_trm_hd h
			    join imp_trm_dtl d on h.trm_no = d.trm_no
			    where h.status = 'POSTED' and h.recd_carr_handr != 'CPCT'
			    group by d.awb_no, d.awb_date) t on t.awb_no = a.awb_no and t.awb_date = a.awb_date
			left join (select cs.awb_no, cs.awb_date, 
			          sum(case when nvl(recd_pcs,0) + nvl(tt_if_pcs, 0) != nvl(sup_pcs, 0)  then 1 else 0 end) disc_cnt 
			      from (select awb_no, awb_date, flt_key, flt_date, manifest_pcs, recd_pcs, (manifest_pcs + case when CIR_PROC_USER is null then 0 else
			                case when CIR_PCS_TYPE = 'SL' then -1 * CIR_PCS else CIR_PCS end end) sup_pcs
			           from imp_car_shp) cs
			       left join (select awb_no, awb_date, flt_key, flt_date, sum(shp_trf_pc) tt_if_pcs
			          from v_ddt_dtl where (trf_type = 'IF' or shp_trf_type = 'TT') group by awb_no, awb_date, flt_key, flt_date) d 
			            on d.awb_no = cs.awb_no and d.awb_date = cs.awb_date and d.flt_key = cs.flt_key and d.flt_date = cs.flt_date 
			      group by cs.awb_no, cs.awb_date
			       ) s on s.awb_no = a.awb_no and s.awb_date = a.awb_date
			left join (select awb_no, awb_date, sum(locn_pcs) locn_pcs from  awb_inventory group by awb_no, awb_date) i
			    on i.awb_no = a.awb_no and i.awb_date = a.awb_date       
			left join (select awb_no, awb_date, sum(pman_pcs) pman_pcs, sum(unassigned_bulk_pcs) unassigned_bulk_pcs 
			        from  exp_pmanifest_awb group by awb_no, awb_date) p
			    on p.awb_no = a.awb_no and p.awb_date = a.awb_date       
			where a.pman_pcs + nvl(t.pcs, 0) >= a.pcs   
			and nvl(p.unassigned_bulk_pcs, 0) = 0 and nvl(i.locn_pcs, 0) = 0
			and ((a.awb_type = 'E' and a.car_yn = 'Y') or (a.awb_type = 'T' and nvl(s.disc_cnt, 0) = 0 ))
			and a.awb_closed_yn='N'
			and a.awb_no = #awbNo# and a.awb_date = #awbDate#)
		]]>
	</update>
	
	<select id="get_trmdetail_for_uld"  parameterClass="cargo.cms.imprt.bo.TrmUldBO" resultClass="cargo.cms.imprt.bo.TrmUldBO">
		SELECT OWNER_ID  AS ownerId, ULD_FLOW AS flightType FROM ULD_INVENTORY WHERE ULD_KEY =#uldKey#
	</select>

	<select id="get_owner_id_for_carrier"  parameterClass="map" resultClass="java.lang.String">
		SELECT OWNED_CARR FROM MAST_CARRIER WHERE CODE=#recv_Carr#
	</select>

	<select id="check_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM IMP_TRM_HD 
		WHERE (STATUS = 'ISSUED' OR STATUS = 'RETRIEVED') AND ULD_KEY = #uldKey#
	</select>
		
	<select id="get_uld_recv_carr_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT RECD_CARR FROM IMP_TRM_HD WHERE STATUS != 'VOID' AND ULD_KEY = #uldKey# and rownum = 1
	</select>
	
	<select id="get_awb_recv_carr_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT A.RECD_CARR FROM IMP_TRM_HD A
				WHERE A.STATUS != 'VOID' AND (A.AWB_NO = #awbNo#  or exists (select null from IMP_TRM_DTL B where A.TRM_NO = B.TRM_NO and B.AWB_NO = #awbNo# )) and rownum = 1      
	</select>          	
		
	<select id="check_storage_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM AWB_INVENTORY inv
		JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO 
		AND awb.awb_date = inv.awb_date	
		WHERE inv.AWB_NO=#awb_no# 
	</select>

	<select id="checkTransferGroupCarrier"  parameterClass="map" resultClass="java.lang.Integer">	
			select count(1) from dual where 
						(select  FUN_GET_PARENT_CARR (#trfCarr#) from dual) =
							(select  FUN_GET_PARENT_CARR (#recvCarr#) from dual)
	</select>

	<!-- Added for fix 12566. Sanket 23SEP14-->
    <select id="fetchHawbCount"  parameterClass="map" resultClass="cargo.cms.imprt.bo.TrmBO">	
			select  count(1) as hawbCount, min (hawb_no) as hawbNo  
            from edi_fhl t1
            join edi_fhl_HAWB t2 on t1.tr_no = t2.tr_no
            where awb_no = #AWB_NO# group by awb_no
	</select>

	<select id="get_catalog_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT CATALOG FROM IMP_CAR_AWB
		WHERE AWB_NO=#awb_no# 
		AND AWB_CLOSED='N' AND ROWNUM=1
	</select>

	<!-- Changed for QR :: RANJITH -->
	<select id="check_destination_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM AWB WHERE DEST='HKG' AND AWB_NO=#awb_no# and AWB_TYPE = 'T' and nvl(awb_closed_yn,'N') = 'N'
	</select>

	<select id="check_awb_type_for_CT"  parameterClass="map" resultClass="java.lang.String">	
			SELECT NVL(count(1),0) FROM AWB WHERE AWB_NO=#awb_no# and AWB_TYPE = 'E' and nvl(awb_closed_yn,'N') = 'N'
	</select>
	
	<select id="check_constraint_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(COUNT(1),0)
		FROM IMP_CAR_AWB A 
		JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
		LEFT JOIN V_CST_IMP_CC_CODE_AWB_ALL V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO 
			AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000'
		WHERE S.AWB_NO = #awb_no# AND V.CC_CODE IS NULL AND A.CATALOG NOT IN ('TM')
		and exists (select null from cst_csgnm c
		where c.FLT_KEY = S.FLT_KEY AND c.FLT_DATE = S.FLT_DATE AND c.AWB_NO = S.AWB_NO)
	</select>

	 <select id="getListforCTHO" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
          select TRM_NO trmNo, to_char(TRM_DATE,'DDMONYY') trmDate, TRM_TYPE trmType, TRANSF_CARR transferCarrier, 
          ULD_KEY uldKey, AWB_NO awbNo, SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , to_char(AWB_DATE,'DDMONYY') awbDate, 
          <!-- nvl(PCS,0) transferPcs, nvl(WT,0) transferWt,-->
          (select nvl(sum(PCS),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transferPcs,
          (select nvl(sum(WT),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transferWt, 
		  (select CODE_DESC from MAST_CODE_DTL where CODE_TYPE = 'RECD_CARR_HANDLER' and CODE = RECD_CARR_HANDR  )  recevCarrierHandlerShow,
		  RECD_CARR_HANDR recevCarrierHandler, RECD_CARR recevCarrier, 
          REJECT_REASON rejectReson, decode(REJECT_IND,null,'N',REJECT_IND) rejectResonInd  
          from IMP_trm_hd 
          where IMP_trm_hd.HO_NO is null  and IMP_trm_hd.status = 'ISSUED' 
	          <isNotEmpty property="recevCarrierHandler">
	            and  RECD_CARR_HANDR =  #recevCarrierHandler# 
	          </isNotEmpty>
	           <isNotEmpty property="recevCarrier">
	            and  RECD_CARR = #recevCarrier#   
	          </isNotEmpty>
	          <isNotEmpty property="crDateFrom">
	          <isNotEmpty property="crDateFromHH">
	          <isNotEmpty property="crDateFromMI">
	           <isNotEmpty property="crDateTo">
	          <isNotEmpty property="crDateToHH">
	          <isNotEmpty property="crDateToMI">
	          and cr_date between to_date(#crDateFrom# ||' '||#crDateFromHH#||#crDateFromMI#,'DDMONYY HH24MI')  and to_date(#crDateTo# ||' '||#crDateToHH#||#crDateToMI#,'DDMONYY HH24MI')
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	  </select>
	  
	<insert id="imp_ct_ho_form_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	    Insert into CT_HO (HO_NO,RECD_CARR_HANDR,EST_PICK_DATE_TIME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values
	    (#hoNo#,#recevCarrierHandler#,to_date(#estPickDateTime#,'DDMONYY HH24MI'),#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<update id="imp_ct_ho_form_upd" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET HO_NO =#hoNo#,
			REJECT_IND = 'N',
			REJECT_REASON = NULL,
			TR_TYPE = #trtype#		
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="checkHOexitsForCT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where  HO_NO is not null and TRM_NO = #trmNo# and TRM_DATE = to_date(#trmDate#,'DDMONYY') 
	</select>
	
	<delete id="delete_CT_HO" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	    delete from CT_HO where HO_NO = #hoNo#
	</delete>
	
	<update id="delete_ct_for_ho_form" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET HO_NO = null,
		status = 'ISSUED',
		retrv_date = null,
		retrv_user = null,
		lm_user_id = #lmUser#,
		lm_date = sysdate
		WHERE  HO_NO =#hoNo#
	</update>
	
	<select id="checkHOCT_POSTED" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where   HO_NO = #hoNo# and status = 'POSTED'
	</select>
	
	<select id="checkHOCT_RETRIEVED" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where   HO_NO = #hoNo# and status = 'RETRIEVED'
	</select>
	
	<select id="getRecvCarrHandler" parameterClass="java.lang.String" resultClass="java.lang.String" >
			select CODE_DESC from MAST_CODE_DTL where CODE_TYPE = 'RECD_CARR_HANDLER' and CODE = #recevCarrierHandler#
	</select>
	
	<select id="get_amend_trm_list_trmno" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD
		WHERE  Status  = 'ISSUED' AND  TRM_NO = #trmNo#
		<isNotEmpty property="loginCarrier">
			and TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by TRM_NO
	</select>
	
	<!--  Changed for QR -->
	<select id="get_amend_trm_list_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate,			
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.SOURCE source
		FROM IMP_TRM_HD A , IMP_TRM_DTL B
		WHERE B.TRM_NO = A.TRM_NO AND A.Status  = 'ISSUED' AND B.AWB_NO = #awbNo# 
		and B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO )
		<isNotEmpty property="loginCarrier">
			AND A.TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by A.TRM_NO
	</select>
	
	<select id="get_amend_trm_list_trmdate" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD 
		WHERE Status  = 'ISSUED' AND TO_CHAR(TRM_DATE,'DDMONYY') = TO_DATE(#trmDate#,'DDMONYY') 
		<dynamic>
			<isNotEmpty prepend="AND" property="transferCarrier">
				 TRANSF_CARR = #transferCarrier# 
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
				AND TRANSF_CARR = #loginCarrier#
			</isNotEmpty>
		</dynamic>
		Order by TRM_NO
	</select>

	<select id="get_amend_trm_list_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD
		WHERE  Status  = 'ISSUED' AND ULD_KEY = #uldKey#
		<isNotEmpty property="loginCarrier">
			and TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by TRM_NO
	</select>
	
	<select id="get_unpost_trm_list" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.SOURCE source
		FROM IMP_TRM_HD A		
	    <isNotEmpty property="awbNo">
		JOIN IMP_TRM_DTL B
	      ON B.TRM_NO = A.TRM_NO and B.AWB_NO = #awbNo# 
	      and B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO )
		</isNotEmpty>
		WHERE  A.Status  = 'POSTED' and A.RECD_CARR_HANDR !='CPCT'
    	<isNotEmpty property="uldKey">
			AND A.ULD_KEY = #uldKey#
		</isNotEmpty>
		<isNotEmpty property="trmNo">
			AND  A.TRM_NO = #trmNo#
		</isNotEmpty>
	<isNotEmpty property="trmDateFrom">
      <isNotEmpty property="trmDateTo">
		AND TO_CHAR(A.TRM_DATE,'DDMONYY') BETWEEN TO_DATE(#trmDateFrom#,'DDMONYY') 
        AND TO_DATE(#trmDateTo#,'DDMONYY') 
	</isNotEmpty>
    </isNotEmpty>   
		Order by A.TRM_NO
	</select>
	
	<update id="imp_unpost_awb_owner_recvCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS - #transferPcs# , wt = wt - #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #recevCarrier#
	</update>
	
	<select id="amend_trm_validation_data" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT POST_USER AS postUser,
			VOID_USER AS voidUser,
			RETRV_USER AS retriveUser
		FROM IMP_TRM_HD WHERE TRM_NO=#trmNo#
	</select>
	
	<select id="get_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT 
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo,
		   TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate ,
		   TRANSF_CARR AS transferCarrier,
		   RECD_CARR AS recevCarrier,
		   RECD_CARR_HANDR AS recevCarrierHandler,
		   ULD_KEY AS uldKey,
		   ULD_WH_DEST AS warehouseDestination,
		   ULD_LOCN AS warehouseLocation,
		   ULD_RMK AS uldRemark,
		   STATUS AS status,
		   TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
		   '' AS postHour, 
		   '' AS postMin,  
		   TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		   DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd,
		   DECODE(POST_DATE,NULL,'N','Y') postIndicator ,
			TRM_TYPE trmType,
			TRM_REF_NO trmRefNo,
			SOURCE source,
			REJECT_REASON rejectReson
		FROM IMP_TRM_HD WHERE TRM_NO = #trmNo#
	</select>

	<update id="void_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			VOID_DATE  = SYSDATE,
			VOID_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'VOID',
			TR_TYPE='VCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="void_trm_detail_posted" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			VOID_DATE  = SYSDATE,
			VOID_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'VOID',
			POST_DATE = null,
			POST_USER = null,
			TR_TYPE='VCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="get_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
	
		<![CDATA[
				  SELECT TRM_NO AS trmNo,
				   DOC_LINE_NO AS doclineNo,
				   SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
				   A.AWB_NO AS awbNo,
				   to_char(A.AWB_Date,'DDMONYY') AS awbDate,
				   CATALOG AS catalog,
				   DEST AS awbDestination,
				   FLT_KEY AS flightKey,
				   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,
				   PCS AS transferPcs,
				   WT AS transferWt,
				   RMK AS remark,
				   NVL(B.LOCN_PCS,0) AS locationPcs,
				   NVL(B.LOCN_WT,0)  AS locationWt
				   FROM IMP_TRM_DTL A 
				   left join  ( SELECT  AWB_NO, AWB_DATE, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT 
				   			  FROM AWB_INVENTORY GROUP  BY AWB_NO, AWB_DATE) B	   
				   on A.AWB_NO = B.AWB_NO AND  A.AWB_DATE = TO_DATE(B.AWB_DATE) 
			     WHERE TRM_NO =  #trmNo#	   
	   ]]>
	</select>
	
	<select id="validate_trm_catalog" parameterClass="map" resultClass="java.lang.String" >
			SELECT nvl(count(1),0) FROM IMP_TRM_DTL WHERE TRM_NO=#trmNo# AND CATALOG='TA' 
	</select>
	
	<select id="get_trm_status" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
		select STATUS from IMP_TRM_HD WHERE TRM_NO = #trmNo#
	</select>
	
	<select id="validate_void_trm_hoNo" parameterClass="map" resultClass="java.lang.Integer" >
			select count(1) from IMP_TRM_HD where HO_NO is null and status = 'ISSUED' and TRM_NO = #trmNo# 
	</select>
	
	<update id="post_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = TO_DATE(#postDate#,'DDMONYYHH24MI'),
			POST_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'POSTED',
			TR_TYPE='PCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<parameterMap id="postTrmMap" class="map" >
		<parameter property="TRMNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ULDKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="post_trm_package" parameterMap="postTrmMap" >
		{  call PKG_TRM.PRC_TRM(?,?,?) }
	</procedure>
	
	<update id="unpost_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = null,
			POST_USER  = null,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'RETRIEVED'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="unpost_trm_detail_ta" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = null,
			POST_USER  = null,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'ISSUED',
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="update_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET ULD_RMK =#uldRemark#
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="update_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_DTL
			SET PCS = #newTransferPcs#,
			WT = #newTransferWt#,
			RMK = #remark#
		 WHERE TRM_NO = #trmNo# AND
			DOC_LINE_NO =#doclineNo#
	</update>
	
	<update id="retrive_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			STATUS = 'RETRIEVED',
			RETRV_DATE = SYSDATE,
			RETRV_USER = #lmUser#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#,
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="unretrive_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			STATUS = 'ISSUED',
			RETRV_DATE = null,
			RETRV_USER = null,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#,
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="get_awb_relocation_details" parameterClass="cargo.cms.imprt.bo.TrmBO" 			resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
	SELECT LOC_CODE AS whDestination, 
	   LOC_CODE AS whLocation, 
	   LOCN_PCS AS locPieces, 
	   LOCN_WT AS locWeight, 
	   LSP_NO AS lspNo, 
	   ULD_KEY AS uldKey, 
	   DAM_IND AS damageInd, 
	   PPK_IND AS ppkInd
	FROM AWB_INVENTORY 
	WHERE TRM_NO IS NULL AND 
	  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND 
	  AWB_NO = #awbNo# AND 
	  FLT_KEY = #flightKey# AND 
	  FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
</select>
	
	<delete id="delete_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE IMP_TRM_HD 
		WHERE TRM_NO = #trmNo#
	</delete>
	
	<delete id="delete_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE IMP_TRM_DTL 
		WHERE TRM_NO = #trmNo# AND
		DOC_LINE_NO =#doclineNo#
	</delete>
	
	<select id="get_trm_detail_count"  parameterClass="map" resultClass="java.lang.String">
		SELECT NVL(count(1),0) FROM IMP_TRM_DTL WHERE TRM_NO = #trmNo#
	</select>
	
	<insert id="insert_awb_reloc_hd" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_HD (   
		TR_NO, 
		CR_USER_ID, 
		CR_DATE,   
		LM_USER_ID, 
		LM_DATE, 
		AWB_NO,   
		AWB_DATE, 		 
		RELOC_TYPE)
	VALUES(#trNo#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#awbNo#,
		TO_DATE(#awbDate#,'DDMONYY'),		
		'T')
</insert>

<insert id="insert_awb_reloc_iss" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_ISS (   
		TR_NO, 
		DOC_LINE_NO, 
		WH_DEST,    
		LOC_CODE,  
		LOCN_PCS, 
		LOCN_WT,    
		LSP_NO,    
		ULD_KEY,   
		PPK_IND,  	
		FLT_DATE,  
		FLT_TYPE,  
		FLT_KEY,   
		CR_USER_ID, 
		CR_DATE,    
		LM_USER_ID, 
		LM_DATE, 
		DAM_IND,    
		BULK_WT, 
		BUP_WT) 			
	VALUES
		(#trNo#,
		#doclineNo#,
		#whDestination#,
		#whLocation#,
		#transferPieces#,
		#transferWeight#,
		#lspNo#,
		#uldKey#,
		#ppkInd#,
		TO_DATE(#fltDate#,'DDMONYY'),
		'I',
		#fltKey#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#damageInd#,
		'0',
		'0')
 </insert>

 <insert id="insert_awb_reloc_recv" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_RECV (   
		TR_NO, 
		DOC_LINE_NO, 
		WH_DEST,    
		LOC_CODE, 
		LOCN_PCS, 
		LOCN_WT,    
		LSP_NO, 
		ULD_KEY,
		PPK_IND,    
		FLT_DATE,
		FLT_TYPE,  
		FLT_KEY, 
		TRM_NO,
		CR_USER_ID, 
		CR_DATE,   
		LM_USER_ID, 
		LM_DATE, 
		DAM_IND,   
		BULK_WT, 
		BUP_WT )
	VALUES
		(#trNo#,
		#doclineNo#,
		#whDestination#,
		#whLocation#,
		#transferPieces#,
		#transferWeight#,
		#lspNo#,
		#uldKey#,
		#ppkInd#,
		TO_DATE(#fltDate#,'DDMONYY'),
		'I',
		#fltKey#,
		#trmNo#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#damageInd#,
		'0',
		'0'
		)
 </insert>
 
	<update id="update_trm_awb_inventory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update awb_inventory set trm_no = #trmNo# where uld_key = #uldKey# 
	</update>
			
			
	<select id="fetchTrmValues" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TrackingBO">			
		<![CDATA[
			SELECT a.TRM_NO trmNo, c.TRM_DATE  , a.AWB_NO awbNo,To_Char(a.AWB_DATE,'DDMONYY')  awbDate,
			a.FLT_KEY fltKey, To_Char(a.FLT_DATE,'DDMONYY') fltDate , b.PCS qtyTotPcs , c.RECD_CARR recdCarr ,  TRANSF_CARR transferCarr
			FROM IMP_TRM_DTL a , AWB b  , IMP_TRM_HD c			 	
			where a.TRM_NO = c.TRM_NO and a.AWB_NO = b.AWB_NO and  a.AWB_DATE = b.AWB_DATE and b.awb_type ='I'
			AND a.TRM_No =#trmNo#
			Order BY c.TRM_DATE DESC
		]]>
	</select>
	
	
	<!-- ##################### ENQUIRE CT BY MAYANK Starts ############################# -->
<!--  Changed for QR -->
	<select id="get_enquire_trm_list_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (
			SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			A.STATUS AS status,
			TO_CHAR(A.POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
			TO_CHAR(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			    case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
        
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
      	  awb.orig as origin,
      	  awb.content as content,
      	  shp.MANIFEST_PCS manPcs,
		  shp.MANIFEST_WT manWt  
		FROM IMP_TRM_HD A 
		join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
   		left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE and  B.TRM_NO = itt.CT_NO	
   		left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE 
		(A.AWB_NO = #awbNo# and A.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = A.AWB_NO )) 
			or exists (select null from IMP_TRM_DTL B where A.TRM_NO = B.TRM_NO and B.AWB_NO = #awbNo# and 
											B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO))
		<dynamic>								
			<isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>
		</dynamic>
		) L where 1=1
		<dynamic>
		  <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>	
		</dynamic>
		Order by  L.trmNo
	</select>
	<select id="getTRMAWBListForULD" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >	
		SELECT 
		  A.awb_no as awbNo,
		  to_char(A.awb_date,'DDMONYY') as awbDate,
		  A.pcs                                  AS ctPcs,
		  A.wt                                        AS ctWt,
		  itt.ITT_AUTH_CODE                           AS authCode,
		  itt.ITT_REQ_CODE                            AS ittReqCode,
		  itt.DOC_LINE_NO                             AS docLineNo,  
		 (SELECT trim(V.ref_no)
		      FROM V_CST_IMP_CC_CODE V
		      WHERE V.FLT_KEY                          = A.FLT_KEY
		      AND V.FLT_DATE                           = A.FLT_DATE
		      AND V.AWB_NO                             = A.AWB_NO
		      AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		      AND ROWNUM                               = 1
		  ) AS ittCtmRefNo,
		  
		  (SELECT trim(V.CC_CODE)
		      FROM V_CST_IMP_CC_CODE V
		      WHERE V.FLT_KEY                          = A.FLT_KEY
		      AND V.FLT_DATE                           = A.FLT_DATE
		      AND V.AWB_NO                             = A.AWB_NO
		      AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		      AND ROWNUM                               = 1
		   ) AS ccCode,
		  awb.catalog                 AS catalog,
		  awb.carr_code               AS carrCode,
		  awb.dest                    AS destination,
		  awb.orig                    AS origin,
		  A.FLT_KEY                   AS fltKey,
		  TO_CHAR(A.flt_date,'DDMONYY') AS fltDate ,
		  A.FLT_TYPE                  AS fltType,
      		awb.content             as content
		FROM IMP_TRM_DTL A
		JOIN AWB awb ON awb.awb_no    = a.awb_no AND awb.awb_date = a.awb_date
		LEFT JOIN CST_ITT_DTL itt ON itt.CT_NO = A.TRM_NO AND itt.awb_no   = a.awb_no AND itt.awb_date = a.awb_date 
		where A.trm_no = #trmNo#
	</select>

	<select id="get_enquire_trm_list_trmdate" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') as awbDate,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			STATUS AS status,
			TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
			TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			 case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	      when  A.ULD_KEY is null then 
	       case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	      end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      (SELECT itt_Auth_code FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      (SELECT itt_req_code FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as ittReqCode,
	      (SELECT TR_NO FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as trNumber,	     
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,	      
		    (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus,                                
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  awb.orig as origin,
      	  awb.content as content,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
      	  shp.MANIFEST_PCS manPcs,
 		  shp.MANIFEST_WT manWt 
		FROM IMP_TRM_HD A
		left join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
		left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
		left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE   1=1 
		<dynamic>		
		    <isNotEmpty prepend="AND" property="trmDate">
		    	A.TRM_DATE BETWEEN TO_DATE(#trmDate#, 'DDMONYY') AND TO_DATE (#trmDateTo#, 'DDMONYY') + 1
		    </isNotEmpty>			
			<isNotEmpty prepend="AND" property="transferCarrier">
				 TRANSF_CARR = #transferCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				 RECD_CARR = #recevCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				 STATUS = #status# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				 RECD_CARR_HANDR = #recevCarrierHandler# 
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="loginCarrier">
				 TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>					
		</dynamic>
		) L where 1=1
		<dynamic>		                                 
		 <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		</isNotEmpty>				
	  </dynamic>
		Order by  L.trmNo
	</select>

	<select id="get_enquire_trm_list_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from ( 
			SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			STATUS AS status,
		    TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
		    TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		    DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
         awb.orig as origin,
      	 awb.content as content ,
      	  shp.MANIFEST_PCS manPcs,
 		  shp.MANIFEST_WT manWt 
		FROM IMP_TRM_HD A
		 left join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		 left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
		 left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
		 left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE A.ULD_KEY = #uldKey#
		<dynamic>
			<isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				 TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>
		</dynamic>
		 ) L where 1=1
    	<dynamic>
		 <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>
		</dynamic>
		Order by  L.trmNo
	</select>

	<select id="get_enquire_trm_list_trmno" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (
     	SELECT
		A.ULD_KEY AS uldKey,
		A.RMK remark,
		A.TRM_NO AS trmNo,
	    a.AWB_NO AS awbNo,
		to_char(A.AWB_DATE,'DDMONYY') AS awbDate,
		a.PCS as pcs,
		a.WT as wt,
		SUBSTR(TRIM(a.AWB_NO),1,3)||'-'||SUBSTR(TRIM(a.AWB_NO),4) awbNoDisp,
		TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate,
		'' AS trmHour,
		'' AS trmMin,
		A.TRANSF_CARR AS transferCarrier,
		A.RECD_CARR AS recevCarrier,
		A.RECD_CARR_HANDR AS recevCarrierHandler,
		DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
		A.STATUS AS status,
		TO_CHAR(A.POST_DATE,'DDMONYY HH24:MI') AS postDate,
		'' AS postTrmHour,
		'' AS postTrmMin,
		TO_CHAR(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
		A.Source source,
		to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
	   (select orig||'/'||dest from awb  where awb_no=a.awb_no	and awb_date=a.awb_Date) dest,
	   (select content from awb where awb_no  = a.awb_no and awb_date = a.awb_date) remark1,
       case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
          awb.orig as origin,
      	 awb.content as content ,
      	 shp.MANIFEST_PCS manPcs,
 		 shp.MANIFEST_WT manWt 
	FROM IMP_TRM_HD A
  	left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
  	left join AWB awb on awb.awb_no = A.awb_no AND awb.awb_date = A.awb_date
	left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
	left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
	WHERE A.TRM_NO = #trmNo#
  <dynamic>
		  <isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				 A.TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>	
		</dynamic>
    	) L where 1=1
   		<dynamic>
			<isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>	
		</dynamic>
		Order by  L.trmNo
	</select>

<select id="get_trm_detail_enquiry" parameterClass="cargo.cms.imprt.bo.TrmBO" 			resultClass="cargo.cms.imprt.bo.TrmBO">
	SELECT TRM_NO AS trmNo,
	   DOC_LINE_NO AS doclineNo,
	   AWB_NO AS awbNo,
	   SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
	   to_char(AWB_Date,'DDMONYY') AS awbDate,
	   CATALOG AS catalog,
	   DEST AS awbDestination,
	   FLT_KEY AS flightKey,
	   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,
	   PCS AS transferPcs,
	   WT AS transferWt,
	   RMK AS remark,
	   NVL(PCS,0) AS locationPcs,
	   NVL(WT,0)  AS locationWt
	   FROM IMP_TRM_DTL
	   WHERE TRM_NO =  #trmNo#
	   </select>
<!-- ##################### ENQUIRE CT BY MAYANK END ############################# -->

  <select id="getCTHOListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
  select HO_NO hoNo, RECD_CARR_HANDR recevCarrierHandler,
		to_char(EST_PICK_DATE_TIME,'DDMONYY HH24:MI') estPickDateTime , 
    	nvl(RTRV_IND,'N') rtrvInd, IMG_SESSION_ID transactionId,
    	(select CODE_DESC from MAST_CODE_DTL where CODE_TYPE =
		'RECD_CARR_HANDLER' and CODE = RECD_CARR_HANDR  )  recevCarrierHandlerShow
    	from CT_HO t
    	where  t.close_yn = 'N'
          <isNotEmpty property="recevCarrierHandler">
            and  t.RECD_CARR_HANDR = #recevCarrierHandler#   
          </isNotEmpty>
          <isNotEmpty property="hoNo">
            and t.HO_NO = #hoNo# 
          </isNotEmpty>
           <isNotEmpty property="uldKey">
            and exists (select 1 from imp_trm_hd where ULD_KEY = #uldKey# and ho_no = t.ho_no)     
          </isNotEmpty>        
					 order by ho_no     
  </select>
  
  <select id="getCTInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select 
	  tab1.TRM_NO trmNo,
	  to_char(tab1.TRM_DATE,'DDMONYY') trmDate, 
	  tab1.TRM_TYPE trmType, 
	  tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, 
      tab1.trm_type transferType,
      tab1.ULD_KEY uldKey,
      tab2.AWB_NO awbNo, SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp , 
      to_char(tab2.AWB_DATE,'DDMONYY') awbDate, 
      nvl(tab2.PCS,0) transferPcs, 
      TO_CHAR(NVL(tab2.WT,0),'999999999.99') transferWt,
      tab1.RECD_CARR_HANDR recevCarrierHandler, 
      decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd  ,
      flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, 
      flt_type flightType,
      NVL(AWB.house_flg,'N') houseFlag
      FROM IMP_TRM_HD TAB1, IMP_TRM_DTL TAB2, AWB  
      where tab1.TRM_NO = tab2.TRM_NO AND tab2.AWB_NO = AWB.awb_no AND tab2.awb_date = AWB.awb_date and tab1.HO_NO = #hoNo# and tab1.status = 'ISSUED'
 </select>

  <select id="getCTInfoListforCrossTerminal_rtv_Y" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate, tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
      tab1.ULD_KEY uldKey, tab1.AWB_NO awbNo, SUBSTR(tab1.AWB_NO,1,3)||'-'||SUBSTR(tab1.AWB_NO,4) as awbNoDisp , to_char(tab1.AWB_DATE,'DDMONYY') awbDate, 
      (SELECT SUM(NVL(TAB2.PCS,0)) FROM IMP_trm_dtl TAB2 WHERE tab2.TRM_NO = tab1.TRM_NO) transferPcs,
      (select sum(NVL(tab2.WT,'999999999.99')) from IMP_trm_dtl tab2 where tab2.TRM_NO = tab1.trm_no) transferWt, 
      tab1.RECD_CARR_HANDR recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd 
      from IMP_trm_hd tab1  
      where tab1.HO_NO = #hoNo#
 </select>
 
 	<select id="getHdCTInfoListforDeleteCrossTerminal"
		parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate,
		tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier,
		tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
		tab1.ULD_KEY uldKey, tab1.AWB_NO awbNo,
		SUBSTR(tab1.AWB_NO,1,3)||'-'||SUBSTR(tab1.AWB_NO,4) as awbNoDisp ,
		to_char(tab1.AWB_DATE,'DDMONYY') awbDate,
		nvl(tab1.PCS,0) transferPcs, nvl(tab1.WT,0) transferWt, tab1.RECD_CARR_HANDR
		recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd
		from IMP_trm_hd tab1
		where tab1.HO_NO = #hoNo# and tab1.status = 'RETRIEVED'  
 </select>

<select id="getDtlCTInfoListforDeleteCrossTerminal"
	parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
	select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate,
	tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier,
	tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
	tab1.ULD_KEY uldKey, tab2.AWB_NO awbNo,
	SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp ,
	to_char(tab2.AWB_DATE,'DDMONYY') awbDate,
	nvl(tab2.PCS,0) transferPcs, nvl(tab2.WT,0) transferWt, tab1.RECD_CARR_HANDR
	recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd ,
	flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, flt_type
	flightType
	from IMP_trm_hd tab1, IMP_trm_DTL tab2
	where tab1.TRM_NO = tab2.TRM_NO and tab1.TRM_NO = #trmNo# and tab1.status =
	'RETRIEVED'
	<isNotEmpty property="uldKey">
		and tab1.ULD_KEY = #uldKey#   
      </isNotEmpty>
	<isNotEmpty property="awbNo">
		<isNotEmpty property="awbDate">
			and tab2.AWB_NO = #awbNo# and tab2.AWB_date = #awbDate# 
      		</isNotEmpty>
	</isNotEmpty>
</select>

 
  <select id="getAccetTransferCargoCTInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate, tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
      tab1.ULD_KEY uldKey, tab2.AWB_NO awbNo, SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp , to_char(tab2.AWB_DATE,'DDMONYY') awbDate, 
      nvl(tab2.PCS,0) transferPcs, nvl(tab2.WT,0) transferWt, tab1.RECD_CARR_HANDR recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd  ,
      flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, flt_type flightType
      from IMP_trm_hd tab1, IMP_trm_DTL tab2  
      where tab1.TRM_NO = tab2.TRM_NO and tab1.HO_NO = #hoNo# and tab1.status = 'RETRIEVED'  
 </select>
 
 <select id="getUldKeyArrayforHO" parameterClass="java.lang.String" resultClass="java.lang.String">
		select STRAGG(STRINGDELIM(T.uldKey, ',')) uldKeyArray from (select distinct uld_key uldKey from awb_inventory where trm_no in ( select distinct trm_no from IMP_TRM_HD where HO_NO =#hoNo# ))T
</select>

 <update id="sqlQueryUpdateHandOverPrintInd" parameterClass="java.lang.String">
 	update ct_ho
 	set prnt_ind = 'Y'
 	where ho_no = #hoNo#
</update>

<update id="UpdateHandOverPrint_ENDORSED" parameterClass="cargo.cms.imprt.bo.TrmBO">
	update CT_HO set PRINT_ENDORSED_BY = #endorseUser#, PRINT_ENDORSED_DATE = sysdate where ho_no = #hoNo#
</update>

<select id="getPrintCountForHO" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 	select count(1) from ct_ho where NVL(prnt_ind,'N') = 'Y' and ho_no = #hoNo#
</select>

<select id="checkSplTransferHOLocn" parameterClass="map" resultClass="java.lang.Integer" >
	   select  count(1) 	
	  	from awb_inventory where  
	  			AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY') and  trm_no = #trmNo#
                                and loc_code not in (select code from mast_code_dtl where code_type = 'HO_LOCN_TRANSFER')
	</select>

	<select id="getAWBInvInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
    select 
      'Y' sel,
      TRM_NO trmNo, 
      AWB_NO awbNo, 
      SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , 
      to_char(AWB_DATE,'DDMONYY') awbDate, 
      loc_code warehouseLocation, 
      lsp_no lspNo, 
      ULD_KEY uldKey, 
      locn_pcs locPieces, 
      TO_CHAR(NVL(locn_wt,0),'999999999.99') locWeight ,
      locn_pcs transferPieces, 
      TO_CHAR(NVL(locn_wt,0),'999999999.99') transferWeight ,
      locn_pcs oldLocPieces,
      TO_CHAR(NVL(locn_wt,0),'999999999.99') oldLocWeight ,
      SEQ_NO seqNo, 
      CARR_CODE carrCode,  
      #rtrvInd# selFlag, 
      flt_key fltKey, 
      to_char(flt_date,'DDMONYY') fltDate,
      flt_Type fltType
    from awb_inventory 
    where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')  
    AND TRM_NO IS NULL and RTN_NO IS NULL AND NOT (flt_key is not null and flt_key = 'E')
    <isNotEmpty property="flightKey">
            and  nvl(flt_key,'*') = nvl(#flightKey#,'*')
     </isNotEmpty>
     <isNotEmpty property="flightDate">
            and  nvl(flt_date,'01DEC99') = nvl(#flightDate#,'01DEC99')
     </isNotEmpty>
    <isNotEmpty property="uldKey">
            and  ULD_KEY = #uldKey#
     </isNotEmpty>
     <isNotEmpty property="lspNo">
            and  lsp_no = #lspNo#
     </isNotEmpty>
  </select>    

  <select id="getTRMAWBInv_CrossHO" parameterClass="map" resultClass="cargo.cms.imprt.bo.TrmBO" >
	   select 	awb_no awbNo, TO_CHAR(awb_date,'DDMONYY') awbDate, carr_code carrCode, loc_code warehouseLocation, 
	  				locn_pcs locationPcs, locn_wt locationWt, uld_key uldKey, lsp_no lspNo,  ppk_ind ppkInd, seq_no seqNo,
				flt_Key flightKey, flt_date flightDate, flt_type flightType
	  	from awb_inventory where  
	  			AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY') and  trm_no = #trmNo#
	</select>
	 
	 <select id="getAWBInv_COUNT_CrossHO" parameterClass="map" resultClass="java.lang.String" >
		select seq_no seqNo
		from awb_inventory where  
		AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and loc_code = #warehouseLocation# and NVL(uld_key,'*') = NVL(#uldKey#,'*') 
		and NVL(flt_Key,'*') = NVL(#flightKey#,'*') and NVL(flt_date,'31AUG2000') = nvl(#flightDate#,'31AUG2000') 
		and  NVL(lsp_no,'*') = NVL(#lspNo#,'*') and trm_no is null
 	</select>
  
  
  <update id="upd_awbInvtory_CrossHO" parameterClass="map">
		UPDATE awb_inventory SET
				locn_pcs = locn_pcs + #locationPcs#,
				locn_wt = locn_wt + #locationWt#,
				lm_user_id = #lmUser#,
				lm_date = sysdate
		WHERE seq_no = #seqNo#
</update>

<insert id="ins_awbInvtory_CrossHO" parameterClass="map">
insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, lsp_no, strg_date, ppk_ind,
				 cr_user_id, cr_date, lm_user_id, lm_date,seq_no,trm_no)
values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,#flightType#,#recevCarrier#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	         #lspNo#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,AWB_INV_SEQ.NEXTVAL,#trmNo# )  
</insert>
  
<insert id="ins_awbInvtory_UnpostCT" parameterClass="map">
insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, lsp_no,uld_key, strg_date, ppk_ind,
				 cr_user_id, cr_date, lm_user_id, lm_date,seq_no)
values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,#flightType#,#recevCarrier#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	         #lspNo#,#uldKey#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,#seqNo# )  
</insert>
  
  <select id="getAWBInvInfoDataCrossTerminal_BeforeInsertUpdate" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
    select seq_no oldSeqNo
    from awb_inventory where  trm_no = #trmNo# and ULD_KEY = nvl(#uldKey#,uld_key) and lsp_no = nvl(#lspNo#,lsp_no) and AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
  </select>   
  
   <update id="upd_trm_awbInvtory_forexist_Record" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			PCS = #transferPieces#,
			WT = #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #oldSeqNo#
	</update>
	
	 <update id="upd_trm_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			PCS = #transferPieces#,
			WT = #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<update id="upd_trm_awbInvtory_rem_pc" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			locn_pcs = locn_pcs- #transferPieces#,
			locn_wt =locn_wt - #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
  
  <delete id="delete_trm_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		 delete from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#
  </delete>
  
  <delete id="delete_trm_Invtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 delete from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#
  </delete>
  
    <update id="UPADTE_ULD_Invetory_Empty_For_Trm" parameterClass="java.lang.String">
		 update uld_inventory set EMPTY_FLG = 'Y',REF_TR_TYPE='CT',REF_TR_EVENT='POCT',TR_TYPE='POCT', HANDLING_MODE = '' where uld_key = #uldKey# 
  </update>
  
   <update id="UPADTE_ULD_Invetory_Empty_For_Trm_AWB" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 update uld_inventory t set EMPTY_FLG = 'Y',REF_TR_TYPE='CT',REF_TR_EVENT='POCT',TR_TYPE='POCT', HANDLING_MODE = ''
					where uld_key in (select uld_key from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#) 
					and not exists (select null from awb_inventory where uld_key = t.uld_key and
					nvl(TRM_NO,'*') != #trmNo#)
  </update>
	
	<select id="getAWBInv_COUNT_CrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="java.lang.String" >
  	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
  </select>  
	
	 <insert id="ins_trm_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, 
		uld_key, lsp_no, strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date,seq_no,trm_no)
	        values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #fltKey#,#fltDate#,decode(#fltKey#,null,null,#fltType#),#carrCode#, #warehouseLocation#, 
	        	NVL(#transferPieces#,0), NVL(#transferWeight#,0), 
	        #uldKey#, #lspNo#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,#newSeqNo#,#trmNo# )  
	</insert>
	
	<select  id="get_trm_awbinv_seq_no" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
	</select>
	
	<update id="upd_trm_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#transferPieces#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#transferWeight#,0),
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<select  id="getTrmAwbInvLocationPcWt" parameterClass="java.lang.String" resultClass="java.lang.String">
    	 SELECT NVL(LOCN_PCS,0)||'/'||NVL(LOCN_WT,0) 
		 FROM AWB_INVENTORY
	     WHERE SEQ_NO = #seqNo#
	</select>
	
	<delete id="deleteTrmAwbInv" parameterClass="java.lang.String">
		DELETE FROM awb_inventory WHERE SEQ_NO = #seqNo#
	</delete>
	
	<update id="updateTrmAwbInv" parameterClass="java.lang.String">
		UPDATE AWB_INVENTORY 
		SET TRM_NO = NULL
		WHERE SEQ_NO = #seqNo#
	</update>
	
	
	<update id="retrive_ind_ctho" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update ct_ho set 
			RTRV_IND = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where HO_NO = #hoNo#
	</update>
	
	<update id="revert_hoNo_From_trmHd" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update IMP_TRM_HD set 
			 RETRV_DATE = null,
			 RETRV_USER = null,
			 HO_NO = null,
			 STATUS = 'ISSUED',
			 REJECT_REASON = #remark#,
			 REJECT_IND = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where trm_NO = #trmNo#
	</update>
	
		<update id="close_ind_ctho" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update ct_ho set 
			CLOSE_YN = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where HO_NO = #hoNo#
	</update>

<!-- ###################### ADDED BY Mayank ON 04-07-2011 FOR Trasnsfer Control Checklist  Starts Here ########################### -->

<select id="fetchIndBoundTsnstCntrlFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
<![CDATA[
select DDT.tr_No ddtTrNo, FLTOPR.FLT_KEY fltKey, 
 decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate ,  NVL(pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A','DD') ,pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A','DD')) eta, FLTOPR.flt_type fltType,
          NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTULD.ULDIF,0) uldIf,  NVL(DDTULD.ULDQT,0) uldQt ,NVL(DDTULD.ULDLD,0) uldLd ,
          NVL(DDTSHP.SHPTT,0) shpTt,  NVL(DDTSHP.SHPIF,0) shpIf,  NVL(DDTSHP.SHPQT,0) shpQt,
           FUN_GET_ALLOTMENTS_EXP(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'), '','ETA_CHANGED_MIN') as etaChengedMin,
            nvl(DDT.msg_yn,'N') ddtInd, nvl(DDT.FInal_VER_IND,'N') finalVerInd,  decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
           DDT.LM_USER_ID lmUserId, to_char(DDT.LM_DATE,'DDMONYY HH24:MI')  lmDateTime , nvl(DDT.NIL_DDT,'N') ddtNilInd     
from FLT_OPR  FLTOPR
join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
left join (select FLT_KEY, FLT_DATE, NVL(SUM(uldTT),'0') ULDTT,  NVL(SUM(uldIF),'0') ULDIF,  NVL(SUM(uldQT),'0') ULDQT,NVL(SUM(uldLd),'0') ULDLD 
          	from
            (select FLT_KEY, FLT_DATE, ULD_KEY,
              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt, 
              case when SUM(DECODE(TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end uldIf, 
              case when SUM(DECODE(TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end uldQt,
              case when SUM(DECODE(TRF_TYPE, 'LD',1,0)) = 0 then 0 else 1 end uldLd    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is not null
                  group by FLT_KEY, FLT_DATE, ULD_KEY
                  ) ULDDDT 
                  where ULDDDT.FLT_DATE = #fltDate#
              group by FLT_KEY, FLT_DATE) DDTULD on FLT.FLT_KEY = DDTULD.FLT_KEY and FLT.SCH_DATE = DDTULD.FLT_DATE 
			left join (select FLT_KEY, FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT,  NVL(SUM(SHPIF),'0') SHPIF,  NVL(SUM(SHPQT),'0') SHPQT 
          	from
            (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,
              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end shpIf, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end shpQt    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is null
                  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) SHPDDT 
                  where SHPDDT.FLT_DATE = #fltDate#
              group by FLT_KEY, FLT_DATE) DDTSHP on FLT.FLT_KEY = DDTSHP.FLT_KEY and FLT.SCH_DATE = DDTSHP.FLT_DATE             
left join (select DDT_MSG.MSG_YN, DDT_MSG.FLT_KEY, DDT_MSG.FLT_DATE, DDT_MSG.DDT_STATUS, DDT_MSG.final_ver_ind, NIL_DDT,
			to_CHAR(DDT_MSG.BASELINE_ETA,'DDMONYY HH24MI') AS  BASELINE_ETA , DDT_MSG.LM_USER_ID , DDT_MSG.LM_DATE  ,  DDT_MSG.tr_no            
            from  DDT_MSG  where FLT_DATE = #fltDate# ) DDT on DDT.FLT_KEY = FLTOPR.FLT_KEY and DDT.FLT_DATE = FLTOPR.sch_DATE  and DDT.DDT_STATUS='P' 
where (exists (select null from V_UNFIN_DDT_DTL where FLT_KEY = FLT.FLT_KEY and FLT_DATE = FLT.SCH_DATE)
    OR exists (select null from EDI_FFM_MSG where FFM_STATUS = 'P' and FLT_KEY = FLT.FLT_KEY and FLT_DATE = FLT.SCH_DATE))
AND FLTOPR.flt_type ='A'
AND FLTOPR.sch_date = #fltDate# and 
 FLTOPR.SCH_TIME between #fromEta# and #toEta#
]]>
<isNotEmpty property="loginCarrier">
<![CDATA[    
   AND (FLTOPR.CARR_CODE = #loginCarrier#
   OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
]]>
</isNotEmpty>
<isEqual property="recWtransitChk" compareValue="Y">
	and (uldTt&gt;0 OR uldIf&gt;0 OR uldQt&gt;0 OR shpTt&gt;0 OR shpIf&gt;0 OR shpQt&gt;0) 
</isEqual>
<isNotEmpty property="srchFltKey" >
	and FLTOPR.flt_Key = #srchFltKey# 
</isNotEmpty>
order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
</select>

<select id="fetchOutBoundTsnstCntrlFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
<![CDATA[
select FLTOPR.FLT_KEY fltkey , 
		decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
		TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate      ,  pkg_common.get_flt_final_ata_eta_sta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D','DD') eta, FLTOPR.flt_type fltType,
		NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTULD.ULDIF,0) uldIf,  NVL(DDTULD.ULDQT,0) uldQt ,NVL(DDTULD.uldLD,0) uldLd ,
        NVL(DDTSHP.SHPTT,0) shpTt,  NVL(DDTSHP.SHPIF,0) shpIf,  NVL(DDTSHP.SHPQT,0) shpQt,
        FUN_GET_ALLOTMENTS(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'),'ETD_CHANGED_MIN') etaChengedMin,
        to_number(NVL(DDTULD.ULDTT,0)) +  to_number(NVL(DDTULD.ULDIF,0)) ttlIfTt
from FLT_OPR FLTOPR

join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.flt_type = FLTOPR.flt_type

left join (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT,  NVL(SUM(SHPIF),'0') SHPIF,  NVL(SUM(SHPQT),'0') SHPQT 
          from
            (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE,
              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end shpIf, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end shpQt    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is null
                  group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE
                  ) SHPDDT group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE) DDTSHP 
      on FLT.FLT_KEY = DDTSHP.SHP_CNTG_FLT_KEY and FLT.SCH_DATE = DDTSHP.SHP_CNTG_FLT_DATE    

left join (select CNTG_FLT_KEY, CNTG_FLT_DATE, NVL(SUM(uldTT),'0') ULDTT,  NVL(SUM(uldIF),'0') ULDIF,  NVL(SUM(uldQT),'0') ULDQT ,  NVL(SUM(uldLd),'0') ULDLD
          	from
            (select CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY,
              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt, 
              case when SUM(DECODE(TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end uldIf, 
              case when SUM(DECODE(TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end uldQt,
              case when SUM(DECODE(TRF_TYPE, 'LD',1,0)) = 0 then 0 else 1 end uldLd    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is not null
                  group by CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY
                  ) ULDDDT 
                  where ULDDDT.CNTG_FLT_DATE = #fltDate#
              group by CNTG_FLT_KEY, CNTG_FLT_DATE) DDTULD 
  on FLT.FLT_KEY = DDTULD.CNTG_FLT_KEY and FLT.SCH_DATE = DDTULD.CNTG_FLT_DATE 
where  exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
AND FLTOPR.FLT_TYPE ='D'
and  FLTOPR.SCH_DATE = #fltDate# and 
FLTOPR.SCH_TIME between #fromEta# and #toEta#
]]>
<isNotEmpty property="loginCarrier">
<![CDATA[    
    AND (FLTOPR.CARR_CODE = #loginCarrier#
    OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
]]>
</isNotEmpty>
<isNotEmpty property="srchFltKey" >
	and FLTOPR.flt_Key = #srchFltKey# 
</isNotEmpty>
order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME

</select>

<select id="fetch_Tarmac_Allotment" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO"  resultClass="java.lang.String">   	
<![CDATA[ 
	select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               || decode(sum(allot.QTY_ZA ), null, '',0,'', ','|| sum(allot.QTY_ZA ) ||'ZA' )
               ||  decode( sum(allot.QTY_ZB ), null, '',0,'', ','|| sum(allot.QTY_ZB ) ||'ZB' )
               ||  decode( sum(allot.QTY_ZC ), null, '',0,'', ','|| sum(allot.QTY_ZC ) ||'ZC' )
               ||  decode( sum(allot.QTY_PGA ), null, '',0,'', ','|| sum(allot.QTY_PGA ) ||'PGA' )
               ||  decode( sum(allot.QTY_H3 ), null, '',0,'', ','|| sum(allot.QTY_H3 ) ||'H3' )
               ||  decode( sum(allot.QTY_BULK ), null, '',0,'', ','|| sum(allot.QTY_BULK ) ||'BULK' )
               ||  decode( sum(allot.QTY_ALF ), null, '',0,'', ','|| sum(allot.QTY_ALF ) ||'ALF' )
               ||  decode( sum(allot.QTY_PLA ), null, '',0,'', ','|| sum(allot.QTY_PLA ) ||'PLA' )
               ||  decode( sum(allot.QTY_Q7D ), null, '',0,'', ','|| sum(allot.QTY_Q7D ) ||'Q7D' )
               ||  decode( sum(allot.QTY_W2 ), null, '',0,'', ','|| sum(allot.QTY_W2 ) ||'W2' )
               ||  decode( sum(allot.QTY_PAG ), null, '',0,'', ','|| sum(allot.QTY_PAG ) ||'PAG' )
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) as ttlTarmacAllot     
               from edi_elp_allot allot ,  edi_elp_port port, edi_elp_msg msg
                where port.doc_line_no= allot.port_doc_line_no  and msg.TR_NO=port.tr_no  and allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Tarmac')           
                and msg.flt_key=#fltKey# and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') 
                and port.port in  (select off_point from flt_opr_seg fltSeg where  fltSeg.flt_key = #fltKey# and fltSeg.sch_date = #fltDate#
                							  and  fltSeg.brd_point='HKG'  and fltSeg.flt_type = 'D'  )
                and msg.tr_no in(
                SELECT b.trNO FROM (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  
                						where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  and 
                elpmsg.VER_NO= (select * from (select max(elpmsg.VER_NO) as versionNo from flt_opr opr 
                                                    LEFT OUTER JOIN edi_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and 
                                                    	to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   
                                                        where opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') 
                                                        and opr.flt_type = 'D' and trf_ind = 'Y'  order by elpmsg.VER_NO))  )a
                WHERE rownum <=1) b WHERE r=1)
                   ]]>
   	</select>
   	

<select id="fetchIndBoundTsnstCntrlAWBList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
	WITH  MAIN_TAB AS (SELECT ffmshp.awb_no awb_no,
    ffmshp.awb_Date awb_Date,
    ffmshp.ORG ORG,
    ffmshp.DEST DEST,
    NVL(ffmshp.MAN_PCS,0) PCS,
    NVL(ffmshp.MAN_WT,0) WT,
    ffmMSG.flt_key flt_key ,
    ffmMSG.flt_Date flt_Date,
    ffmULD.ULD_KEY ULD_KEY,
    ffmMSG.TR_No tr_NO ,
    ffmMSG.BRD_POINT brdPoint
  FROM EDI_FFM_MSG ffmMSG
  LEFT JOIN EDI_FFM_ULD ffmULD
  ON ffmMSG.TR_NO = ffmULD.TR_NO
  LEFT JOIN edi_ffm_shp ffmshp
  ON ffmMSG.TR_NO         = ffmshp.TR_NO
  AND ffmULD.Doc_line_no  = ffmshp.uDoc_line_no
  WHERE ffmMSG.FFM_STATUS = 'P'
  AND ffmshp.dest        != 'HKG' and ffmMSG.flt_key      = #fltKey# AND ffmMSG.flt_Date         = #fltDate#
  UNION
  SELECT resdshp.awb_no awb_no,
    resdshp.awb_Date awb_Date,
    resdshp.ORIG ORG,
    resdshp.DEST DEST,
    COUNT(NVL(resdULD.CONTAINER_NO,'BULK')) PCS,
    SUM(NVL(resdULD.TAG_WT,0)) WT,
    resdMSG.flt_key flt_key ,
    resdMSG.flt_Date flt_Date,
    NVL(resdULD.CONTAINER_NO,'BULK') ULD_KEY,
    '' tr_NO,
    resdMSG.DEPT_PORT brdPoint
  FROM EDI_RESDIT_HD resdMSG
  LEFT JOIN EDI_RESDIT_AWB_DTL resdshp
  ON resdshp.TR_NO = resdMSG.TR_NO
  LEFT JOIN EDI_RESDIT_TAG_DTL resdULD
  ON resdULD.TR_AWB_NO = resdshp.TR_AWB_NO
  WHERE 1              = 1 and resdMSG.flt_key      = #fltKey# AND resdMSG.flt_Date         = #fltDate#
  GROUP BY resdshp.awb_no,
    resdshp.awb_Date,
    resdshp.ORIG,
    resdshp.DEST,
    resdMSG.flt_key,
    resdMSG.flt_Date,
    NVL(resdULD.CONTAINER_NO,'BULK') ,
    resdMSG.DEPT_PORT),
	RESDIT_DATA AS
	  (SELECT COUNT(1) resdCount ,
	    COUNT(NVL(resdULD.CONTAINER_NO,'BULK')) PCS,
	    SUM(NVL(resdULD.TAG_WT,0)) WT,
	    resdMSG.flt_key,
	    resdMSG.flt_Date,
	    NVL(resdULD.CONTAINER_NO,'BULK') CONTAINER_NO
	  FROM EDI_RESDIT_HD resdMSG
	  LEFT JOIN EDI_RESDIT_AWB_DTL resdshp
	  ON resdshp.TR_NO = resdMSG.TR_NO
	  LEFT JOIN EDI_RESDIT_TAG_DTL resdULD
	  ON resdULD.TR_AWB_NO = resdshp.TR_AWB_NO   
	  where resdMSG.flt_key      = #fltKey# AND resdMSG.flt_Date         = #fltDate#
	  GROUP BY resdMSG.flt_key,
	    resdMSG.flt_Date,
	    resdULD.CONTAINER_NO
	  ),
	FFM_DATA AS (SELECT COUNT(1) ffmCount ,
	    NVL(SUM(ffmshp.MAN_PCS),0) PCS,
	    NVL(SUM(ffmshp.MAN_WT),0) WT,
	    ffmMSG.flt_key,
	    ffmMSG.flt_Date,
	    ffmULD.ULD_KEY
	  FROM EDI_FFM_MSG ffmMSG,
	    EDI_FFM_ULD ffmULD ,
	    edi_ffm_shp ffmshp
	  WHERE ffmMSG.FFM_STATUS = 'P' AND ffmMSG.flt_key      = #fltKey# AND ffmMSG.flt_Date         = #fltDate#
	  AND ffmMSG.TR_NO        = ffmULD.TR_NO
	  AND ffmMSG.TR_NO        = ffmshp.TR_NO
	  AND ffmULD.Doc_line_no  = ffmshp.uDoc_line_no
	  GROUP BY ffmMSG.flt_key,
	    ffmMSG.flt_Date,
	    ffmULD.ULD_KEY
	  ),
	DDT_INFO AS (SELECT ddtView.awb_no awb_no,
	    TO_CHAR(ddtView.awb_DATE,'DDMONYY') awb_DATE,
	    ddtView.flt_key flt_key ,
	    TO_CHAR(ddtView.flt_Date,'DDMONYY') flt_Date,
	    ddtView.TR_NO TR_NO,
	    ddtView.sdoc_line_no Sdoc_line_no,
	    ddtView.uDOC_LINE_NO UDOC_LINE_NO,
	    ddtView.DOC_LINE_NO DOC_LINE_NO,
	    ddtView.ULD_KEY ULD_KEY ,
	    ddtView.CNTG_FLT_KEY CNTG_FLT_KEY,
	    TO_CHAR(ddtView.CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE,
	    ddtView.TRF_TYPE TRF_TYPE,
	    ddtView.BRK_BULK BRK_BULK,
	    TO_CHAR(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	    NVL( (TO_CHAR(TO_DATE(TO_CHAR(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')
	    || ' '
	    || TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI'))) * 24 , 0 ) AS etaChangedHrs,
	    ddtView.Acton_code_1 Acton_code_1,
	    ddtView.Acton_code_2 Acton_code_2,
	    ddtView.UNLDG_PT ,
	    ddtView.SHP_UNLDG_PT,
	    ddtView.SHP_TRF_PC ,
	    ddtView.SHP_TRF_WT,
	    ddtView.ULD_BRD_POINT,
	    ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY,
	    TO_CHAR(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,
	    ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,
	    ddtView.SHP_BRK_BULK SHP_BRK_BULK ,
	    ddtView.MANUAL_IND MANUAL_IND,
	    ddtView.SHP_TYPE
	  FROM V_UNFIN_DDT_DTL ddtView
	  JOIN FLT_OPR FLT
	  ON FLT.FLT_KEY          = ddtView.FLT_KEY
	  AND FLT.SCH_DATE        = ddtView.FLT_DATE
	  AND FLT.FLT_type            = 'A' and  FLT.flt_key      = #fltKey# AND FLT.sch_Date         = #fltDate#
	  )
	select nvl(ffm.awb_no,ddt.awb_no) awbNo,
	SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
	TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
	(select decode(count(1),0,'N','Y') from awb where awb_no=ffm.awb_no and awb_date=ffm.awb_date and awb_closed_yn='Y') as awbClosedyn,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
	decode(ffm.tr_No,null,'N','Y') ffmInd,
	(SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date ) carditInd,
  	(select decode(count(1),0,'N','Y') from edi_resdit_hd hd join edi_resdit_awb_dtl dtl on hd.tr_no=dtl.tr_no join edi_resdit_tag_dtl tags on dtl.tr_awb_no=tags.tr_awb_no
    	  where hd.flt_key= ffm.flt_key and hd.flt_date= ffm.flt_date and dtl.AWB_NO = ffm.awb_no AND dtl.awb_date = ffm.awb_Date and nvl(tags.container_no,'BULK')= nvl(ffm.ULD_KEY,'BULK')) resditInd,
	decode(ddt.tr_No,null,'N','Y') ddtInd,
	nvl(ffm.brdPoint,ddt.ULD_BRD_POINT) ldgPt, 
	nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) org, 
	nvl(awb.DEST,ddt.UNLDG_PT) dest, 
	nvl(awb.DEST,ddt.SHP_UNLDG_PT) shpDest, 
	nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) shpldgPt, 
	awb.catalog catalog,
	case when ffm.tr_No is null and ((SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date) = 'Y' ) then nvl(ffm.PCS,0) 
      when (SUBSTR(ddt.awb_no,4,1) = 'M') then NVL(ddt.SHP_TRF_PC,0) else nvl(ffm.PCS,0) end pcs,
	case when ffm.tr_No is null and ((SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date) = 'Y' ) then nvl(ffm.WT,0)  
      when (SUBSTR(ddt.awb_no,4,1) = 'M') then NVL(ddt.SHP_TRF_WT,0) else nvl(ffm.WT,0) end wt, 
	case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then 'Y' else 'N' end disablePcWt,
	NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0) ) awbPcs,NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0) ) awbWt,
	(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = nvl(ffm.awb_no,ddt.awb_no) AND V.FLT_KEY = #fltKey# AND V.FLT_DATE = #fltDate# 
  		AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
				AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,  
	(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )   AS splCode,
	(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
    DECODE(ddt.MANUAL_IND,'Y','Y','') as manUpdate,
	nvl(ffm.flt_key,ddt.flt_key) fltKey , 
	TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
	ddt.TR_NO ddtTrNo, 
	ddt.SDOC_LINE_NO ddtSdocLineNo, 
	ddt.UDOC_LINE_NO ddtUdocLineNo, 
	ddt.DOC_LINE_NO ddtDocLineNo,
	decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr, 
	REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
	ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
	ddt.UNLDG_PT uldUnldgPt,ddt.TRF_TYPE trfType,ddt.BRK_BULK brkBulk,
	decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) oldCntgFltCarr, 
	REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') oldCntgFltNo,
	ddt.CNTG_FLT_KEY oldCntgFltKey, ddt.CNTG_FLT_DATE oldCntgFltDate,  
	ddt.UNLDG_PT oldUldUnldgPt,ddt.TRF_TYPE oldTrfType,ddt.BRK_BULK oldBrkBulk,
	decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) shpCntgFltCarr, 
	REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') shpCntgFltNo,
	ddt.SHP_CNTG_FLT_KEY shpCntgFltKey, ddt.SHP_CNTG_FLT_DATE shpCntgFltDate,
	ddt.SHP_UNLDG_PT shpUnldgPt,ddt.SHP_TRF_TYPE shpTrfType,ddt.SHP_BRK_BULK shpBrkBulk,
	ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldShpCntgFltCarr, 
	REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldShpCntgFltNo,
	ddt.SHP_CNTG_FLT_KEY oldShpCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldShpCntgFltDate,
	ddt.SHP_UNLDG_PT oldShpUnldgPt, ddt.SHP_TRF_TYPE oldShpTrfType,ddt.SHP_BRK_BULK oldShpBrkBulk,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
	ddt.UNLDG_PT unldgPt,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) shpTimeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) shpProposeTrfType,
	(select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
	'' etaChangedHrs, 
	case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
          and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
          else '' end as noBreak, 
	ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
	DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and rownum=1),(select AIRLN_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
	DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
	d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
	DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
	DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt,
	ffmCntTab.ffmCount ffmCount,
	(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
	(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
	nvl(ffmCntTab.PCS,NVL(resdCntTab.PCS,0)) manfPcs,  nvl(ffmCntTab.wt,NVL(resdCntTab.wt,0)) manfWt ,     
    D.HANDLING_MODE oldHandlMode,
    (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND AWB.awb_no = nvl(ffm.awb_no,ddt.awb_no) and AWB.awb_date = nvl(ffm.awb_date,ddt.awb_date) AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                  
from ( select * from MAIN_TAB ) ffm
     
FULL OUTER JOIN ( select * from DDT_INFO)  ddt ON ddt.flt_key    = ffm.flt_key
AND ddt.flt_Date          = ffm.flt_Date
AND NVL(ddt.ULD_KEY, '*') = NVL(DECODE(ffm.ULD_KEY,'BULK','*',ffm.ULD_KEY), '*')
AND NVL(DDT.AWB_NO, '*')  = NVL(FFM.AWB_NO, '*')

LEFT JOIN ( select * from FFM_DATA) ffmCntTab
ON NVL(ffmCntTab.ULD_KEY,'BULK') = NVL(NVL(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
AND ((ffm.flt_key               IS NOT NULL
AND ffmCntTab.flt_key            =ffm.flt_key
AND ffmCntTab.flt_date           =ffm.flt_date)
OR (ffm.flt_key                 IS NULL
AND ffmCntTab.flt_key            =ddt.flt_key
AND ffmCntTab.flt_date           =ddt.flt_date))

left join ( select * from RESDIT_DATA) resdCntTab ON NVL(resdCntTab.CONTAINER_NO,'BULK') = NVL(NVL(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
AND ((ffm.flt_key IS NOT NULL
AND resdCntTab.flt_key =ffm.flt_key
AND resdCntTab.flt_date =ffm.flt_date)
OR (ffm.flt_key IS NULL
AND resdCntTab.flt_key =ddt.flt_key
AND resdCntTab.flt_date =ddt.flt_date))                     

left join awb on 
        (ffm.awb_no is not null and awb.awb_no=ffm.awb_no and awb.awb_date=ffm.awb_date) 
        or (ffm.awb_no is null and awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date)
left join IMP_CAR_SHP shp on 
        (ffm.awb_no is not null and shp.awb_no=ffm.awb_no and shp.awb_date=ffm.awb_date and shp.flt_key=ffm.flt_key and shp.flt_Date=ffm.flt_Date) 
        or (ffm.awb_no is null and shp.awb_no=ddt.awb_no and shp.awb_date=ddt.awb_date and shp.flt_key=ddt.flt_key and shp.flt_Date=ddt.flt_Date)
left join IMP_ULD_LIST D
	     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  
	      and ((ffm.flt_key is not null and d.flt_key=ffm.flt_key and d.flt_date=ffm.flt_date) 
           or (ffm.flt_key is null and d.flt_key=ddt.flt_key and d.flt_date=ddt.flt_date))        
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
   ORDER BY  NVL(ffm.ULD_KEY,ddt.ULD_KEY),nvl(ffm.awb_no,ddt.awb_no) ,nvl(ffm.awb_Date,ddt.awb_Date)
   ]]>
</select>

<!--  and rownum = 1  and ddt.awb_no = #awbNo# and ddt.awb_DATE = #awbDate# 
and decode(ddt.tr_No,null,ddt.tr_No,ffm.tr_No) is not null -->
<select id="fetchIndBoundTsnstCntrlAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
(select decode(count(1),0,'N','Y') from awb where awb_no=ffm.awb_no and awb_date=ffm.awb_date and awb_closed_yn='Y') as awbClosedyn,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) ldgPt, 
nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) org, 
nvl(awb.DEST,ddt.SHP_UNLDG_PT) dest, 
awb.catalog catalog,
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then NVL(ddt.SHP_TRF_PC,0) 
	else nvl(ffm.PCS,0) end pcs,
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then NVL(ddt.SHP_TRF_WT,0)
	else nvl(ffm.WT,0) end wt, 
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then 'Y' else 'N' end disablePcWt,
NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0) ) awbPcs,NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0) ) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
				AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                ) shc,  
					
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                ) splCode,							
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and rownum=1),(select AIRLN_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt,
ffmCntTab.ffmCount ffmCount,
(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.ULD_BRD_POINT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                   and ((ffm.flt_key is not null and ffmCntTab.flt_key=ffm.flt_key and ffmCntTab.flt_date=ffm.flt_date) 
                    or (ffm.flt_key is null and ffmCntTab.flt_key=ddt.flt_key and ffmCntTab.flt_date=ddt.flt_date))    				
  left join awb on 
        (ffm.awb_no is not null and awb.awb_no=ffm.awb_no and awb.awb_date=ffm.awb_date) 
        or (ffm.awb_no is null and awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date)
  left join IMP_CAR_SHP shp on 
        (ffm.awb_no is not null and shp.awb_no=ffm.awb_no and shp.awb_date=ffm.awb_date and shp.flt_key=ffm.flt_key and shp.flt_Date=ffm.flt_Date) 
        or (ffm.awb_no is null and shp.awb_no=ddt.awb_no and shp.awb_date=ddt.awb_date and shp.flt_key=ddt.flt_key and shp.flt_Date=ddt.flt_Date)
 left join IMP_ULD_LIST D
	     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  
	      and ((ffm.flt_key is not null and d.flt_key=ffm.flt_key and d.flt_date=ffm.flt_date) 
           or (ffm.flt_key is null and d.flt_key=ddt.flt_key and d.flt_date=ddt.flt_date)) 
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  and NVL(ffm.awb_No,ddt.awb_No) is not null
   ]]>
   <isNotEmpty property="trfType">
		and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
	</isNotEmpty>
   ORDER BY  nvl(ffm.awb_no,ddt.awb_no) ,nvl(ffm.awb_Date,ddt.awb_Date)
</select>

<select id="fetchLdgPointForTsnstCtrlList" parameterClass="map" resultClass="java.lang.String" >
<![CDATA[ 
	select ldgPt from 
	(select BRD_POINT ldgPt from ddt_msg where flt_key = #fltKey# and flt_date = #fltDate# and ddt_status='P'
	union 
	select BRD_POINT ldgPt from edi_ffm_msg where flt_key = #fltKey# and flt_date = #fltDate# and ddt_status='P') a where rownum = 1
     ]]>
</select>
   	
   	
<select id="checkCatalog_For_TransitControlChecklist"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"  resultClass="java.lang.Integer">
	select count(1) from awb where catalog = 'TM' and  awb_no = #awbNo# and awb_date = #awbDate#
</select>


<select id="getSHCForAWB_TM"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"  resultClass="java.lang.String">
	select decode(awb.spl_code1, null, '', awb.spl_code1 )
               || decode(awb.spl_code2, null, '',','||  awb.spl_code2 )
               || decode(awb.spl_code3, null, '', ','|| awb.spl_code3 )
               || decode(awb.spl_code4, null, '', ','|| awb.spl_code4 )
               || decode(awb.spl_code5, null, '', ','|| awb.spl_code5 )
               || decode(awb.spl_code6, null, '', ','|| awb.spl_code6 )
               || decode(awb.spl_code7, null, '', ','|| awb.spl_code7 )
               || decode(awb.spl_code8, null, '', ','|| awb.spl_code8 )
               || decode(awb.spl_code9, null, '', ','|| awb.spl_code9) 
               as shc from awb where catalog = 'TM' and  awb_no = #awbNo# and awb_date = #awbDate#
</select>


<!--
nvl((select BLDUP_INSTR from EXP_PMAN_TARMAC_AWB where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                and unldg_pt = ddt.SHP_UNLDG_PT),
    (select BLDUP_INSTR from EXP_PMANIFEST_AWB where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                and unldg_pt = ddt.SHP_UNLDG_PT)))
-->

<select id="fetchIndBoundTsnstCntrlAWB_CNTG_FLT_List" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from (
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,'') org, awb.DEST dest, 
awb.catalog catalog,
case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.PCS,0)
	else nvl(ffm.PCS,0) end pcs,
case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.WT,0)
	else nvl(ffm.WT,0) end wt, 
case when ffm.tr_No is null and awb.catalog = 'TM' then 'Y' else 'N' end disablePcWt,
NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt, 
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
  '' as proposeTrfType, '' etaChangedHrs, 
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
                 (select bulkPcs ||'/'||  bulkWt from 
               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                      from EXP_PMANIFEST_AWB 
                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                    union
                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                      from EXP_PMAN_TARMAC_AWB 
                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                ) buPcWt,
PKG_COMMON.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as etd, 
                        PKG_COMMON.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as std,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,nvl(ffm.flt_key,ddt.flt_key),nvl(ffm.flt_date,ddt.flt_date),'TIME_DIFF' ) timeDiifferance,
ddt.qt_bu qtBu,
(select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
		where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
		and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr, 
	ffmCntTab.ffmCount ffmCount,
(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
               nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.qt_BU
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
left join (select  COUNT(1) ffmCount ,  nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                  and ffmCntTab.flt_key = NVL(ffm.flt_key,ddt.flt_key) and ffmCntTab.flt_date = NVL(ffm.flt_Date,ddt.flt_Date)    				
 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
  		and nvl(ffm.awb_no,ddt.awb_no) = #awbNo# and nvl(ffm.awb_Date,ddt.awb_Date) = #awbDate#

   ]]>
   ) a where 1=1 
    	<isNotEmpty property="expFltKey">
       	 	<isNotEmpty property="expFltDate">
       	  		and cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
    	  	</isNotEmpty>
     	 </isNotEmpty>
   ORDER BY  timeDiifferance,  awbNo , awbDate
</select>

<select id="fetchOutBoundTsnstCntrlAWBList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKeyShow,
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TR_TYPE' ) proposeTrfType,
 decode(ddt.CNTG_FLT_KEY,null,'Y') awbNoRecInd,
  (select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = ddt.awb_no AND V.FLT_KEY = ddt.flt_key AND V.FLT_DATE = ddt.flt_Date
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK') 
                ) splCode,			   
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) cntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') cntgFltDate,  
   nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) oldCntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') oldCntgFltDate,  
   decode(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY),null,'',PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY))) cntgFltCarr, 
   REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') cntgFltNo,
   decode(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY),null,'',PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY))) oldCntgFltCarr, 
   REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') oldCntgFltNo,
   decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) trfType, decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) oldTrfType,
   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
   ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt, ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS 
    where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and flt_Type ='A')  finalizedInd,TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta,ffmCntTab.ffmCount ffmCount,
(select nvl(Wt,0)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date and rownum = 1 )   contrCode  ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt, 
 (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND AWB.awb_no = ddt.awb_no and AWB.awb_date = ddt.awb_date AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                              
from
V_UNFIN_DDT_DTL ddt
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                  and ffmCntTab.flt_key = ddt.flt_key and ffmCntTab.flt_date = ddt.flt_Date    
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date

where ddt.SHP_CNTG_FLT_KEY = #fltKey# and ddt.SHP_CNTG_FLT_DATE = #fltDate# 
ORDER BY  ddt.awb_no
   ]]>
</select>


<select id="fetchOutBoundTsnstCntrlAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKeyShow,
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
FUN_GET_ALLOTMENTS_EXP(ddt.flt_key,  to_char(ddt.flt_Date,'DDMONYY'), '','ETA_CHANGED_MIN') as etdChangedHrs,
FUN_GET_ALLOTMENTS_EXP(ddt.flt_key,  to_char(ddt.flt_Date,'DDMONYY'), '', 'TIME_DIFFERENCE') as timeDiifferance,
 '' as proposeTrfType,   ddt.TRF_TYPE trfType, 
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
   ddt.SHP_TRF_TYPE trfType, ddt.SHP_TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
   NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt, ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and FLT_TYPE ='D')  finalizedInd,TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta,
(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = ddt.awb_no AND V.FLT_KEY = ddt.flt_key AND V.FLT_DATE = ddt.flt_Date
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK') 
                ) splCode, ffmCntTab.ffmCount ffmCount,
(select nvl(Wt,0)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date 
               and ver_no = (select max(ver_no)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                                            and flt_key = ddt.flt_key and flt_date = ddt.flt_Date ) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date 
               and ver_no = (select max(ver_no)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                                            and flt_key = ddt.flt_key and flt_date = ddt.flt_Date ) and rownum = 1 )   contrCode  ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt,
                
                (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE 
                AND AWB.awb_no = ddt.awb_no and AWB.awb_date = ddt.awb_Date AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                  
from
V_UNFIN_DDT_DTL ddt
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                  and ffmCntTab.flt_key = ddt.flt_key and ffmCntTab.flt_date = ddt.flt_Date   
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date   

where ddt.SHP_CNTG_FLT_KEY = #cntgFltKey# and ddt.SHP_CNTG_FLT_DATE = #cntgFltDate# 
and ddt.FLT_KEY = #fltKey# and ddt.FLT_DATE = #fltDate# 
and nvl(ddt.ULD_KEY,'BULK') = #uldKey#  
ORDER BY  ddt.ULD_KEY
   ]]>
</select>



	<select id="unldgPt_cntg_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT count(1)
		FROM   FLT_OPR T1, FLT_OPR_LEG T2 
		WHERE T1.FLT_KEY = T2.FLT_KEY AND  T1.SCH_DATE = T2.SCH_DATE  
		AND T1.FLT_TYPE = T2.FLT_TYPE AND  T1.FLT_TYPE = 'D' 
		AND T1.FLT_KEY=#fltKey#  AND  T1.SCH_DATE =TO_DATE(#flightDate#,'DDMONYY')
		and T2.OFF_POINT = #unldgPt#
	</select>
	
	
	<select id="cntg_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE 
		<isEmpty property="fltKey">
			CARR_CODE = #carrierCode# AND FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="fltKey">
			FLT_KEY = #fltKey# 
		</isNotEmpty>
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE='D'
   	</select>

	<select id="check_DDT_flt_opr_events_Count" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	<![CDATA[
	   select count(1) from flt_opr_events where FLT_KEY = #fltKey# and SCH_DATE = #fltDate# and WHSE_COMPL_DATE is null 
	]]>
	</select>
	<select id="getFinalizeIndicator" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="java.lang.String" >
	   select decode(DDT_FINALISE_DATE,null,'N','Y') as finalizedInd from flt_opr_events where FLT_KEY = #fltKey# and SCH_DATE = #fltDate# and flt_type = 'A' 
	</select>
	
	<update id="update_DDT_SHP_flt_opr_events" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update flt_opr_events set 		    
			  DDT_FINALISE_DATE = sysdate,
			  DDT_FINALISE_USER_ID = #lmUserId#,
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate,
		      TR_TYPE = #trtype# 
		      where FLT_KEY = #fltKey# and sch_date = #fltDate# and flt_type = 'A'
	</update>
	
	<update id="update_DDT_MSG_FINALISE" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# and ddt_status='P' 
	</update>
	
	<update id="update_DDT_MSG_VERSION_ADD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		
			  FINALIZED_VERSION_NO = FINALIZED_VERSION_NO + 1,  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# and ddt_status='P' 
	</update>
	
	<select id="check_DDT_ULD_INVENTORY_Count" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	<![CDATA[
	   select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and CFM_STATUS != 'CHECKOUT'
	]]>
	</select>


	<update id="removeNBKForTTIFONULDINV" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update ULD_INVENTORY set 
		      HANDLING_MODE = '',		      
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey#  AND HANDLING_MODE = 'NBK' AND TRANSIT_TYPE IN ('TT','IF')
	</update>
	
	<update id="removeNBKForTTIFONIMPULDLIST" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update IMP_ULD_LIST set 
		      HANDLING_MODE = '',		      
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey#  AND  FLT_KEY = #fltKey# and FLT_date = to_date(#fltDate#,'DDMONYY') AND HANDLING_MODE = 'NBK' 
	</update>

	<update id="update_DDT_ULD_INVENTORY" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update ULD_INVENTORY set 
		      CFM_STATUS = 'CHECKOUT',
		      X_RAY_RES=null,X_RAY_REQ=null,			 
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey# 
	</update>
	
	<select id="check_ULD_exist_for_DDT" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from uld_inventory where ULD_KEY = #uldKey#
]]>
</select>

<select id="check_ULD_exist_for_DDT_Locn_Is_Null" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from uld_inventory where ULD_KEY = #uldKey# and loc_code is null
]]>
</select>

<insert id="insert_ULD_for_DDT_QT" parameterClass="map" >
        INSERT INTO ULD_INVENTORY
        (ULD_KEY,ULD_TYPE, ULD_NO,ULD_CARR,
                OWNER_ID, STRG_DATE,LM_USER_ID, LM_DATE,TRANSIT_FLG,TRANSIT_TYPE,IMP_FLT_KEY,IMP_FLT_DATE)
       VALUES(#uldKey#, #uldType#,#uldNo#,  #uldCarr#,
                   #ownerId#, sysdate,#userId#, sysdate,'Y',#trfType#, #fltKey#, #fltDate#)
</insert> 

<insert id="insert_ULD_for_DDT" parameterClass="map" >
	    INSERT INTO ULD_INVENTORY
	    (ULD_KEY,ULD_TYPE, ULD_NO,ULD_CARR, CARR_CODE,FLT_NO, FLT_TYPE, FLT_DATE, FLT_KEY, 
	    		OWNER_ID, STRG_DATE,LM_USER_ID, LM_DATE,TRANSIT_FLG,TRANSIT_TYPE,loc_code,owned_inv,CFM_STATUS,Agent_inv,IMP_FLT_KEY,IMP_FLT_DATE)
	   VALUES(#uldKey#, #uldType#,#uldNo#,  #uldCarr#,#carrCode#, #fltNo#,#fltType#, to_date(#cntgFltDate#,'DDMONYY') ,#cntgFltKey#, 
			   	#ownerId#, sysdate,#userId#, sysdate,'Y',#trfType#,null,'N','CHECKOUT','N',#fltKey#, #fltDate#) 
</insert>
	
	<!-- After Insert into EXP_FLT_ULD -->
<update id="UPDATE_After_Insert_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = 'Y' ,
  	
  	<isEqual property="trfType" compareValue="TT">
       	 HANDLING_MODE = '',
    </isEqual>
    
    <isEqual property="trfType" compareValue="IF">
       	 HANDLING_MODE = '',
    </isEqual>
       	
	TRANSIT_TYPE = #trfType#,
	flt_key = #cntgFltKey#,
    flt_date = #cntgFltDate#,
    flt_type  ='E',
    loc_code = null,
    owned_inv = 'N',
    CFM_STATUS = 'CHECKOUT',
    Agent_inv = 'N',
    IMP_FLT_KEY = #fltKey#,
    IMP_FLT_DATE = #fltDate#,
    EIC_FLG = 'N',
	EIC_TYPE = null,
	EIC_UNLDG_PT = null,
	BASE_PAL_FLG = 'N',
	BASE_PLT = null,
	TR_TYPE = 'DUMMY'
    where ULD_KEY = #uldKey#
</update>

 <update id="UPDATE_uld_inventory_If_Locn_Is_Not_Null" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = 'Y' ,
	TRANSIT_TYPE = #trfType#,
	flt_key = #cntgFltKey#,
    flt_date = #cntgFltDate#,
    flt_type  ='E',    
    Agent_inv = 'N',
    IMP_FLT_KEY = #fltKey#,
    IMP_FLT_DATE = #fltDate#
    where ULD_KEY = #uldKey#
</update>

<!-- After delete into EXP_FLT_ULD -->	
<update id="UPDATE_EXP_FLT_ULD_REMOVED" parameterClass="java.util.HashMap" >
	update uld_inventory 
	  set flt_key = null,
	    flt_date = null
	    where ULD_KEY = #uldKey#
	   	and flt_key = #oldCntgFltKey#
   		and flt_date = #oldCntgFltDate#
</update>

<!--  Changed for QR -->
	<select id="getTransferCntrlProShcList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		select off_point unldgPt, leg_ord legOrd, prohibit_shc1 prShc1, prohibit_shc2 prShc2, prohibit_shc3 prShc3
		from flt_opr_leg 
		where flt_type = 'D' and flt_key=#cntgFltKey# and sch_date = #cntgFltDate#
		order by leg_ord
	</select>

<select id="get_DDT_MSG_FLT_TR_NO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and DDT_STATUS = 'P'
]]>
</select>

<select id="get_DDT_MSG_FLT_TR_DOC_LINE_NO" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
<![CDATA[
    select ddtMSG.TR_NO TR_NO,to_char(ddtULD.DOC_LINE_NO) DOC_LINE_NO from DDT_MSG ddtMSG, DDT_ULD ddtULD where ddtMSG.FLT_KEY = #fltKey# and ddtMSG.FLT_DATE = #fltDate# and ddtMSG.DDT_STATUS = 'P' AND ddtMSG.tr_no=ddtuld.tr_no and NVL(ddtULD.uld_key,'*')=NVL(#uldKey#,'*')
]]>
</select>

<select id="get_DDT_MSG_FLT_TR_NO_FOR_S" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate#  and brd_point=#brdPt# and ddt_status='P' 
]]>
</select>

<select id="get_DDT_MSG_lm_date" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="java.lang.String" >
<![CDATA[
    select to_char(lm_date,'DDMONYY HH24MISS')  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and DDT_STATUS = 'P' and rownum=1 
]]>
</select>

<select id="get_FFM_MSG_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from EDI_FFM_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate#and FFM_STATUS = 'P'
]]>
</select>

<select id="get_DDT_MSG_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_MSG where TR_NO = #ddtTrNo# 
]]>
</select>

<insert id="insert_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into DDT_MSG (TR_NO,FLT_KEY,FLT_DATE,MSG_VER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BASELINE_ETA,DDT_STATUS,FINAL_VER_IND,TR_TYPE,BRD_POINT,SI_TYPE) 
values (#ddtTrNo#,#fltKey#,#fltDate#,#msgVer#,#lmUserId#,sysdate,#lmUserId#,sysdate, to_date( #baselineEta# , 'DDMONYY HH24:MI' ) ,nvl(#ddtStatus#,'P'),nvl(#finalVerInd#,'N'),#trtype#,#boardPnt#,'S')
</insert>

<update id="update_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_MSG set 
      MSG_VER = nvl(#msgVer#,MSG_VER) , 
      BASELINE_ETA = to_date( #baselineEta# , 'DDMONYY HH24:MI' ), 
      DDT_STATUS = nvl(#ddtStatus#,DDT_STATUS),
      FINAL_VER_IND =  nvl(#finalVerInd#,FINAL_VER_IND),
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate ,
      TR_TYPE = #trtype#
      where TR_NO = #ddtTrNo#       
</update>

<update id="update_DDT_MSG_LM_DATE" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# 
		      and to_char(lm_date,'DDMONYY HH24MISS')  = #lastModifiedDateTime# and ddt_status='P'
	</update>

<delete id="delete_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_MSG where TR_NO = #ddtTrNo# and SI_TYPE!='I'
</delete>  

<select id="get_DDT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_ULD where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="check_DDT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_ULD where TR_NO = #ddtTrNo# 
]]>
</select>

<delete id="delete_DDT_ULD_ALL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_ULD where TR_NO = #ddtTrNo# 
</delete>  

<select id="get_DDT_ULD_TR_NO_DOCLINENO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
       select nvl(maxUDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxUDoclineNo from DDT_ULD where TR_NO = #ddtTrNo#) 
]]>
</select>

<select id="get_DDT_ULD_FLT_TR_NO_DOCLINENO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO  from DDT_ULD where TR_NO = #ddtTrNo# and nvl(BRD_POINT,nvl(#brdPt#,'XX')) = nvl(#brdPt#,'XX') and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="check_DDT_ULD_LDG_PT" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from DDT_ULD where TR_NO = #ddtTrNo# and BRD_POINT = #brdPt# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<insert id="insert_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into DDT_ULD (TR_NO,DOC_LINE_NO,ULD_KEY,CNTG_FLT_KEY,CNTG_FLT_DATE,UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE,BRD_POINT,FINALIZE) 
values (#ddtTrNo#,#ddtUdocLineNo#,#uldKey#,#cntgFltKey#,#cntgFltDate#,#uldUnldgPt#,#trfType#,#brkBulk#,#lmUserId#,sysdate,#lmUserId#,sysdate,#trtype#,#brdPt#,#finalizedInd#)
</insert>

<update id="update_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_ULD set 
      CNTG_FLT_KEY = #cntgFltKey# , 
      CNTG_FLT_DATE = #cntgFltDate#, 
      UNLDG_PT = #uldUnldgPt#,
      TRF_TYPE = #trfType#,
      BRK_BULK =  #brkBulk#,
      FINALIZE =  #finalizedInd#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate ,
      TR_TYPE = #trtype#
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>

<select id="getManualDeleteCountDDTOLDVersion_TCC" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select count(*) from ddt_shp_del where  NVL(uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX') AND  AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	and flt_key = #FLT_KEY# AND flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</select>


<delete id="delete_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_ULD where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</delete>  

<select id="get_DDT_SHP_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="check_DDT_SHP_Count_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="get_DDT_ULD_SHP_trNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO from DDT_ULD where nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="get_DDT_ULD_UDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select DOC_LINE_NO from DDT_ULD where TR_NO = #ddtTrNo# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="getULDTowOrderNo" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
<![CDATA[                 
    select hd.to_no param from TOW_ORDER_IN hd
    join TOW_ORDER_IN_DTL dtl on hd.to_no = dtl.to_no 
    where hd.flt_key = #fltKey# and hd.flt_date = #fltDate# and dtl.ULD_KEY =  #uldKey# and ACK_DATE is null
    and (nvl(dtl.HO_AREA,'*') != nvl(#hoArea#,'*') OR nvl(dtl.trns_grp,'*') != nvl(#transGrp#,'*')
          OR nvl(dtl.TRF_TYPE,'*') != nvl(#trfType#,'*') OR nvl(dtl.CNTG_FLT_KEY,'*') != nvl(#cntgFltKey#,'*')
            OR nvl( dtl.CNTG_FLT_DATE,'31AUG2000') = NVL(#cntgFltDate#,'31AUG2000')) 
      ]]>
</select>

<select id="getAWBTowOrderNo" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
<![CDATA[                 
    select hd.to_no param from TOW_ORDER_IN hd
    join TOW_ORDER_IN_DTL dtl on hd.to_no = dtl.to_no 
    where hd.flt_key = #fltKey# and hd.flt_date = #fltDate# 
    and dtl.AWB_NO =  #awbNo#  and ACK_DATE is null
    and (nvl(dtl.HO_AREA,'*') != nvl(#hoArea#,'*') OR nvl(dtl.trns_grp,'*') != nvl(#transGrp#,'*')
          OR nvl(dtl.TRF_TYPE,'*') != nvl(#trfType#,'*') OR nvl(dtl.CNTG_FLT_KEY,'*') != nvl(#cntgFltKey#,'*')
             OR nvl( dtl.CNTG_FLT_DATE,'31AUG2000') = NVL(#cntgFltDate#,'31AUG2000')) and rownum = 1
]]>
</select>

<update id="updateULDTowOrderDtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
    update TOW_ORDER_IN_DTL set 
    HO_AREA = #hoArea# , 
    trns_grp = #transGrp#,
    TRF_TYPE = #trfType# , 
    CNTG_FLT_KEY = #cntgFltKey# , 
    CNTG_FLT_DATE = #cntgFltDate#
    where to_no = #toNo# and ULD_KEY = #uldKey#
</update>

<update id="updateAWBTowOrderDtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
    update TOW_ORDER_IN_DTL set 
    HO_AREA = #hoArea# , 
    trns_grp = #transGrp#,
    TRF_TYPE = #trfType# , 
    CNTG_FLT_KEY = #cntgFltKey# , 
    CNTG_FLT_DATE = #cntgFltDate#
    where to_no = #toNo# and AWB_NO = #awbNo# 
</update>

<select id="TCC_fetchTowOrderDetails" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
        select to_no as toNo, ver_no as verNo, FLT_KEY as flightKey, to_char(flt_date,'DDMONYY') as arrDate from tow_order_in where to_no = #toNo# 
</select>

<select id="TCC_getShcForEmbargo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
        SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	      	AND FLT_KEY = #fltKey# AND FLT_DATE = #fltDate#
	      	and nvl(ULD_KEY,'BULK') = nvl(#uldKey#,'BULK') 
</select>

<update id="TCC_updateTowOrderVersion" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" >
    update tow_order_in set 
    ver_no = #verNo# ,
    LM_USER_ID =  #userID#, 
	LM_DATE  = SYSDATE
    where to_no = #toNo# 
</update>

<select id="get_DDT_SHP_Max_SDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select nvl(maxSDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxSDoclineNo from DDT_SHP where TR_NO = #ddtTrNo#) 
]]>
</select>

<select id="get_DDT_SHP_SDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo# and awb_no = #awbNo# and AWB_DATE = #awbDate#
]]>
</select>

  <insert id="insert_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into DDT_SHP (TR_NO,DOC_LINE_NO,UDOC_LINE_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,MANUAL_IND) 
		values (#ddtTrNo#,#ddtSdocLineNo#,#ddtUdocLineNo#,#awbNo#,#awbDate#,#lmUserId#,sysdate,#lmUserId#,sysdate,'Y')
  </insert>

<update id="update_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_SHP set      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<delete id="delete_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</delete>  

<delete id="delete_DDT_SHP_ALL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# 
</delete>  

<select id="get_DDT_SHP_TRF_DTL_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
   select count(1) from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
]]>
</select>

<select id="check_DDT_SHP_TRF_DTL_Count_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
   select count(1) from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo#
]]>
</select>

<select id="get_DDT_SHP_TRF_DTL_maxDocLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select nvl(maxDoclineNo,0) from (select nvl(max(DOC_LINE_NO),'0') maxDoclineNo  from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo#)
]]>
</select>

<select id="get_DDT_SHP_TRF_DTL_docLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
   select DOC_LINE_NO from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo# 
											  	and CNTG_FLT_KEY = #cntgFltKey# and CNTG_FLT_DATE = #cntgFltDate#
											  	and TRF_PC = #trfPcs# and TRF_WT = #trfWt# and TRF_TYPE = #trfType#
]]>
</select>

<select id="get_Dummy_H_Container_value" parameterClass="java.lang.String" resultClass="java.lang.String" >
<![CDATA[
	select rule_value from cmsrules where rule_code = 'Dummy_H_Container'
]]>
</select>
<select id="etd_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  (select B.flt_key flt_key , B.sch_date flt_date,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #cntgFltKey# and FLT_DATE = to_date(#cntgFltDate#,'DDMONYY')  and rownum=1 
</select>

<select id="eta_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  
	(select B.flt_key flt_key , B.sch_date flt_date,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') ,
		 to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B where B.flt_type = 'A')T
	where FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')  and rownum=1 
</select>

<select id="getHKGLegBoardingPnt" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select BRD_POINT from FLT_OPR_LEG where TR_NO IN (select TR_NO from FLT_OPR where FLT_KEY = #fltKey# and SCH_DATE = to_date(#fltDate#,'DDMONYY') AND FLT_TYPE = 'A') AND OFF_POINT = 'HKG' AND ROWNUM = 1 
</select>


<insert id="insert_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into DDT_SHP_TRF_DTL 
	(TR_NO,
	DOC_LINE_NO,
	SDOC_LINE_NO,
	CNTG_FLT_KEY,
	CNTG_FLT_DATE,
	UNLDG_PT,
	TRF_TYPE,
	BRK_BULK,
	TRF_PC,
	TRF_WT,
	QT_BU,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	BASELINE_ETD,
	ACTON_CODE_2,
	ACTON_CODE_1,
	ACTUAL_PCS,
	ACTUAL_WT
	) 
	values (#ddtTrNo#,
	#ddtDocLineNo#,
	#ddtSdocLineNo#,
	#cntgFltKey#,
	#cntgFltDate#,
	#shpUnldgPt#,
	#trfType#,
	#brkBulk#,
	#trfPcs#,
	#trfWt#,
	#qtBu#,
	#lmUserId#,
	sysdate,
	#lmUserId#,
	sysdate,
	to_date(#baselineEtd#,'DDMONYY HH24:MI'),
	#actionOne#,
	#actionTwo#,
	#trfPcs#,
	#trfWt#
	)
</insert>

<delete id="delete_DDT_AWB_INFO" parameterClass="java.util.HashMap" >
 	DELETE FROM ddt_shp_del where  NVL(uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX') AND  AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	and flt_key = #FLT_KEY# AND flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</delete>


<insert id="insert_DDT_SHP_TRF_DEL_DTL" parameterClass="java.util.HashMap" >
	Insert into ddt_shp_del 
	(TR_NO,ULD_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#TR_NO#,#ULD_KEY#,#AWB_NO#,to_date(#AWB_DATE#,'DDMONYY'),#FLT_KEY#,to_date(#FLT_DATE#,'DDMONYY'),#LM_USER#,SYSDATE,#LM_USER#,SYSDATE)
</insert>

<update id="update_DDT_SHP_MANUAL_IND" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP set MANUAL_IND = NVL(#manualIndAWB#,MANUAL_IND) where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<update id="updateManualHandeledInd" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	update flt_opr_events set MANUAL_HANDLED_TCC = 'Y' , LM_USER_ID = 'SYSUSER', LM_DATE = SYSDATE where flt_key = #fltKey# and sch_date = #fltDate# and FLT_TYPE = 'A'
</update>

<update id="update_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP_TRF_DTL set 
      CNTG_FLT_KEY = #cntgFltKey# , 
      CNTG_FLT_DATE = #cntgFltDate#, 
      UNLDG_PT = #unldgPt#, 
      TRF_TYPE = #trfType#,
      TRF_PC = #trfPcs#,
      TRF_WT = #trfWt#,
      ACTUAL_PCS = #trfPcs#,
      ACTUAL_WT = #trfWt#,
      BRK_BULK =  #brkBulk#,
      QT_BU =  #qtBu#,
      BASELINE_ETD = TO_DATE(#baselineEtd#,'DDMONYY HH24:MI'),
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>

<delete id="delete_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</delete>  


<select id="get_EXP_PMAN_TARMAC_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_EXP_PMAN_TARMAC_AWB_Offload_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where bulk_pcs > 0 AND AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_EXP_PMAN_AWB_unassign_pcs" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select unassigned_bulk_pcs from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from awb where awb_no = #awbNo# and awb_Date = #awbDate#
]]>
</select>

<insert id="insert_AWB" parameterClass="java.util.HashMap" >
Insert into awb (AWB_NO,AWB_DATE,AWB_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE)
values (#awbNo#,#awbDate#, #awbType#, #lmUserId#,sysdate,#lmUserId#,sysdate,#trType#)
</insert>

<select id="get_EXP_CAR_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from exp_car where awb_no = #awbNo# and awb_Date = #awbDate#
]]>
</select>
<select id="get_EXP_CAR_PI_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from awb where awb_no = #awbNo# and awb_Date = #awbDate# and nvl(car_yn,'N')='Y'
]]>
</select>
<insert id="insert_EXP_CAR" parameterClass="java.util.HashMap" >
	Insert into EXP_CAR(AWB_NO,AWB_DATE, ACCEPT_MODE, AWB_PRFX,	CARR_CODE, CATALOG,	CONTENT, HANDLER_CODE,ORIGIN, DEST,	CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE)
		values (#awbNo#,#awbDate#, #ACCEPT_MODE#, #AWB_PRFX#,#CARR_CODE#,#CATALOG#, #CONTENT#, #HANDLER_CODE#	,#org# ,#dest# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMAN_TARMAC_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,GROUP_NO,TR_TYPE,ENDORSED_DATE,ENDORSED_BY) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,'0' ,'0',#trfPcs#, #trfWt#, '0' ,'0',#lmUserId#,sysdate,#lmUserId#,sysdate,#groupNo#,#trtype#,DECODE(#endorseUser#,'','',SYSDATE),#endorseUser#)
</insert>

<update id="update_EXP_PMAN_TARMAC_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set       
      PPK_PCS = PPK_PCS + #trfPcs#,
      PPK_WT = PPK_WT + #trfWt#,      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype#,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set        
      PPK_PCS = PPK_PCS - #oldTrfPcs#,
      PPK_WT = PPK_WT - #oldTrfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
       and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
</update>      

<insert id="insert_EXP_PMAN_TARMAC_AWB_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMAN_TARMAC_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,GROUP_NO,TR_TYPE,ENDORSED_DATE,ENDORSED_BY) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,#trfPcs#, #trfWt#, '0' ,'0',#trfPcs# ,#trfWt#,#lmUserId#,sysdate,#lmUserId#,sysdate,#groupNo#,#trtype#,DECODE(#endorseUser#,'','',SYSDATE),#endorseUser#)
</insert>

<update id="update_EXP_PMAN_TARMAC_AWB_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set       
      BULK_PCS = BULK_PCS + #trfPcs#,
      BULK_WT = BULK_WT + #trfWt#,
      ASSIGNED_BULK_PCS = ASSIGNED_BULK_PCS + #trfPcs#,
	ASSIGNED_BULK_WT = ASSIGNED_BULK_WT + #trfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_AWB_OLD_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set        
      BULK_PCS = BULK_PCS - #oldTrfPcs#,
      BULK_WT = BULK_WT - #oldTrfWt#,
      ASSIGNED_BULK_PCS = ASSIGNED_BULK_PCS - #oldTrfPcs#,
	ASSIGNED_BULK_WT = ASSIGNED_BULK_WT - #oldTrfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
       and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
</update>      

<select id="get_EXP_PMAN_TARMAC_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD  where ULD_BT_NO = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
]]>
</select>

<select id="get_EXP_FLT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_FLT_ULD  where ULD_KEY = #uldKey# and flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# and flt_type = #fltType#
]]>
</select>

<select id="get_EXP_PMAN_TARMAC_ULD_Count_update" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD  where ULD_BT_NO = #uldKey# and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<insert id="insert_EXP_PMAN_TARMAC_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_PMAN_TARMAC_ULD
		(FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,BLDUP_INSTR,MAN_RMK,TARE_WT,GROSS_WT,CONTR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #cntgFltKey# , #cntgFltDate# , #unldgPt#, #uldKey#, null ,
		null ,  '0' , '0' , null ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_PMAN_TARMAC_ULD
		(FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,BLDUP_INSTR,MAN_RMK,TARE_WT,GROSS_WT,CONTR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #cntgFltKey# , #cntgFltDate# , #unldgPt#, #hcontainer#, null
		, null , '0' , '0' , null
		,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="update_EXP_PMAN_TARMAC_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update EXP_PMAN_TARMAC_ULD set 
	TARE_WT = NVL(#tareWt#,0),
	NET_WT = NVL(NET_WT,0)+NVL(#trfWt#,0),
	GROSS_WT = NVL(NET_WT,0)+NVL(#tareWt#,0)+NVL(#trfWt#,0),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate 
	where ULD_BT_NO = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update EXP_PMAN_TARMAC_ULD set	
	TARE_WT = NVL(#tareWt#,0),
	NET_WT = NVL(NET_WT,0)+NVL(#trfWt#,0),
	GROSS_WT = NVL(NET_WT,0)+NVL(#tareWt#,0)+NVL(#trfWt#,0),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate 
	where ULD_BT_NO = #hcontainer# and  FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
</update>   

<select id="getWeightDetails" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.util.HashMap" >
    select to_char(MAN_WT) MAN_WT ,#cntgFltKey# FLT_KEY,#cntgFltDate# FLT_DATE,#uldKey#  ULD_KEY  
    FROM EXP_FLT_ULD where flt_key=#cntgFltKey# and flt_date=#cntgFltDate# and uld_key = #uldKey#
</select>

<select id="getCPMDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
select to_char(Wt) GROSS_WEIGHT,#fltKey# FLT_KEY,#fltDate# FLT_DATE,#uldKey#  ULD_KEY, CNTR CONTR_CODE  
FROM edi_cpm_DTL 
where flt_key=#fltKey# and flt_date=#fltDate# and uld_key = #uldKey# 
		and ver_no = (select max(ver_no)  from edi_cpm_DTL where   ULD_KEY = #uldKey#  and flt_key = #fltKey# and flt_date = #fltDate#)
		and rownum = 1
</select>

<select id="getCPMWeightDetails" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.util.HashMap" >
    select to_char(Wt) GROSS_WEIGHT,#fltKey# FLT_KEY,#fltDate# FLT_DATE,#uldKey#  ULD_KEY, CNTR CONTR_CODE  
FROM edi_cpm_DTL where flt_key=#fltKey# and flt_date=#fltDate# and uld_key = #uldKey# and rownum = 1
</select>

<update id="update_EXP_FLT_ULD_SET_WT" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set
     	TARE_WT = NVL(#TARE_WT#,0),
     	GROSS_WT = NVL(#GROSS_WEIGHT#,0),
     	CONTR_CODE = NVL(#CONTR_CODE#,CONTR_CODE),
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate ,
      	UNLDG_PT = #UNLDG_PT#
      	where ULD_KEY = #ULD_KEY# and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#
]]>
		<isNotEmpty property="OLD_UNLDG_PT">
		and UNLDG_PT = #OLD_UNLDG_PT#
		</isNotEmpty>
</update> 

<update id="sqlUpdateTareWtExpTarmacUld" parameterClass="java.util.HashMap" >
	update EXP_PMAN_TARMAC_ULD set 
	TARE_WT = NVL(#TARE_WT#,0),
	GROSS_WT = NVL(#GROSS_WEIGHT#, 0),
	CONTR_CODE = NVL(#CONTR_CODE#,CONTR_CODE),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate ,
	UNLDG_PT = #UNLDG_PT#
	where ULD_BT_NO = #ULD_KEY# and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 
	<isNotEmpty property="OLD_UNLDG_PT">
		and UNLDG_PT = #OLD_UNLDG_PT#
	</isNotEmpty>
</update>  

<update id="sqlUpdateTareWtUldInventoryTarmac" parameterClass="java.util.HashMap" >
<![CDATA[
	update ULD_INVENTORY set 
	TRANSIT_FLG = decode(#TRF_TYPE#,null,'N','Y'),
	TRANSIT_TYPE = #TRF_TYPE#,
	empty_flg = decode(#TRF_TYPE#,'TT','N','IF','N',empty_flg),
	TARE_WEIGHT = NVL(#TARE_WT#,0),
	GROSS_WEIGHT = NVL(#GROSS_WEIGHT#,0),
	CONTR_CODE = #CONTR_CODE#,
	FIRST_WT =  #GROSS_WEIGHT#,
	SECOND_WT =  NVL(#SECOND_WEIGHT#,0),
	THIRD_WT = NULL,
	REF_WT=NULL,
	FINAL_WEIGHT = #FINAL_WT_IND#,
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate,
	TR_TYPE = 'DUMMY',
	X_RAY_RES =null,
	X_RAY_REQ =null,
	ppk_ind = 'N',
	mix_PPK_ind = 'N',
	MAN_WT_IND  = 'N',
	man_wt_ind2 = 'N',
	man_wt_ind3 = 'N',
	BASE_PLT=NULL,		
	EIC_FLG='N', 		
	EIC_TYPE=NULL  	
	where  ULD_KEY = #ULD_KEY# 
	]]> 
</update> 
<update id="sqlRemoveBasePltAsc_TCCL" parameterClass="java.util.HashMap" >		
		UPDATE ULD_INVENTORY SET 		
		BASE_PLT=NULL,		
		EIC_FLG='N', 		
		EIC_TYPE=NULL
		WHERE BASE_PLT = #ULD_KEY# 	
</update> 

<update id="UPDATE_uld_inventory_set_trfType_TT_IF" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = decode(#trfType#,null,'N','Y'),
	TRANSIT_TYPE = #trfType#,
	empty_flg = decode(#trfType#,'TT','N','IF','N',empty_flg)
    where ULD_KEY = #uldKey#
</update>

<update id="UPDATE_uld_inventory_set_trfType" parameterClass="java.util.HashMap" >
	update uld_inventory D
                set
                flt_key = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then IMP_FLT_KEY else (case when #trfType# is not null then flt_key else null end) end),
                flt_date = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then IMP_FLT_DATE ELSE (case when #trfType# is not null then flt_date else NULL end) end),
                empty_flg = decode(#trfType#,'QT','N',empty_flg),
                flt_type = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then 'I' else (case when #trfType# is not null then FLT_TYPE else null end) end),
                TRANSIT_FLG = decode(#trfType#,null,'N','Y'),
                TRANSIT_TYPE = #trfType#,
                GROSS_WEIGHT = 0,
                CONTR_CODE = null,
                FIRST_WT = null,
                SECOND_WT =  null,
                FINAL_WEIGHT = 'N',
                READY_WH = 'N',
                TR_TYPE = 'TCFIN',
                BASE_PLT=NULL,
                EIC_FLG='N',
                EIC_TYPE=NULL
    where D.ULD_KEY = #uldKey#
</update>


<select id="get_EXP_PMAN_TARMAC_ULD_AWB_Count_For_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where ULD_BT_NO = #uldKey#  
      and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUldUnldgPt#
]]>
</select>

<insert id="insert_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
	Insert into EXP_FLT_ULD (FLT_KEY,FLT_DATE,ULD_KEY,FLT_TYPE,UNLDG_PT,SOURCE,bb_ind,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values ( #cntgFltKey# , #cntgFltDate# , #uldKey# ,'E', #unldgPt#, 'DDT' ,#brkBulk#, #lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<select id="get_EXP_PMAN_TARMAC_ULD_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#  
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<insert id="insert_EXP_PMAN_TARMAC_ULD_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TARMAC_ULD_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey# , #cntgFltDate# , #unldgPt#, #uldKey#,#awbNo#,#awbDate#,  #trfPcs# , #trfWt# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_ULD_AWB_HAWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TAR_ULD_AWB_HAWB (TR_NO,HAWB_NO,PC,WT,FLT_KEY,FLT_DATE,ULD_BT_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (EXP_PMAN_TAR_ULD_AWB_HAWB_SEQ.nextval,#tagNo#,#tagPcs#,#tagWt#,#cntgFltKey#,#cntgFltDate#,#uldKey#,#awbNo#,#awbDate#,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="updatePmanPcWtToAWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update AWB set
			PMAN_BULK_PCS = 0,
	        PMAN_BULK_WT = 0,
			PMAN_PCS= 0,
			PMAN_WT= 0, 
			LM_USER_ID = #lmUserId#, LM_DATE = sysdate where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update> 

<update id="update_AWB_HOUSE_FLAG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		update AWB set HOUSE_FLG = 'Y',LM_USER_ID = #lmUserId#, LM_DATE = sysdate where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update> 

<insert id="insert_EXP_PMAN_TARMAC_HCONTAINER_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TARMAC_ULD_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey# , #cntgFltDate# , #unldgPt#, #hcontainer#,#awbNo#,#awbDate#,  #trfPcs# , #trfWt# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="update_EXP_PMAN_TARMAC_HCONTAINER_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS + #trfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT + #trfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #hcontainer# 
       			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
]]>
</update>   


<update id="update_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set 
		bb_ind = nvl(#brkBulk#,bb_ind),
     	MAN_PCS = NVL(MAN_PCS,0) + NVL(#trfPcs#,0),
     	MAN_WT = NVL(MAN_WT,0) + NVL(#trfWt#,0),
     	NET_WT = NVL(MAN_WT,0) + NVL(#trfWt#,0),
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where ULD_KEY = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
]]>
</update>  

<update id="update_EXP_FLT_ULD_OLD" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set 
     	MAN_PCS = NVL(MAN_PCS,0) - NVL(#trfPcs#,0),
     	MAN_WT = NVL(MAN_WT,0) - NVL(#trfWt#,0),
     	NET_WT = NVL(MAN_WT,0) - NVL(#trfWt#,0),     	
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where ULD_KEY = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
]]>
</update> 

  
<update id="update_EXP_PMAN_TARMAC_HCONTAINER_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS - #oldTrfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT - #oldTrfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #hcontainer# 
       			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
]]>
</update> 

<update id="update_EXP_PMAN_TARMAC_ULD_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS + #trfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT + #trfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey# 
       			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
]]>
</update>   
   
<update id="update_EXP_PMAN_TARMAC_ULD_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS - #oldTrfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT - #oldTrfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey# 
       			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
]]>
</update>   
      
<select id="get_EXP_PMAN_TARMAC_ULD_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#  
     		 and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and ASSIGNED_PCS = 0
]]>
</select>

<delete id="delete_EXP_PMAN_TARMAC_ULD_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_ULD_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#
					and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and ASSIGNED_PCS = 0
</delete>  


<delete id="delete_EXP_PMAN_TARMAC_ULD_AWB_HAWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TAR_ULD_AWB_HAWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#
					and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate#
</delete> 

	
<update id="UPDATEEXPPMANTARMACULDFOR_OLD" parameterClass="java.util.HashMap">
update  EXP_PMAN_TARMAC_ULD t set lm_user_id = #userID# where ULD_BT_NO = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
		and UNLDG_PT = #oldUnldgPt#
		and  not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key 
							and flt_date = t.flt_date and uld_bt_no = t.uld_bt_no  )
</update>

<delete id="delete_EXP_PMAN_TARMAC_ULD_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_ULD t where ULD_BT_NO = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
		and UNLDG_PT = #oldUnldgPt#
		and  not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key 
							and flt_date = t.flt_date and uld_bt_no = t.uld_bt_no  )
</delete>   

<delete id="delete_EXP_FLT_ULD_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_FLT_ULD t where ULD_KEY = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
			and UNLDG_PT = #oldUnldgPt# 
			and	Source = 'DDT' and not exists (select null from exp_pman_tarmac_uld where flt_key = t.flt_key and flt_date = t.flt_date and uld_bt_no = t.uld_key  )
</delete>   

<select id="get_EXP_PMAN_TARMAC_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and BULK_PCS = 0 and PPK_PCS = 0
]]>
</select>

<delete id="delete_EXP_PMAN_TARMAC_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_AWB t where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
   		and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and BULK_PCS = 0 and PPK_PCS = 0
   		and not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key and flt_date = t.flt_date and awb_no = t.awb_no and UNLDG_PT=t.UNLDG_PT)
</delete>  

<delete id="delete_EXP_PMAN_TARMAC_AWB_HAWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TAR_ULD_AWB_HAWB t where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
   		and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate#
   		and not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key and flt_date = t.flt_date and awb_no = t.awb_no and awb_date = t.AWB_DATE)
</delete> 

<select id="get_EXP_PMANIFEST_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt#  and bulk_pcs = 0
]]>	
</select>

<delete id="delete_EXP_PMANIFEST_AWB_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and bulk_pcs = 0
</delete> 

<select id="get_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and pcs = 0 and rcl_pcs = 0 and pman_pcs = 0
]]>	
</select> 

<delete id="delete_AWB_OLD" parameterClass="java.util.HashMap" >
<![CDATA[
    delete from AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and pcs = 0 and rcl_pcs = 0 and pman_pcs = 0
]]>	
</delete> 

<select id="get_EXP_PMAN_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#   
    			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_COUNT_EXP_PMAN_AWB_UNASSINNED_PC" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	select count(1) from exp_pmanifest_awb
	    where AWB_NO = #awbNo# and AWB_DATE = #awbDate#   
	      and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
	<isEqual property="trtypeEvt" compareValue="DELETE" >
		and #oldTrfPcs# > unassigned_bulk_pcs
	</isEqual>
	<isEqual property="trtypeEvt" compareValue="UPDATE" >
	    and #oldTrfPcs#-#trfPcs# > unassigned_bulk_pcs
	</isEqual>
</select>

<insert id="insert_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMANIFEST_AWB 
(FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,FLT_TYPE,SHP_TYPE,UNASSIGNED_BULK_PCS,UNASSIGNED_BULK_WT,PMAN_PCS,PMAN_WT,MIX_PCS,MIX_WT,DOC_ACCPT_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,#trfPcs#,#trfWt#, '0' ,'0', '0', '0','E','TRM',#unAsgnbulk_Pc#,#unAsgnbulk_Wt#,#pmanPcs#,#pmanWt#,'0','0','N',#lmUserId#,sysdate,#lmUserId#,sysdate,#trtype#)
</insert>

<update id="update_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
	update EXP_PMANIFEST_AWB set 
			BULK_PCS =  BULK_PCS + #trfPcs#,
			BULK_WT =  BULK_WT + #trfWt#,
			UNASSIGNED_BULK_PCS = UNASSIGNED_BULK_PCS  + #trfPcs#,
			UNASSIGNED_BULK_WT = UNASSIGNED_BULK_WT + #trfWt#,
			PMAN_PCS = PMAN_PCS + #trfPcs#,
			PMAN_WT	= PMAN_WT + #trfWt#,
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate , TR_TYPE = #trtype#
			where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #cntgFltKey# 
	      		and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
 ]]>     
</update>   

<update id="update_EXP_PMAN_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
	update EXP_PMANIFEST_AWB set 
	       BULK_PCS =  BULK_PCS - #oldTrfPcs#,
	       BULK_WT =  BULK_WT - #oldTrfWt#,
	       UNASSIGNED_BULK_PCS =  UNASSIGNED_BULK_PCS - #oldTrfPcs#,
			UNASSIGNED_BULK_WT = UNASSIGNED_BULK_WT - #oldTrfWt#,
			PMAN_PCS =  PMAN_PCS - #oldTrfPcs#,
			PMAN_WT	= PMAN_WT - #oldTrfWt#,
	      LM_USER_ID = #lmUserId#,
	      LM_DATE = sysdate , TR_TYPE = #trtype#
	      where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
	      			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
 ]]>     
</update>    
    
<!--  Changed for QR 
<delete id="delete_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#       
</delete>   -->

<!--  Changed for QR
<delete id="delete_EXP_PMAN_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#       
</delete>   -->

<select id="get_FLT_OPR_EVENTS_DLS_MANF_IND" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
<![CDATA[ 
    select DLS_IND , FINAL_MANF_IND from FLT_OPR_EVENTS   where flt_key = #fltKey# and sch_date = #fltDate# and flt_type = 'D' 
]]>
</select>
<!--  to be remove added after atul disscussion  imp ramp check dtl for import flight -->
<select id="get_ULD_INVENTORY_CFM_STATUS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[ 
    select count(1) from imp_ramp_chk_dtl where uld_key = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
    			and CHKIN_YN = 'Y' and  cfm_status = 'CONFIRMED'
]]>
</select>
<!--  to be remove added after atul disscussion for import flight -->
<select id="get_ULD_INVENTORY_BREAKDOWN_START" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	
 
	select count(1) from imp_ramp_chk_dtl where uld_key=#uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
				and (BRKDN_START_DATE is not null or BRKDN_COMPL_DATE is not null)
</select>

<select id="get_ULD_BREAKDOWN_CNT" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	 
	select count(1) from imp_awb_strg_dtl where CHKIN_ULD_KEY = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
</select>

	<insert id="insert_AWB_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">		 
		INSERT INTO AWB (
			AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
			RTN_PCS,RTN_WT,CC_CODE,ORIG,DEST,PCS,WT,
			RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
			PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,OFFLOAD_PPK_WT,AWB_RMK,CATALOG,SPL_CODE1,CONTENT)
		VALUES(
		 #awbNo#,#awbDate#,'T','P',#fltCarr#,'Y','N','N','N','N','N',0,0,0,0,NULL,#ldgPt#,#unldgPt#,NVL(#trfPcs#,0),NVL(#trfWt#,0),
		 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,
		 #lmUserId#,SYSDATE,#lmUserId#,SYSDATE,0,0,0,0,NULL,'TM','SPX','UNK')
	</insert> 
	
	<update id="update_AWB_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">		
		update AWB set AWB_TYPE = 'T' , PPK_TYPE = 'P', CARR_CODE = #fltCarr#, ORIG = #ldgPt#, DEST = #unldgPt#,
				PCS = PCS + nvl(#trfPcs#,0) , WT = WT + #trfWt#, 
				CATALOG = 'TM', LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
	</update> 

	<insert id="insert_ImpCarAwb_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_DEST,AWB_ORIGIN,AWB_PCS,AWB_WT,			
				LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,
				BUP_PCS,BUP_WT,CATALOG,SPL_CODE1,CONTENT			
				) 
			VALUES(#awbNo#,#awbDate#,#awbPfx#,#unldgPt#,#ldgPt#, 
				nvl(#trfPcs#,0),nvl(#trfWt#,0),
				#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,'P',
				nvl(#trfPcs#,0),nvl(#trfWt#,0),'TM','SPX','UNK')  
		]]>
	</insert>

	<update id="update_ImpCarAwb_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			update IMP_CAR_AWB set 
				AWB_DEST = #ldgPt#, AWB_ORIGIN = #unldgPt#, 
				AWB_PCS = AWB_PCS + nvl(#trfPcs#,0), AWB_WT = AWB_WT + nvl(#trfWt#,0), 
				LM_USER_ID = #lmUserId#, LM_DATE = sysdate
				PPK_TYPE = 'P', BUP_PCS = nvl(#trfPcs#,0) ,BUP_WT = nvl(#trfWt#,0) ,CATALOG	= 'TM'		
		]]>
	</update>

	<select id="get_ImpCarAwb_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
	<![CDATA[
	    select count(1) from IMP_CAR_AWB where awb_no = #awbNo# and awb_Date = #awbDate#
	]]>
	</select>
	
	<select id="get_ImpCarShp_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
	<![CDATA[
	    select count(1) from IMP_CAR_SHP where awb_no = #awbNo# and awb_Date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
	]]>
	</select>

	<insert id="insert_ImpCarShp_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, 
			MANIFEST_PCS, MANIFEST_WT,BULK_PCS ,BULK_WT,	LDG_POINT ,CNTG_FLT_CARR,CNTG_FLT_NO,CNTG_FLT_DATE,
				CNTG_FLT_DEST,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,CAR_CREATED)
			VALUES( 'I',#awbNo# ,#awbDate#,#awbPfx#, #fltCarr#,#fltDate#,#fltKey#,
			nvl(#trfPcs#,0),nvl(#trfWt#,0) ,nvl(#trfPcs#,0), nvl(#trfWt#,0), 
			#ldgPt#,SUBSTR(#cntgFltKey#, 1, 2),SUBSTR(#cntgFltKey#, 3, 5),
			#cntgFltDate#,#unldgPt#,
			#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,'P','Y')		
		]]>
	 </insert>
	 
	 <update id="update_ImpCarShp_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			update IMP_CAR_SHP 
				set CARR_CODE = #fltCarr#, 
				MANIFEST_PCS = MANIFEST_PCS + nvl(#trfPcs#,0), MANIFEST_WT = MANIFEST_WT + nvl(#trfWt#,0), BUP_PCS = BUP_PCS + nvl(#trfPcs#,0) , BUP_WT = BUP_WT + nvl(#trfWt#,0),	
				LDG_POINT = #ldgPt#, PPK_TYPE = 'P' , CAR_CREATED = 'Y', LM_USER_ID = #lmUserId# , LM_DATE = sysdate
			where awb_no = #awbNo# and awb_Date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
		]]>
 	</update>
	
	<insert id="insert_ExpCar_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_CAR(AWB_NO,AWB_DATE, ACCEPT_MODE, AWB_PRFX,	CARR_CODE, CATALOG,	CONTENT, HANDLER_CODE,ORIGIN, DEST,	
		PCS, WT,
		CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE,SPL_CODE1)
			values (#awbNo#,#awbDate#, 'TRN', #awbPfx#,NVL(#cntgFltCarr#,#fltCarr#),'TM', 'UNK', 'CPCT' ,#ldgPt#,#unldgPt#,
			 nvl(#trfPcs#,0) , nvl(#trfWt#,0),
			#lmUserId#,sysdate,#lmUserId#,sysdate,'SPX')
	</insert>
	
	<update id="update_ExpCar_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		update EXP_CAR set CATALOG = 'TM', ORIGIN  = #ldgPt#, DEST  = #unldgPt#, PCS = PCS + nvl(#trfPcs#,0) , WT = WT + nvl(#trfWt#,0), 	
						  	LM_USER_ID = #lmUserId#, LM_DATE = sysdate
		 where awb_no = #awbNo# and awb_Date = #awbDate#
	</update>
	

<!-- ###################### ADDED BY Mayank ON 04-07-2011 FOR Trasnsfer Control Checklist  Ends Here ########################### -->
<!-- ###################### ADDED BY Mayank ON 01-08-2011 FOR Transit ULDs ShipmentsList Starts Here ########################### -->
<select id="fetchTrnstULDIndBoundTransitList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, 
pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'A','DD') eta, 
NVL(flt.EST_DATE,flt.sch_date),
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'ALL_ULD') inbdUld,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_ULD') qtUld,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_CHK_IN') qtChkIn,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_BD') qtBd,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'BULK_CHK_IN_QT_AREA') qtBulkChkInQtArea,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_SHP_IMP') qtShpImp, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'EST_BD_BU_IMP') estBdBuImp, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'LST_BD_BU_IMP') lstBdBuImp, 
(SELECT WH_AREA FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode,
 decode(FLTEVENTS.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLTEVENTS.flt_type ='A'
join (select FLT_KEY , FLT_DATE from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P' 
		<isNotEmpty property="fltKey" >
		and FLT_KEY = #fltKey#
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and  FLT_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
		  and SHP_CNTG_FLT_KEY = #cntgFltKey#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
			<isNotEmpty property="cntgFltDate" >	 
			  and  SHP_CNTG_FLT_DATE = #cntgFltDate#
			</isNotEmpty>
		</isNotEmpty>		 	
      union
      select   ffmMSG.flt_key flt_key , ffmMSG.FLT_DATE FLT_DATE
      from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
      where ffmMSG.FFM_STATUS = 'P' and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
      and FFMSHP.DEST != 'HKG'        
		<isNotEmpty property="fltKey" >
		and FFMMSG.FLT_KEY = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and  FFMMSG.FLT_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
		 and ffmULD.CNTG_FLT_Carr1||ffmULD.CNTG_FLT_No1 = #cntgFltKey#
		</isNotEmpty>		 
		<isNotEmpty property="cntgFltKey" >
			<isNotEmpty property="cntgFltDate" >	 
			 and  ffmULD.CNTG_FLT_DATE1 = #cntgFltDate#
			</isNotEmpty>
		</isNotEmpty>       
       ) FFMDDT on FFMDDT.FLT_KEY = flt.FLT_KEY and FFMDDT.FLT_DATE = flt.SCH_DATE        
where flt.flt_type ='A'
<isNotEmpty property="fltKey" >
and flt.FLT_KEY = #fltKey#  
</isNotEmpty>
<isNotEmpty property="fltDate" >	 
and flt.SCH_DATE = #fltDate#
</isNotEmpty>
<isNotEmpty property="cgoAcftType" >	 
and flt.CGO_ACFT_TYPE = #cgoAcftType# 
</isNotEmpty>
<isNotEmpty property="fltModule" >	 
and flt.flt_module1 = #fltModule# 
</isNotEmpty>
<isNotEmpty property="fromEta" >
<isNotEmpty property="toEta" >	 
and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
</isNotEmpty>
</isNotEmpty>
<isEqual property="qtBu" compareValue="Y" >	 
  	and exists (select null from V_UNFIN_DDT_DTL where DDT_STATUS = 'P' and FLT_KEY = flt.FLT_KEY and  FLT_DATE = flt.SCH_DATE  and QT_BU = 'Y')
</isEqual>	
<isEmpty property="cntgFltCarr" >
	<isEmpty property="fltCarr" >
		 <isNotEmpty property="loginCarrier">
				AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))              
		 </isNotEmpty>		 
	</isEmpty>		 
</isEmpty>
 ORDER BY 4,3  
</select>

<select id="fetchIndBoundTransitList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from (
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
NVL(NVL(FFM.ULD_KEY,DDT.ULD_KEY),'BULK') ||'-'|| NVL(FFM.AWB_NO,DDT.AWB_NO)  uldKeyAwbNo,
ULDFFM.PCS ttlUldPcs,
ULDFFM.WT ttlUldWt,
case when NVL(FFM.ULD_KEY,DDT.ULD_KEY) is not null then  (select LOC_CODE from ULD_INVENTORY where ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY))
             else null end as locn,
(select WH_RMK from IMP_ULD_LIST where FLT_KEY = NVL(FFM.FLT_KEY,DDT.FLT_KEY)  and FLT_DATE = NVL(FFM.FLT_DATE,DDT.FLT_DATE) 
              and ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY) ) as uldWhRmk,   
(select AIRL_RMK from IMP_ULD_LIST where FLT_KEY = NVL(FFM.FLT_KEY,DDT.FLT_KEY)  and FLT_DATE = NVL(FFM.FLT_DATE,DDT.FLT_DATE) 
              and ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY)) as uldAirlRmk,     
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )  shc,
decode(ffm.tr_No,null,'N','Y') ffmInd, DECODE(DDT.TR_NO,null,'N','Y') ddtInd,
NVL(AWB.ORIG,'') org, AWB.DEST dest, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, NVL(FFM.PCS,0) PCS,NVL(FFM.WT,0) WT,ffm.shmpt_code shpmCode,
(SELECT SUM(RECD_PCS)||'/'|| SUM(RECD_WT) FROM  IMP_CAR_SHP CAR
        WHERE  CAR.AWB_NO = DDT.AWB_NO AND CAR.AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
         and car.flt_key = ffm.flt_key and  car.flt_Date =  ffm.flt_Date ) as bdPcWt, 

(SELECT SUM(DAM_PCS)||'/'|| SUM(DAM_WT) FROM  IMP_CAR_SHP car
        WHERE  CAR.AWB_NO = DDT.AWB_NO AND CAR.AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and car.flt_key = ffm.flt_key and  car.flt_Date =  ffm.flt_Date ) AS damPcWt,      
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
  DECODE(ddt.MANUAL_IND,'Y','Y','') as manUpdate,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
  ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
  decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr,
  REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) oldCntgFltCarr, 
  REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') oldCntgFltNo,
 (select decode(FLTOPR.EST_TIME ,null,SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),3,4),SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),3,4)) 
   as etd from FLT_OPR FLTOPR WHERE FLTOPR.FLT_KEY = ddt.CNTG_FLT_KEY and FLTOPR.SCH_DATE = ddt.CNTG_FLT_DATE  and FLTOPR.flt_type ='D')as etd,
   FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
   FUN_GET_FLT_TDIFF_TRFYPE_HH_MI(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferanceHhMi,
  ddt.CNTG_FLT_KEY oldCntgFltKey, 
ddt.CNTG_FLT_DATE oldCntgFltDate,  
ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
ddt.UNLDG_PT  uldUnldgPt, ddt.UNLDG_PT  oldUldUnldgPt, 
ddt.SHP_UNLDG_PT shpUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
       case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else null end as noBreak, 
              DDT.ACTON_CODE_1 actionOne, DDT.ACTON_CODE_2 actionTwo , 'Y' splitChkNotReqd,
               ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
               
             (select bulkPcs ||'/'||  bulkWt from 
               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                      from EXP_PMANIFEST_AWB 
                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                    union
                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                      from EXP_PMAN_TARMAC_AWB 
                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                ) BUPCWT,
                ddt.qt_bu qtBu,
        (select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
		where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
		and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
case when (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) is null
then (select CONST_CODE from CST_RECV WHERE AWB_NO =  ffm.awb_no and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO= ffm.awb_no) AND rownum=1)
else (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no =  ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) end as ccode
from

(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO ,shmpt_code shmpt_code
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P'  
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
]]> 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
                	ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,ddtView.qt_BU,
                  	ddtView.SHP_TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT , ddtView.MANUAL_IND MANUAL_IND
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A' 
              		where 
              		(uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'QT'))
              		 and ddtView.SHP_CNTG_FLT_KEY = nvl(#expFltKey#,ddtView.SHP_CNTG_FLT_KEY) and nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000') = NVL(#expFltDate#,nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000'))) ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
 left join AWB on AWB.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB.AWB_DATE = NVL(FFM.AWB_DATE,DDT.AWB_DATE)
 left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = DDT.CNTG_FLT_KEY  and JO.FLT_DATE = DDT.CNTG_FLT_DATE
              and JO.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO)  and JO.AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
 left join (select sum(NVL(ffmshp.MAN_PCS,0)) PCS,sum(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY
 		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    		where ffmMSG.FFM_STATUS = 'P' 
    		and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY)  uldFfm 
    		on ffm.FLT_KEY = uldFfm.FLT_KEY and ffm.FLT_DATE = uldFfm.FLT_DATE and ffm.ULD_KEY = uldFFm.ULD_KEY             
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
    and exists (select null from V_UNFIN_DDT_DTL where SHP_TRF_TYPE = 'QT' and flt_key = ffm.flt_key and flt_date = ffm.flt_date and nvl(ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') 
                and (uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'QT' and awb_no = ffm.awb_no)))
      ) a       where 1 = 1 
       <isNotEmpty property="bulkIndYN">
	       <isEqual property="bulkIndYN" compareValue="N">
	       		and uldKey &lt;&gt; 'BULK'
	       			<isNotEmpty property="expFltKey">
					 	<isNotEmpty property="expFltDate">
					  			and  cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
						</isNotEmpty>
					</isNotEmpty>
	       	</isEqual>
	       <isEqual property="bulkIndYN" compareValue="Y">
	       		and uldKey = 'BULK'
	       	</isEqual>
       	</isNotEmpty>
   order by  to_number(nvl(timeDiifferanceHhMi,0)) , uldKey
</select>

<!--  and rownum = 1  and ddt.awb_no = #awbNo# and ddt.awb_DATE = #awbDate# 
and decode(ddt.tr_No,null,ddt.tr_No,ffm.tr_No) is not null -->
<select id="fetchIndBoundULDAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from ( 
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,'') org, awb.DEST dest, nvl(ffm.PCS,0) pcs,nvl(ffm.WT,0) wt, ffm.shmpt_code shpmCode, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
  case when (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) is null
then (select CONST_CODE from CST_RECV WHERE AWB_NO =  ffm.awb_no and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO= ffm.awb_no) AND rownum=1)
else (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no =  ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) end as ccode,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )  shc,			
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt     
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, shmpt_code shmpt_code, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
 left join IMP_CAR_SHP shp on shp.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and shp.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and shp.flt_key = NVL(ffm.flt_key,ddt.flt_key) and shp.flt_Date = NVL(ffm.flt_Date,ddt.flt_Date)
 left join IMP_ULD_LIST D
     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  and d.flt_key = NVL(ffm.flt_key,ddt.flt_key) and d.flt_date = NVL(ffm.flt_Date,ddt.flt_Date) 
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
   ]]>
   <isNotEmpty property="trfType">
		and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
	</isNotEmpty>
   ) a ORDER BY  timeDiifferance, awbNo , awbDate
</select>

<select id="fetchIndBoundTransitFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select 
   ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate  
from
(select  
FFMSHP.AWB_NO AWB_NO, FFMSHP.AWB_DATE AWB_DATE, FFMSHP.ORG ORG, FFMSHP.DEST DEST, NVL(FFMSHP.MAN_PCS,0) PCS,
NVL(FFMSHP.MAN_WT,0) WT, FFMMSG.FLT_KEY FLT_KEY , FFMMSG.FLT_DATE FLT_DATE, FFMULD.ULD_KEY ULD_KEY, FFMMSG.TR_NO TR_NO,

ffmULD.CNTG_FLT_CARR1 ||ffmULD.CNTG_FLT_NO1 CNTG_FLT_KEY,ffmULD.CNTG_FLT_DATE1 CNTG_FLT_DATE
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where FFMMSG.FFM_STATUS = 'P' and FFMSHP.DEST != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on DDT.FLT_KEY = FFM.FLT_KEY and  DDT.FLT_DATE =  FFM.FLT_DATE and nvl(DDT.ULD_KEY, '*') =  nvl(FFM.ULD_KEY, '*') and DDT.AWB_NO = FFM.AWB_NO
 where 
   ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
 		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
   		 
  ]]>
  	<isNotEmpty property="expFltKey">
	 	<isNotEmpty property="expFltDate">
	  			and  ddt.CNTG_FLT_KEY = #expFltKey# and ddt.CNTG_FLT_DATE = #expFltDate#
		</isNotEmpty>
	</isNotEmpty>
 		
 		group by ddt.CNTG_FLT_KEY , ddt.CNTG_FLT_DATE  
</select>


<select id="fetchIndBoundTransitBulkList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select distinct FLT_KEY, FLT_DATE, ULD_KEY uldKey, LOC_CODE locn
		from IMP_RAMP_CHK_DTL r
		join mast_wh_loc l on l.code = r.loc_code
		join mast_wh_group g on l.wh_group = g.wh_group and g.wh_type = 'QT'
		join mast_uld_type t on t.code = r.uld_type and (t.h_cont_ind = 'Y' or t.bt_ind = 'Y')
where r.flt_key = #fltKey# and r.flt_Date = #fltDate#  and NVL(r.chkin_yn,'N')='Y'
 ]]>
</select>


<select id="fetchIndBoundTransitAwbInvtryList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
	select A.LOC_CODE locn, 
	A.LSP_NO lspNo, 
	A.ULD_KEY uldKey,
	A.LOCN_PCS locnPcs, 
	A.LOCN_WT locnWt, 
	A.WH_DAM_IND whDamInd , 
	case when A.LSP_NO is not null then (select L.TARGET from LSP_INVENTORY L where L.LSP_NO = A.LSP_NO)  
	else case when A.ULD_KEY is not null then (select U.TARGET from ULD_INVENTORY U where U.ULD_KEY = A.ULD_KEY)
	else '' end end  as  target
	from awb_inventory A where awb_no = #awbNo# and awb_date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
 ]]>
</select>

<select id="getTimeAllotList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
	<![CDATA[	
		select           
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') ||' - '||           
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') showTimeLabel,                        
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') fullDateTime, 
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') startDateTime,    
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') endDateTime,    
		    to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY') showDate,           
			substr(to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI'),9) startTime,     
            substr(to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI'),9) endTime    
		from dual
	]]>
</select>   

<select id="getQTAreaWrkstnsList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
	<![CDATA[		
		select code wrkstn, code_desc wrkstnDesc from MAST_code_dtl where code_type = 'QT_AREA'	
	]]>
	
	
</select>

<select id="getQtAllot_List" parameterClass="map" resultClass="java.lang.String">
	select	FUN_GET_ALLOTMENTS_EXP(#fltKey#, #fltDate#, #unldgPnt#, #valueParam#) allt from dual
</select>

<select id="getExstQtAllot_List" parameterClass="map" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
	select 
		   TR_NO qtAllotTrNo,		
		   FLT_KEY fltKey,
		   FLT_DATE fltDate,
		   UNLDG_PT unldgPt,
		   ALLOT_TYPE allotType,
		   QTY allotQty,
		   to_char(TIME_FROM,'DDMONYY') dateFrom,
		   to_char(TIME_FROM,'HH24') fromHh,
		   to_char(TIME_FROM,'MI') fromMi,
		   to_char(TIME_TO,'DDMONYY') dateTo,
		   to_char(TIME_TO,'HH24') toHh,
		   to_char(TIME_TO,'MI') toMi,
		   WORKSTATION wrkStns,
		   FLT_TYPE fltType
		   FROM QT_ALLOT WHERE FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND UNLDG_PT = #unldgPnt# AND FLT_TYPE='D'
</select>
<select id="checkPmanCountforAutoPman" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
SELECT COUNT(*) FROM EXP_PMANIFEST_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND UNLDG_PT=#unldgPt# AND ASSIGNED_BULK_PCS=0
	]]>
</select>

<select id="checkWrkstnsAllotment" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
			select count(1) from QT_Allot where flt_key = #fltKey# and flt_date = #fltDate# and unldg_pt = #unldgPt#
			and time_from = to_date(#fullDateTime#,'DDMONYY HH24:MI') and workstation = #wrkstn#
	]]>
</select>

<select id="validateWrkstnTimeAllotList" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
      select count(1) from QT_Allot where
     				workstation = #wrkstn#	and 
      	(time_from between TO_DATE(#dateFrom# ||' ' ||#fromHh#||#fromMi#,'DDMONYY HH24MI') and TO_DATE(#dateTo# ||' ' ||#toHh#||#toMi#,'DDMONYY HH24MI') 
       	OR
      	time_to between TO_DATE(#dateFrom# ||' ' ||#fromHh#||#fromMi#,'DDMONYY HH24MI') and TO_DATE(#dateTo# ||' ' ||#toHh#||#toMi#,'DDMONYY HH24MI') )   
]]>
</select>

<!-- and flt_key = #fltKey# and flt_date = #fltDate# and unldg_pt = #unldgPt# -->
<select id="checkWrkstnTimeAllot" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
      select count(1) from QT_Allot where workstation = #wrkstn#	
       				and time_from <= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to >= TO_DATE(#endDateTime#,'DDMONYY HH24MI')
]]>
</select>  



<select id="validateWrkstn" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[		
		select count(1)
		from MAST_WH_LOC loc, MAST_WH_Group grp 
		where loc.wh_group = grp.wh_group and grp.wh_type = 'QT' and code = #wrkstn#
	]]>
</select>

<update id="update_DDT_SHP_TRF_DTL_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP_TRF_DTL set 
      QT_BU =  #qtBuInd#,      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>

<!-- Export Start -->

<select id="fetchTrnstULDOutBoundFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo,
FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'D','DD') etd,
NVL(flt.EST_DATE,flt.sch_date), 
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'EST_BD_BU_EXP') estBdBuExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'LST_BD_BU_EXP') lstBdBuExp, 
(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode 
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P'	
		<isNotEmpty property="expFltKey" >
		  	and SHP_CNTG_FLT_KEY = #expFltKey#
		</isNotEmpty>
		<isNotEmpty property="expFltDate" >	 
		  	and  SHP_CNTG_FLT_DATE = #expFltDate# 
		</isNotEmpty>				
		group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 
       ) FFMDDT on FFMDDT.cntgFltKey = flt.FLT_KEY and FFMDDT.cntgFltDate = flt.SCH_DATE       
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P' 
		<isNotEmpty property="impFltKey" >
		and FLT_KEY = #impFltKey#
		</isNotEmpty>
		<isNotEmpty property="impFltKey" >
			<isNotEmpty property="impFltDate" >	 
			and  FLT_DATE = #impFltDate#
			</isNotEmpty>
		</isNotEmpty>		
		group by  SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 	 
       ) DDTIMP on DDTIMP.cntgFltKey = flt.FLT_KEY and DDTIMP.cntgFltDate = flt.SCH_DATE          
where exists (select null from v_unfin_ddt_dtl where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
and flt.flt_type ='D'
<isNotEmpty property="cgoAcftType" >	 
and flt.CGO_ACFT_TYPE = #cgoAcftType# 
</isNotEmpty>
<isNotEmpty property="fltModule" >	 
and flt.flt_module1 = #fltModule# 
</isNotEmpty>
<isNotEmpty property="fromEta" >
<isNotEmpty property="toEta" >	 
and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
</isNotEmpty>
</isNotEmpty>
 <isEqual property="qtBu" compareValue="Y" >	 
  	and exists (select null from V_UNFIN_DDT_DTL vddt where vddt.DDT_STATUS = 'P' and vddt.SHP_CNTG_FLT_KEY = flt.FLT_KEY and  vddt.SHP_CNTG_FLT_DATE = flt.SCH_DATE  and vddt.QT_BU = 'Y')
</isEqual>
	<isEmpty property="cntgFltCarr" >
	 	<isEmpty property="fltCarr" >
		  <isNotEmpty property="loginCarrier">
			AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))                
		  </isNotEmpty>		 
	 	</isEmpty>		 
	 </isEmpty>
 ORDER BY 8,7 
</select>

<select id="fetchTrnstULDOutBoundFltList_unldgList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo, fltLeg.OFF_POINT unldgPt, 
FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
to_char(nvl(nvl(flt.act_time, flt.est_time), flt.sch_time),'0000') etd,
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'EST_BD_BU_EXP') estBdBuExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'LST_BD_BU_EXP') lstBdBuExp, 
(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'ALLT_EXP') allt,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_EXP') qtShpExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_COMPL_EXP') qtShpComplExp,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_BU_EXP') qtShpBuExp,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_ALLT_EXP') qtAllotExp
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
join flt_opr_leg fltLeg on fltLeg.flt_type ='D' and FLT.FLT_KEY = fltLeg.FLT_KEY and FLT.SCH_DATE = fltLeg.SCH_DATE
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate, SHP_UNLDG_PT unldgPt from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P'
		<isNotEmpty property="cntgFltKey" >
		  	and SHP_CNTG_FLT_KEY = #cntgFltKey#
		</isNotEmpty>
		<isNotEmpty property="cntgFltDate" >	 
		  	and  SHP_CNTG_FLT_DATE = #cntgFltDate# 
		</isNotEmpty>
		group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE , SHP_UNLDG_PT
		       
       ) FFMDDT on FFMDDT.cntgFltKey = fltLeg.FLT_KEY and FFMDDT.cntgFltDate = fltLeg.SCH_DATE   and  FFMDDT.unldgPt = fltLeg.OFF_POINT
where exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
and flt.flt_type ='D' and fltLeg.OFF_POINT != 'HKG'
<isNotEmpty property="searchUnldgPt" >	 
  	and  fltLeg.OFF_POINT = #searchUnldgPt#  	
</isNotEmpty>
<isEmpty property="cntgFltCarr" >
	<isEmpty property="fltCarr" >
		 <isNotEmpty property="loginCarrier">
				AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))              
		 </isNotEmpty>		 
	</isEmpty>		 
</isEmpty>
</select>

<select id="fetchOutBoundTransitUldShpList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
PKG_COMMON.get_flt_eta(ddt.flt_key, ddt.flt_Date, 'A', 'DD') eta,
NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, 
NVL(FFM.PCS,0) ffmPcs,NVL(FFM.WT,0) ffmWt, FFM.shmpt_code shpmCode,
ddt.qt_bu as qtBuInd,
(select NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0)||'/'|| NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) 
        from EXP_PMANIFEST_AWB 
        where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_Date
        and AWB_NO = DDT.AWB_NO and AWB_DATE = DDT.AWB_DATE) buPcWt,
        
(select NVL(SUM(PMAN_PCS),0)||'/'|| NVL(SUM(PMAN_WT),0)  from EXP_PMANIFEST_AWB 
        where FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and FLT_DATE = DDT.SHP_CNTG_FLT_DATE
        and AWB_NO = DDT.AWB_NO and AWB_DATE = DDT.AWB_DATE) pmanPcWt,       
        
(select sum(SHP.RECD_PCS)||'/'|| sum(SHP.RECD_WT) from  IMP_CAR_SHP SHP
          where SHP.AWB_NO = DDT.AWB_NO and SHP.AWB_DATE = DDT.AWB_DATE
          and  SHP.FLT_KEY = DDT.FLT_KEY and SHP.FLT_DATE = DDT.FLT_DATE group by SHP.AWB_NO,SHP.AWB_DATE,SHP.FLT_KEY,SHP.FLT_DATE) as bdPcWt, 
(select loc_code from  ULD_INVENTORY uldInv where ddt.uld_key = uldInv.uld_key and rownum = 1) locn, 
NVL(JODTL.PC,0) joPcs, NVL(JODTL.WT,0) joWt,          
NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt,
nvl(ddt.LOADED_PCS,0) pcs,nvl(ddt.LOADED_WT,0) wt, ddt.SHP_TRF_PC trfPcs , ddt.SHP_TRF_WT  trfWt, ddt.BRK_BULK brkBulk,
round(ddtEtd.etdChangedHrs) etdChangedHrs, 
       round(ddtEtd.etdChangedMin) etdChangedMin,
       round(ddtEtd.etdChangedHrs)  || 'h'|| (round(ddtEtd.etdChangedMin) - (ROUND(ddtEtd.etdChangedHrs) * 60)) ||'m' etdChangedHrsMin,
   ddt.TRF_TYPE trfType, 
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
   ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,   
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                )  shc,
        (SELECT V.CC_CODE FROM V_CST_CC_CODE_AWB V
                WHERE V.AWB_NO = ddt.awb_no
          AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,
           JO.BU_INST buildInstr, ddt.QT_BU qtBu,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TR_TYPE' ) proposeTrfType    
from V_UNFIN_DDT_DTL ddt
join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
		NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
LEFT JOIN   (SELECT SUM(JO_DTL.AWB_JO_PC) PC ,SUM(JO_DTL.AWB_JO_WT) WT,JO_HD.FLT_KEY FLT_KEY, JO_HD.FLT_DATE FLT_DATE ,JO_DTL.AWB_NO AWB_NO ,JO_DTL.AWB_DATE AWB_DATE 
FROM EXP_BU_JO JO_HD 
JOIN EXP_BU_JO_DTL JO_DTL 
ON JO_HD.JO_NO = JO_DTL.JO_NO
WHERE CONFIRMED_YN='Y' 
group by JO_HD.FLT_KEY, JO_HD.FLT_DATE, JO_DTL.AWB_NO, JO_DTL.AWB_DATE) JODTL
ON JODTL.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  AND JODTL.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
AND JODTL.AWB_NO = DDT.AWB_NO  AND JODTL.AWB_DATE =  DDT.AWB_DATE
left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, sum(nvl(ffmshp.MAN_PCS,0)) PCS, MIN(shmpt_code) shmpt_code,
    SUM(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date,ffmULD.ULD_KEY
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmshp.awb_no, ffmshp.awb_Date, ffmMSG.flt_key, ffmMSG.flt_Date,ffmULD.ULD_KEY 
    ) ffm on ddt.FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date and ffm.ULD_KEY=ddt.uld_key
left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = ddt.SHP_CNTG_FLT_DATE
              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
and ddt.SHP_TRF_TYPE = 'QT' 
  ]]>
  <isNotEmpty property="unldgPt" >	 
	  	and ddt.SHP_UNLDG_PT = #unldgPt#
	</isNotEmpty>
	 <isNotEmpty property="impFltKey" >	 
	  	<isNotEmpty property="impFltDate" >	 
	  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
	  	</isNotEmpty>
	</isNotEmpty>
	ORDER BY  ddt.ULD_KEY
</select>

<select id="fetchOutBoundTransitUldShpListFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate
from V_UNFIN_DDT_DTL ddt
join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
		NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
left join (select nvl(sum(shp_trf_Pc),0) qt_trf_Pcs  , nvl(sum(shp_trf_Wt),0) qt_trf_Wt  ,V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY ,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO ,
          V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO 
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D'
      group by V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO, V_UNFIN_DDT_DTL.SDOC_LINE_NO, V_UNFIN_DDT_DTL.UDOC_LINE_NO, V_UNFIN_DDT_DTL.DOC_LINE_NO 
      ) ddtQt
      on ddt.SHP_CNTG_FLT_KEY = ddtQt.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtQt.SHP_CNTG_FLT_DATE 
          and  ddtQt.TR_NO = ddt.TR_NO and ddtQt.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtQt.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtQt.DOC_LINE_NO = ddt.DOC_LINE_NO
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
    nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm on ddt.SHP_CNTG_FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.SHP_CNTG_FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
and ddt.SHP_TRF_TYPE = 'QT' 
  ]]>
   <isNotEmpty property="unldgPt" >	 
	  	and ddt.SHP_UNLDG_PT = #unldgPt#
	</isNotEmpty>
	 <isNotEmpty property="impFltKey" >	 
	  	<isNotEmpty property="impFltDate" >	 
	  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
	  	</isNotEmpty>
	</isNotEmpty>
group By ddt.flt_key , ddt.flt_Date
</select>

<insert id="insert_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	Insert into QT_ALLOT (TR_NO,FLT_KEY,FLT_DATE,UNLDG_PT,ALLOT_TYPE,QTY,TIME_FROM,TIME_TO,WORKSTATION,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE) 
	values (QT_ALLOT_SEQ.NEXTVAL,#fltKey#,#fltDate#,#unldgPt#,#allotType#,#allotQty#,to_date(#dateTimeFrom#, 'DDMONYY HH24:MI'),to_date(#dateTimeTo#, 'DDMONYY HH24:MI'),#wrkStns#,#lmUser#,sysdate,#lmUser#,sysdate,#fltType#)
</insert>


<update id="update_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	Update QT_ALLOT 
	set 
	FLT_KEY = #fltKey#,
	FLT_DATE = #fltDate#,
	UNLDG_PT = #unldgPt#,
	ALLOT_TYPE = #allotType#,
	QTY = #allotQty#,
	TIME_FROM = to_date(#dateTimeFrom#, 'DDMONYY HH24:MI'),
	TIME_TO = to_date(#dateTimeTo#, 'DDMONYY HH24:MI'),
	WORKSTATION = #wrkStns#,
	LM_USER_ID = #lmUser#,
	LM_DATE = sysdate,
	FLT_TYPE = #fltType#
	WHERE TR_NO = #qtAllotTrNo#
</update>


<select id="getAndCheckWrkstnTimeAllot" parameterClass="map" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
 <![CDATA[
      select flt_key fltKey, flt_date fltDate, unldg_pt unldgPt, TO_char(time_from,'DDMONYY HH24MI') fromTime ,  TO_char(time_to,'DDMONYY HH24MI') toTime from QT_Allot where workstation = #wrkstn#	
       				and ((time_from >= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to <= TO_DATE(#endDateTime#,'DDMONYY HH24MI'))
		                or (time_from <= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to >= TO_DATE(#endDateTime#,'DDMONYY HH24MI'))
		                OR (time_from between TO_DATE(#startDateTime#,'DDMONYY HH24MI') + 1/1440 and TO_DATE(#endDateTime#,'DDMONYY HH24MI') -  1/1440)
		                OR (time_to between TO_DATE(#startDateTime#,'DDMONYY HH24MI') + 1/1440 and TO_DATE(#endDateTime#,'DDMONYY HH24MI') - 1/1440))
       				and rownum = 1
]]>
</select>  


<delete id="delete_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	DELETE FROM  QT_ALLOT 	WHERE TR_NO = #qtAllotTrNo#
</delete>

<delete id="delete_QT_ALLOT_FOR_FLT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	DELETE FROM QT_ALLOT where FLT_KEY = #fltKey# and  FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
</delete>
<!-- ###################### ADDED BY Mayank ON 01-08-2011 FOR Transit ULDs ShipmentsList End Here ########################### -->
<!-- ###################### ADDED BY Mayank ON 03-08-2011 FOR Tarmac Offload and Breakdown Update Start Here ########################### -->
<!--  and exists (select null from V_UNFIN_DDT_DTL where cntg_flt_key = u.FLT_KEY and cntg_flt_date = u.FLT_DATE and awb_No  = ua.awb_No and awb_Date  = ua.awb_Date  and nvl(shp_trf_type,'XX') in ('TT','IF')) -->
<select id="getTarmacOffldUldList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
<![CDATA[ 
 select  decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) ||'_' || ua.AWB_NO uldKeyAwbNo , 'ULD' shpType , 
	u.FLT_KEY fltKey, to_char(u.FLT_DATE,'DDMONYY') fltDate , 
	decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) hiddenUldKey,
	decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) uldKey, ua.AWB_NO awbNo, SUBSTR(TRIM(ua.AWB_NO),1,3)||'-'||SUBSTR(TRIM(ua.AWB_NO),4) awbNoDisp, to_char(ua.AWB_DATE,'DDMONYY') awbDate, 
	ua.ASSIGNED_PCS loadedPc, ua.ASSIGNED_WT loadedWt, ua.OFFLOAD_PCS ofldPcs, ua.OFFLOAD_WT ofldWt, nvl(u.AIRSIDE_BRKDWN_IND,'N') airSideBrkDwnInd, 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) != nvl(UPLIFTED_PCS,0) then 'Y' else 'N'  end as discYn, u.trf_type trfType,
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) > 0 then abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) else 0  end end as upliftedPc,  
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) > 0 then abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) else 0 end end as upliftedWt, 
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) > 0 then abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) else 0  end end as upliftedPcBox,  
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) > 0 then abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) else 0 end end as upliftedWtBox, 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) <> 0 then 'N' else 'Y'  end as upliftedShowInd,
	ua.BD_UPDATED_IND bdUpdInd   
	from EXP_OFFLOAD_ULD u 
	join EXP_OFFLOAD_ULD_AWB ua on u.FLT_KEY = ua.FLT_KEY and u.FLT_DATE = ua.FLT_DATE and u.ULD_BT_NO = ua.ULD_BT_NO
	where ua.confirmed_yn = 'Y' and u.flt_key = #fltKey# and u.flt_date = #fltDate# and u.ULD_BT_NO = nvl(#uldKey#,u.ULD_BT_NO)  
		and exists (select null from V_DDT_DTL where shp_cntg_flt_key = u.FLT_KEY and shp_cntg_flt_date = u.FLT_DATE and awb_No  = ua.awb_No
		and awb_Date  = ua.awb_Date  and nvl(shp_trf_type,'XX') in ('TT','IF'))
  ]]>
</select>

<select id="check_TarmacOffld_new_checkin_uld" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="java.lang.Integer" >
<![CDATA[ 
	select count(1) from exp_pmanifest_uld where flt_key = #fltKey# and flt_date = #fltDate# and ULD_BT_NO = #uldKey# and nvl(new_checkin_uld,'N') = 'Y'
  ]]>
</select>

<select id="check_TarmacOffld_H_CONT_IND_BT_IND" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[ 
	select count(1) from MAST_ULD_TYPE where code = (select uld_type from uld_inventory where uld_key = #uldKey#) and ( H_CONT_IND = 'Y' or BT_IND = 'Y' )
  ]]>
</select>

<select id="check_TarmacOffld_brk_bulk" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="java.lang.Integer" >
<![CDATA[ 
 	select count(1) from exp_flt_uld  where flt_key = #fltKey# and flt_date = #fltDate# and ULD_key = #uldKey# and nvl(bb_ind,'N') = 'Y'
  ]]>
</select>

<select id="getTarmacOffldBrkdwnList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 

select  flt_key fltKey, to_char(FLT_DATE,'DDMONYY') fltDate , awb_no awbNo,  to_char(AWB_DATE,'DDMONYY') awbDate, 
			shp_trf_type trfType, sum(shp_trf_pc) loadedPc, sum(shp_trf_wt) loadedWt
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #fltKey# and shp_cntg_flt_date = #fltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# 
            group by flt_key, FLT_DATE, awb_no,AWB_DATE, shp_trf_type
  ]]>
</select>

<select id="getTarmacOffldBrkdwnULDAndTrfType" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 
select  uld_key uldKey, trf_type uldTrfType
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #fltKey# and shp_cntg_flt_date = #fltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# and rownum =1
  ]]>
</select>

<select id="getTarmacOffldBrkdwnList_DTL" parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 
select flt_key fltKey, to_char(FLT_DATE,'DDMONYY') fltDate , awb_no awbNo,  to_char(AWB_DATE,'DDMONYY') awbDate, 
			cntg_flt_key cntgFltKey, to_char(cntg_flt_date,'DDMONYY') cntgFltDate, 
			shp_trf_type trfType, ULD_KEY uldKey, tr_no ddtTrNo, udoc_line_no udocLineNo, sdoc_line_no sdocLineNo, doc_line_no docLineNo 
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #cntgFltKey# and shp_cntg_flt_date = #cntgFltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# 
            and flt_key = #fltKey# and flt_date = #fltDate# and rownum = 1
  ]]>
</select>


<update id="saveTarmacOffldBrkdnData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
update DDT_SHP_TRF_DTL 
    set  ACTUAL_PCS = ACTUAL_PCS + #actualPcs#, 
        ACTUAL_WT = ACTUAL_WT + #actualWt#,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where tr_no = #ddtTrNo# 
            and sdoc_line_no = #sdocLineNo#
            and doc_line_no = #docLineNo# 
</update> 

<update id="saveTarmacOffldBrkdnData_set_actPc_as_Zero"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 

  update DDT_SHP_TRF_DTL t 
	set ACTUAL_PCS = 0,
 		ACTUAL_WT = 0,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
             where tr_no =#ddtTrNo# 
             and exists (select null from v_ddt_dtl v where shp_cntg_flt_key = #cntgFltKey# and shp_cntg_flt_date = #cntgFltDate# and awb_No  =  #awbNo# and awb_Date  = #awbDate#
              and shp_trf_type = #trfType# and t.tr_no = v.tr_no and t.sdoc_line_no = v.sdoc_line_no and t.doc_line_no= v.doc_line_no)
             and sdoc_line_no <> #sdocLineNo# and doc_line_no <> #docLineNo#
             
  ]]>             
</update>     

<update id="saveTarmacOffldUldData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >

  update EXP_OFFLOAD_ULD_AWB 
    set UPLIFTED_PCS = #upliftedPc#, 
        UPLIFTED_WT = #upliftedWt#,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where FLT_KEY = #fltKey# 
            and FLT_DATE= #fltDate#
            and ULD_BT_NO= #uldKey# 
            and AWB_NO= #awbNo#
            and AWB_DATE = #awbDate#

	
</update> 

<update id="saveTarmacOffldComplData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
  update FLT_OPR_EVENTS 
    set OFLD_CFM_USER_ID = #lmUser#, 
        OFLD_CFM_DATE = sysdate,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where FLT_KEY = #fltKey# 
            and SCH_DATE= #fltDate#
            and flt_type = 'D'
</update>  

<update id="updateOffldULDAWB_BD_UPDATED_IND"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
 update EXP_OFFLOAD_ULD_AWB set 
 	BD_UPDATED_IND = 'Y' ,
   	LM_USER_ID = #lmUser#,
   	LM_DATE = sysdate
  where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and ULD_BT_NO = #hiddenUldKey#
  and AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update>  
<!-- ###################### ADDED BY Mayank ON 03-08-2011 FOR Tarmac Offload and Breakdown Update End Here ########################### -->


	<!-- ###################### ADDED BY Mayank ON 11-06-2011 FOR CT  ENDS ########################### -->
	
	<select id="getTheLockCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 select count(1) 
         	from awb 
         	where FINALLOCK_IND = 'Y'
         	and (awb_no,awb_date) in (select awb_no,awb_date from awb_inventory 
            where 1 = 1  
            <isNotEmpty prepend="AND" property="ULD_NO">
               ULD_key = #ULD_NO#
            </isNotEmpty>					
            <isNotEmpty prepend="AND" property="LSP_NO">
               lsp_no = #LSP_NO#
            </isNotEmpty>					
            <isEmpty property="ULD_NO"> 
            	<isEmpty property="LSP_NO">
            		and awb_no = #AWB_NO#
            	</isEmpty>
            </isEmpty>
           )
	</select>
	 <update id="sqlUpdateShcLockUld"  parameterClass="map" >
   	 	UPDATE ULD_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE 1 = 1
   	 	<isEmpty prepend="AND" property="ULD_NO">
   	 		ULD_KEY in (select uld_key from awb_inventory where awb_no=#AWB_NO# and awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
   	 	</isEmpty>     	 	
   	 	<isNotEmpty prepend="AND" property="ULD_NO">
   	 		ULD_KEY = #ULD_NO#
   	 	</isNotEmpty>
   	 </update> 
   	 <update id="sqlUpdateShcLockCsd"  parameterClass="map" >
   	 	UPDATE LSP_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE 1 = 1
   	 	<isEmpty prepend="AND" property="LSP_NO">
   	 		LSP_NO in (select lsp_no from awb_inventory where awb_no=#AWB_NO# and awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
   	 	</isEmpty>
   	 	<isNotEmpty prepend="AND" property="LSP_NO">
   	 		LSP_NO = #LSP_NO#
   	 	</isNotEmpty>
     </update> 
      <update id="sqlUpdateShcLockOldUld"  parameterClass="map" >
   	 	UPDATE ULD_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE ULD_KEY = #OLD_ULD#
   	 </update> 
   	 <update id="sqlUpdateShcLockOldCsd"  parameterClass="map" >
   	 	UPDATE LSP_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE LSP_NO = #OLD_LSP#
     </update> 
     <!--  For Move/job order common logic -->
     <update id="sqlUpdateAndGetMoveOrderStatus" parameterClass="java.util.HashMap" >
		<![CDATA[
		UPDATE rtrv_move_order
		SET status='CANCELLED',
		lm_date = sysdate,
		lm_user_id=#CR_USER_ID#
		where 
		 (status IS NULL OR(status <> 'E' AND status <>'CANCELLED' AND status <>'COMPLETED'))
		]]>
		 <isNotEmpty property="LSP_NO">
		AND LSP = UPPER(#LSP_NO#)
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD = UPPER(#ULD_KEY#)
		 </isNotEmpty>
	</update>
	
	<select id="sqlMoveJobAwbinfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO AWB_NO ,to_char(AWB_DATE,'DDMONYY') AWB_DATE ,SUM(LOCN_PCS) LOCN_PCS ,SUM(LOCN_WT) LOCN_WT FROM AWB_INVENTORY 
		where 'XX' = 'XX' 
		<isNotEmpty property="AWB_NO">
		AND AWB_NO = UPPER(#AWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AWB_DATE">
		AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </isNotEmpty>
		<isNotEmpty property="LSP_NO">
		AND LSP_NO = UPPER(#LSP_NO#) AND ROWNUM = 1
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD_KEY = UPPER(#ULD_KEY#) AND ROWNUM = 1
		 </isNotEmpty>
 		 group by AWB_NO, AWB_DATE
	</select>
	
	<select id="sqlMoveJobHawbinfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO AWB_NO ,to_char(AWB_DATE,'DDMONYY') AWB_DATE ,SUM(LOCN_PCS) LOCN_PCS ,SUM(LOCN_WT) LOCN_WT FROM ASV_INVENTORY 
		where 'XX' = 'XX' 
		<isNotEmpty property="HAWB_NO">
		AND HAWB_NO = UPPER(#HAWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AGENT_ID">
		AND AGENT_CODE = UPPER(#AGENT_ID#)
		</isNotEmpty>
		<isNotEmpty property="AWB_NO">
		AND AWB_NO = UPPER(#AWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AWB_DATE">
		AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </isNotEmpty>
		<isNotEmpty property="LSP_NO">
		AND LSP_NO = UPPER(#LSP_NO#) AND ROWNUM = 1
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD_KEY = UPPER(#ULD_KEY#) AND ROWNUM = 1
		 </isNotEmpty>
 		 group by AWB_NO, AWB_DATE
	</select>
	
	<insert id="sqlCreateMoveJobOrder" parameterClass="java.util.HashMap">
	Insert into RTRV_MOVE_ORDER 
		(FUNC,
		REF_NO,
		AWB_NO,
		AWB_DATE,
		CURR_LOCN,
		LSP,
		ULD,
		PC,
		WT,
		TARGET,
		STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		TYPE,
		INV_TYPE,
		PRIORITY,
		ACTIVITY,
		HAWB_NO,
		AGENT_ID,
		TRUCK_FLT_NO,
		TRUCK_FLT_DATE,
		OB_FLT_KEY,
	    OB_FLT_DATE,
	    TR_TYPE
		) 
		values 
		(#FUNC# ,
		#REF_NO# ,
		#AWB_NO#,
		to_date(#AWB_DATE#,'DDMONYY'),
		#CURR_LOC#,
		#LSP_NO# ,
		#ULD_KEY# ,
    	#PC#,
    	#WT#,
    	#TARGET# ,
    	#STATUS# ,
    	#CR_USER_ID# ,
    	SYSDATE,
    	#CR_USER_ID# ,
    	SYSDATE,
    	#TYPE#,
    	#INV_TYPE#,
    	NVL(#PRIORITY#,'N'),
    	NVL(#ACTIVITY#,'N'),
    	#HAWB_NO#,
    	#AGENT_ID#,
		#TRUCK_FLT_NO#,
		#TRUCK_FLT_DATE#,
		#OB_FLT_KEY#,
	    #OB_FLT_DATE#,
	    #TR_TYPE#
    	)
	</insert>
	
	 <update id="sqlUpdateLspUldTarget" parameterClass="java.util.HashMap" >
		 <isNotEmpty property="LSP_NO">
		 UPDATE LSP_INVENTORY 
		 SET TARGET = #TARGET#,
		 RTRV_DATE = sysdate
		 WHERE
		 LSP_NO = UPPER(#LSP_NO#)
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		 UPDATE ULD_INVENTORY 
		 SET TARGET = #TARGET#
		 WHERE
		 ULD_KEY = UPPER(#ULD_KEY#) 
		 </isNotEmpty>
	</update>
	
	 <select id="sqlWareHouseType" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	 	select count(1) from MAST_WH_LOC t1, mast_wh_group t2
		where t1.wh_group = t2.WH_GROUP 
   		and t2.wh_type = 'FG'
    	and t1.code=#locCode#
	 </select>
	
     <!--  For Move/job order common logic -->
	<!--  Changed for QR
	<select id="getRecvCarrHandlerForTrmNo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		SELECT CODE_DESC CTO
		FROM MAST_CODE_DTL
		WHERE CODE_TYPE = 'RECD_CARR_HANDLER'
		AND CODE =
		(SELECT MAX(RECD_CARR_HANDR) FROM IMP_TRM_HD WHERE TRM_NO = #PARAM#
		)
	</select> -->
	
     <!--  Transit Mail Tag :: Ranjith-->
     
     <select id="imp_xom_getTransitMailTagListTm"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
			SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			XPS.ACT_WT as wt,
			XPS.ACT_WT as oldWt,
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.LOCN as locn, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate,
			XPS.SEQ_NO xpsSeqNo 
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
		ORDER BY
			XPS.TAG_NO
	</select>
	
	
	<select id="sqlGetFlightInfo" parameterClass="cargo.cms.imprt.bo.ImpXomBO"  resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select NVL(flt_key,IMP_FLT_KEY) fltKey,
			to_char(NVL(flt_date,IMP_FLT_DATE),'DDMONYY') fltDate,
			NVL(CARR_CODE,IMP_FLT_CARR)  As carrCode,
			uld_carr as uldCarr
			from uld_inventory 
			where uld_key = #bdULDKey#
			and loc_code = #locCode#
	</select>
	
	<select id="checkCountForTag"  parameterClass="map"  
		resultClass="java.lang.Integer">
		SELECT count(1) FROM IMP_XPS_OBC_MAIL
		WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			FLT_DATE = TO_DATE(#schDate#,'DDMONYY') AND
			
			TAG_NO = #tagNo# 
	</select>

<select id="imp_xom_chkdeleteTranitMailTag"  parameterClass="map"  
		resultClass="java.lang.Integer">
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
		 WHERE FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#schDate#,'DDMONYY') AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# and 
			AWB_NO is not NULL
	</select>
	
	<!-- QUERIES FOR INSERT MAIL TAG OPERATION  -->
	<insert id="imp_xom_insertTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO,AWB_DATE,
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
		   LOCN, ULD_KEY, 
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'TM', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),to_date(#awbDate#,'DDMONYY'),
		    UPPER(#tagNo#), UPPER(#lspNo#),
		    UPPER(#orig#), UPPER(#dest#),#tareWt#,
		    #pcs#,#wt#,
		    UPPER(#locCode#), UPPER(#uldKey#),
		    #damInd#, UPPER(#rmk#), #userID#,
		    sysdate, #userID#, sysdate 
		)
	</insert>
	
	<select id="sqlGetTransitAwbNo"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 select 
     	 SHP.AWB_NO awbNo,
     	 to_char(SHP.AWB_DATE,'DDMONYY') awbDate
     	 from imp_car_shp SHP join IMP_CAR_AWB CAR
      	on SHP.AWB_NO = CAR.AWB_NO
     	 and SHP.AWB_DATE = CAR.AWB_DATE
     	 where CAR.CATALOG = 'TM'
      	and SHP.FLT_KEY = #fltKey#
      	and to_char(SHP.FLT_DATE,'DDMONYY') = #fltDate#
      	and CAR.AWB_DEST = #dest#
      	and rownum=1
	</select>
	
	
	<insert id="sqlInsertAwbStrlDtl" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
	Insert into IMP_AWB_STRG_DTL 
	(TR_NO,
DOC_LINE_NO,
CARR_CODE,
FLT_DATE,
FLT_KEY,
AWB_PFX,
AWB_NO,
AWB_DATE,
AWB_DEST,
ULD_KEY,
LOC_CODE,
STRG_PCS,
STRG_WT,
LSP_NO,
DAM_IND,
CR_USER_ID,
CR_DATE,
LM_USER_ID,
LM_DATE,
TAG_NO,
FLT_TYPE,
TR_STATUS,
TR_TYPE,
CHKIN_ULD_KEY,
CATALOG)  
values
(IMP_AWB_STRG_DTL_SEQ.NEXTVAL,
  '1',
  #carrCode#,
  to_date(#fltDate#,'DDMONYY'),
  #fltKey#,
  substr(#awbNo#,0,3),
  #awbNo#,
  to_date(#awbDate#,'DDMONYY'),
  #dest#,
  #uldKey#,
  #locCode#,
  #pcs#,
  #wt#,
  #lspNo#,
  #damInd#,
  #userID#,
  sysdate,
  #userID#,
  sysdate,
  #tagNo#,
  'I',
  'A',
  'TM',
  #bdULDKey#,
  #catalog#)
	</insert>
	
	
	
	<select id="sqlGetSeqNoForTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
   </select>
	
	
	<update id="updatePcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #pcs#),
		    LOCN_WT    = (LOCN_WT  + #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    
    
    <insert id="insertPcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locCode#,
	 #pcs#,#wt#,#damInd#,#userID#, sysdate,
	 #userID#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldKey#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM')
	</insert>
	<!-- INSERT OPERATION ENDED -->
	
	<update id="imp_xom_updateTransitMailTag1" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
    <update id="sqlUpdateAwbStrlDtl" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
	
	
	<select id="isValidTagNumber" parameterClass="map" resultClass="java.lang.Integer" >
	 <![CDATA[
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #fltKey#
	     AND flt_date = to_date(#fltDate#,'DDMONYY')
	     AND BD_ULD_KEY = #bdULDKey#
	     AND TAG_NO =#tagNo#
	     AND DEST=#dest#
	     AND SEQ_NO  <> #seq#
     ]]>
     and seq_no != #xpsSeqNo#
   </select>  
   
   
   <select id="isExistingTagNumber" parameterClass="map" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND BD_ULD_KEY <> #bdULDKey#
     AND TAG_NO =#tagNo#
     AND DEST=#dest#
     ]]>
   </select>
   
   
   <select id="checkTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#     
     ]]>
   </select>
   
    <select id="checkTMTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#  
     AND CATALOG = 'TM'
     AND BD_ULD_KEY = #bdULDKey#
     AND DEST=#dest#
     ]]>
   </select>
   
    <select id="checkIOTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#
     AND CATALOG = 'IO'
     ]]>
   </select>
   
    <update id="sqlUpdatePcWtTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ACT_PCS = ACT_PCS+#pcs#, 
			ACT_WT  = ACT_WT+#wt#,          
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>	
	
	<select id="checkULDCheckedinInFlt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT COUNT(1)
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND FLT_KEY = #fltKey#
			AND ULD_KEY = #uldKey#
	</select>   
	
	<select id="checkULDTransferTypeForTTIF" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select COUNT(1) from V_DDT_DTL 
		where FLT_KEY=#fltKey# 
		AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# 
		AND ULD_KEY=#uldKey# 
		AND TRF_TYPE IN ('TT','IF') 		
	</select>
	<!--  Transit Mail Tag  :: Ranjith  -->	
	
	
	
	
	<!-- Transit Mail Tag :: Desktop :: Ranjith :: Starts  -->
	
	 <select id="sqlQueryTransitMailTagDesktop"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='N' -->
			 ( (SCAN_TAG_NO IS NULL AND AWB_NO IS NULL) OR (SCAN_TAG_NO IS NULL AND AWB_NO IS NOT NULL AND AWB_NO like '%M%') ) 
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY
			XPS.TAG_NO
	</select>
	
		
	<select id="TransitMailTagResditSearch"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="cargo.cms.imprt.bo.ImpXomBO">
	  SELECT CRD.AWB_NO                       AS awbNo,
	  SUBSTR(CRD.AWB_NO,1,3)||'-'||SUBSTR(CRD.AWB_NO,4) as awbNoDisp, 
	  TO_CHAR(CRD.AWB_DATE,'DDMONYY')         AS awbDate,
	  TAG.TAG_NO                              AS tagNo,
	  '1'                                     AS pcs,
	  TRIM(TO_CHAR(TAG.TAG_WT,'999999990D9')) AS wt,
	  NVL(AWB.ORIG,CRD.ORIG)                                AS orig,
	  NVL(AWB.DEST,CRD.DEST)                                AS dest
		FROM EDI_RESDIT_AWB_DTL AWB
		JOIN EDI_RESDIT_TAG_DTL TAG ON AWB.TR_AWB_NO = TAG.TR_AWB_NO
		LEFT JOIN (SELECT DTL.TAG_NO,HD.AWB_NO,HD.AWB_DATE,HD.ORIG,HD.DEST FROM EDI_CARDIT_HD HD , EDI_CARDIT_TAG_DTL DTL WHERE HD.TR_NO = DTL.TR_NO ) CRD ON  CRD.TAG_NO = TAG.TAG_NO AND CRD.AWB_NO = AWB.AWB_NO AND CRD.AWB_DATE = AWB.AWB_DATE	
		WHERE AWB.TR_NO  IN ( SELECT TR_NO FROM EDI_RESDIT_HD WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') )		
		AND TAG.TAG_NO not in (SELECT TAG_NO FROM IMP_XPS_OBC_MAIL WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY'))		
	</select>
	
   <select id="checkTagExistsInBD" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT count(1) FROM IMP_XPS_OBC_MAIL where TAG_NO = #tagNo#
   </select>
	
   <select id="checkTagExistsInCardit" parameterClass="java.lang.String" resultClass="java.lang.String" >		
		select awb_no from AWB where (awb_no,awb_date) in 
		(select awb_no,awb_date from EDI_CARDIT_HD where tr_no = (SELECT tr_no FROM EDI_CARDIT_TAG_DTL where TAG_NO = #tagNo#)) and AWB_CLOSED_YN = 'N' AND rownum = 1
   </select>   
	
   <select id="checkTagExistsInCARDITDSK" parameterClass="java.lang.String" resultClass="java.util.HashMap" >
		SELECT 
		  HD.AWB_NO                      AS awbNo,
		  TO_CHAR(HD.AWB_DATE,'DDMONYY') AS awbDate		  
		FROM EDI_CARDIT_HD HD 
		join EDI_CARDIT_TAG_DTL DTL ON  HD.TR_NO = DTL.TR_NO
		    left join AWB B ON HD.awb_no = B.awb_No and HD.awb_date = B.awb_Date 
		WHERE DTL.TAG_NO = #tagNo# AND NVL(B.AWB_CLOSED_YN,'N') = 'N'

	</select>
	
<select id="sqlQueryTransitMailScanTagDesktop"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,	
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS